{
	"info": {
		"_postman_id": "d3d9194d-757e-476a-8e1a-b98dd62ddb89",
		"name": "Dynatrace Cluster API v1",
		"description": "Dynatrace Managed exposes cluster management functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters. \n\nTo authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:\n\n* 400 - Bad Request: Some request parameters are not correct. See response body for details.\n* 401 - Unauthorized: A valid authorization header is required but is missing.\n* 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid.\n* 404 - Not Found: Endpoint does not exist or some entities could not be found, e.g. User account.\n* 500 - Internal Server Error: See response body for details.\n* 556 - Upgrade in progress: Operation couldn't be performed during the upgrade.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "backup",
			"item": [
				{
					"name": "config",
					"item": [
						{
							"name": "Return backup configuration overview",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/backup/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backup",
										"config"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backup/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"datacenter\": \"dc1\",\n \"enabled\": true,\n \"storagePath\": \"/efs/backup\",\n \"includeRumData\": true,\n \"includeTsMetricData\": true,\n \"bandwidthLimitMbits\": 240,\n \"maxEsSnapshotsToClean\": 30,\n \"cassandraScheduledTime\": 22,\n \"pauseBackups\": false\n}"
								}
							]
						},
						{
							"name": "Change backup configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"datacenter\": \"dc1\",\n    \"enabled\": true,\n    \"storagePath\": \"/efs/backup\",\n    \"includeRumData\": true,\n    \"includeTsMetricData\": true,\n    \"bandwidthLimitMbits\": 240,\n    \"maxEsSnapshotsToClean\": 30,\n    \"cassandraScheduledTime\": 22,\n    \"pauseBackups\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/backup/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backup",
										"config"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"datacenter\": \"dc1\",\n    \"enabled\": true,\n    \"storagePath\": \"/efs/backup\",\n    \"includeRumData\": true,\n    \"includeTsMetricData\": true,\n    \"bandwidthLimitMbits\": 240,\n    \"maxEsSnapshotsToClean\": 30,\n    \"cassandraScheduledTime\": 22,\n    \"pauseBackups\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/backup/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Configuration change failed.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"datacenter\": \"dc1\",\n    \"enabled\": true,\n    \"storagePath\": \"/efs/backup\",\n    \"includeRumData\": true,\n    \"includeTsMetricData\": true,\n    \"bandwidthLimitMbits\": 240,\n    \"maxEsSnapshotsToClean\": 30,\n    \"cassandraScheduledTime\": 22,\n    \"pauseBackups\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/backup/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config"
											]
										}
									},
									"code": 512,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Check status of change backup configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/backup/config/status?requestId=enim Duis do Lorem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backup",
										"config",
										"status"
									],
									"query": [
										{
											"key": "requestId",
											"value": "enim Duis do Lorem"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backup/config/status?requestId=enim Duis do Lorem",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config",
												"status"
											],
											"query": [
												{
													"key": "requestId",
													"value": "enim Duis do Lorem"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request accepted. There will be an id in the response body to check status through the config/status endpoint.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backup/config/status?requestId=enim Duis do Lorem",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config",
												"status"
											],
											"query": [
												{
													"key": "requestId",
													"value": "enim Duis do Lorem"
												}
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "There is no response for your request id, it might have been already removed from cache if request was made several hours ago. Please make sure that request id is correct and not empty.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backup/config/status?requestId=enim Duis do Lorem",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config",
												"status"
											],
											"query": [
												{
													"key": "requestId",
													"value": "enim Duis do Lorem"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Configuration change failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backup/config/status?requestId=enim Duis do Lorem",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config",
												"status"
											],
											"query": [
												{
													"key": "requestId",
													"value": "enim Duis do Lorem"
												}
											]
										}
									},
									"code": 512,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Check if given directory is valid for backup in the cluster",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/backup/clusterCheckDir?dir=enim Duis do Lorem&datacenter=enim Duis do Lorem",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"backup",
								"clusterCheckDir"
							],
							"query": [
								{
									"key": "dir",
									"value": "enim Duis do Lorem",
									"description": "Backup store directory path parameter. Missing or empty values will return a 'Bad Request'"
								},
								{
									"key": "datacenter",
									"value": "enim Duis do Lorem",
									"description": "Datacenter where backup should be executed. Should be omitted for Single Datacenter Cluster"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backup/clusterCheckDir?dir=enim Duis do Lorem&datacenter=enim Duis do Lorem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backup",
										"clusterCheckDir"
									],
									"query": [
										{
											"key": "dir",
											"value": "enim Duis do Lorem"
										},
										{
											"key": "datacenter",
											"value": "enim Duis do Lorem"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"storagePath\": \"minim irure adipisicing\",\n \"storageError\": \"ea culpa dolor non\",\n \"inProgress\": false\n}"
						},
						{
							"name": "No directory information received for validation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backup/clusterCheckDir?dir=enim Duis do Lorem&datacenter=enim Duis do Lorem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backup",
										"clusterCheckDir"
									],
									"query": [
										{
											"key": "dir",
											"value": "enim Duis do Lorem"
										},
										{
											"key": "datacenter",
											"value": "enim Duis do Lorem"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "bootstrap Management",
			"item": [
				{
					"name": "files",
					"item": [
						{
							"name": "ag",
							"item": [
								{
									"name": "Get ActiveGate config properties",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/ag/configProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"ag",
												"configProperties"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bootstrapManagement/files/ag/configProperties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bootstrapManagement",
														"files",
														"ag",
														"configProperties"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"content\": [\n  \"occaecat dolore Duis incididunt\",\n  \"aliquip qui anim id non\"\n ]\n}"
										},
										{
											"name": "No 'config.properties' file available",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bootstrapManagement/files/ag/configProperties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bootstrapManagement",
														"files",
														"ag",
														"configProperties"
													]
												}
											},
											"status": "Not Extended (RFC 2774)",
											"code": 510,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get ActiveGate secure config properties",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/ag/secureConfigProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"ag",
												"secureConfigProperties"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bootstrapManagement/files/ag/secureConfigProperties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bootstrapManagement",
														"files",
														"ag",
														"secureConfigProperties"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"content\": [\n  \"deserunt nisi \",\n  \"est\"\n ]\n}"
										},
										{
											"name": "No 'secure.config.properties' file available",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bootstrapManagement/files/ag/secureConfigProperties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bootstrapManagement",
														"files",
														"ag",
														"secureConfigProperties"
													]
												}
											},
											"status": "Not Extended (RFC 2774)",
											"code": 510,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get installer metadata",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/files/installerMetadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"files",
										"installerMetadata"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/installerMetadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"installerMetadata"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"clusterBackupPath\": \"magna aliqua\",\n \"elasticsearchBackupPath\": \"cillum Ut\",\n \"datacenterWithBackupEnabled\": \"par\"\n}"
								}
							]
						},
						{
							"name": "Get secure config properties",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/files/secureConfigProperties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"files",
										"secureConfigProperties"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/secureConfigProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"secureConfigProperties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  \"deserunt nisi \",\n  \"est\"\n ]\n}"
								},
								{
									"name": "No 'secure.config.properties' file available",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/secureConfigProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"secureConfigProperties"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get runtime properties",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/files/runtimeProperties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"files",
										"runtimeProperties"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/runtimeProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"runtimeProperties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  \"deserunt nisi \",\n  \"est\"\n ]\n}"
								},
								{
									"name": "No 'runtime.properties' file available",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/runtimeProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"runtimeProperties"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get key store",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/files/keyStore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"files",
										"keyStore"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/keyStore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"keyStore"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  \"deserunt nisi \",\n  \"est\"\n ]\n}"
								},
								{
									"name": "No 'key store' file available",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/keyStore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"keyStore"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get config properties",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/files/configProperties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"files",
										"configProperties"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/configProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"configProperties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  \"deserunt nisi \",\n  \"est\"\n ]\n}"
								},
								{
									"name": "No 'config.properties' file available",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/configProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"configProperties"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get new node id",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bootstrapManagement/newNodeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bootstrapManagement",
								"newNodeId"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/newNodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"newNodeId"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  \"deserunt nisi \",\n  \"est\"\n ]\n}"
						},
						{
							"name": "Failed to generate new node Id",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/newNodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"newNodeId"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "endpoint",
			"item": [
				{
					"name": "cdn Address",
					"item": [
						{
							"name": "Get root CDN address",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/endpoint/cdnAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"endpoint",
										"cdnAddress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/endpoint/cdnAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"cdnAddress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"address\": \"in\",\n \"newAddress\": \"ad in ea\",\n \"usePublicIpForDomainGeneration\": true,\n \"usePublicIpForAgents\": false\n}"
								}
							]
						},
						{
							"name": "Update root CDN address",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": \"in\",\n    \"newAddress\": \"ad in ea\",\n    \"usePublicIpForDomainGeneration\": true,\n    \"usePublicIpForAgents\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/endpoint/cdnAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"endpoint",
										"cdnAddress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"address\": \"in\",\n    \"newAddress\": \"ad in ea\",\n    \"usePublicIpForDomainGeneration\": true,\n    \"usePublicIpForAgents\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/cdnAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"cdnAddress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"address\": \"in\",\n \"newAddress\": \"ad in ea\",\n \"usePublicIpForDomainGeneration\": true,\n \"usePublicIpForAgents\": false\n}"
								},
								{
									"name": "Operation failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"address\": \"in\",\n    \"newAddress\": \"ad in ea\",\n    \"usePublicIpForDomainGeneration\": true,\n    \"usePublicIpForAgents\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/cdnAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"cdnAddress"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "beacon Forwarder Address",
					"item": [
						{
							"name": "Get beacon forwarder address",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/endpoint/beaconForwarderAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"endpoint",
										"beaconForwarderAddress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/endpoint/beaconForwarderAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"beaconForwarderAddress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"address\": \"in\",\n \"newAddress\": \"ad in ea\",\n \"usePublicIpForDomainGeneration\": true,\n \"usePublicIpForAgents\": false\n}"
								}
							]
						},
						{
							"name": "Update beacon forwarder address",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": \"in\",\n    \"newAddress\": \"ad in ea\",\n    \"usePublicIpForDomainGeneration\": true,\n    \"usePublicIpForAgents\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/endpoint/beaconForwarderAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"endpoint",
										"beaconForwarderAddress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"address\": \"in\",\n    \"newAddress\": \"ad in ea\",\n    \"usePublicIpForDomainGeneration\": true,\n    \"usePublicIpForAgents\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/beaconForwarderAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"beaconForwarderAddress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"address\": \"in\",\n \"newAddress\": \"ad in ea\",\n \"usePublicIpForDomainGeneration\": true,\n \"usePublicIpForAgents\": false\n}"
								},
								{
									"name": "Operation failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"address\": \"in\",\n    \"newAddress\": \"ad in ea\",\n    \"usePublicIpForDomainGeneration\": true,\n    \"usePublicIpForAgents\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/beaconForwarderAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"beaconForwarderAddress"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "public Ip",
					"item": [
						{
							"name": "domain/{node Id}",
							"item": [
								{
									"name": "Get node IP for domain",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"publicIp",
												"domain",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId",
													"value": "57177114",
													"description": "(Required) Node ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"domain",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"address\": \"in\",\n \"newAddress\": \"ad in ea\",\n \"usePublicIpForDomainGeneration\": true,\n \"usePublicIpForAgents\": false\n}"
										},
										{
											"name": "Node not found by id",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"domain",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Store node IP for domain",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"enim Duis do Lorem\""
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"publicIp",
												"domain",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId",
													"value": "57177114",
													"description": "(Required) Node ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"enim Duis do Lorem\""
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"domain",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"address\": \"in\",\n \"newAddress\": \"ad in ea\",\n \"usePublicIpForDomainGeneration\": true,\n \"usePublicIpForAgents\": false\n}"
										},
										{
											"name": "Operation failed",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"enim Duis do Lorem\""
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"domain",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"status": "Not Extended (RFC 2774)",
											"code": 510,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid IP address",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"enim Duis do Lorem\""
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"domain",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"code": 550,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Storing IP failed",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"enim Duis do Lorem\""
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"domain",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"code": 551,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "agents/{node Id}",
							"item": [
								{
									"name": "Get node IP for OneAgents",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"publicIp",
												"agents",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId",
													"value": "57177114",
													"description": "(Required) Node ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"address\": \"in\",\n \"newAddress\": \"ad in ea\",\n \"usePublicIpForDomainGeneration\": true,\n \"usePublicIpForAgents\": false\n}"
										},
										{
											"name": "Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"code": 544,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid address",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"code": 550,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Collector not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"code": 552,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Store node IP for OneAgents",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"enim Duis do Lorem\""
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"publicIp",
												"agents",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId",
													"value": "57177114",
													"description": "(Required) Node ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"enim Duis do Lorem\""
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Operation failed",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"enim Duis do Lorem\""
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"status": "Not Extended (RFC 2774)",
											"code": 510,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Storing configuration failed",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"enim Duis do Lorem\""
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"code": 540,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid IP address",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"enim Duis do Lorem\""
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"code": 550,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Collector not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"enim Duis do Lorem\""
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId"
														}
													]
												}
											},
											"code": 552,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "web Ui Address",
					"item": [
						{
							"name": "Get WebUi address",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/endpoint/webUiAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"endpoint",
										"webUiAddress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/endpoint/webUiAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"webUiAddress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"address\": \"in\",\n \"newAddress\": \"ad in ea\",\n \"usePublicIpForDomainGeneration\": true,\n \"usePublicIpForAgents\": false\n}"
								}
							]
						},
						{
							"name": "Update WebUi address",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": \"in\",\n    \"newAddress\": \"ad in ea\",\n    \"usePublicIpForDomainGeneration\": true,\n    \"usePublicIpForAgents\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/endpoint/webUiAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"endpoint",
										"webUiAddress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"address\": \"in\",\n    \"newAddress\": \"ad in ea\",\n    \"usePublicIpForDomainGeneration\": true,\n    \"usePublicIpForAgents\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/webUiAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"webUiAddress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"address\": \"in\",\n \"newAddress\": \"ad in ea\",\n \"usePublicIpForDomainGeneration\": true,\n \"usePublicIpForAgents\": false\n}"
								},
								{
									"name": "Operation failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"address\": \"in\",\n    \"newAddress\": \"ad in ea\",\n    \"usePublicIpForDomainGeneration\": true,\n    \"usePublicIpForAgents\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/webUiAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"webUiAddress"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "cluster",
			"item": [
				{
					"name": "configuration",
					"item": [
						{
							"name": "status",
							"item": [
								{
									"name": "Get cluster nodes configuration current status",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/configuration/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												"configuration",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/cluster/configuration/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														"configuration",
														"status"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get cluster nodes configuration request status",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/configuration/status/:requestedAt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												"configuration",
												"status",
												":requestedAt"
											],
											"variable": [
												{
													"key": "requestedAt",
													"value": "57177114",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/cluster/configuration/status/:requestedAt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														"configuration",
														"status",
														":requestedAt"
													],
													"variable": [
														{
															"key": "requestedAt"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Cluster nodes configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										"configuration"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/cluster/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												"configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Configure cluster nodes responsibilities",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"clusterNodes\": [\n        {\n            \"id\": -81447956,\n            \"webUI\": true,\n            \"agent\": false,\n            \"datacenter\": \"in amet s\",\n            \"kubernetesRole\": \"adipisicing cupidatat\"\n        },\n        {\n            \"id\": 84142211,\n            \"webUI\": true,\n            \"agent\": true,\n            \"datacenter\": \"fugiat non dolore cillum\",\n            \"kubernetesRole\": \"nostrud ad\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/cluster/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										"configuration"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"clusterNodes\": [\n        {\n            \"id\": -18929783,\n            \"webUI\": false,\n            \"agent\": true,\n            \"datacenter\": \"esse velit\",\n            \"kubernetesRole\": \"ipsum ut commodo pariatur\"\n        },\n        {\n            \"id\": -47323154,\n            \"webUI\": false,\n            \"agent\": false,\n            \"datacenter\": \"est \",\n            \"kubernetesRole\": \"nulla cillum\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/cluster/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												"configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get information about known servers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cluster",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 91080001,\n  \"clusterMemberAddress\": \"ex laboris irure nostrud\",\n  \"operationState\": \"laborum\",\n  \"buildVersion\": \"sunt ipsum laborum dolor cillum\",\n  \"osInfo\": \"sunt\",\n  \"jvmInfo\": \"esse\",\n  \"dnsEntryPointUris\": [\n   \"https://dVl.alWAwNWzMer8Xo2bfsXOpClH0Hovo-6Xnd\",\n   \"https://laJVUIKRcqTglERpqWkVeNnuGQpIcdjP.zlnMNZg6S6mcrH-fGdvNdEbqKpEfdnvZf1Krck5t2Z.P.DGECnuWAZ\"\n  ],\n  \"restServiceRootUris\": [\n   \"https://PKnSwSa.zeyiQNcR61Nh1N7mgH,q3DjtKAuM6O16+vxR.1s9Z\",\n   \"http://GvdeqHI.aqpju38V1j7FVbVccROlZdSmLaidTKV8EaQW66fatK-luau\"\n  ],\n  \"communicationUris\": [\n   \"https://xJUtfWXnScIdr.has1C06p.pQiDFunex8\",\n   \"http://nRWMCaxzxtTG.vdeuY4DNFh79Q-Z69YAdOMlqKpILdlzsr2keMWJ5GwQb6f7Ulh-6+TCQC\"\n  ]\n },\n {\n  \"id\": 7769585,\n  \"clusterMemberAddress\": \"minim in deserunt enim\",\n  \"operationState\": \"ut proident voluptate labore\",\n  \"buildVersion\": \"officia occaecat quis\",\n  \"osInfo\": \"des\",\n  \"jvmInfo\": \"aliqua officia proiden\",\n  \"dnsEntryPointUris\": [\n   \"https://ABngvPtpZqN.eioaLx0szFp+DSIkM,BAVHkvOnWFG6mWF0uDvnduP-ND\",\n   \"https://vbUZEDjBArzaSYtiE.wehPkRRrH.EtsJceqYS5pV7SnT\"\n  ],\n  \"restServiceRootUris\": [\n   \"https://DeHDH.mdzclDEaUHoyoPCpGogx9OCGbI9AkuUVXaXd5d\",\n   \"http://lRVgODTpCRYihkSrLMpuAz.bnB-A7oI8fYALGToyTPxSZ\"\n  ],\n  \"communicationUris\": [\n   \"http://tQaMYvAhqKzHdkRxqlqmw.vkgB3uwDL7OAklr3B4GoVDPhyHkY2GTFixVUgUDCABgvm-eUUVv\",\n   \"https://RFtuLKTmMJsHrdKFngBIliNbqAscoIwc.wrwALhhAfbfzCaOnMeMqgb.S1v-pgU2i3tZ6vfl.cBbMMlIwjNdgeT9LZR,.Ax0zgGCZzXVgzKYGUL\"\n  ]\n }\n]"
						}
					]
				}
			]
		},
		{
			"name": "multi Dc",
			"item": [
				{
					"name": "migration",
					"item": [
						{
							"name": "cluster State",
							"item": [
								{
									"name": "{sub Step}",
									"item": [
										{
											"name": "Get sub step of migration from single to multi datacenter cluster | maturity=EARLY_ADOPTER",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterState/:subStep",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterState",
														":subStep"
													],
													"variable": [
														{
															"key": "subStep",
															"value": "SERVER_RECONFIGURATION",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/clusterState/:subStep",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"clusterState",
																":subStep"
															],
															"variable": [
																{
																	"key": "subStep"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": \"FAILED\",\n \"startedAt\": -44257518,\n \"finishedAt\": 38909795,\n \"details\": \"dolor consectetur\"\n}"
												}
											]
										},
										{
											"name": "Modify sub step of migration from single to multi datacenter cluster | maturity=EARLY_ADOPTER",
											"request": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterState/:subStep?status=SUCCEEDED&details=enim Duis do Lorem",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterState",
														":subStep"
													],
													"query": [
														{
															"key": "status",
															"value": "SUCCEEDED"
														},
														{
															"key": "details",
															"value": "enim Duis do Lorem"
														}
													],
													"variable": [
														{
															"key": "subStep",
															"value": "SERVER_RECONFIGURATION",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/clusterState/:subStep?status=SUCCEEDED&details=enim Duis do Lorem",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"clusterState",
																":subStep"
															],
															"query": [
																{
																	"key": "status",
																	"value": "SUCCEEDED"
																},
																{
																	"key": "details",
																	"value": "enim Duis do Lorem"
																}
															],
															"variable": [
																{
																	"key": "subStep"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get cluster state of migration from single to multi datacenter cluster and its sub steps | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/clusterState",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"clusterState"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterState",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterState"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"singleToMultiDcMigration\": {\n  \"status\": \"NOT_STARTED\",\n  \"startedAt\": 40813715,\n  \"finishedAt\": 1603602,\n  \"details\": \"mollit esse enim\"\n },\n \"migrationSteps\": {}\n}"
										}
									]
								},
								{
									"name": "Modify the overall cluster state of migration from single to multi datacenter cluster | maturity=EARLY_ADOPTER",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/clusterState?status=SUCCEEDED&details=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"clusterState"
											],
											"query": [
												{
													"key": "status",
													"value": "SUCCEEDED"
												},
												{
													"key": "details",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterState?status=SUCCEEDED&details=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterState"
													],
													"query": [
														{
															"key": "status",
															"value": "SUCCEEDED"
														},
														{
															"key": "details",
															"value": ""
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "server",
							"item": [
								{
									"name": "Start server migration in current datacenter | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/server",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"server"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get server migration status | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"server",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "enim Duis do Lorem",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your request is still progressed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "cluster Replication Preparation",
							"item": [
								{
									"name": "Get progress status of cluster preparation for a replication | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"clusterReplicationPreparation"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterReplicationPreparation"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"done\": false,\n \"success\": false,\n \"percentDone\": 37731043.020618886,\n \"errorMessage\": \"Excepteur\"\n}"
										},
										{
											"name": "Your request is still progressed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterReplicationPreparation"
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"done\": false,\n \"success\": false,\n \"percentDone\": 37731043.020618886,\n \"errorMessage\": \"Excepteur\"\n}"
										},
										{
											"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterReplicationPreparation"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterReplicationPreparation"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"done\": false,\n \"success\": false,\n \"percentDone\": 37731043.020618886,\n \"errorMessage\": \"Excepteur\"\n}"
										}
									]
								},
								{
									"name": "Start procedure of cluster preparation for a replication | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"clusterReplicationPreparation"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterReplicationPreparation"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterReplicationPreparation"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "datacenter Topology",
							"item": [
								{
									"name": "Get cluster topology draft | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"datacenterTopology"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"datacenterTopology"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"datacenterTopology\": {},\n \"newDatacenterName\": \"dolore ea nostrud\",\n \"oldDatacenterName\": \"nisi reprehenderit ea\"\n}"
										}
									]
								},
								{
									"name": "Create cluster topology draft | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newDatacenterName\": \"Excepteur aliqua\",\n    \"nodesIp\": [\n        \"occaecat amet\",\n        \"consequat laborum dolor\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"datacenterTopology"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"newDatacenterName\": \"magna ad culpa\",\n    \"nodesIp\": [\n        \"qui\",\n        \"reprehenderit\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"datacenterTopology"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid datacenter migration draft",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"newDatacenterName\": \"magna ad culpa\",\n    \"nodesIp\": [\n        \"qui\",\n        \"reprehenderit\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"datacenterTopology"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete cluster topology draft | maturity=EARLY_ADOPTER",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"datacenterTopology"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"datacenterTopology"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "cluster Nodes/current Dc",
							"item": [
								{
									"name": "Start cluster topology configuration - open firewall ports | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"clusterNodes",
												"currentDc"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get topology configuration status | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"clusterNodes",
												"currentDc",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "enim Duis do Lorem",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your request is still progressed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "cassandra",
							"item": [
								{
									"name": "current Dc",
									"item": [
										{
											"name": "Start cassandra migration in current datacenter | maturity=EARLY_ADOPTER",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"currentDc"
													]
												}
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request is incorrect please validate your path and arguments.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unexpected problem in server.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There was problem in your request. Please check body or logs for more details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc"
															]
														}
													},
													"code": 512,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get cassandra migration status in current datacenter | maturity=EARLY_ADOPTER",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "enim Duis do Lorem",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Your request is still progressed.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "Multi-Status (WebDAV) (RFC 4918)",
													"code": 207,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request is incorrect please validate your path and arguments.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unexpected problem in server.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There was problem in your request. Please check body or logs for more details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"code": 512,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "new Dc",
									"item": [
										{
											"name": "Start cassandra migration in new datacenter | maturity=EARLY_ADOPTER",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"newDc"
													]
												}
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request is incorrect please validate your path and arguments.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unexpected problem in server.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There was problem in your request. Please check body or logs for more details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc"
															]
														}
													},
													"code": 512,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get cassandra migration status in new datacenter | maturity=EARLY_ADOPTER",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"newDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "enim Duis do Lorem",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Your request is still progressed.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "Multi-Status (WebDAV) (RFC 4918)",
													"code": 207,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request is incorrect please validate your path and arguments.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unexpected problem in server.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There was problem in your request. Please check body or logs for more details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"code": 512,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Verify cassandra rebuild status | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/cassandra/rebuildStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"cassandra",
												"rebuildStatus"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/rebuildStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"rebuildStatus"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/rebuildStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"rebuildStatus"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/rebuildStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"rebuildStatus"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/rebuildStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"rebuildStatus"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "elasticsearch",
							"item": [
								{
									"name": "Start elasticsearch migration | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/elasticsearch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"elasticsearch"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get elasticsearch migration status | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"elasticsearch",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "enim Duis do Lorem",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your request is still progressed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Verify elasticsearch migration status | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/indexMigrationStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"elasticsearch",
												"indexMigrationStatus"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/indexMigrationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														"indexMigrationStatus"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/indexMigrationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														"indexMigrationStatus"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/indexMigrationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														"indexMigrationStatus"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/indexMigrationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														"indexMigrationStatus"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get state of in-server config migration (from single to multi datacenter cluster) | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/multiDc/migration/inServerconfigState",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"multiDc",
										"migration",
										"inServerconfigState"
									]
								}
							},
							"response": [
								{
									"name": "Successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/inServerconfigState",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"inServerconfigState"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"componentMigrationStates\": {}\n}"
								}
							]
						},
						{
							"name": "Get nodekeeper helathcheck | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/multiDc/migration/nodekeeper/healthCheck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"multiDc",
										"migration",
										"nodekeeper",
										"healthCheck"
									]
								}
							},
							"response": [
								{
									"name": "Successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/nodekeeper/healthCheck",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"nodekeeper",
												"healthCheck"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request is incorrect please validate your path and arguments.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/nodekeeper/healthCheck",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"nodekeeper",
												"healthCheck"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected problem in server.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/nodekeeper/healthCheck",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"nodekeeper",
												"healthCheck"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "There was problem in your request. Please check body or logs for more details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/nodekeeper/healthCheck",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"nodekeeper",
												"healthCheck"
											]
										}
									},
									"code": 512,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Clean up lost datacenter settings | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/multiDc/migration/lostDatacenterCleanUp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"multiDc",
										"migration",
										"lostDatacenterCleanUp"
									]
								}
							},
							"response": [
								{
									"name": "Successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/lostDatacenterCleanUp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"lostDatacenterCleanUp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request is incorrect please validate your path and arguments.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/lostDatacenterCleanUp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"lostDatacenterCleanUp"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected problem in server.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/lostDatacenterCleanUp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"lostDatacenterCleanUp"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "There was problem in your request. Please check body or logs for more details.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/lostDatacenterCleanUp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"lostDatacenterCleanUp"
											]
										}
									},
									"code": 512,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Finish migration | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/multiDc/migration/finish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"multiDc",
										"migration",
										"finish"
									]
								}
							},
							"response": [
								{
									"name": "Successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/finish",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"finish"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request is incorrect please validate your path and arguments.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/finish",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"finish"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected problem in server.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/finish",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"finish"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "There was problem in your request. Please check body or logs for more details.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/finish",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"finish"
											]
										}
									},
									"code": 512,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "restore",
					"item": [
						{
							"name": "elasticsearch/recover",
							"item": [
								{
									"name": "Get status of disaster recovery. | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"restore",
												"elasticsearch",
												"recover"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your request is still progressed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Path not implemented.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "Not Implemented",
											"code": 501,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Recover elasticsearch from a snapshot on one datacenter. | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"restore",
												"elasticsearch",
												"recover"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Path not implemented.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "Not Implemented",
											"code": 501,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "server/recovery",
							"item": [
								{
									"name": "Migrate servers and start components after disaster recovery | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/restore/server/recovery",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"restore",
												"server",
												"recovery"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get status after server migration and start components in disaster recovery | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"restore",
												"server",
												"recovery",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "enim Duis do Lorem",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your request is still progressed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "elastic",
			"item": [
				{
					"name": "ccr/auto Follow Pattern",
					"item": [
						{
							"name": "Creates auto follow pattern for MultiDC environment",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/elastic/ccr/autoFollowPattern",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"elastic",
										"ccr",
										"autoFollowPattern"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/elastic/ccr/autoFollowPattern",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"elastic",
												"ccr",
												"autoFollowPattern"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"success\": false,\n \"reason\": \"ea cillum minim\"\n}"
								}
							]
						},
						{
							"name": "Deletes auto follow pattern for MultiDC environment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/elastic/ccr/autoFollowPattern",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"elastic",
										"ccr",
										"autoFollowPattern"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/elastic/ccr/autoFollowPattern",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"elastic",
												"ccr",
												"autoFollowPattern"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"success\": false,\n \"reason\": \"ea cillum minim\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Checks if it is safe to upgrade elasticsearch ",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/elastic/upgradeStatus?expectedElasticsearchNodes=-1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"elastic",
								"upgradeStatus"
							],
							"query": [
								{
									"key": "expectedElasticsearchNodes",
									"value": "-1"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/elastic/upgradeStatus?expectedElasticsearchNodes=-1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"elastic",
										"upgradeStatus"
									],
									"query": [
										{
											"key": "expectedElasticsearchNodes",
											"value": "-1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"upgradePossible\": true,\n \"reason\": \"magna elit exercitation sit\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "firewall Management",
			"item": [
				{
					"name": "remove Cluster Node",
					"item": [
						{
							"name": "get Async Node Removal Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/removeClusterNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"removeClusterNode"
									]
								}
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/firewallManagement/removeClusterNode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"firewallManagement",
												"removeClusterNode"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"\""
								}
							]
						},
						{
							"name": "Remove cluster node",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ipAddress\": \"ex Excepteur\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/removeClusterNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"removeClusterNode"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ipAddress\": \"ex Excepteur\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/firewallManagement/removeClusterNode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"firewallManagement",
												"removeClusterNode"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Removal of node failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ipAddress\": \"ex Excepteur\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/firewallManagement/removeClusterNode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"firewallManagement",
												"removeClusterNode"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "remove Cluster Nodes Delete Method",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/removeClusterNode/:ip?scope=enim Duis do Lorem&asyncCrossNodeCommunication=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"removeClusterNode",
										":ip"
									],
									"query": [
										{
											"key": "scope",
											"value": "enim Duis do Lorem"
										},
										{
											"key": "asyncCrossNodeCommunication",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "ip",
											"value": "enim Duis do Lorem",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/firewallManagement/removeClusterNode/:ip?scope=enim Duis do Lorem&asyncCrossNodeCommunication=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"firewallManagement",
												"removeClusterNode",
												":ip"
											],
											"query": [
												{
													"key": "scope",
													"value": "enim Duis do Lorem"
												},
												{
													"key": "asyncCrossNodeCommunication",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "ip"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"\""
								}
							]
						}
					]
				},
				{
					"name": "Add cluster node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": -14950464,\n    \"webUI\": false,\n    \"agent\": false,\n    \"datacenter\": \"consequat fugiat\",\n    \"kubernetesRole\": \"sed mollit minim proident\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/firewallManagement/addClusterNode",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewallManagement",
								"addClusterNode"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -14950464,\n    \"webUI\": false,\n    \"agent\": false,\n    \"datacenter\": \"consequat fugiat\",\n    \"kubernetesRole\": \"sed mollit minim proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/addClusterNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"addClusterNode"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Addition of node failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -14950464,\n    \"webUI\": false,\n    \"agent\": false,\n    \"datacenter\": \"consequat fugiat\",\n    \"kubernetesRole\": \"sed mollit minim proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/addClusterNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"addClusterNode"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get cluster nodes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/firewallManagement/clusterNodes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewallManagement",
								"clusterNodes"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/clusterNodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"clusterNodes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"clusterNodes\": [\n  {\n   \"id\": -18929783,\n   \"webUI\": false,\n   \"agent\": true,\n   \"datacenter\": \"esse velit\",\n   \"kubernetesRole\": \"ipsum ut commodo pariatur\"\n  },\n  {\n   \"id\": -47323154,\n   \"webUI\": false,\n   \"agent\": false,\n   \"datacenter\": \"est \",\n   \"kubernetesRole\": \"nulla cillum\"\n  }\n ]\n}"
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/clusterNodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"clusterNodes"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "node Management",
			"item": [
				{
					"name": "joining",
					"item": [
						{
							"name": "initialize Node Joining",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/joining?ip=enim Duis do Lorem&timestamp=57177114&datacenter=enim Duis do Lorem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"joining"
									],
									"query": [
										{
											"key": "ip",
											"value": "enim Duis do Lorem"
										},
										{
											"key": "timestamp",
											"value": "57177114"
										},
										{
											"key": "datacenter",
											"value": "enim Duis do Lorem"
										}
									]
								}
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodeManagement/joining?ip=enim Duis do Lorem&timestamp=57177114&datacenter=enim Duis do Lorem",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodeManagement",
												"joining"
											],
											"query": [
												{
													"key": "ip",
													"value": "enim Duis do Lorem"
												},
												{
													"key": "timestamp",
													"value": "57177114"
												},
												{
													"key": "datacenter",
													"value": "enim Duis do Lorem"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"\""
								}
							]
						},
						{
							"name": "get Node Joining",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/joining/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"joining",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "enim Duis do Lorem",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodeManagement/joining/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodeManagement",
												"joining",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"\""
								}
							]
						}
					]
				},
				{
					"name": "join/check",
					"item": [
						{
							"name": "Initialize verification if a node can be added to the cluster",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/join/check?ip=enim Duis do Lorem&timestamp=57177114&datacenter=enim Duis do Lorem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"join",
										"check"
									],
									"query": [
										{
											"key": "ip",
											"value": "enim Duis do Lorem"
										},
										{
											"key": "timestamp",
											"value": "57177114"
										},
										{
											"key": "datacenter",
											"value": "enim Duis do Lorem"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodeManagement/join/check?ip=enim Duis do Lorem&timestamp=57177114&datacenter=enim Duis do Lorem",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodeManagement",
												"join",
												"check"
											],
											"query": [
												{
													"key": "ip",
													"value": "enim Duis do Lorem"
												},
												{
													"key": "timestamp",
													"value": "57177114"
												},
												{
													"key": "datacenter",
													"value": "enim Duis do Lorem"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"requestId\": \"veniam ut\"\n}"
								}
							]
						},
						{
							"name": "Verification if a node can be added to the cluster status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/join/check/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"join",
										"check",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "enim Duis do Lorem",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodeManagement/join/check/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodeManagement",
												"join",
												"check",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"nodeJoiningPreCheckFinished\": false,\n \"canRunNodeInstallation\": true,\n \"details\": \"id incididunt dolor \"\n}"
								}
							]
						}
					]
				},
				{
					"name": "cassandra Quorum Override",
					"item": [
						{
							"name": "Get the cassandra read quorum override.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/cassandraQuorumOverride",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"cassandraQuorumOverride"
									]
								},
								"description": "Does not return actual used read quorum if no override is set, in this case UNSET is returned."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodeManagement/cassandraQuorumOverride",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodeManagement",
												"cassandraQuorumOverride"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Override cassandra read quorum at runtime only for this particular server instance",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/cassandraQuorumOverride/:quorum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"cassandraQuorumOverride",
										":quorum"
									],
									"variable": [
										{
											"key": "quorum",
											"value": "CL_ALL",
											"description": "(Required) "
										}
									]
								},
								"description": "This API allows you to override cassandra read quorum of this particular server instance. Other server instances are not affected.\n\nNote that this will not be persisted, after server restart this override will be lost!\n\nTypically you only need it in multi-datacenter fail-over scenarios. \n\n To reset the overrides call the API with the UNSET value."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodeManagement/cassandraQuorumOverride/:quorum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodeManagement",
												"cassandraQuorumOverride",
												":quorum"
											],
											"variable": [
												{
													"key": "quorum"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get node's server status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/nodeServerStatus",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"nodeServerStatus"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/nodeServerStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"nodeServerStatus"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"SHUTDOWN_PHASED_OUT\""
						}
					]
				},
				{
					"name": "set Installer Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"dolore nisi\",\n    \"details\": \"ullamco laboris\",\n    \"lastFinishedStep\": \"ad est culpa\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/installerStatus?ip=enim Duis do Lorem",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"installerStatus"
							],
							"query": [
								{
									"key": "ip",
									"value": "enim Duis do Lorem"
								}
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"dolore nisi\",\n    \"details\": \"ullamco laboris\",\n    \"lastFinishedStep\": \"ad est culpa\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/installerStatus?ip=enim Duis do Lorem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"installerStatus"
									],
									"query": [
										{
											"key": "ip",
											"value": "enim Duis do Lorem"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "try Lock Joining",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/tryLockJoining?ip=enim Duis do Lorem",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"tryLockJoining"
							],
							"query": [
								{
									"key": "ip",
									"value": "enim Duis do Lorem"
								}
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/tryLockJoining?ip=enim Duis do Lorem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"tryLockJoining"
									],
									"query": [
										{
											"key": "ip",
											"value": "enim Duis do Lorem"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "finalize Joining",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ip\": \"aliqua eu cupidatat occaecat\",\n    \"result\": \"STOPPED\",\n    \"details\": \"ipsum nulla consequat enim\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/finalizeJoining?ip=enim Duis do Lorem&status=SUCCESS&forceUnlock=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"finalizeJoining"
							],
							"query": [
								{
									"key": "ip",
									"value": "enim Duis do Lorem"
								},
								{
									"key": "status",
									"value": "SUCCESS"
								},
								{
									"key": "forceUnlock",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"aliqua eu cupidatat occaecat\",\n    \"result\": \"STOPPED\",\n    \"details\": \"ipsum nulla consequat enim\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/finalizeJoining?ip=enim Duis do Lorem&status=SUCCESS&forceUnlock=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"finalizeJoining"
									],
									"query": [
										{
											"key": "ip",
											"value": "enim Duis do Lorem"
										},
										{
											"key": "status",
											"value": "SUCCESS"
										},
										{
											"key": "forceUnlock",
											"value": "true"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "Restart node",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/nodeRestart",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"nodeRestart"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/nodeRestart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"nodeRestart"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Restart failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/nodeRestart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"nodeRestart"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "try Lock Removal",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/tryLockRemoval?id=57177114&ip=enim Duis do Lorem&requestedOnNode=57177114&requestedByUser=enim Duis do Lorem",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"tryLockRemoval"
							],
							"query": [
								{
									"key": "id",
									"value": "57177114"
								},
								{
									"key": "ip",
									"value": "enim Duis do Lorem"
								},
								{
									"key": "requestedOnNode",
									"value": "57177114"
								},
								{
									"key": "requestedByUser",
									"value": "enim Duis do Lorem"
								}
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/tryLockRemoval?id=57177114&ip=enim Duis do Lorem&requestedOnNode=57177114&requestedByUser=enim Duis do Lorem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"tryLockRemoval"
									],
									"query": [
										{
											"key": "id",
											"value": "57177114"
										},
										{
											"key": "ip",
											"value": "enim Duis do Lorem"
										},
										{
											"key": "requestedOnNode",
											"value": "57177114"
										},
										{
											"key": "requestedByUser",
											"value": "enim Duis do Lorem"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "unlock Removal",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/unlockRemoval?id=57177114&ip=enim Duis do Lorem&removalStopReason=enim Duis do Lorem",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"unlockRemoval"
							],
							"query": [
								{
									"key": "id",
									"value": "57177114"
								},
								{
									"key": "ip",
									"value": "enim Duis do Lorem"
								},
								{
									"key": "removalStopReason",
									"value": "enim Duis do Lorem"
								}
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/unlockRemoval?id=57177114&ip=enim Duis do Lorem&removalStopReason=enim Duis do Lorem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"unlockRemoval"
									],
									"query": [
										{
											"key": "id",
											"value": "57177114"
										},
										{
											"key": "ip",
											"value": "enim Duis do Lorem"
										},
										{
											"key": "removalStopReason",
											"value": "enim Duis do Lorem"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "Get node removal status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/nodeRemovalStatus",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"nodeRemovalStatus"
							]
						},
						"description": "Responses with status of current node removal (if it's already running) and statuses of historical removals."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/nodeRemovalStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"nodeRemovalStatus"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "dead Node Cleaning",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/deadNodeCleaning?ip=enim Duis do Lorem&requestedOnNode=57177114&requestedByUser=enim Duis do Lorem",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"deadNodeCleaning"
							],
							"query": [
								{
									"key": "ip",
									"value": "enim Duis do Lorem"
								},
								{
									"key": "requestedOnNode",
									"value": "57177114"
								},
								{
									"key": "requestedByUser",
									"value": "enim Duis do Lorem"
								}
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/deadNodeCleaning?ip=enim Duis do Lorem&requestedOnNode=57177114&requestedByUser=enim Duis do Lorem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"deadNodeCleaning"
									],
									"query": [
										{
											"key": "ip",
											"value": "enim Duis do Lorem"
										},
										{
											"key": "requestedOnNode",
											"value": "57177114"
										},
										{
											"key": "requestedByUser",
											"value": "enim Duis do Lorem"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "Remove node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"triggerRemoveNode"
							]
						}
					},
					"response": [
						{
							"name": "Node removal process started successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node not found by id or IP address",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"status": "Multi-Status (WebDAV) (RFC 4918)",
							"code": 207,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node joining operation is in progress",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"status": "HTTP Version Not Supported",
							"code": 505,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node removal operation is in progress",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"status": "Variant Also Negotiates (RFC 2295)",
							"code": 506,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node removal operation timeout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"status": "Insufficient Storage (WebDAV) (RFC 4918)",
							"code": 507,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Offline node removal operation error. Cleaning cluster configuration was not completed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 530,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Lock node removal operation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 531,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Trigger node removal process error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 532,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node removal operation is not allowed. Upgrade is in progress.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 533,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node removal operation is not allowed. Cassandra nodes are not in valid state (UN).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 534,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node removal operation is not allowed. Elasticsearch is sharding data.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 535,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node is not reachable error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": 46181855,\n    \"ipAddress\": \"dol\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 536,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get product version",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/productVersion",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"productVersion"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/productVersion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"productVersion"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"productVersion\": \"ex aliqua velit cillum occaecat\"\n}"
						}
					]
				},
				{
					"name": "get Nodekeeper Product Version",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/nodekeeperProductVersion",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"nodekeeperProductVersion"
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/nodekeeperProductVersion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"nodekeeperProductVersion"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "Override which nodes can perform internal responsibilities",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"responsibilityNodeIds\": [\n        -87940896,\n        14124230\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/responsibilityOverride",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"responsibilityOverride"
							]
						},
						"description": "This API allows you to define which nodes can perform cluster-wide responsibilities, for example metric aging or problem detection, by specifying nodes IDs. \n\nTypically you only need it in multi-datacenter fail-over scenarios. \n\n To reset the overrides call the API with an empty list of node IDs."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"responsibilityNodeIds\": [\n        42655644,\n        69692181\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/responsibilityOverride",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"responsibilityOverride"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "preferences",
			"item": [
				{
					"name": "Get Dynatrace Managed specific properties",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"supportSendBilling\": false,\n \"supportSendClusterHealth\": true,\n \"suppressNonBillingRelevantData\": false,\n \"certificateManagementEnabled\": false,\n \"certificateManagementPossible\": true,\n \"supportSendEvents\": true,\n \"supportAllowRemoteAccess\": true,\n \"remoteAccessOnDemandOnly\": false,\n \"communityCreateUser\": true,\n \"communityExternalSearch\": true,\n \"backupEnabled\": false,\n \"ruxitMonitorsRuxit\": true,\n \"telemetrySharing\": false,\n \"helpChatEnabled\": false,\n \"readOnlyRemoteAccessAllowed\": false\n}"
						}
					]
				},
				{
					"name": "Update properties",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"supportSendBilling\": true,\n    \"supportSendClusterHealth\": false,\n    \"suppressNonBillingRelevantData\": false,\n    \"certificateManagementEnabled\": true,\n    \"certificateManagementPossible\": false,\n    \"supportSendEvents\": false,\n    \"supportAllowRemoteAccess\": false,\n    \"remoteAccessOnDemandOnly\": false,\n    \"communityCreateUser\": true,\n    \"communityExternalSearch\": false,\n    \"ruxitMonitorsRuxit\": true,\n    \"telemetrySharing\": false,\n    \"helpChatEnabled\": true,\n    \"readOnlyRemoteAccessAllowed\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"supportSendBilling\": true,\n    \"supportSendClusterHealth\": false,\n    \"suppressNonBillingRelevantData\": false,\n    \"certificateManagementEnabled\": true,\n    \"certificateManagementPossible\": false,\n    \"supportSendEvents\": false,\n    \"supportAllowRemoteAccess\": false,\n    \"remoteAccessOnDemandOnly\": false,\n    \"communityCreateUser\": true,\n    \"communityExternalSearch\": false,\n    \"ruxitMonitorsRuxit\": true,\n    \"telemetrySharing\": false,\n    \"helpChatEnabled\": true,\n    \"readOnlyRemoteAccessAllowed\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"supportSendBilling\": false,\n \"supportSendClusterHealth\": true,\n \"suppressNonBillingRelevantData\": false,\n \"certificateManagementEnabled\": false,\n \"certificateManagementPossible\": true,\n \"supportSendEvents\": true,\n \"supportAllowRemoteAccess\": true,\n \"remoteAccessOnDemandOnly\": false,\n \"communityCreateUser\": true,\n \"communityExternalSearch\": true,\n \"backupEnabled\": false,\n \"ruxitMonitorsRuxit\": true,\n \"telemetrySharing\": false,\n \"helpChatEnabled\": false,\n \"readOnlyRemoteAccessAllowed\": false\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"supportSendBilling\": true,\n    \"supportSendClusterHealth\": false,\n    \"suppressNonBillingRelevantData\": false,\n    \"certificateManagementEnabled\": true,\n    \"certificateManagementPossible\": false,\n    \"supportSendEvents\": false,\n    \"supportAllowRemoteAccess\": false,\n    \"remoteAccessOnDemandOnly\": false,\n    \"communityCreateUser\": true,\n    \"communityExternalSearch\": false,\n    \"ruxitMonitorsRuxit\": true,\n    \"telemetrySharing\": false,\n    \"helpChatEnabled\": true,\n    \"readOnlyRemoteAccessAllowed\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "smtp",
			"item": [
				{
					"name": "Get SMTP configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/smtp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"smtp"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"hostName\": \"non aliquip enim ad\",\n \"port\": 73673046,\n \"userName\": \"ut fugiat\",\n \"password\": \"deserunt voluptate dolor est\",\n \"isPasswordConfigured\": true,\n \"connectionSecurity\": \"NO_ENCRYPTION\",\n \"senderEmailAddress\": \"cupidatat\",\n \"allowFallbackViaMissionControl\": false,\n \"useSmtpServer\": false\n}"
						}
					]
				},
				{
					"name": "Update SMTP configuration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hostName\": \"non aliquip enim ad\",\n    \"port\": 73673046,\n    \"userName\": \"ut fugiat\",\n    \"password\": \"deserunt voluptate dolor est\",\n    \"isPasswordConfigured\": true,\n    \"connectionSecurity\": \"NO_ENCRYPTION\",\n    \"senderEmailAddress\": \"cupidatat\",\n    \"allowFallbackViaMissionControl\": false,\n    \"useSmtpServer\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/smtp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"smtp"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hostName\": \"non aliquip enim ad\",\n    \"port\": 73673046,\n    \"userName\": \"ut fugiat\",\n    \"password\": \"deserunt voluptate dolor est\",\n    \"isPasswordConfigured\": true,\n    \"connectionSecurity\": \"NO_ENCRYPTION\",\n    \"senderEmailAddress\": \"cupidatat\",\n    \"allowFallbackViaMissionControl\": false,\n    \"useSmtpServer\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/smtp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"hostName\": \"non aliquip enim ad\",\n \"port\": 73673046,\n \"userName\": \"ut fugiat\",\n \"password\": \"deserunt voluptate dolor est\",\n \"isPasswordConfigured\": true,\n \"connectionSecurity\": \"NO_ENCRYPTION\",\n \"senderEmailAddress\": \"cupidatat\",\n \"allowFallbackViaMissionControl\": false,\n \"useSmtpServer\": false\n}"
						},
						{
							"name": "Invalid SMTP configuration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hostName\": \"non aliquip enim ad\",\n    \"port\": 73673046,\n    \"userName\": \"ut fugiat\",\n    \"password\": \"deserunt voluptate dolor est\",\n    \"isPasswordConfigured\": true,\n    \"connectionSecurity\": \"NO_ENCRYPTION\",\n    \"senderEmailAddress\": \"cupidatat\",\n    \"allowFallbackViaMissionControl\": false,\n    \"useSmtpServer\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/smtp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "SMTP configuration not accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hostName\": \"non aliquip enim ad\",\n    \"port\": 73673046,\n    \"userName\": \"ut fugiat\",\n    \"password\": \"deserunt voluptate dolor est\",\n    \"isPasswordConfigured\": true,\n    \"connectionSecurity\": \"NO_ENCRYPTION\",\n    \"senderEmailAddress\": \"cupidatat\",\n    \"allowFallbackViaMissionControl\": false,\n    \"useSmtpServer\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/smtp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Send test email",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/smtp/sendTestMessage/:emailAddress",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"smtp",
								"sendTestMessage",
								":emailAddress"
							],
							"variable": [
								{
									"key": "emailAddress",
									"value": "enim Duis do Lorem",
									"description": "(Required) "
								}
							]
						},
						"description": "You can send only one test email per minute"
					},
					"response": [
						{
							"name": "Successfully sent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/sendTestMessage/:emailAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"sendTestMessage",
										":emailAddress"
									],
									"variable": [
										{
											"key": "emailAddress"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Incorrect email address",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/sendTestMessage/:emailAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"sendTestMessage",
										":emailAddress"
									],
									"variable": [
										{
											"key": "emailAddress"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too short a time interval between sending attempts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/sendTestMessage/:emailAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"sendTestMessage",
										":emailAddress"
									],
									"variable": [
										{
											"key": "emailAddress"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Sending email failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/sendTestMessage/:emailAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"sendTestMessage",
										":emailAddress"
									],
									"variable": [
										{
											"key": "emailAddress"
										}
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "ssl Certificate",
			"item": [
				{
					"name": "store/{entity Type}/{entity Id}",
					"item": [
						{
							"name": "Get certificate-storage status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertificate",
										"store",
										":entityType",
										":entityId"
									],
									"variable": [
										{
											"key": "entityType",
											"value": "SERVER",
											"description": "(Required) entity type, possible values = \"COLLECTOR\" "
										},
										{
											"key": "entityId",
											"value": "57177114",
											"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful or in progress",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Incorrect entity type",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Status not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Certificate chain is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 522,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Private key does not match public key certificate",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 523,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Public key certificate is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 525,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Private key is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 526,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Error while storing SSL certificate",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 527,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Certificate has been stored but has not been refreshed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 528,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 529,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								}
							]
						},
						{
							"name": "Store SSL certificate status",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n    \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertificate",
										"store",
										":entityType",
										":entityId"
									],
									"variable": [
										{
											"key": "entityType",
											"value": "SERVER",
											"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
										},
										{
											"key": "entityId",
											"value": "57177114",
											"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful or in progress",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n    \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Incorrect entity type",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n    \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n    \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Certificate chain is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n    \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 522,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Private key does not match public key certificate",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n    \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 523,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Public key certificate is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n    \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 525,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Private key is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n    \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 526,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Error while storing SSL certificate",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n    \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 527,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Certificate has been stored but has not been refreshed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n    \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 528,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n    \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"code": 529,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"certificateStoreStatus\": \"ERROR\",\n \"detailedError\": \"laboris nostrud eni\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "SSL certificate details.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sslCertificate/:entityType/:entityId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sslCertificate",
								":entityType",
								":entityId"
							],
							"variable": [
								{
									"key": "entityType",
									"value": "SERVER",
									"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
								},
								{
									"key": "entityId",
									"value": "57177114",
									"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sslCertificate/:entityType/:entityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertificate",
										":entityType",
										":entityId"
									],
									"variable": [
										{
											"key": "entityType"
										},
										{
											"key": "entityId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"customKeyStore\": true,\n \"inProgress\": true,\n \"restartRequired\": false,\n \"customKeyStoreWritable\": true,\n \"expirationDate\": \"1968-12-08T11:26:45.809Z\",\n \"default\": true,\n \"issuer\": \"Lorem velit\",\n \"subject\": \"elit\"\n}"
						},
						{
							"name": "Internal server error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sslCertificate/:entityType/:entityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertificate",
										":entityType",
										":entityId"
									],
									"variable": [
										{
											"key": "entityType"
										},
										{
											"key": "entityId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "sso/saml/sp/cert",
			"item": [
				{
					"name": "Get SAML SP X.509 certificate details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sso/saml/sp/cert",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sso",
								"saml",
								"sp",
								"cert"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sso/saml/sp/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sso",
										"saml",
										"sp",
										"cert"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"issuer\": \"sed\",\n \"subject\": \"nostrud commodo ipsum velit\",\n \"expirationTimestamp\": 63333681,\n \"expirationDate\": \"anim est in aliqua\"\n}"
						},
						{
							"name": "Internal server error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sso/saml/sp/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sso",
										"saml",
										"sp",
										"cert"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update SAML SP X.509 certificate",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sso/saml/sp/cert",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sso",
								"saml",
								"sp",
								"cert"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sso/saml/sp/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sso",
										"saml",
										"sp",
										"cert"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sso/saml/sp/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sso",
										"saml",
										"sp",
										"cert"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"dolor\",\n    \"message\": \"amet ullamco in laborum consequat\",\n    \"path\": \"do ipsum sit incididunt\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"mollit sit Ut culpa\",\n    \"message\": \"velit\",\n    \"path\": \"eiusmod minim Ut ea\"\n   }\n  ],\n  \"message\": \"sit in velit\",\n  \"code\": 84049953\n }\n}"
						},
						{
							"name": "Operation failed. Check server logs for more details.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n    \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sso/saml/sp/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sso",
										"saml",
										"sp",
										"cert"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "support Archive",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get support upgrade file",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/supportArchive/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "57177114",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Ok - download file",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/zip"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Support archive generation has not completed yet",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not find support archive request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Support archive was already deleted from disk",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Gone",
									"code": 410,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Cancel support upgrade generation",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/supportArchive/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "57177114",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete existing support archive",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/supportArchive/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "57177114",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Ok - deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not find support archive request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Support archive generation in progress - please cancel it using /cancel",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get support upgrade generation status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/supportArchive/:id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive",
										":id",
										"status"
									],
									"variable": [
										{
											"key": "id",
											"value": "57177114",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Support archive generation state",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id",
												"status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"downloadState\": \"TRANSFERING\",\n \"report\": {\n  \"parts\": [\n   {\n    \"numberOfFiles\": 65151092,\n    \"uncompressedTotalBytes\": 78913028,\n    \"compressedTotalBytes\": 76585196,\n    \"source\": \"qui proident\",\n    \"errors\": [\n     \"Excepteur aliqua\",\n     \"anim in fugiat ullamco\"\n    ]\n   },\n   {\n    \"numberOfFiles\": 46296188,\n    \"uncompressedTotalBytes\": -569287,\n    \"compressedTotalBytes\": -80542371,\n    \"source\": \"culpa nostrud\",\n    \"errors\": [\n     \"aliquip\",\n     \"aute laboris proident dolore\"\n    ]\n   }\n  ]\n }\n}"
								},
								{
									"name": "Could not find support archive request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id",
												"status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get support upgrade generation report",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/supportArchive/:id/report",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive",
										":id",
										"report"
									],
									"variable": [
										{
											"key": "id",
											"value": "57177114",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Support archive generation report",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id/report",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id",
												"report"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"downloadState\": \"TRANSFERING\",\n \"report\": {\n  \"parts\": [\n   {\n    \"numberOfFiles\": 65151092,\n    \"uncompressedTotalBytes\": 78913028,\n    \"compressedTotalBytes\": 76585196,\n    \"source\": \"qui proident\",\n    \"errors\": [\n     \"Excepteur aliqua\",\n     \"anim in fugiat ullamco\"\n    ]\n   },\n   {\n    \"numberOfFiles\": 46296188,\n    \"uncompressedTotalBytes\": -569287,\n    \"compressedTotalBytes\": -80542371,\n    \"source\": \"culpa nostrud\",\n    \"errors\": [\n     \"aliquip\",\n     \"aute laboris proident dolore\"\n    ]\n   }\n  ]\n }\n}"
								},
								{
									"name": "Support archive generation has not completed yet",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id/report",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id",
												"report"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not find support archive request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id/report",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id",
												"report"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Trigger support upgrade generation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"numberOfDays\": 83846486,\n    \"includeServerData\": true,\n    \"includeActiveGateData\": true,\n    \"includeLogs\": true,\n    \"includeDebugLogs\": false,\n    \"includeAgentRegistryLogs\": true,\n    \"includeLauncherLogs\": false,\n    \"includeMonitoringConfigAuditLogs\": false,\n    \"includeOtherAuditLogs\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/supportArchive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supportArchive"
							]
						}
					},
					"response": [
						{
							"name": "Ok - returns support archive id",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"numberOfDays\": 83846486,\n    \"includeServerData\": true,\n    \"includeActiveGateData\": true,\n    \"includeLogs\": true,\n    \"includeDebugLogs\": false,\n    \"includeAgentRegistryLogs\": true,\n    \"includeLauncherLogs\": false,\n    \"includeMonitoringConfigAuditLogs\": false,\n    \"includeOtherAuditLogs\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/supportArchive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "57177114"
						},
						{
							"name": "Could not trigger support archive generation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"numberOfDays\": 83846486,\n    \"includeServerData\": true,\n    \"includeActiveGateData\": true,\n    \"includeLogs\": true,\n    \"includeDebugLogs\": false,\n    \"includeAgentRegistryLogs\": true,\n    \"includeLauncherLogs\": false,\n    \"includeMonitoringConfigAuditLogs\": false,\n    \"includeOtherAuditLogs\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/supportArchive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "upgrade Management",
			"item": [
				{
					"name": "installation Files",
					"item": [
						{
							"name": "{type}/{version}",
							"item": [
								{
									"name": "Modify update package state. Particular package might be excluded from download or re-downloaded.",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"excludedFromDownload\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"upgradeManagement",
												"installationFiles",
												":type",
												":version"
											],
											"variable": [
												{
													"key": "type",
													"value": "SERVER",
													"description": "(Required) Installation package type, possible values = \"SERVER, AGENT, JS_AGENT, SG, NGINX\" "
												},
												{
													"key": "version",
													"value": "enim Duis do Lorem",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully scheduled. Package should be excluded/re-downloaded soon.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"excludedFromDownload\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type"
														},
														{
															"key": "version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Specified installation package was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"excludedFromDownload\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type"
														},
														{
															"key": "version"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Operation is not allowed. See response message for more details.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"excludedFromDownload\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type"
														},
														{
															"key": "version"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Operation failed. Check server logs for more details.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"excludedFromDownload\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type"
														},
														{
															"key": "version"
														}
													]
												}
											},
											"status": "Not Extended (RFC 2774)",
											"code": 510,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Trigger removal of installation package",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"upgradeManagement",
												"installationFiles",
												":type",
												":version"
											],
											"variable": [
												{
													"key": "type",
													"value": "SERVER",
													"description": "(Required) Installation package type, possible values = \"SERVER, AGENT, JS_AGENT, SG, NGINX\" "
												},
												{
													"key": "version",
													"value": "enim Duis do Lorem",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully scheduled. Package should be removed from all nodes within a couple of minutes.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type"
														},
														{
															"key": "version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Specified installation package was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type"
														},
														{
															"key": "version"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Removing installation files is not allowed. Update list is synchronized with Mission Control.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type"
														},
														{
															"key": "version"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Operation failed. Check server logs for more details.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type"
														},
														{
															"key": "version"
														}
													]
												}
											},
											"status": "Not Extended (RFC 2774)",
											"code": 510,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get list of installation files and their cluster-wide availability information",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/upgradeManagement/installationFiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"upgradeManagement",
										"installationFiles"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/upgradeManagement/installationFiles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"upgradeManagement",
												"installationFiles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"excludedFromDownload\": true,\n  \"deletedFromMCStorage\": true,\n  \"deleteEnabled\": true,\n  \"readyNodeIds\": [\n   -93155338,\n   68550937\n  ],\n  \"fileSizeInBytes\": -71932416,\n  \"countOfTenantsUsingThisAgentAsStandardVersion\": 11687515,\n  \"type\": \"SERVER\",\n  \"version\": \"in reprehenderit labore\",\n  \"status\": \"REMOVING\"\n },\n {\n  \"excludedFromDownload\": true,\n  \"deletedFromMCStorage\": false,\n  \"deleteEnabled\": true,\n  \"readyNodeIds\": [\n   -18125915,\n   95514633\n  ],\n  \"fileSizeInBytes\": 75717597,\n  \"countOfTenantsUsingThisAgentAsStandardVersion\": 9366389,\n  \"type\": \"SERVER\",\n  \"version\": \"consectetur\",\n  \"status\": \"REMOVING\"\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Trigger manual cluster upgrade",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/upgradeManagement/triggerUpgrade",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"upgradeManagement",
								"triggerUpgrade"
							]
						}
					},
					"response": [
						{
							"name": "Started successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/upgradeManagement/triggerUpgrade",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"upgradeManagement",
										"triggerUpgrade"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Triggering of upgrade failed due to missing new version on all nodes.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/upgradeManagement/triggerUpgrade",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"upgradeManagement",
										"triggerUpgrade"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Could not trigger upgrade. Check logs for details...",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/upgradeManagement/triggerUpgrade",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"upgradeManagement",
										"triggerUpgrade"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Upgrade suspended by Dynatrace Mission Control. Could not upgrade cluster now.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/upgradeManagement/triggerUpgrade",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"upgradeManagement",
										"triggerUpgrade"
									]
								}
							},
							"code": 553,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get system precondition check state for the cluster",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/upgradeManagement/clusterUpgradeStartupState",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"upgradeManagement",
								"clusterUpgradeStartupState"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/upgradeManagement/clusterUpgradeStartupState",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"upgradeManagement",
										"clusterUpgradeStartupState"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"state\": \"LAUNCHING\",\n \"error\": \"magna adipisicing\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "groups",
			"item": [
				{
					"name": "{group Id}",
					"item": [
						{
							"name": "Get group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "enim Duis do Lorem",
											"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"adipisicing elit in\",\n \"isClusterAdminGroup\": false,\n \"name\": \"magna commodo ullamco\",\n \"hasAccessAccountRole\": false,\n \"hasManageAccountAndViewProductUsageRole\": false,\n \"ldapGroupNames\": [\n  \"do laboris dolore\",\n  \"dolore dolor\"\n ],\n \"ssoGroupNames\": [\n  \"est\",\n  \"commodo dolore magna\"\n ],\n \"accessRight\": {}\n}"
								},
								{
									"name": "No ID information received for the request to get a group",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete group",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "enim Duis do Lorem",
											"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"adipisicing elit in\",\n \"isClusterAdminGroup\": false,\n \"name\": \"magna commodo ullamco\",\n \"hasAccessAccountRole\": false,\n \"hasManageAccountAndViewProductUsageRole\": false,\n \"ldapGroupNames\": [\n  \"do laboris dolore\",\n  \"dolore dolor\"\n ],\n \"ssoGroupNames\": [\n  \"est\",\n  \"commodo dolore magna\"\n ],\n \"accessRight\": {}\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "management Zones",
					"item": [
						{
							"name": "Get management zone permissions for all groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/managementZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"managementZones"
									]
								},
								"description": "This is a list of management zone specific permissions only. Environment permissions are not taken into account here. Groups with permissions for whole environments can also see all management zones defined in these environments, even if they have no management zone specific permissions and the list returned by this request is empty."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"groupId\": \"mollit sit quis\",\n  \"mzPermissionsPerEnvironment\": [\n   {\n    \"environmentUuid\": \"Duis ad\",\n    \"mzPermissions\": [\n     {\n      \"mzId\": \"labore\",\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     },\n     {\n      \"mzId\": \"sit ut\",\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     }\n    ]\n   },\n   {\n    \"environmentUuid\": \"elit sint\",\n    \"mzPermissions\": [\n     {\n      \"mzId\": \"nostrud aliqua\",\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     },\n     {\n      \"mzId\": \"nostrud irure eu enim tempor\",\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     }\n    ]\n   }\n  ]\n },\n {\n  \"groupId\": \"in\",\n  \"mzPermissionsPerEnvironment\": [\n   {\n    \"environmentUuid\": \"ea\",\n    \"mzPermissions\": [\n     {\n      \"mzId\": \"ut laborum proident enim\",\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     },\n     {\n      \"mzId\": \"ad cillum voluptate\",\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     }\n    ]\n   },\n   {\n    \"environmentUuid\": \"dolore\",\n    \"mzPermissions\": [\n     {\n      \"mzId\": \"ad dolor ullamco Exce\",\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     },\n     {\n      \"mzId\": \"ullamco do nulla occaecat\",\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     }\n    ]\n   }\n  ]\n }\n]"
								}
							]
						},
						{
							"name": "Update management zone permissions for a single group",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"cupidatat nostrud in tempor occaecat\",\n    \"mzPermissionsPerEnvironment\": [\n        {\n            \"environmentUuid\": \"aliqua\",\n            \"mzPermissions\": [\n                {\n                    \"mzId\": \"ea\",\n                    \"permissions\": [\n                        \"LOG_VIEWER\",\n                        \"VIEW_SENSITIVE_REQUEST_DATA\"\n                    ]\n                },\n                {\n                    \"mzId\": \"qu\",\n                    \"permissions\": [\n                        \"LOG_VIEWER\",\n                        \"LOG_VIEWER\"\n                    ]\n                }\n            ]\n        },\n        {\n            \"environmentUuid\": \"quis dolor nulla\",\n            \"mzPermissions\": [\n                {\n                    \"mzId\": \"id commodo anim Excepteur\",\n                    \"permissions\": [\n                        \"MANAGE_SECURITY_PROBLEMS\",\n                        \"LOG_VIEWER\"\n                    ]\n                },\n                {\n                    \"mzId\": \"in anim\",\n                    \"permissions\": [\n                        \"VIEW_SENSITIVE_REQUEST_DATA\",\n                        \"REPLAY_SESSION_DATA_WITHOUT_MASKING\"\n                    ]\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups/managementZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"managementZones"
									]
								}
							},
							"response": [
								{
									"name": "Successfully updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"groupId\": \"cupidatat nostrud in tempor occaecat\",\n    \"mzPermissionsPerEnvironment\": [\n        {\n            \"environmentUuid\": \"aliqua\",\n            \"mzPermissions\": [\n                {\n                    \"mzId\": \"ea\",\n                    \"permissions\": [\n                        \"LOG_VIEWER\",\n                        \"VIEW_SENSITIVE_REQUEST_DATA\"\n                    ]\n                },\n                {\n                    \"mzId\": \"qu\",\n                    \"permissions\": [\n                        \"LOG_VIEWER\",\n                        \"LOG_VIEWER\"\n                    ]\n                }\n            ]\n        },\n        {\n            \"environmentUuid\": \"quis dolor nulla\",\n            \"mzPermissions\": [\n                {\n                    \"mzId\": \"id commodo anim Excepteur\",\n                    \"permissions\": [\n                        \"MANAGE_SECURITY_PROBLEMS\",\n                        \"LOG_VIEWER\"\n                    ]\n                },\n                {\n                    \"mzId\": \"in anim\",\n                    \"permissions\": [\n                        \"VIEW_SENSITIVE_REQUEST_DATA\",\n                        \"REPLAY_SESSION_DATA_WITHOUT_MASKING\"\n                    ]\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Provided model is incorrect or is missing required elements",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"groupId\": \"cupidatat nostrud in tempor occaecat\",\n    \"mzPermissionsPerEnvironment\": [\n        {\n            \"environmentUuid\": \"aliqua\",\n            \"mzPermissions\": [\n                {\n                    \"mzId\": \"ea\",\n                    \"permissions\": [\n                        \"LOG_VIEWER\",\n                        \"VIEW_SENSITIVE_REQUEST_DATA\"\n                    ]\n                },\n                {\n                    \"mzId\": \"qu\",\n                    \"permissions\": [\n                        \"LOG_VIEWER\",\n                        \"LOG_VIEWER\"\n                    ]\n                }\n            ]\n        },\n        {\n            \"environmentUuid\": \"quis dolor nulla\",\n            \"mzPermissions\": [\n                {\n                    \"mzId\": \"id commodo anim Excepteur\",\n                    \"permissions\": [\n                        \"MANAGE_SECURITY_PROBLEMS\",\n                        \"LOG_VIEWER\"\n                    ]\n                },\n                {\n                    \"mzId\": \"in anim\",\n                    \"permissions\": [\n                        \"VIEW_SENSITIVE_REQUEST_DATA\",\n                        \"REPLAY_SESSION_DATA_WITHOUT_MASKING\"\n                    ]\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "A group, environment or management zone does not exist",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"groupId\": \"cupidatat nostrud in tempor occaecat\",\n    \"mzPermissionsPerEnvironment\": [\n        {\n            \"environmentUuid\": \"aliqua\",\n            \"mzPermissions\": [\n                {\n                    \"mzId\": \"ea\",\n                    \"permissions\": [\n                        \"LOG_VIEWER\",\n                        \"VIEW_SENSITIVE_REQUEST_DATA\"\n                    ]\n                },\n                {\n                    \"mzId\": \"qu\",\n                    \"permissions\": [\n                        \"LOG_VIEWER\",\n                        \"LOG_VIEWER\"\n                    ]\n                }\n            ]\n        },\n        {\n            \"environmentUuid\": \"quis dolor nulla\",\n            \"mzPermissions\": [\n                {\n                    \"mzId\": \"id commodo anim Excepteur\",\n                    \"permissions\": [\n                        \"MANAGE_SECURITY_PROBLEMS\",\n                        \"LOG_VIEWER\"\n                    ]\n                },\n                {\n                    \"mzId\": \"in anim\",\n                    \"permissions\": [\n                        \"VIEW_SENSITIVE_REQUEST_DATA\",\n                        \"REPLAY_SESSION_DATA_WITHOUT_MASKING\"\n                    ]\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Operation failed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"groupId\": \"cupidatat nostrud in tempor occaecat\",\n    \"mzPermissionsPerEnvironment\": [\n        {\n            \"environmentUuid\": \"aliqua\",\n            \"mzPermissions\": [\n                {\n                    \"mzId\": \"ea\",\n                    \"permissions\": [\n                        \"LOG_VIEWER\",\n                        \"VIEW_SENSITIVE_REQUEST_DATA\"\n                    ]\n                },\n                {\n                    \"mzId\": \"qu\",\n                    \"permissions\": [\n                        \"LOG_VIEWER\",\n                        \"LOG_VIEWER\"\n                    ]\n                }\n            ]\n        },\n        {\n            \"environmentUuid\": \"quis dolor nulla\",\n            \"mzPermissions\": [\n                {\n                    \"mzId\": \"id commodo anim Excepteur\",\n                    \"permissions\": [\n                        \"MANAGE_SECURITY_PROBLEMS\",\n                        \"LOG_VIEWER\"\n                    ]\n                },\n                {\n                    \"mzId\": \"in anim\",\n                    \"permissions\": [\n                        \"VIEW_SENSITIVE_REQUEST_DATA\",\n                        \"REPLAY_SESSION_DATA_WITHOUT_MASKING\"\n                    ]\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get management zone permissions for a given group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/managementZones/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"managementZones",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "enim Duis do Lorem",
											"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
										}
									]
								},
								"description": "This is a list of management zone specific permissions only. Environment permissions are not taken into account here. Groups with permissions for whole environments can also see all management zones defined in these environments, even if they have no management zone specific permissions and the list returned by this request is empty."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"groupId\": \"cupidatat nostrud in tempor occaecat\",\n \"mzPermissionsPerEnvironment\": [\n  {\n   \"environmentUuid\": \"aliqua\",\n   \"mzPermissions\": [\n    {\n     \"mzId\": \"ea\",\n     \"permissions\": [\n      \"LOG_VIEWER\",\n      \"VIEW_SENSITIVE_REQUEST_DATA\"\n     ]\n    },\n    {\n     \"mzId\": \"qu\",\n     \"permissions\": [\n      \"LOG_VIEWER\",\n      \"LOG_VIEWER\"\n     ]\n    }\n   ]\n  },\n  {\n   \"environmentUuid\": \"quis dolor nulla\",\n   \"mzPermissions\": [\n    {\n     \"mzId\": \"id commodo anim Excepteur\",\n     \"permissions\": [\n      \"MANAGE_SECURITY_PROBLEMS\",\n      \"LOG_VIEWER\"\n     ]\n    },\n    {\n     \"mzId\": \"in anim\",\n     \"permissions\": [\n      \"VIEW_SENSITIVE_REQUEST_DATA\",\n      \"REPLAY_SESSION_DATA_WITHOUT_MASKING\"\n     ]\n    }\n   ]\n  }\n ]\n}"
								},
								{
									"name": "No ID information received for the request to get group MZ permissions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Group not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"consectetur\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"nulla est commodo eu\",\n  \"hasAccessAccountRole\": true,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"ldapGroupNames\": [\n   \"eiusmod\",\n   \"deserunt laboris ullamco\"\n  ],\n  \"ssoGroupNames\": [\n   \"adipisicing ea aliquip et ex\",\n   \"Lorem dolor Excepteur\"\n  ],\n  \"accessRight\": {}\n },\n {\n  \"id\": \"eu\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"adipisicing\",\n  \"hasAccessAccountRole\": false,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"ldapGroupNames\": [\n   \"commodo\",\n   \"in sint\"\n  ],\n  \"ssoGroupNames\": [\n   \"dolor veni\",\n   \"ipsum\"\n  ],\n  \"accessRight\": {}\n }\n]"
						}
					]
				},
				{
					"name": "Update group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"ex Excepteur officia nostrud\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"magna in sit\",\n    \"hasAccessAccountRole\": true,\n    \"hasManageAccountAndViewProductUsageRole\": true,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n        \"eu\",\n        \"ipsum elit non Lorem\"\n    ],\n    \"ssoGroupNames\": [\n        \"non nulla commodo aliquip\",\n        \"ipsum officia\"\n    ],\n    \"accessRight\": {}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": [
						{
							"name": "Successfully updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"ex Excepteur officia nostrud\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"magna in sit\",\n    \"hasAccessAccountRole\": true,\n    \"hasManageAccountAndViewProductUsageRole\": true,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n        \"eu\",\n        \"ipsum elit non Lorem\"\n    ],\n    \"ssoGroupNames\": [\n        \"non nulla commodo aliquip\",\n        \"ipsum officia\"\n    ],\n    \"accessRight\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"adipisicing elit in\",\n \"isClusterAdminGroup\": false,\n \"name\": \"magna commodo ullamco\",\n \"hasAccessAccountRole\": false,\n \"hasManageAccountAndViewProductUsageRole\": false,\n \"ldapGroupNames\": [\n  \"do laboris dolore\",\n  \"dolore dolor\"\n ],\n \"ssoGroupNames\": [\n  \"est\",\n  \"commodo dolore magna\"\n ],\n \"accessRight\": {}\n}"
						},
						{
							"name": "Operation failed. The input is invalid. Possible reasons:\n - No group information received for the request to create a group\n - Group ID is not set\n - Group name cannot be null or empty\n - At least one of the specified environments doesn't exist\n",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"ex Excepteur officia nostrud\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"magna in sit\",\n    \"hasAccessAccountRole\": true,\n    \"hasManageAccountAndViewProductUsageRole\": true,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n        \"eu\",\n        \"ipsum elit non Lorem\"\n    ],\n    \"ssoGroupNames\": [\n        \"non nulla commodo aliquip\",\n        \"ipsum officia\"\n    ],\n    \"accessRight\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. Group name already exists or group not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"ex Excepteur officia nostrud\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"magna in sit\",\n    \"hasAccessAccountRole\": true,\n    \"hasManageAccountAndViewProductUsageRole\": true,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n        \"eu\",\n        \"ipsum elit non Lorem\"\n    ],\n    \"ssoGroupNames\": [\n        \"non nulla commodo aliquip\",\n        \"ipsum officia\"\n    ],\n    \"accessRight\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"ex Excepteur officia nostrud\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"magna in sit\",\n    \"hasAccessAccountRole\": true,\n    \"hasManageAccountAndViewProductUsageRole\": true,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n        \"eu\",\n        \"ipsum elit non Lorem\"\n    ],\n    \"ssoGroupNames\": [\n        \"non nulla commodo aliquip\",\n        \"ipsum officia\"\n    ],\n    \"accessRight\": {}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": [
						{
							"name": "Successfully updated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"ex Excepteur officia nostrud\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"magna in sit\",\n    \"hasAccessAccountRole\": true,\n    \"hasManageAccountAndViewProductUsageRole\": true,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n        \"eu\",\n        \"ipsum elit non Lorem\"\n    ],\n    \"ssoGroupNames\": [\n        \"non nulla commodo aliquip\",\n        \"ipsum officia\"\n    ],\n    \"accessRight\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"adipisicing elit in\",\n \"isClusterAdminGroup\": false,\n \"name\": \"magna commodo ullamco\",\n \"hasAccessAccountRole\": false,\n \"hasManageAccountAndViewProductUsageRole\": false,\n \"ldapGroupNames\": [\n  \"do laboris dolore\",\n  \"dolore dolor\"\n ],\n \"ssoGroupNames\": [\n  \"est\",\n  \"commodo dolore magna\"\n ],\n \"accessRight\": {}\n}"
						},
						{
							"name": "Operation failed. The input is invalid. Possible reasons:\n - No group information received for the request to create a group\n - Group ID cannot be set\n - Group name cannot be null or empty\n - At least one of the specified environments doesn't exist\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"ex Excepteur officia nostrud\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"magna in sit\",\n    \"hasAccessAccountRole\": true,\n    \"hasManageAccountAndViewProductUsageRole\": true,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n        \"eu\",\n        \"ipsum elit non Lorem\"\n    ],\n    \"ssoGroupNames\": [\n        \"non nulla commodo aliquip\",\n        \"ipsum officia\"\n    ],\n    \"accessRight\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. Group already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"ex Excepteur officia nostrud\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"magna in sit\",\n    \"hasAccessAccountRole\": true,\n    \"hasManageAccountAndViewProductUsageRole\": true,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n        \"eu\",\n        \"ipsum elit non Lorem\"\n    ],\n    \"ssoGroupNames\": [\n        \"non nulla commodo aliquip\",\n        \"ipsum officia\"\n    ],\n    \"accessRight\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"consectetur\",\n        \"isClusterAdminGroup\": false,\n        \"name\": \"nulla est commodo eu\",\n        \"hasAccessAccountRole\": true,\n        \"hasManageAccountAndViewProductUsageRole\": true,\n        \"ldapGroupNames\": [\n            \"eiusmod\",\n            \"deserunt laboris ullamco\"\n        ],\n        \"ssoGroupNames\": [\n            \"adipisicing ea aliquip et ex\",\n            \"Lorem dolor Excepteur\"\n        ],\n        \"accessRight\": {}\n    },\n    {\n        \"id\": \"eu\",\n        \"isClusterAdminGroup\": false,\n        \"name\": \"adipisicing\",\n        \"hasAccessAccountRole\": false,\n        \"hasManageAccountAndViewProductUsageRole\": true,\n        \"ldapGroupNames\": [\n            \"commodo\",\n            \"in sint\"\n        ],\n        \"ssoGroupNames\": [\n            \"dolor veni\",\n            \"ipsum\"\n        ],\n        \"accessRight\": {}\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/groups/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"bulk"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"eiusmod adipisicing cillum nostrud\",\n        \"isClusterAdminGroup\": true,\n        \"name\": \"ut anim voluptate sunt\",\n        \"hasAccessAccountRole\": true,\n        \"hasManageAccountAndViewProductUsageRole\": false,\n        \"ldapGroupNames\": [\n            \"incididunt ut consectetur nulla Duis\",\n            \"in\"\n        ],\n        \"ssoGroupNames\": [\n            \"in Lorem amet reprehenderit\",\n            \"irure Excepteur\"\n        ],\n        \"accessRight\": {}\n    },\n    {\n        \"id\": \"sint aliquip elit proident\",\n        \"isClusterAdminGroup\": true,\n        \"name\": \"Lorem pariatur eu\",\n        \"hasAccessAccountRole\": false,\n        \"hasManageAccountAndViewProductUsageRole\": true,\n        \"ldapGroupNames\": [\n            \"deserunt nisi\",\n            \"sit \"\n        ],\n        \"ssoGroupNames\": [\n            \"Ut in\",\n            \"velit magna offi\"\n        ],\n        \"accessRight\": {}\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/groups/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"bulk"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"consectetur\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"nulla est commodo eu\",\n  \"hasAccessAccountRole\": true,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"ldapGroupNames\": [\n   \"eiusmod\",\n   \"deserunt laboris ullamco\"\n  ],\n  \"ssoGroupNames\": [\n   \"adipisicing ea aliquip et ex\",\n   \"Lorem dolor Excepteur\"\n  ],\n  \"accessRight\": {}\n },\n {\n  \"id\": \"eu\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"adipisicing\",\n  \"hasAccessAccountRole\": false,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"ldapGroupNames\": [\n   \"commodo\",\n   \"in sint\"\n  ],\n  \"ssoGroupNames\": [\n   \"dolor veni\",\n   \"ipsum\"\n  ],\n  \"accessRight\": {}\n }\n]"
						},
						{
							"name": "No group information received for the create-group request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"eiusmod adipisicing cillum nostrud\",\n        \"isClusterAdminGroup\": true,\n        \"name\": \"ut anim voluptate sunt\",\n        \"hasAccessAccountRole\": true,\n        \"hasManageAccountAndViewProductUsageRole\": false,\n        \"ldapGroupNames\": [\n            \"incididunt ut consectetur nulla Duis\",\n            \"in\"\n        ],\n        \"ssoGroupNames\": [\n            \"in Lorem amet reprehenderit\",\n            \"irure Excepteur\"\n        ],\n        \"accessRight\": {}\n    },\n    {\n        \"id\": \"sint aliquip elit proident\",\n        \"isClusterAdminGroup\": true,\n        \"name\": \"Lorem pariatur eu\",\n        \"hasAccessAccountRole\": false,\n        \"hasManageAccountAndViewProductUsageRole\": true,\n        \"ldapGroupNames\": [\n            \"deserunt nisi\",\n            \"sit \"\n        ],\n        \"ssoGroupNames\": [\n            \"Ut in\",\n            \"velit magna offi\"\n        ],\n        \"accessRight\": {}\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/groups/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"bulk"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unacceptable or incomplete request. Some groups were added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"eiusmod adipisicing cillum nostrud\",\n        \"isClusterAdminGroup\": true,\n        \"name\": \"ut anim voluptate sunt\",\n        \"hasAccessAccountRole\": true,\n        \"hasManageAccountAndViewProductUsageRole\": false,\n        \"ldapGroupNames\": [\n            \"incididunt ut consectetur nulla Duis\",\n            \"in\"\n        ],\n        \"ssoGroupNames\": [\n            \"in Lorem amet reprehenderit\",\n            \"irure Excepteur\"\n        ],\n        \"accessRight\": {}\n    },\n    {\n        \"id\": \"sint aliquip elit proident\",\n        \"isClusterAdminGroup\": true,\n        \"name\": \"Lorem pariatur eu\",\n        \"hasAccessAccountRole\": false,\n        \"hasManageAccountAndViewProductUsageRole\": true,\n        \"ldapGroupNames\": [\n            \"deserunt nisi\",\n            \"sit \"\n        ],\n        \"ssoGroupNames\": [\n            \"Ut in\",\n            \"velit magna offi\"\n        ],\n        \"accessRight\": {}\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/groups/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"bulk"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"consectetur\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"nulla est commodo eu\",\n  \"hasAccessAccountRole\": true,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"ldapGroupNames\": [\n   \"eiusmod\",\n   \"deserunt laboris ullamco\"\n  ],\n  \"ssoGroupNames\": [\n   \"adipisicing ea aliquip et ex\",\n   \"Lorem dolor Excepteur\"\n  ],\n  \"accessRight\": {}\n },\n {\n  \"id\": \"eu\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"adipisicing\",\n  \"hasAccessAccountRole\": false,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"ldapGroupNames\": [\n   \"commodo\",\n   \"in sint\"\n  ],\n  \"ssoGroupNames\": [\n   \"dolor veni\",\n   \"ipsum\"\n  ],\n  \"accessRight\": {}\n }\n]"
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "enim Duis do Lorem",
											"description": "(Required) User ID path parameter. Missing or empty values will return a 'Bad Request'"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"email\": \"aute laboris minim Ut\",\n \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n \"id\": \"consequat dolor consectetur magna cillum\",\n \"lastName\": \"ea consequat quis\",\n \"passwordClearText\": \"non sed occaecat et\",\n \"groups\": [\n  \"velit aute voluptate reprehenderit esse\",\n  \"eiusmod in non\"\n ]\n}"
								},
								{
									"name": "No ID information received for the get-user request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete user",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "enim Duis do Lorem",
											"description": "(Required) User ID path parameter. Missing or empty values will return a 'Bad Request'."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"email\": \"aute laboris minim Ut\",\n \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n \"id\": \"consequat dolor consectetur magna cillum\",\n \"lastName\": \"ea consequat quis\",\n \"passwordClearText\": \"non sed occaecat et\",\n \"groups\": [\n  \"velit aute voluptate reprehenderit esse\",\n  \"eiusmod in non\"\n ]\n}"
								},
								{
									"name": "Not modified",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Modified",
									"code": 304,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "No ID information received for the delete-user request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unacceptable request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"email\": \"elit \",\n  \"firstName\": \"labore consectetur cillum esse\",\n  \"id\": \"ipsum sint labore\",\n  \"lastName\": \"in\",\n  \"passwordClearText\": \"sunt tempor fugiat ipsum in\",\n  \"groups\": [\n   \"sunt nostrud pariatur\",\n   \"aliquip in sunt\"\n  ]\n },\n {\n  \"email\": \"qui et nulla\",\n  \"firstName\": \"Ut ut laboris\",\n  \"id\": \"tempor et cillum\",\n  \"lastName\": \"reprehenderit\",\n  \"passwordClearText\": \"cillum\",\n  \"groups\": [\n   \"enim\",\n   \"ea id velit\"\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Update user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Successfully updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"email\": \"aute laboris minim Ut\",\n \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n \"id\": \"consequat dolor consectetur magna cillum\",\n \"lastName\": \"ea consequat quis\",\n \"passwordClearText\": \"non sed occaecat et\",\n \"groups\": [\n  \"velit aute voluptate reprehenderit esse\",\n  \"eiusmod in non\"\n ]\n}"
						},
						{
							"name": "Operation failed. The input is invalid. Possible reasons:\n - all required values (ID, email, first name, last name) must be set\n - invalid user data\n - user email address already assigned\n - user group ID does not exist",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation forbidden - users and groups are fully managed via LDAP or SSO",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unacceptable request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Email address already registered",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"code": 524,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"email\": \"aute laboris minim Ut\",\n \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n \"id\": \"consequat dolor consectetur magna cillum\",\n \"lastName\": \"ea consequat quis\",\n \"passwordClearText\": \"non sed occaecat et\",\n \"groups\": [\n  \"velit aute voluptate reprehenderit esse\",\n  \"eiusmod in non\"\n ]\n}"
						},
						{
							"name": "Operation failed. The input is invalid. Possible reasons:\n - all required values (ID, email, first name, last name) must be set\n - invalid user data\n - user ID already exists\n - user email address already assigned\n - user group ID does not exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation forbidden - users and groups are fully managed via LDAP or SSO",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unacceptable request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Couldn't create user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"code": 522,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"code": 523,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Email address already registered",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aute laboris minim Ut\",\n    \"firstName\": \"aliquip nulla velit eiusmod dolore\",\n    \"id\": \"consequat dolor consectetur magna cillum\",\n    \"lastName\": \"ea consequat quis\",\n    \"passwordClearText\": \"non sed occaecat et\",\n    \"groups\": [\n        \"velit aute voluptate reprehenderit esse\",\n        \"eiusmod in non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"code": 524,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"email\": \"elit \",\n        \"firstName\": \"labore consectetur cillum esse\",\n        \"id\": \"ipsum sint labore\",\n        \"lastName\": \"in\",\n        \"passwordClearText\": \"sunt tempor fugiat ipsum in\",\n        \"groups\": [\n            \"sunt nostrud pariatur\",\n            \"aliquip in sunt\"\n        ]\n    },\n    {\n        \"email\": \"qui et nulla\",\n        \"firstName\": \"Ut ut laboris\",\n        \"id\": \"tempor et cillum\",\n        \"lastName\": \"reprehenderit\",\n        \"passwordClearText\": \"cillum\",\n        \"groups\": [\n            \"enim\",\n            \"ea id velit\"\n        ]\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/users/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"bulk"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": \"Lorem \",\n        \"firstName\": \"sed dolor qui consequat\",\n        \"id\": \"dolore e\",\n        \"lastName\": \"qui\",\n        \"passwordClearText\": \"Ut nisi\",\n        \"groups\": [\n            \"elit consectetur\",\n            \"in ut eiusmod\"\n        ]\n    },\n    {\n        \"email\": \"exercitation sit\",\n        \"firstName\": \"voluptate cupidatat ut irure consectetur\",\n        \"id\": \"cupidatat minim Duis\",\n        \"lastName\": \"Duis consectetur ea\",\n        \"passwordClearText\": \"ut dolor magna\",\n        \"groups\": [\n            \"dolore in\",\n            \"sit Duis proident consectetur\"\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/users/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"bulk"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"email\": \"elit \",\n  \"firstName\": \"labore consectetur cillum esse\",\n  \"id\": \"ipsum sint labore\",\n  \"lastName\": \"in\",\n  \"passwordClearText\": \"sunt tempor fugiat ipsum in\",\n  \"groups\": [\n   \"sunt nostrud pariatur\",\n   \"aliquip in sunt\"\n  ]\n },\n {\n  \"email\": \"qui et nulla\",\n  \"firstName\": \"Ut ut laboris\",\n  \"id\": \"tempor et cillum\",\n  \"lastName\": \"reprehenderit\",\n  \"passwordClearText\": \"cillum\",\n  \"groups\": [\n   \"enim\",\n   \"ea id velit\"\n  ]\n }\n]"
						},
						{
							"name": "Operation failed. The input is invalid. Possible reasons:\n - no user information received for the create-users request\n - all required values (ID, email, first name, last name) must be set\n - invalid user data\n - input contains duplicated IDs\n - input con",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": \"Lorem \",\n        \"firstName\": \"sed dolor qui consequat\",\n        \"id\": \"dolore e\",\n        \"lastName\": \"qui\",\n        \"passwordClearText\": \"Ut nisi\",\n        \"groups\": [\n            \"elit consectetur\",\n            \"in ut eiusmod\"\n        ]\n    },\n    {\n        \"email\": \"exercitation sit\",\n        \"firstName\": \"voluptate cupidatat ut irure consectetur\",\n        \"id\": \"cupidatat minim Duis\",\n        \"lastName\": \"Duis consectetur ea\",\n        \"passwordClearText\": \"ut dolor magna\",\n        \"groups\": [\n            \"dolore in\",\n            \"sit Duis proident consectetur\"\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/users/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"bulk"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation forbidden - either LDAP or SSO with group assignment integration is turned on",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": \"Lorem \",\n        \"firstName\": \"sed dolor qui consequat\",\n        \"id\": \"dolore e\",\n        \"lastName\": \"qui\",\n        \"passwordClearText\": \"Ut nisi\",\n        \"groups\": [\n            \"elit consectetur\",\n            \"in ut eiusmod\"\n        ]\n    },\n    {\n        \"email\": \"exercitation sit\",\n        \"firstName\": \"voluptate cupidatat ut irure consectetur\",\n        \"id\": \"cupidatat minim Duis\",\n        \"lastName\": \"Duis consectetur ea\",\n        \"passwordClearText\": \"ut dolor magna\",\n        \"groups\": [\n            \"dolore in\",\n            \"sit Duis proident consectetur\"\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/users/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"bulk"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unacceptable or incomplete request. Some users added",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": \"Lorem \",\n        \"firstName\": \"sed dolor qui consequat\",\n        \"id\": \"dolore e\",\n        \"lastName\": \"qui\",\n        \"passwordClearText\": \"Ut nisi\",\n        \"groups\": [\n            \"elit consectetur\",\n            \"in ut eiusmod\"\n        ]\n    },\n    {\n        \"email\": \"exercitation sit\",\n        \"firstName\": \"voluptate cupidatat ut irure consectetur\",\n        \"id\": \"cupidatat minim Duis\",\n        \"lastName\": \"Duis consectetur ea\",\n        \"passwordClearText\": \"ut dolor magna\",\n        \"groups\": [\n            \"dolore in\",\n            \"sit Duis proident consectetur\"\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/users/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"bulk"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"email\": \"elit \",\n  \"firstName\": \"labore consectetur cillum esse\",\n  \"id\": \"ipsum sint labore\",\n  \"lastName\": \"in\",\n  \"passwordClearText\": \"sunt tempor fugiat ipsum in\",\n  \"groups\": [\n   \"sunt nostrud pariatur\",\n   \"aliquip in sunt\"\n  ]\n },\n {\n  \"email\": \"qui et nulla\",\n  \"firstName\": \"Ut ut laboris\",\n  \"id\": \"tempor et cillum\",\n  \"lastName\": \"reprehenderit\",\n  \"passwordClearText\": \"cillum\",\n  \"groups\": [\n   \"enim\",\n   \"ea id velit\"\n  ]\n }\n]"
						}
					]
				}
			]
		},
		{
			"name": "user Repository",
			"item": [
				{
					"name": "authentication Mode",
					"item": [
						{
							"name": "Get authentication mode",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userRepository/authenticationMode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userRepository",
										"authenticationMode"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userRepository/authenticationMode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"authenticationMode"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"authenticationProvider\": \"INTERNAL\",\n \"authorizationProvider\": \"INTERNAL\",\n \"ssoOnly\": true\n}"
								}
							]
						},
						{
							"name": "Update authentication mode",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authenticationProvider\": \"LDAP\",\n    \"authorizationProvider\": \"INTERNAL\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/userRepository/authenticationMode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userRepository",
										"authenticationMode"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"authenticationProvider\": \"LDAP\",\n    \"authorizationProvider\": \"INTERNAL\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/userRepository/authenticationMode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"authenticationMode"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"authenticationProvider\": \"INTERNAL\",\n \"authorizationProvider\": \"INTERNAL\",\n \"ssoOnly\": true\n}"
								},
								{
									"name": "Not Acceptable. LDAP cannot be turned on if \"Import user groups\" from SSO flag is turned on",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"authenticationProvider\": \"LDAP\",\n    \"authorizationProvider\": \"INTERNAL\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/userRepository/authenticationMode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"authenticationMode"
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "ldap",
					"item": [
						{
							"name": "connection Configuration",
							"item": [
								{
									"name": "Get LDAP configuration",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/userRepository/ldap/connectionConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"ldap",
												"connectionConfiguration"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/connectionConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"connectionConfiguration"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"shouldUseSecureConnection\": false,\n \"hostName\": \"fugiat ut\",\n \"port\": -28580062,\n \"bindDn\": \"tempor\",\n \"bindPassword\": \"Duis tempor cillu\",\n \"bindPasswordSet\": true,\n \"referralHopLimit\": 44711668\n}"
										}
									]
								},
								{
									"name": "Update LDAP connection",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"shouldUseSecureConnection\": false,\n    \"hostName\": \"fugiat ut\",\n    \"port\": -28580062,\n    \"bindDn\": \"tempor\",\n    \"bindPassword\": \"Duis tempor cillu\",\n    \"bindPasswordSet\": true,\n    \"referralHopLimit\": 44711668\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/userRepository/ldap/connectionConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"ldap",
												"connectionConfiguration"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"shouldUseSecureConnection\": false,\n    \"hostName\": \"fugiat ut\",\n    \"port\": -28580062,\n    \"bindDn\": \"tempor\",\n    \"bindPassword\": \"Duis tempor cillu\",\n    \"bindPasswordSet\": true,\n    \"referralHopLimit\": 44711668\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/connectionConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"connectionConfiguration"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Acceptable",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"shouldUseSecureConnection\": false,\n    \"hostName\": \"fugiat ut\",\n    \"port\": -28580062,\n    \"bindDn\": \"tempor\",\n    \"bindPassword\": \"Duis tempor cillu\",\n    \"bindPasswordSet\": true,\n    \"referralHopLimit\": 44711668\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/connectionConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"connectionConfiguration"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "query Groups",
							"item": [
								{
									"name": "Get LDAP group configuration",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/userRepository/ldap/queryGroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"ldap",
												"queryGroups"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/queryGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"queryGroups"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"groupsDn\": \"commodo consectetur enim sint\",\n \"groupsFilter\": \"Lorem reprehenderit ea\",\n \"groupsIdAttribute\": \"consectetur quis tempor\",\n \"groupsDisplayNameAttribute\": \"amet incididunt pariatur proident\",\n \"groupsMemberAttribute\": \"esse voluptate anim in sed\"\n}"
										}
									]
								},
								{
									"name": "Update LDAP groups query configuration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"groupsDn\": \"commodo consectetur enim sint\",\n    \"groupsFilter\": \"Lorem reprehenderit ea\",\n    \"groupsIdAttribute\": \"consectetur quis tempor\",\n    \"groupsDisplayNameAttribute\": \"amet incididunt pariatur proident\",\n    \"groupsMemberAttribute\": \"esse voluptate anim in sed\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/userRepository/ldap/queryGroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"ldap",
												"queryGroups"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"groupsDn\": \"commodo consectetur enim sint\",\n    \"groupsFilter\": \"Lorem reprehenderit ea\",\n    \"groupsIdAttribute\": \"consectetur quis tempor\",\n    \"groupsDisplayNameAttribute\": \"amet incididunt pariatur proident\",\n    \"groupsMemberAttribute\": \"esse voluptate anim in sed\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/queryGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"queryGroups"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unacceptable request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"groupsDn\": \"commodo consectetur enim sint\",\n    \"groupsFilter\": \"Lorem reprehenderit ea\",\n    \"groupsIdAttribute\": \"consectetur quis tempor\",\n    \"groupsDisplayNameAttribute\": \"amet incididunt pariatur proident\",\n    \"groupsMemberAttribute\": \"esse voluptate anim in sed\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/queryGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"queryGroups"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "query Users",
							"item": [
								{
									"name": "Get LDAP users query configuration",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/userRepository/ldap/queryUsers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"ldap",
												"queryUsers"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/queryUsers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"queryUsers"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"usersBaseDn\": \"Excepteur ipsum aute ut\",\n \"usersAccountNameAttribute\": \"offici\",\n \"usersFirstNameAttribute\": \"eu pariatur officia id\",\n \"usersLastNameAttribute\": \"id nulla quis eiusmod\",\n \"usersEmailAttribute\": \"tempor ipsum elit deserunt qui\",\n \"usersMembershipAttribute\": \"aliqua cillum eiusmod\",\n \"usersFilter\": \"exercitation aute voluptate in\"\n}"
										}
									]
								},
								{
									"name": "Update LDAP users query configuration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"usersBaseDn\": \"Excepteur ipsum aute ut\",\n    \"usersAccountNameAttribute\": \"offici\",\n    \"usersFirstNameAttribute\": \"eu pariatur officia id\",\n    \"usersLastNameAttribute\": \"id nulla quis eiusmod\",\n    \"usersEmailAttribute\": \"tempor ipsum elit deserunt qui\",\n    \"usersMembershipAttribute\": \"aliqua cillum eiusmod\",\n    \"usersFilter\": \"exercitation aute voluptate in\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/userRepository/ldap/queryUsers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"ldap",
												"queryUsers"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"usersBaseDn\": \"Excepteur ipsum aute ut\",\n    \"usersAccountNameAttribute\": \"offici\",\n    \"usersFirstNameAttribute\": \"eu pariatur officia id\",\n    \"usersLastNameAttribute\": \"id nulla quis eiusmod\",\n    \"usersEmailAttribute\": \"tempor ipsum elit deserunt qui\",\n    \"usersMembershipAttribute\": \"aliqua cillum eiusmod\",\n    \"usersFilter\": \"exercitation aute voluptate in\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/queryUsers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"queryUsers"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unacceptable request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"usersBaseDn\": \"Excepteur ipsum aute ut\",\n    \"usersAccountNameAttribute\": \"offici\",\n    \"usersFirstNameAttribute\": \"eu pariatur officia id\",\n    \"usersLastNameAttribute\": \"id nulla quis eiusmod\",\n    \"usersEmailAttribute\": \"tempor ipsum elit deserunt qui\",\n    \"usersMembershipAttribute\": \"aliqua cillum eiusmod\",\n    \"usersFilter\": \"exercitation aute voluptate in\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/queryUsers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"queryUsers"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "proxy",
			"item": [
				{
					"name": "test",
					"item": [
						{
							"name": "Test Internet connection using given proxy configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"port\": 11851,\n    \"scheme\": \"https\",\n    \"server\": \".XGj:e0Vg\",\n    \"user\": \"\",\n    \"password\": \"ve\",\n    \"nonProxyHosts\": [\n        \"dolore adipisicing laboris in exercitation\",\n        \"eu ut nulla\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"test"
									]
								}
							},
							"response": [
								{
									"name": "Request was processed, check response body for details",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": 13649,\n    \"scheme\": \"https\",\n    \"server\": \"BmAhxE\",\n    \"user\": \"dolore i\",\n    \"password\": \"consectetur mollit sint deserunt\",\n    \"nonProxyHosts\": [\n        \"cul\",\n        \"in dolor do nulla\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/proxy/test",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"test"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"connectionOk\": true,\n \"testExecuted\": false,\n \"testExecutionMessage\": \"esse sed laboris Duis\"\n}"
								}
							]
						},
						{
							"name": "Test Internet connection from specific Data Center using given proxy configuration (Multi Data Center deployment)",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"port\": 13649,\n    \"scheme\": \"https\",\n    \"server\": \"BmAhxE\",\n    \"user\": \"dolore i\",\n    \"password\": \"consectetur mollit sint deserunt\",\n    \"nonProxyHosts\": [\n        \"cul\",\n        \"in dolor do nulla\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/test/:dc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"test",
										":dc"
									],
									"variable": [
										{
											"key": "dc",
											"value": "enim Duis do Lorem",
											"description": "(Required) Data Center"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request was processed, check response body for details",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": 13649,\n    \"scheme\": \"https\",\n    \"server\": \"BmAhxE\",\n    \"user\": \"dolore i\",\n    \"password\": \"consectetur mollit sint deserunt\",\n    \"nonProxyHosts\": [\n        \"cul\",\n        \"in dolor do nulla\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/proxy/test/:dc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"test",
												":dc"
											],
											"variable": [
												{
													"key": "dc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"connectionOk\": true,\n \"testExecuted\": false,\n \"testExecutionMessage\": \"esse sed laboris Duis\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "configuration",
					"item": [
						{
							"name": "Get cluster proxy configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"configuration"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"scheme\": \"sint officia in est\",\n \"server\": \"exercitation ex\",\n \"port\": -18743037,\n \"nonProxyHosts\": [\n  \"non ad Ut\",\n  \"eu aliqua esse L\"\n ],\n \"userOrPasswordDefined\": false\n}"
								},
								{
									"name": "Proxy is not configured",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set/update cluster proxy configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"port\": 13649,\n    \"scheme\": \"https\",\n    \"server\": \"BmAhxE\",\n    \"user\": \"dolore i\",\n    \"password\": \"consectetur mollit sint deserunt\",\n    \"nonProxyHosts\": [\n        \"cul\",\n        \"in dolor do nulla\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"configuration"
									]
								}
							},
							"response": [
								{
									"name": "Successful, new configuration created",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": 13649,\n    \"scheme\": \"https\",\n    \"server\": \"BmAhxE\",\n    \"user\": \"dolore i\",\n    \"password\": \"consectetur mollit sint deserunt\",\n    \"nonProxyHosts\": [\n        \"cul\",\n        \"in dolor do nulla\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successful, configuration updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": 13649,\n    \"scheme\": \"https\",\n    \"server\": \"BmAhxE\",\n    \"user\": \"dolore i\",\n    \"password\": \"consectetur mollit sint deserunt\",\n    \"nonProxyHosts\": [\n        \"cul\",\n        \"in dolor do nulla\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Given proxy configuration is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": 13649,\n    \"scheme\": \"https\",\n    \"server\": \"BmAhxE\",\n    \"user\": \"dolore i\",\n    \"password\": \"consectetur mollit sint deserunt\",\n    \"nonProxyHosts\": [\n        \"cul\",\n        \"in dolor do nulla\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove cluster proxy configuration",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"configuration"
									]
								}
							},
							"response": [
								{
									"name": "Successful, previous configuration returned",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"scheme\": \"tempor culpa cillum\",\n \"server\": \"ullamco pariatur laboris veniam\",\n \"port\": 38365883,\n \"nonProxyHosts\": [\n  \"ex in eu cillum Duis\",\n  \"irure ea\"\n ],\n \"userOrPasswordDefined\": false\n}"
								},
								{
									"name": "Proxy was not configured",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "configurations",
					"item": [
						{
							"name": "{dc}",
							"item": [
								{
									"name": "Get Data Center proxy configuration (Multi Data Center deployment)",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/proxy/configurations/:dc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configurations",
												":dc"
											],
											"variable": [
												{
													"key": "dc",
													"value": "enim Duis do Lorem",
													"description": "(Required) Data Center"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"scheme\": \"tempor culpa cillum\",\n \"server\": \"ullamco pariatur laboris veniam\",\n \"port\": 38365883,\n \"nonProxyHosts\": [\n  \"ex in eu cillum Duis\",\n  \"irure ea\"\n ],\n \"userOrPasswordDefined\": false\n}"
										},
										{
											"name": "Proxy is not configured for given Data Center",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set/update Data Center proxy configuration (Multi Data Center deployment)",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": 13649,\n    \"scheme\": \"https\",\n    \"server\": \"BmAhxE\",\n    \"user\": \"dolore i\",\n    \"password\": \"consectetur mollit sint deserunt\",\n    \"nonProxyHosts\": [\n        \"cul\",\n        \"in dolor do nulla\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/proxy/configurations/:dc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configurations",
												":dc"
											],
											"variable": [
												{
													"key": "dc",
													"value": "enim Duis do Lorem",
													"description": "(Required) Data Center"
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful, new configuration created",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"port\": 13649,\n    \"scheme\": \"https\",\n    \"server\": \"BmAhxE\",\n    \"user\": \"dolore i\",\n    \"password\": \"consectetur mollit sint deserunt\",\n    \"nonProxyHosts\": [\n        \"cul\",\n        \"in dolor do nulla\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successful, configuration updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"port\": 13649,\n    \"scheme\": \"https\",\n    \"server\": \"BmAhxE\",\n    \"user\": \"dolore i\",\n    \"password\": \"consectetur mollit sint deserunt\",\n    \"nonProxyHosts\": [\n        \"cul\",\n        \"in dolor do nulla\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Given proxy configuration is invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"port\": 13649,\n    \"scheme\": \"https\",\n    \"server\": \"BmAhxE\",\n    \"user\": \"dolore i\",\n    \"password\": \"consectetur mollit sint deserunt\",\n    \"nonProxyHosts\": [\n        \"cul\",\n        \"in dolor do nulla\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Remove Data Center proxy configuration (Multi Data Center deployment)",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/proxy/configurations/:dc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configurations",
												":dc"
											],
											"variable": [
												{
													"key": "dc",
													"value": "enim Duis do Lorem",
													"description": "(Required) Data Center"
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful, previous configuration returned",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"scheme\": \"tempor culpa cillum\",\n \"server\": \"ullamco pariatur laboris veniam\",\n \"port\": 38365883,\n \"nonProxyHosts\": [\n  \"ex in eu cillum Duis\",\n  \"irure ea\"\n ],\n \"userOrPasswordDefined\": false\n}"
										},
										{
											"name": "Proxy was not configured for given Data Center",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get proxy configurations for all Data Centers (Multi Data Center deployment)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/proxy/configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"configurations"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/proxy/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configurations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"configurations\": {}\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "password Policy",
			"item": [
				{
					"name": "Get default's realm password policy configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/passwordPolicy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"passwordPolicy"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordPolicy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"minNumberOfDigits\": 55,\n \"minNumberOfLowercaseChars\": 67,\n \"minNumberOfNonAlphanumericChars\": 55,\n \"minNumberOfUppercaseChars\": 12,\n \"minPasswordLength\": 112,\n \"realmId\": \"sint enim laboris\"\n}"
						},
						{
							"name": "Realm not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordPolicy"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update password policy configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"minNumberOfDigits\": 55,\n    \"minNumberOfLowercaseChars\": 67,\n    \"minNumberOfNonAlphanumericChars\": 55,\n    \"minNumberOfUppercaseChars\": 12,\n    \"minPasswordLength\": 112,\n    \"realmId\": \"sint enim laboris\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/passwordPolicy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"passwordPolicy"
							]
						}
					},
					"response": [
						{
							"name": "Successfully updated. Response doesn't have a body.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"minNumberOfDigits\": 55,\n    \"minNumberOfLowercaseChars\": 67,\n    \"minNumberOfNonAlphanumericChars\": 55,\n    \"minNumberOfUppercaseChars\": 12,\n    \"minPasswordLength\": 112,\n    \"realmId\": \"sint enim laboris\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/passwordPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordPolicy"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"minNumberOfDigits\": 55,\n    \"minNumberOfLowercaseChars\": 67,\n    \"minNumberOfNonAlphanumericChars\": 55,\n    \"minNumberOfUppercaseChars\": 12,\n    \"minPasswordLength\": 112,\n    \"realmId\": \"sint enim laboris\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/passwordPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordPolicy"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"dolor\",\n    \"message\": \"amet ullamco in laborum consequat\",\n    \"path\": \"do ipsum sit incididunt\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"mollit sit Ut culpa\",\n    \"message\": \"velit\",\n    \"path\": \"eiusmod minim Ut ea\"\n   }\n  ],\n  \"message\": \"sit in velit\",\n  \"code\": 84049953\n }\n}"
						},
						{
							"name": "Realm not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"minNumberOfDigits\": 55,\n    \"minNumberOfLowercaseChars\": 67,\n    \"minNumberOfNonAlphanumericChars\": 55,\n    \"minNumberOfUppercaseChars\": 12,\n    \"minPasswordLength\": 112,\n    \"realmId\": \"sint enim laboris\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/passwordPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordPolicy"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "Api-Token {{DT_TOKEN}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://{{DT_HOST}}/api/v1.0/onpremise"
		}
	]
}