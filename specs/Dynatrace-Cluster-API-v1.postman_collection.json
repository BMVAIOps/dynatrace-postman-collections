{
	"info": {
		"_postman_id": "b6bc2025-3855-49a7-8341-560778135d79",
		"name": "Dynatrace Cluster API v1",
		"description": "Dynatrace Managed exposes cluster management functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters. \n\nTo authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:\n\n* 400 - Bad Request: Some request parameters are not correct. See response body for details.\n* 401 - Unauthorized: A valid authorization header is required but is missing.\n* 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid.\n* 404 - Not Found: Endpoint does not exist or some entities could not be found, e.g. User account.\n* 500 - Internal Server Error: See response body for details.\n* 556 - Upgrade in progress: Operation couldn't be performed during the upgrade.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "backup",
			"item": [
				{
					"name": "config",
					"item": [
						{
							"name": "Return backup configuration overview",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backup/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backup",
										"config"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backup/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"datacenter\": \"dc1\",\n  \"enabled\": true,\n  \"storagePath\": \"/efs/backup\",\n  \"includeRumData\": true,\n  \"includeLm20Data\": true,\n  \"includeTsMetricData\": true,\n  \"bandwidthLimitMbits\": 240,\n  \"maxEsSnapshotsToClean\": 30,\n  \"cassandraScheduledTime\": 22,\n  \"pauseBackups\": false\n}"
								}
							]
						},
						{
							"name": "Change backup configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"datacenter\": \"dc1\",\n  \"enabled\": true,\n  \"storagePath\": \"/efs/backup\",\n  \"includeRumData\": true,\n  \"includeLm20Data\": true,\n  \"includeTsMetricData\": true,\n  \"bandwidthLimitMbits\": 240,\n  \"maxEsSnapshotsToClean\": 30,\n  \"cassandraScheduledTime\": 22,\n  \"pauseBackups\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/backup/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backup",
										"config"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"datacenter\": \"dc1\",\n  \"enabled\": true,\n  \"storagePath\": \"/efs/backup\",\n  \"includeRumData\": true,\n  \"includeLm20Data\": true,\n  \"includeTsMetricData\": true,\n  \"bandwidthLimitMbits\": 240,\n  \"maxEsSnapshotsToClean\": 30,\n  \"cassandraScheduledTime\": 22,\n  \"pauseBackups\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/backup/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Configuration change failed.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"datacenter\": \"dc1\",\n  \"enabled\": true,\n  \"storagePath\": \"/efs/backup\",\n  \"includeRumData\": true,\n  \"includeLm20Data\": true,\n  \"includeTsMetricData\": true,\n  \"bandwidthLimitMbits\": 240,\n  \"maxEsSnapshotsToClean\": 30,\n  \"cassandraScheduledTime\": 22,\n  \"pauseBackups\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/backup/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config"
											]
										}
									},
									"code": 512,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Check status of change backup configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/backup/config/status?requestId=sint et",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backup",
										"config",
										"status"
									],
									"query": [
										{
											"key": "requestId",
											"value": "sint et"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backup/config/status?requestId=sint et",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config",
												"status"
											],
											"query": [
												{
													"key": "requestId",
													"value": "sint et"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request accepted. There will be an id in the response body to check status through the config/status endpoint.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backup/config/status?requestId=sint et",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config",
												"status"
											],
											"query": [
												{
													"key": "requestId",
													"value": "sint et"
												}
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "There is no response for your request id, it might have been already removed from cache if request was made several hours ago. Please make sure that request id is correct and not empty.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backup/config/status?requestId=sint et",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config",
												"status"
											],
											"query": [
												{
													"key": "requestId",
													"value": "sint et"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Configuration change failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/backup/config/status?requestId=sint et",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"backup",
												"config",
												"status"
											],
											"query": [
												{
													"key": "requestId",
													"value": "sint et"
												}
											]
										}
									},
									"code": 512,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Check if given directory is valid for backup in the cluster",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/backup/clusterCheckDir?dir=sint et&datacenter=sint et",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"backup",
								"clusterCheckDir"
							],
							"query": [
								{
									"key": "dir",
									"value": "sint et",
									"description": "Backup store directory path parameter. Missing or empty values will return a 'Bad Request'"
								},
								{
									"key": "datacenter",
									"value": "sint et",
									"description": "Datacenter where backup should be executed. Should be omitted for Single Datacenter Cluster"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backup/clusterCheckDir?dir=sint et&datacenter=sint et",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backup",
										"clusterCheckDir"
									],
									"query": [
										{
											"key": "dir",
											"value": "sint et"
										},
										{
											"key": "datacenter",
											"value": "sint et"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"storagePath\": \"nisi et laboris\",\n  \"storageError\": \"esse irure nostrud\",\n  \"inProgress\": false\n}"
						},
						{
							"name": "No directory information received for validation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backup/clusterCheckDir?dir=sint et&datacenter=sint et",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backup",
										"clusterCheckDir"
									],
									"query": [
										{
											"key": "dir",
											"value": "sint et"
										},
										{
											"key": "datacenter",
											"value": "sint et"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "bootstrap Management",
			"item": [
				{
					"name": "files",
					"item": [
						{
							"name": "ag",
							"item": [
								{
									"name": "Get ActiveGate config properties",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/ag/configProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"ag",
												"configProperties"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bootstrapManagement/files/ag/configProperties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bootstrapManagement",
														"files",
														"ag",
														"configProperties"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"content\": [\n    \"sed irure\",\n    \"eu est adipisicing amet\"\n  ]\n}"
										},
										{
											"name": "No 'config.properties' file available",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bootstrapManagement/files/ag/configProperties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bootstrapManagement",
														"files",
														"ag",
														"configProperties"
													]
												}
											},
											"status": "Not Extended (RFC 2774)",
											"code": 510,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get ActiveGate secure config properties",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/ag/secureConfigProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"ag",
												"secureConfigProperties"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bootstrapManagement/files/ag/secureConfigProperties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bootstrapManagement",
														"files",
														"ag",
														"secureConfigProperties"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"content\": [\n    \"sed irure\",\n    \"eu est adipisicing amet\"\n  ]\n}"
										},
										{
											"name": "No 'secure.config.properties' file available",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bootstrapManagement/files/ag/secureConfigProperties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bootstrapManagement",
														"files",
														"ag",
														"secureConfigProperties"
													]
												}
											},
											"status": "Not Extended (RFC 2774)",
											"code": 510,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get config properties",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/files/configProperties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"files",
										"configProperties"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/configProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"configProperties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"content\": [\n    \"sed irure\",\n    \"eu est adipisicing amet\"\n  ]\n}"
								},
								{
									"name": "No 'config.properties' file available",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/configProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"configProperties"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get installer metadata",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/files/installerMetadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"files",
										"installerMetadata"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/installerMetadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"installerMetadata"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"clusterBackupPath\": \"adipisicing officia incididunt irure\",\n  \"elasticsearchBackupPath\": \"elit officia adipisicing veniam ut\",\n  \"datacenterWithBackupEnabled\": \"sed nisi pariatur elit laborum\"\n}"
								}
							]
						},
						{
							"name": "Get key store",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/files/keyStore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"files",
										"keyStore"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/keyStore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"keyStore"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"content\": [\n    \"sed irure\",\n    \"eu est adipisicing amet\"\n  ]\n}"
								},
								{
									"name": "No 'key store' file available",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/keyStore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"keyStore"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get runtime properties",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/files/runtimeProperties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"files",
										"runtimeProperties"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/runtimeProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"runtimeProperties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"content\": [\n    \"sed irure\",\n    \"eu est adipisicing amet\"\n  ]\n}"
								},
								{
									"name": "No 'runtime.properties' file available",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/runtimeProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"runtimeProperties"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get secure config properties",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/files/secureConfigProperties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"files",
										"secureConfigProperties"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/secureConfigProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"secureConfigProperties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"content\": [\n    \"sed irure\",\n    \"eu est adipisicing amet\"\n  ]\n}"
								},
								{
									"name": "No 'secure.config.properties' file available",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bootstrapManagement/files/secureConfigProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bootstrapManagement",
												"files",
												"secureConfigProperties"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get new node id",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bootstrapManagement/newNodeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bootstrapManagement",
								"newNodeId"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/newNodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"newNodeId"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"content\": [\n    \"culpa\",\n    \"ullamco\"\n  ]\n}"
						},
						{
							"name": "Failed to generate new node Id",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bootstrapManagement/newNodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bootstrapManagement",
										"newNodeId"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "endpoint",
			"item": [
				{
					"name": "beacon Forwarder Address",
					"item": [
						{
							"name": "Get beacon forwarder address",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/endpoint/beaconForwarderAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"endpoint",
										"beaconForwarderAddress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/endpoint/beaconForwarderAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"beaconForwarderAddress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}"
								}
							]
						},
						{
							"name": "Update beacon forwarder address",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/endpoint/beaconForwarderAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"endpoint",
										"beaconForwarderAddress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/beaconForwarderAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"beaconForwarderAddress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}"
								},
								{
									"name": "Operation failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/beaconForwarderAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"beaconForwarderAddress"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "public Ip",
					"item": [
						{
							"name": "agents/{node Id}",
							"item": [
								{
									"name": "Get node IP for OneAgents",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"publicIp",
												"agents",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId",
													"value": "14517325",
													"description": "(Required) Node ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}"
										},
										{
											"name": "Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"code": 544,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid address",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"code": 550,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Collector not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"code": 552,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Store node IP for OneAgents",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"sint et\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"publicIp",
												"agents",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId",
													"value": "14517325",
													"description": "(Required) Node ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"sint et\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Operation failed",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"sint et\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"status": "Not Extended (RFC 2774)",
											"code": 510,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Storing configuration failed",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"sint et\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"code": 540,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid IP address",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"sint et\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"code": 550,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Collector not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"sint et\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/agents/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"agents",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"code": 552,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "domain/{node Id}",
							"item": [
								{
									"name": "Get node IP for domain",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"publicIp",
												"domain",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId",
													"value": "14517325",
													"description": "(Required) Node ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"domain",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}"
										},
										{
											"name": "Node not found by id",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"domain",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Store node IP for domain",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"sint et\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"publicIp",
												"domain",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId",
													"value": "14517325",
													"description": "(Required) Node ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"sint et\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"domain",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}"
										},
										{
											"name": "Operation failed",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"sint et\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"domain",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"status": "Not Extended (RFC 2774)",
											"code": 510,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid IP address",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"sint et\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"domain",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"code": 550,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Storing IP failed",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"sint et\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/endpoint/publicIp/domain/:nodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"endpoint",
														"publicIp",
														"domain",
														":nodeId"
													],
													"variable": [
														{
															"key": "nodeId",
															"value": "14517325",
															"description": "(Required) Node ID"
														}
													]
												}
											},
											"code": 551,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "cdn Address",
					"item": [
						{
							"name": "Get root CDN address",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/endpoint/cdnAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"endpoint",
										"cdnAddress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/endpoint/cdnAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"cdnAddress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}"
								}
							]
						},
						{
							"name": "Update root CDN address",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/endpoint/cdnAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"endpoint",
										"cdnAddress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/cdnAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"cdnAddress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}"
								},
								{
									"name": "Operation failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/cdnAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"cdnAddress"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "web Ui Address",
					"item": [
						{
							"name": "Get WebUi address",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/endpoint/webUiAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"endpoint",
										"webUiAddress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/endpoint/webUiAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"webUiAddress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}"
								}
							]
						},
						{
							"name": "Update WebUi address",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/endpoint/webUiAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"endpoint",
										"webUiAddress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/webUiAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"webUiAddress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}"
								},
								{
									"name": "Operation failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": \"nostrud deserunt ex anim dolor\",\n  \"newAddress\": \"labore voluptate dolor adipisicing\",\n  \"usePublicIpForDomainGeneration\": true,\n  \"usePublicIpForAgents\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/endpoint/webUiAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"endpoint",
												"webUiAddress"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "cluster",
			"item": [
				{
					"name": "configuration",
					"item": [
						{
							"name": "status",
							"item": [
								{
									"name": "Get cluster nodes configuration current status",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/configuration/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												"configuration",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/cluster/configuration/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														"configuration",
														"status"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get cluster nodes configuration request status",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/configuration/status/:requestedAt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												"configuration",
												"status",
												":requestedAt"
											],
											"variable": [
												{
													"key": "requestedAt",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/cluster/configuration/status/:requestedAt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														"configuration",
														"status",
														":requestedAt"
													],
													"variable": [
														{
															"key": "requestedAt",
															"value": "14517325",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Cluster nodes configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										"configuration"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/cluster/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												"configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Configure cluster nodes responsibilities",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clusterNodes\": [\n    {\n      \"id\": -54023703,\n      \"webUI\": false,\n      \"agent\": true,\n      \"datacenter\": \"dolor cupidatat U\",\n      \"kubernetesRole\": \"minim do ad\"\n    },\n    {\n      \"id\": 12717937,\n      \"webUI\": false,\n      \"agent\": true,\n      \"datacenter\": \"quis ut in\",\n      \"kubernetesRole\": \"Ut voluptate\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cluster/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										"configuration"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clusterNodes\": [\n    {\n      \"id\": 26151722,\n      \"webUI\": true,\n      \"agent\": true,\n      \"datacenter\": \"dol\",\n      \"kubernetesRole\": \"sit magna consequat irure dolore\"\n    },\n    {\n      \"id\": -4528117,\n      \"webUI\": false,\n      \"agent\": false,\n      \"datacenter\": \"incididunt do\",\n      \"kubernetesRole\": \"dolor anim nostrud aliquip\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/cluster/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												"configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get information about known servers",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cluster",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cluster",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": -47873930,\n    \"clusterMemberAddress\": \"anim qui est\",\n    \"operationState\": \"pariatur Excepteur cillum adipisicing\",\n    \"buildVersion\": \"amet esse\",\n    \"osInfo\": \"et culpa Duis cillum\",\n    \"jvmInfo\": \"in\",\n    \"dnsEntryPointUris\": [\n      \"http://DuaENziYp.tawSyj5GZ9-XRmFXlwtNpe\",\n      \"http://gAEsZbHCa.kdmfecy6q.XmSeW9mP3Amv.YPqxW2u+Qg.rgziDR6H-dmAR5+N\"\n    ],\n    \"restServiceRootUris\": [\n      \"https://LOYsTd.ryiyNcH8CyU.yJcXMjlOvIF\",\n      \"https://GgWerydRXyeBEc.powpalxq7aIYZ+.BmzUt7A3OJszki\"\n    ],\n    \"communicationUris\": [\n      \"http://ByimmcdnVvGfiFAAyBTVJ.mypZj,YWcmx3JW,P3fH2mlca4QXGNsquoD.rcNOihn\",\n      \"http://YTMfSsrDyZLGnEFGIEaD.tfkrRUGk1.ayI\"\n    ]\n  },\n  {\n    \"id\": -39740980,\n    \"clusterMemberAddress\": \"id et aute consectet\",\n    \"operationState\": \"esse elit ex eiusmod\",\n    \"buildVersion\": \"cupidatat in\",\n    \"osInfo\": \"Ut sit in\",\n    \"jvmInfo\": \"esse ad eu\",\n    \"dnsEntryPointUris\": [\n      \"http://XjyyIuYyXPzlVrR.gjL6PFKy0QJAxaB3wytSWRctK1gdpfZ+7wyAQERPmmD+fZBeuJ.Qhucq\",\n      \"http://xeTQWduZddYLZNfnDBQmwxA.xjwwqRGptDeHN+NTmmzLfvBZL2JF1EJE8ePYzYAWwLczHBz4+Vi4zQQ\"\n    ],\n    \"restServiceRootUris\": [\n      \"https://egFhXrrmoOcHjnntVWk.gxsVBpbrq0dg7gZoqNbr-Mj8v2JakruQlhXmkTUTjP,S0GNXbWkYH2bdGJZC,qqli\",\n      \"http://atEiOEUPQJiwJBoEOdutrM.iwU,Ns9w6bK2FF5AARqXVfGqPvW9DkD16C,TA7IaGpgJRDOI3pIFsNAB2hFka\"\n    ],\n    \"communicationUris\": [\n      \"https://QnzgqdvrOoIlHWvtdABmyXGTYTDhcxO.wkkxO.T3qV8E4,FQAfJli1ITANWs\",\n      \"https://A.djWAN0g1td1sSpMyKiF3Ky8k.ZaM1bS4,9Gr5zBdZ67inP+zjHjFxko8p,czNPlS+kdCT\"\n    ]\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "multi Dc",
			"item": [
				{
					"name": "migration",
					"item": [
						{
							"name": "datacenter Topology",
							"item": [
								{
									"name": "Get cluster topology draft | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"datacenterTopology"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"datacenterTopology"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"datacenterTopology\": {\n    \"reprehenderita56\": {\n      \"datacenterMembersList\": [\n        {\n          \"nodeId\": -17077099,\n          \"nodeIp\": \"mollit\"\n        },\n        {\n          \"nodeId\": -70997611,\n          \"nodeIp\": \"dolore sint\"\n        }\n      ],\n      \"newDatacenter\": false\n    },\n    \"eiusmod_c1\": {\n      \"datacenterMembersList\": [\n        {\n          \"nodeId\": -50144924,\n          \"nodeIp\": \"est in nostrud magna\"\n        },\n        {\n          \"nodeId\": -31332384,\n          \"nodeIp\": \"nisi ea\"\n        }\n      ],\n      \"newDatacenter\": false\n    }\n  },\n  \"oldDatacenterName\": \"velit sint irure aute\",\n  \"newDatacenterName\": \"mollit consequat labore\"\n}"
										}
									]
								},
								{
									"name": "Create cluster topology draft | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"newDatacenterName\": \"exercitation veniam\",\n  \"nodesIp\": [\n    \"mollit reprehenderit\",\n    \"sed et nisi magna\"\n  ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"datacenterTopology"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"newDatacenterName\": \"amet elit sunt occaecat dolor\",\n  \"nodesIp\": [\n    \"minim reprehenderit anim enim pariatur\",\n    \"pariatur et velit \"\n  ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"datacenterTopology"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid datacenter migration draft",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"newDatacenterName\": \"amet elit sunt occaecat dolor\",\n  \"nodesIp\": [\n    \"minim reprehenderit anim enim pariatur\",\n    \"pariatur et velit \"\n  ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"datacenterTopology"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete cluster topology draft | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"datacenterTopology"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/datacenterTopology",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"datacenterTopology"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "cluster State",
							"item": [
								{
									"name": "{sub Step}",
									"item": [
										{
											"name": "Get sub step of migration from single to multi datacenter cluster | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterState/:subStep",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterState",
														":subStep"
													],
													"variable": [
														{
															"key": "subStep",
															"value": "SERVER_RECONFIGURATION",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/clusterState/:subStep",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"clusterState",
																":subStep"
															],
															"variable": [
																{
																	"key": "subStep",
																	"value": "SERVER_RECONFIGURATION",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"FAILED\",\n  \"startedAt\": -94317581,\n  \"finishedAt\": -75599027,\n  \"details\": \"dolore aute nisi\"\n}"
												}
											]
										},
										{
											"name": "Modify sub step of migration from single to multi datacenter cluster | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterState/:subStep?status=IN_PROGRESS&details=sint et",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterState",
														":subStep"
													],
													"query": [
														{
															"key": "status",
															"value": "IN_PROGRESS"
														},
														{
															"key": "details",
															"value": "sint et"
														}
													],
													"variable": [
														{
															"key": "subStep",
															"value": "SERVER_RECONFIGURATION",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/clusterState/:subStep?status=IN_PROGRESS&details=sint et",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"clusterState",
																":subStep"
															],
															"query": [
																{
																	"key": "status",
																	"value": "IN_PROGRESS"
																},
																{
																	"key": "details",
																	"value": "sint et"
																}
															],
															"variable": [
																{
																	"key": "subStep",
																	"value": "SERVER_RECONFIGURATION",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get cluster state of migration from single to multi datacenter cluster and its sub steps | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/clusterState",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"clusterState"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterState",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterState"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"singleToMultiDcMigration\": {\n    \"status\": \"SUCCEEDED\",\n    \"startedAt\": 60712339,\n    \"finishedAt\": -5822854,\n    \"details\": \"dolor proident\"\n  },\n  \"migrationSteps\": {\n    \"quifc\": {\n      \"status\": \"IN_PROGRESS\",\n      \"startedAt\": -63821431,\n      \"finishedAt\": 10567085,\n      \"details\": \"ea quis veniam\"\n    },\n    \"exercitation_f24\": {\n      \"status\": \"FAILED\",\n      \"startedAt\": -59756643,\n      \"finishedAt\": 1028342,\n      \"details\": \"exercitation voluptate\"\n    }\n  }\n}"
										}
									]
								},
								{
									"name": "Modify the overall cluster state of migration from single to multi datacenter cluster | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/clusterState?status=IN_PROGRESS&details=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"clusterState"
											],
											"query": [
												{
													"key": "status",
													"value": "IN_PROGRESS"
												},
												{
													"key": "details",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterState?status=IN_PROGRESS&details=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterState"
													],
													"query": [
														{
															"key": "status",
															"value": "IN_PROGRESS"
														},
														{
															"key": "details",
															"value": ""
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "cassandra",
							"item": [
								{
									"name": "new Dc",
									"item": [
										{
											"name": "Start cassandra migration in new datacenter | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"newDc"
													]
												}
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request is incorrect please validate your path and arguments.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unexpected problem in server.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There was problem in your request. Please check body or logs for more details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc"
															]
														}
													},
													"code": 512,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get cassandra migration status in new datacenter | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"newDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId",
																	"value": "sint et",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Your request is still progressed.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId",
																	"value": "sint et",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Multi-Status (WebDAV) (RFC 4918)",
													"code": 207,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request is incorrect please validate your path and arguments.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId",
																	"value": "sint et",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId",
																	"value": "sint et",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unexpected problem in server.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId",
																	"value": "sint et",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There was problem in your request. Please check body or logs for more details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/newDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"newDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId",
																	"value": "sint et",
																	"description": "(Required) "
																}
															]
														}
													},
													"code": 512,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "current Dc",
									"item": [
										{
											"name": "Start cassandra migration in current datacenter | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"currentDc"
													]
												}
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request is incorrect please validate your path and arguments.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unexpected problem in server.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There was problem in your request. Please check body or logs for more details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc"
															]
														}
													},
													"code": 512,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get cassandra migration status in current datacenter | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId",
																	"value": "sint et",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Your request is still progressed.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId",
																	"value": "sint et",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Multi-Status (WebDAV) (RFC 4918)",
													"code": 207,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request is incorrect please validate your path and arguments.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId",
																	"value": "sint et",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId",
																	"value": "sint et",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unexpected problem in server.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId",
																	"value": "sint et",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There was problem in your request. Please check body or logs for more details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/multiDc/migration/cassandra/currentDc/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"multiDc",
																"migration",
																"cassandra",
																"currentDc",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId",
																	"value": "sint et",
																	"description": "(Required) "
																}
															]
														}
													},
													"code": 512,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Verify cassandra rebuild status | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/cassandra/rebuildStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"cassandra",
												"rebuildStatus"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/rebuildStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"rebuildStatus"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/rebuildStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"rebuildStatus"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/rebuildStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"rebuildStatus"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/cassandra/rebuildStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"cassandra",
														"rebuildStatus"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "elasticsearch",
							"item": [
								{
									"name": "Start elasticsearch migration | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/elasticsearch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"elasticsearch"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get elasticsearch migration status | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"elasticsearch",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "sint et",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your request is still progressed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Verify elasticsearch migration status | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/indexMigrationStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"elasticsearch",
												"indexMigrationStatus"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/indexMigrationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														"indexMigrationStatus"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/indexMigrationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														"indexMigrationStatus"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/indexMigrationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														"indexMigrationStatus"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/elasticsearch/indexMigrationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"elasticsearch",
														"indexMigrationStatus"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "server",
							"item": [
								{
									"name": "Start server migration in current datacenter | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/server",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"server"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get server migration status | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"server",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "sint et",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your request is still progressed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/server/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"server",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "cluster Replication Preparation",
							"item": [
								{
									"name": "Get progress status of cluster preparation for a replication | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"clusterReplicationPreparation"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterReplicationPreparation"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"done\": true,\n  \"success\": false,\n  \"percentDone\": -42089660.25447016,\n  \"errorMessage\": \"id dolor deserunt culpa\"\n}"
										},
										{
											"name": "Your request is still progressed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterReplicationPreparation"
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"done\": true,\n  \"success\": false,\n  \"percentDone\": -42089660.25447016,\n  \"errorMessage\": \"id dolor deserunt culpa\"\n}"
										},
										{
											"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterReplicationPreparation"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterReplicationPreparation"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"done\": true,\n  \"success\": false,\n  \"percentDone\": -42089660.25447016,\n  \"errorMessage\": \"id dolor deserunt culpa\"\n}"
										}
									]
								},
								{
									"name": "Start procedure of cluster preparation for a replication | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"clusterReplicationPreparation"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterReplicationPreparation"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterReplicationPreparation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterReplicationPreparation"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "cluster Nodes/current Dc",
							"item": [
								{
									"name": "Start cluster topology configuration - open firewall ports | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"clusterNodes",
												"currentDc"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get topology configuration status | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"clusterNodes",
												"currentDc",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "sint et",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your request is still progressed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/migration/clusterNodes/currentDc/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"migration",
														"clusterNodes",
														"currentDc",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Finish migration | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/multiDc/migration/finish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"multiDc",
										"migration",
										"finish"
									]
								}
							},
							"response": [
								{
									"name": "Successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/finish",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"finish"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request is incorrect please validate your path and arguments.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/finish",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"finish"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected problem in server.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/finish",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"finish"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "There was problem in your request. Please check body or logs for more details.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/finish",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"finish"
											]
										}
									},
									"code": 512,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get state of in-server config migration (from single to multi datacenter cluster) | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/multiDc/migration/inServerconfigState",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"multiDc",
										"migration",
										"inServerconfigState"
									]
								}
							},
							"response": [
								{
									"name": "Successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/inServerconfigState",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"inServerconfigState"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"componentMigrationStates\": {\n    \"dolorc8\": {\n      \"status\": \"IN_PROGRESS\",\n      \"startedAt\": 62101472,\n      \"finishedAt\": -52460045,\n      \"details\": \"exercitation eiusmod laboris\"\n    },\n    \"culpa_b\": {\n      \"status\": \"NOT_STARTED\",\n      \"startedAt\": 52759348,\n      \"finishedAt\": -5304578,\n      \"details\": \"in\"\n    }\n  }\n}"
								}
							]
						},
						{
							"name": "Get nodekeeper helathcheck | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/multiDc/migration/nodekeeper/healthCheck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"multiDc",
										"migration",
										"nodekeeper",
										"healthCheck"
									]
								}
							},
							"response": [
								{
									"name": "Successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/nodekeeper/healthCheck",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"nodekeeper",
												"healthCheck"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request is incorrect please validate your path and arguments.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/nodekeeper/healthCheck",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"nodekeeper",
												"healthCheck"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected problem in server.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/nodekeeper/healthCheck",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"nodekeeper",
												"healthCheck"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "There was problem in your request. Please check body or logs for more details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/nodekeeper/healthCheck",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"nodekeeper",
												"healthCheck"
											]
										}
									},
									"code": 512,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Clean up lost datacenter settings | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/multiDc/migration/lostDatacenterCleanUp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"multiDc",
										"migration",
										"lostDatacenterCleanUp"
									]
								}
							},
							"response": [
								{
									"name": "Successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/lostDatacenterCleanUp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"lostDatacenterCleanUp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request is incorrect please validate your path and arguments.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/lostDatacenterCleanUp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"lostDatacenterCleanUp"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected problem in server.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/lostDatacenterCleanUp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"lostDatacenterCleanUp"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "There was problem in your request. Please check body or logs for more details.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/multiDc/migration/lostDatacenterCleanUp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"migration",
												"lostDatacenterCleanUp"
											]
										}
									},
									"code": 512,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "restore",
					"item": [
						{
							"name": "elasticsearch/recover",
							"item": [
								{
									"name": "Get status of disaster recovery. | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"restore",
												"elasticsearch",
												"recover"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your request is still progressed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Path not implemented.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "Not Implemented",
											"code": 501,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Recover elasticsearch from a snapshot on one datacenter. | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"restore",
												"elasticsearch",
												"recover"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Path not implemented.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/elasticsearch/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"elasticsearch",
														"recover"
													]
												}
											},
											"status": "Not Implemented",
											"code": 501,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "server/recovery",
							"item": [
								{
									"name": "Migrate servers and start components after disaster recovery | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/restore/server/recovery",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"restore",
												"server",
												"recovery"
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery"
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get status after server migration and start components in disaster recovery | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"multiDc",
												"restore",
												"server",
												"recovery",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "sint et",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your request is still progressed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is incorrect please validate your path and arguments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected problem in server.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There was problem in your request. Please check body or logs for more details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/multiDc/restore/server/recovery/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"multiDc",
														"restore",
														"server",
														"recovery",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"code": 512,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "elastic",
			"item": [
				{
					"name": "ccr/auto Follow Pattern",
					"item": [
						{
							"name": "Creates auto follow pattern for MultiDC environment",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/elastic/ccr/autoFollowPattern",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"elastic",
										"ccr",
										"autoFollowPattern"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/elastic/ccr/autoFollowPattern",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"elastic",
												"ccr",
												"autoFollowPattern"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": false,\n  \"reason\": \"et irure sunt incididunt magna\"\n}"
								}
							]
						},
						{
							"name": "Deletes auto follow pattern for MultiDC environment",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/elastic/ccr/autoFollowPattern",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"elastic",
										"ccr",
										"autoFollowPattern"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/elastic/ccr/autoFollowPattern",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"elastic",
												"ccr",
												"autoFollowPattern"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": false,\n  \"reason\": \"et irure sunt incididunt magna\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Checks if it is safe to upgrade elasticsearch ",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/elastic/upgradeStatus?expectedElasticsearchNodes=-1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"elastic",
								"upgradeStatus"
							],
							"query": [
								{
									"key": "expectedElasticsearchNodes",
									"value": "-1"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/elastic/upgradeStatus?expectedElasticsearchNodes=-1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"elastic",
										"upgradeStatus"
									],
									"query": [
										{
											"key": "expectedElasticsearchNodes",
											"value": "-1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"upgradePossible\": false,\n  \"reason\": \"dolor culpa\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "firewall Management",
			"item": [
				{
					"name": "remove Cluster Node",
					"item": [
						{
							"name": "get Async Node Removal Status",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/removeClusterNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"removeClusterNode"
									]
								}
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/firewallManagement/removeClusterNode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"firewallManagement",
												"removeClusterNode"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"\""
								}
							]
						},
						{
							"name": "Remove cluster node",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"occaecat deserunt fugiat ad aliqua\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/removeClusterNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"removeClusterNode"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ipAddress\": \"occaecat deserunt fugiat ad aliqua\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/firewallManagement/removeClusterNode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"firewallManagement",
												"removeClusterNode"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Removal of node failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ipAddress\": \"occaecat deserunt fugiat ad aliqua\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/firewallManagement/removeClusterNode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"firewallManagement",
												"removeClusterNode"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "remove Cluster Nodes Delete Method",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/removeClusterNode/:ip?scope=sint et&asyncCrossNodeCommunication=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"removeClusterNode",
										":ip"
									],
									"query": [
										{
											"key": "scope",
											"value": "sint et"
										},
										{
											"key": "asyncCrossNodeCommunication",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "ip",
											"value": "sint et",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/firewallManagement/removeClusterNode/:ip?scope=sint et&asyncCrossNodeCommunication=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"firewallManagement",
												"removeClusterNode",
												":ip"
											],
											"query": [
												{
													"key": "scope",
													"value": "sint et"
												},
												{
													"key": "asyncCrossNodeCommunication",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "ip",
													"value": "sint et",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"\""
								}
							]
						}
					]
				},
				{
					"name": "Add cluster node",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 47199529,\n  \"webUI\": false,\n  \"agent\": true,\n  \"datacenter\": \"minim laborum amet\",\n  \"kubernetesRole\": \"et cillum\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/firewallManagement/addClusterNode",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewallManagement",
								"addClusterNode"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 47199529,\n  \"webUI\": false,\n  \"agent\": true,\n  \"datacenter\": \"minim laborum amet\",\n  \"kubernetesRole\": \"et cillum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/addClusterNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"addClusterNode"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Addition of node failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 47199529,\n  \"webUI\": false,\n  \"agent\": true,\n  \"datacenter\": \"minim laborum amet\",\n  \"kubernetesRole\": \"et cillum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/addClusterNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"addClusterNode"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get cluster nodes",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/firewallManagement/clusterNodes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewallManagement",
								"clusterNodes"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/clusterNodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"clusterNodes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"clusterNodes\": [\n    {\n      \"id\": 26151722,\n      \"webUI\": true,\n      \"agent\": true,\n      \"datacenter\": \"dol\",\n      \"kubernetesRole\": \"sit magna consequat irure dolore\"\n    },\n    {\n      \"id\": -4528117,\n      \"webUI\": false,\n      \"agent\": false,\n      \"datacenter\": \"incididunt do\",\n      \"kubernetesRole\": \"dolor anim nostrud aliquip\"\n    }\n  ]\n}"
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewallManagement/clusterNodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewallManagement",
										"clusterNodes"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "node Management",
			"item": [
				{
					"name": "cassandra Quorum Override",
					"item": [
						{
							"name": "Get the cassandra read quorum override.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/cassandraQuorumOverride",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"cassandraQuorumOverride"
									]
								},
								"description": "Does not return actual used read quorum if no override is set, in this case UNSET is returned."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodeManagement/cassandraQuorumOverride",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodeManagement",
												"cassandraQuorumOverride"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Override cassandra read quorum at runtime only for this particular server instance",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/cassandraQuorumOverride/:quorum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"cassandraQuorumOverride",
										":quorum"
									],
									"variable": [
										{
											"key": "quorum",
											"value": "CL_EACH_QUORUM",
											"description": "(Required) "
										}
									]
								},
								"description": "This API allows you to override cassandra read quorum of this particular server instance. Other server instances are not affected.\n\nNote that this will not be persisted, after server restart this override will be lost!\n\nTypically you only need it in multi-datacenter fail-over scenarios. \n\n To reset the overrides call the API with the UNSET value."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodeManagement/cassandraQuorumOverride/:quorum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodeManagement",
												"cassandraQuorumOverride",
												":quorum"
											],
											"variable": [
												{
													"key": "quorum",
													"value": "CL_EACH_QUORUM",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "join/check",
					"item": [
						{
							"name": "Initialize verification if a node can be added to the cluster",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/join/check?ip=sint et&timestamp=14517325&datacenter=sint et",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"join",
										"check"
									],
									"query": [
										{
											"key": "ip",
											"value": "sint et"
										},
										{
											"key": "timestamp",
											"value": "14517325"
										},
										{
											"key": "datacenter",
											"value": "sint et"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodeManagement/join/check?ip=sint et&timestamp=14517325&datacenter=sint et",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodeManagement",
												"join",
												"check"
											],
											"query": [
												{
													"key": "ip",
													"value": "sint et"
												},
												{
													"key": "timestamp",
													"value": "14517325"
												},
												{
													"key": "datacenter",
													"value": "sint et"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"requestId\": \"aliqua occaecat\"\n}"
								}
							]
						},
						{
							"name": "Verification if a node can be added to the cluster status",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/join/check/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"join",
										"check",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "sint et",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodeManagement/join/check/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodeManagement",
												"join",
												"check",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "sint et",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"nodeJoiningPreCheckFinished\": false,\n  \"canRunNodeInstallation\": true,\n  \"details\": \"tempor ut culpa\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "joining",
					"item": [
						{
							"name": "initialize Node Joining",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/joining?ip=sint et&timestamp=14517325&datacenter=sint et",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"joining"
									],
									"query": [
										{
											"key": "ip",
											"value": "sint et"
										},
										{
											"key": "timestamp",
											"value": "14517325"
										},
										{
											"key": "datacenter",
											"value": "sint et"
										}
									]
								}
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodeManagement/joining?ip=sint et&timestamp=14517325&datacenter=sint et",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodeManagement",
												"joining"
											],
											"query": [
												{
													"key": "ip",
													"value": "sint et"
												},
												{
													"key": "timestamp",
													"value": "14517325"
												},
												{
													"key": "datacenter",
													"value": "sint et"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"\""
								}
							]
						},
						{
							"name": "get Node Joining",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/joining/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"joining",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "sint et",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodeManagement/joining/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodeManagement",
												"joining",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "sint et",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"\""
								}
							]
						}
					]
				},
				{
					"name": "dead Node Cleaning",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/deadNodeCleaning?ip=sint et&requestedOnNode=14517325&requestedByUser=sint et",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"deadNodeCleaning"
							],
							"query": [
								{
									"key": "ip",
									"value": "sint et"
								},
								{
									"key": "requestedOnNode",
									"value": "14517325"
								},
								{
									"key": "requestedByUser",
									"value": "sint et"
								}
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/deadNodeCleaning?ip=sint et&requestedOnNode=14517325&requestedByUser=sint et",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"deadNodeCleaning"
									],
									"query": [
										{
											"key": "ip",
											"value": "sint et"
										},
										{
											"key": "requestedOnNode",
											"value": "14517325"
										},
										{
											"key": "requestedByUser",
											"value": "sint et"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "finalize Joining",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ip\": \"in cupidatat proident mollit exercitation\",\n  \"result\": \"FAILURE\",\n  \"details\": \"eu elit\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/finalizeJoining?ip=sint et&status=UNKNOWN&forceUnlock=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"finalizeJoining"
							],
							"query": [
								{
									"key": "ip",
									"value": "sint et"
								},
								{
									"key": "status",
									"value": "UNKNOWN"
								},
								{
									"key": "forceUnlock",
									"value": "false"
								}
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ip\": \"in cupidatat proident mollit exercitation\",\n  \"result\": \"FAILURE\",\n  \"details\": \"eu elit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/finalizeJoining?ip=sint et&status=UNKNOWN&forceUnlock=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"finalizeJoining"
									],
									"query": [
										{
											"key": "ip",
											"value": "sint et"
										},
										{
											"key": "status",
											"value": "UNKNOWN"
										},
										{
											"key": "forceUnlock",
											"value": "false"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "Get product version",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/productVersion",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"productVersion"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/productVersion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"productVersion"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"productVersion\": \"consectetur eiusmod Lorem officia\"\n}"
						}
					]
				},
				{
					"name": "Get node removal status",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/nodeRemovalStatus",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"nodeRemovalStatus"
							]
						},
						"description": "Responses with status of current node removal (if it's already running) and statuses of historical removals."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/nodeRemovalStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"nodeRemovalStatus"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get node's server status",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/nodeServerStatus",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"nodeServerStatus"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/nodeServerStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"nodeServerStatus"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"SHUTDOWN_PHASED_OUT\""
						}
					]
				},
				{
					"name": "get Nodekeeper Product Version",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/nodekeeperProductVersion",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"nodekeeperProductVersion"
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/nodekeeperProductVersion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"nodekeeperProductVersion"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "Restart node",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/nodeRestart",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"nodeRestart"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/nodeRestart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"nodeRestart"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Restart failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/nodeRestart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"nodeRestart"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Override which nodes can perform internal responsibilities",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"responsibilityNodeIds\": [\n    55111044,\n    44568288\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/responsibilityOverride",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"responsibilityOverride"
							]
						},
						"description": "This API allows you to define which nodes can perform cluster-wide responsibilities, for example metric aging or problem detection, by specifying nodes IDs. \n\nTypically you only need it in multi-datacenter fail-over scenarios. \n\n To reset the overrides call the API with an empty list of node IDs."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"responsibilityNodeIds\": [\n    19896504,\n    61461491\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/responsibilityOverride",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"responsibilityOverride"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "set Installer Status",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"in ut sit aute\",\n  \"details\": \"in eiusmod veniam\",\n  \"lastFinishedStep\": \"minim\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/installerStatus?ip=sint et",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"installerStatus"
							],
							"query": [
								{
									"key": "ip",
									"value": "sint et"
								}
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"in ut sit aute\",\n  \"details\": \"in eiusmod veniam\",\n  \"lastFinishedStep\": \"minim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/installerStatus?ip=sint et",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"installerStatus"
									],
									"query": [
										{
											"key": "ip",
											"value": "sint et"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "Remove node",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"triggerRemoveNode"
							]
						}
					},
					"response": [
						{
							"name": "Node removal process started successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node not found by id or IP address",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"status": "Multi-Status (WebDAV) (RFC 4918)",
							"code": 207,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node joining operation is in progress",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"status": "HTTP Version Not Supported",
							"code": 505,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node removal operation is in progress",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"status": "Variant Also Negotiates (RFC 2295)",
							"code": 506,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node removal operation timeout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"status": "Insufficient Storage (WebDAV) (RFC 4918)",
							"code": 507,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Offline node removal operation error. Cleaning cluster configuration was not completed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 530,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Lock node removal operation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 531,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Trigger node removal process error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 532,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node removal operation is not allowed. Upgrade is in progress.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 533,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node removal operation is not allowed. Cassandra nodes are not in valid state (UN).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 534,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node removal operation is not allowed. Elasticsearch is sharding data.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 535,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Node is not reachable error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": -4441118,\n  \"ipAddress\": \"esse Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/triggerRemoveNode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"triggerRemoveNode"
									]
								}
							},
							"code": 536,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "try Lock Joining",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/tryLockJoining?ip=sint et",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"tryLockJoining"
							],
							"query": [
								{
									"key": "ip",
									"value": "sint et"
								}
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/tryLockJoining?ip=sint et",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"tryLockJoining"
									],
									"query": [
										{
											"key": "ip",
											"value": "sint et"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "try Lock Removal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/tryLockRemoval?id=14517325&ip=sint et&requestedOnNode=14517325&requestedByUser=sint et",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"tryLockRemoval"
							],
							"query": [
								{
									"key": "id",
									"value": "14517325"
								},
								{
									"key": "ip",
									"value": "sint et"
								},
								{
									"key": "requestedOnNode",
									"value": "14517325"
								},
								{
									"key": "requestedByUser",
									"value": "sint et"
								}
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/tryLockRemoval?id=14517325&ip=sint et&requestedOnNode=14517325&requestedByUser=sint et",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"tryLockRemoval"
									],
									"query": [
										{
											"key": "id",
											"value": "14517325"
										},
										{
											"key": "ip",
											"value": "sint et"
										},
										{
											"key": "requestedOnNode",
											"value": "14517325"
										},
										{
											"key": "requestedByUser",
											"value": "sint et"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "unlock Removal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/nodeManagement/unlockRemoval?id=14517325&ip=sint et&removalStopReason=sint et",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodeManagement",
								"unlockRemoval"
							],
							"query": [
								{
									"key": "id",
									"value": "14517325"
								},
								{
									"key": "ip",
									"value": "sint et"
								},
								{
									"key": "removalStopReason",
									"value": "sint et"
								}
							]
						}
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodeManagement/unlockRemoval?id=14517325&ip=sint et&removalStopReason=sint et",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodeManagement",
										"unlockRemoval"
									],
									"query": [
										{
											"key": "id",
											"value": "14517325"
										},
										{
											"key": "ip",
											"value": "sint et"
										},
										{
											"key": "removalStopReason",
											"value": "sint et"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				}
			]
		},
		{
			"name": "preferences",
			"item": [
				{
					"name": "Get Dynatrace Managed specific properties",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"supportSendBilling\": true,\n  \"supportSendClusterHealth\": false,\n  \"suppressNonBillingRelevantData\": true,\n  \"certificateManagementEnabled\": false,\n  \"certificateManagementPossible\": false,\n  \"supportSendEvents\": true,\n  \"supportAllowRemoteAccess\": false,\n  \"remoteAccessOnDemandOnly\": false,\n  \"communityCreateUser\": true,\n  \"communityExternalSearch\": true,\n  \"backupEnabled\": false,\n  \"ruxitMonitorsRuxit\": false,\n  \"telemetrySharing\": false,\n  \"helpChatEnabled\": true,\n  \"readOnlyRemoteAccessAllowed\": true\n}"
						}
					]
				},
				{
					"name": "Update properties",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"supportSendBilling\": false,\n  \"supportSendClusterHealth\": false,\n  \"suppressNonBillingRelevantData\": true,\n  \"certificateManagementEnabled\": false,\n  \"certificateManagementPossible\": true,\n  \"supportSendEvents\": true,\n  \"supportAllowRemoteAccess\": true,\n  \"remoteAccessOnDemandOnly\": false,\n  \"communityCreateUser\": false,\n  \"communityExternalSearch\": false,\n  \"ruxitMonitorsRuxit\": false,\n  \"telemetrySharing\": false,\n  \"helpChatEnabled\": false,\n  \"readOnlyRemoteAccessAllowed\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"supportSendBilling\": false,\n  \"supportSendClusterHealth\": false,\n  \"suppressNonBillingRelevantData\": true,\n  \"certificateManagementEnabled\": false,\n  \"certificateManagementPossible\": true,\n  \"supportSendEvents\": true,\n  \"supportAllowRemoteAccess\": true,\n  \"remoteAccessOnDemandOnly\": false,\n  \"communityCreateUser\": false,\n  \"communityExternalSearch\": false,\n  \"ruxitMonitorsRuxit\": false,\n  \"telemetrySharing\": false,\n  \"helpChatEnabled\": false,\n  \"readOnlyRemoteAccessAllowed\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"supportSendBilling\": true,\n  \"supportSendClusterHealth\": false,\n  \"suppressNonBillingRelevantData\": true,\n  \"certificateManagementEnabled\": false,\n  \"certificateManagementPossible\": false,\n  \"supportSendEvents\": true,\n  \"supportAllowRemoteAccess\": false,\n  \"remoteAccessOnDemandOnly\": false,\n  \"communityCreateUser\": true,\n  \"communityExternalSearch\": true,\n  \"backupEnabled\": false,\n  \"ruxitMonitorsRuxit\": false,\n  \"telemetrySharing\": false,\n  \"helpChatEnabled\": true,\n  \"readOnlyRemoteAccessAllowed\": true\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"supportSendBilling\": false,\n  \"supportSendClusterHealth\": false,\n  \"suppressNonBillingRelevantData\": true,\n  \"certificateManagementEnabled\": false,\n  \"certificateManagementPossible\": true,\n  \"supportSendEvents\": true,\n  \"supportAllowRemoteAccess\": true,\n  \"remoteAccessOnDemandOnly\": false,\n  \"communityCreateUser\": false,\n  \"communityExternalSearch\": false,\n  \"ruxitMonitorsRuxit\": false,\n  \"telemetrySharing\": false,\n  \"helpChatEnabled\": false,\n  \"readOnlyRemoteAccessAllowed\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "smtp",
			"item": [
				{
					"name": "Get SMTP configuration",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/smtp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"smtp"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"hostName\": \"cupidatat dolor\",\n  \"port\": -66196873,\n  \"userName\": \"laboris deserunt magna\",\n  \"password\": \"voluptate do exercitation veniam\",\n  \"isPasswordConfigured\": true,\n  \"connectionSecurity\": \"TLS\",\n  \"senderEmailAddress\": \"labore minim deserunt consequat\",\n  \"allowFallbackViaMissionControl\": true,\n  \"useSmtpServer\": true\n}"
						}
					]
				},
				{
					"name": "Update SMTP configuration",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hostName\": \"cupidatat dolor\",\n  \"port\": -66196873,\n  \"userName\": \"laboris deserunt magna\",\n  \"password\": \"voluptate do exercitation veniam\",\n  \"isPasswordConfigured\": true,\n  \"connectionSecurity\": \"TLS\",\n  \"senderEmailAddress\": \"labore minim deserunt consequat\",\n  \"allowFallbackViaMissionControl\": true,\n  \"useSmtpServer\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/smtp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"smtp"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hostName\": \"cupidatat dolor\",\n  \"port\": -66196873,\n  \"userName\": \"laboris deserunt magna\",\n  \"password\": \"voluptate do exercitation veniam\",\n  \"isPasswordConfigured\": true,\n  \"connectionSecurity\": \"TLS\",\n  \"senderEmailAddress\": \"labore minim deserunt consequat\",\n  \"allowFallbackViaMissionControl\": true,\n  \"useSmtpServer\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"hostName\": \"cupidatat dolor\",\n  \"port\": -66196873,\n  \"userName\": \"laboris deserunt magna\",\n  \"password\": \"voluptate do exercitation veniam\",\n  \"isPasswordConfigured\": true,\n  \"connectionSecurity\": \"TLS\",\n  \"senderEmailAddress\": \"labore minim deserunt consequat\",\n  \"allowFallbackViaMissionControl\": true,\n  \"useSmtpServer\": true\n}"
						},
						{
							"name": "Invalid SMTP configuration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hostName\": \"cupidatat dolor\",\n  \"port\": -66196873,\n  \"userName\": \"laboris deserunt magna\",\n  \"password\": \"voluptate do exercitation veniam\",\n  \"isPasswordConfigured\": true,\n  \"connectionSecurity\": \"TLS\",\n  \"senderEmailAddress\": \"labore minim deserunt consequat\",\n  \"allowFallbackViaMissionControl\": true,\n  \"useSmtpServer\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "SMTP configuration not accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hostName\": \"cupidatat dolor\",\n  \"port\": -66196873,\n  \"userName\": \"laboris deserunt magna\",\n  \"password\": \"voluptate do exercitation veniam\",\n  \"isPasswordConfigured\": true,\n  \"connectionSecurity\": \"TLS\",\n  \"senderEmailAddress\": \"labore minim deserunt consequat\",\n  \"allowFallbackViaMissionControl\": true,\n  \"useSmtpServer\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Send test email",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/smtp/sendTestMessage/:emailAddress",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"smtp",
								"sendTestMessage",
								":emailAddress"
							],
							"variable": [
								{
									"key": "emailAddress",
									"value": "sint et",
									"description": "(Required) "
								}
							]
						},
						"description": "You can send only one test email per minute"
					},
					"response": [
						{
							"name": "Successfully sent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/sendTestMessage/:emailAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"sendTestMessage",
										":emailAddress"
									],
									"variable": [
										{
											"key": "emailAddress",
											"value": "sint et",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Incorrect email address",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/sendTestMessage/:emailAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"sendTestMessage",
										":emailAddress"
									],
									"variable": [
										{
											"key": "emailAddress",
											"value": "sint et",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too short a time interval between sending attempts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/sendTestMessage/:emailAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"sendTestMessage",
										":emailAddress"
									],
									"variable": [
										{
											"key": "emailAddress",
											"value": "sint et",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Sending email failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/sendTestMessage/:emailAddress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"sendTestMessage",
										":emailAddress"
									],
									"variable": [
										{
											"key": "emailAddress",
											"value": "sint et",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "ssl Certificate",
			"item": [
				{
					"name": "store/{entity Type}/{entity Id}",
					"item": [
						{
							"name": "Get certificate-storage status",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertificate",
										"store",
										":entityType",
										":entityId"
									],
									"variable": [
										{
											"key": "entityType",
											"value": "SERVER",
											"description": "(Required) entity type, possible values = \"COLLECTOR\" "
										},
										{
											"key": "entityId",
											"value": "14517325",
											"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful or in progress",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Incorrect entity type",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Status not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Certificate chain is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 522,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Private key does not match public key certificate",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 523,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Public key certificate is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 525,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Private key is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 526,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Error while storing SSL certificate",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 527,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Certificate has been stored but has not been refreshed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 528,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 529,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								}
							]
						},
						{
							"name": "Store SSL certificate status",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n  \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertificate",
										"store",
										":entityType",
										":entityId"
									],
									"variable": [
										{
											"key": "entityType",
											"value": "SERVER",
											"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
										},
										{
											"key": "entityId",
											"value": "14517325",
											"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful or in progress",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n  \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Incorrect entity type",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n  \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n  \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Certificate chain is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n  \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 522,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Private key does not match public key certificate",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n  \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 523,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Public key certificate is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n  \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 525,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Private key is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n  \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 526,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Error while storing SSL certificate",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n  \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 527,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Certificate has been stored but has not been refreshed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n  \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 528,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n  \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sslCertificate/store/:entityType/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sslCertificate",
												"store",
												":entityType",
												":entityId"
											],
											"variable": [
												{
													"key": "entityType",
													"value": "SERVER",
													"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
												},
												{
													"key": "entityId",
													"value": "14517325",
													"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
												}
											]
										}
									},
									"code": 529,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailedError\": \"ea cupidatat Duis\",\n  \"certificateStoreStatus\": \"BAD_REQUEST\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "SSL certificate details.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sslCertificate/:entityType/:entityId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sslCertificate",
								":entityType",
								":entityId"
							],
							"variable": [
								{
									"key": "entityType",
									"value": "SERVER",
									"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
								},
								{
									"key": "entityId",
									"value": "14517325",
									"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sslCertificate/:entityType/:entityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertificate",
										":entityType",
										":entityId"
									],
									"variable": [
										{
											"key": "entityType",
											"value": "SERVER",
											"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
										},
										{
											"key": "entityId",
											"value": "14517325",
											"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"inProgress\": true,\n  \"expirationDate\": \"1963-08-16T18:38:25.322Z\",\n  \"customKeyStore\": true,\n  \"customKeyStoreWritable\": true,\n  \"restartRequired\": true,\n  \"issuer\": \"magna in\",\n  \"default\": true,\n  \"subject\": \"aliqua quis\"\n}"
						},
						{
							"name": "Internal server error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sslCertificate/:entityType/:entityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertificate",
										":entityType",
										":entityId"
									],
									"variable": [
										{
											"key": "entityType",
											"value": "SERVER",
											"description": "(Required) entity type, possible values = \"SERVER, COLLECTOR\" "
										},
										{
											"key": "entityId",
											"value": "14517325",
											"description": "(Required) Node ID, which can be extracted from the URL in 'Node details' view."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "sso/saml/sp/cert",
			"item": [
				{
					"name": "Get SAML SP X.509 certificate details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sso/saml/sp/cert",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sso",
								"saml",
								"sp",
								"cert"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sso/saml/sp/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sso",
										"saml",
										"sp",
										"cert"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"issuer\": \"voluptate culpa consectetur incididunt\",\n  \"subject\": \"reprehenderit commodo laborum Duis\",\n  \"expirationTimestamp\": -95282004,\n  \"expirationDate\": \"Duis exercitation\"\n}"
						},
						{
							"name": "Internal server error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sso/saml/sp/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sso",
										"saml",
										"sp",
										"cert"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update SAML SP X.509 certificate",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/sso/saml/sp/cert",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sso",
								"saml",
								"sp",
								"cert"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sso/saml/sp/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sso",
										"saml",
										"sp",
										"cert"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sso/saml/sp/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sso",
										"saml",
										"sp",
										"cert"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"cupidatat sed Duis et\",\n        \"message\": \"fugiat ullamco veniam irure mollit\",\n        \"path\": \"eiusmod adipisicing Lorem aliqua oc\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"enim dolore\",\n        \"message\": \"proident pariatur anim minim\",\n        \"path\": \"dolor in esse aliqua\"\n      }\n    ],\n    \"message\": \"tempor ut reprehenderit\",\n    \"code\": -1496972\n  }\n}"
						},
						{
							"name": "Operation failed. Check server logs for more details.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sso/saml/sp/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sso",
										"saml",
										"sp",
										"cert"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "support Archive",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get support upgrade file",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/zip"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/supportArchive/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "14517325",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Ok - download file",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/zip"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Support archive generation has not completed yet",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not find support archive request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Support archive was already deleted from disk",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Gone",
									"code": 410,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Cancel support upgrade generation",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/supportArchive/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "14517325",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete existing support archive",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/supportArchive/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "14517325",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Ok - deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not find support archive request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Support archive generation in progress - please cancel it using /cancel",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get support upgrade generation report",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/supportArchive/:id/report",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive",
										":id",
										"report"
									],
									"variable": [
										{
											"key": "id",
											"value": "14517325",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Support archive generation report",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id/report",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id",
												"report"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"downloadState\": \"PROCESSING\",\n  \"report\": {\n    \"parts\": [\n      {\n        \"uncompressedTotalBytes\": 93645978,\n        \"compressedTotalBytes\": 94723528,\n        \"numberOfFiles\": 9760677,\n        \"source\": \"adipisicing veniam incididunt\",\n        \"errors\": [\n          \"nostrud\",\n          \"ut esse cillum\"\n        ]\n      },\n      {\n        \"uncompressedTotalBytes\": -9162106,\n        \"compressedTotalBytes\": -42070814,\n        \"numberOfFiles\": -78957677,\n        \"source\": \"est anim\",\n        \"errors\": [\n          \"incididunt cupidat\",\n          \"nisi Lorem\"\n        ]\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Support archive generation has not completed yet",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id/report",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id",
												"report"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not find support archive request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id/report",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id",
												"report"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get support upgrade generation status",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/supportArchive/:id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive",
										":id",
										"status"
									],
									"variable": [
										{
											"key": "id",
											"value": "14517325",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Support archive generation state",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id",
												"status"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"downloadState\": \"STARTING\",\n  \"report\": {\n    \"parts\": [\n      {\n        \"uncompressedTotalBytes\": 2713799,\n        \"compressedTotalBytes\": 15123163,\n        \"numberOfFiles\": 81139046,\n        \"source\": \"laboris dolor voluptate nostrud pariatur\",\n        \"errors\": [\n          \"Excepteur laborum U\",\n          \"consequat\"\n        ]\n      },\n      {\n        \"uncompressedTotalBytes\": 95609902,\n        \"compressedTotalBytes\": 81583740,\n        \"numberOfFiles\": 58753134,\n        \"source\": \"Duis aliquip\",\n        \"errors\": [\n          \"laborum\",\n          \"adipisicing veniam Duis pariatur\"\n        ]\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Could not find support archive request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/supportArchive/:id/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"supportArchive",
												":id",
												"status"
											],
											"variable": [
												{
													"key": "id",
													"value": "14517325",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Trigger support upgrade generation",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numberOfDays\": 90204820,\n  \"includeServerData\": false,\n  \"includeActiveGateData\": true,\n  \"includeLogs\": true,\n  \"includeDebugLogs\": true,\n  \"includeAgentRegistryLogs\": false,\n  \"includeLauncherLogs\": false,\n  \"includeMonitoringConfigAuditLogs\": false,\n  \"includeOtherAuditLogs\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/supportArchive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supportArchive"
							]
						}
					},
					"response": [
						{
							"name": "Ok - returns support archive id",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numberOfDays\": 90204820,\n  \"includeServerData\": false,\n  \"includeActiveGateData\": true,\n  \"includeLogs\": true,\n  \"includeDebugLogs\": true,\n  \"includeAgentRegistryLogs\": false,\n  \"includeLauncherLogs\": false,\n  \"includeMonitoringConfigAuditLogs\": false,\n  \"includeOtherAuditLogs\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/supportArchive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "14517325"
						},
						{
							"name": "Could not trigger support archive generation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numberOfDays\": 90204820,\n  \"includeServerData\": false,\n  \"includeActiveGateData\": true,\n  \"includeLogs\": true,\n  \"includeDebugLogs\": true,\n  \"includeAgentRegistryLogs\": false,\n  \"includeLauncherLogs\": false,\n  \"includeMonitoringConfigAuditLogs\": false,\n  \"includeOtherAuditLogs\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/supportArchive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"supportArchive"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "upgrade Management",
			"item": [
				{
					"name": "installation Files",
					"item": [
						{
							"name": "{type}/{version}",
							"item": [
								{
									"name": "Modify update package state. Particular package might be excluded from download or re-downloaded.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"excludedFromDownload\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"upgradeManagement",
												"installationFiles",
												":type",
												":version"
											],
											"variable": [
												{
													"key": "type",
													"value": "NGINX",
													"description": "(Required) Installation package type, possible values = \"SERVER, AGENT, JS_AGENT, SG, NGINX\" "
												},
												{
													"key": "version",
													"value": "sint et",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully scheduled. Package should be excluded/re-downloaded soon.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"excludedFromDownload\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type",
															"value": "NGINX",
															"description": "(Required) Installation package type, possible values = \"SERVER, AGENT, JS_AGENT, SG, NGINX\" "
														},
														{
															"key": "version",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Specified installation package was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"excludedFromDownload\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type",
															"value": "NGINX",
															"description": "(Required) Installation package type, possible values = \"SERVER, AGENT, JS_AGENT, SG, NGINX\" "
														},
														{
															"key": "version",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Operation is not allowed. See response message for more details.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"excludedFromDownload\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type",
															"value": "NGINX",
															"description": "(Required) Installation package type, possible values = \"SERVER, AGENT, JS_AGENT, SG, NGINX\" "
														},
														{
															"key": "version",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Operation failed. Check server logs for more details.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"excludedFromDownload\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type",
															"value": "NGINX",
															"description": "(Required) Installation package type, possible values = \"SERVER, AGENT, JS_AGENT, SG, NGINX\" "
														},
														{
															"key": "version",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Extended (RFC 2774)",
											"code": 510,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Trigger removal of installation package",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"upgradeManagement",
												"installationFiles",
												":type",
												":version"
											],
											"variable": [
												{
													"key": "type",
													"value": "NGINX",
													"description": "(Required) Installation package type, possible values = \"SERVER, AGENT, JS_AGENT, SG, NGINX\" "
												},
												{
													"key": "version",
													"value": "sint et",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully scheduled. Package should be removed from all nodes within a couple of minutes.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type",
															"value": "NGINX",
															"description": "(Required) Installation package type, possible values = \"SERVER, AGENT, JS_AGENT, SG, NGINX\" "
														},
														{
															"key": "version",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Specified installation package was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type",
															"value": "NGINX",
															"description": "(Required) Installation package type, possible values = \"SERVER, AGENT, JS_AGENT, SG, NGINX\" "
														},
														{
															"key": "version",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Removing installation files is not allowed. Update list is synchronized with Mission Control.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type",
															"value": "NGINX",
															"description": "(Required) Installation package type, possible values = \"SERVER, AGENT, JS_AGENT, SG, NGINX\" "
														},
														{
															"key": "version",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Operation failed. Check server logs for more details.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/upgradeManagement/installationFiles/:type/:version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"upgradeManagement",
														"installationFiles",
														":type",
														":version"
													],
													"variable": [
														{
															"key": "type",
															"value": "NGINX",
															"description": "(Required) Installation package type, possible values = \"SERVER, AGENT, JS_AGENT, SG, NGINX\" "
														},
														{
															"key": "version",
															"value": "sint et",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Extended (RFC 2774)",
											"code": 510,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get list of installation files and their cluster-wide availability information",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/upgradeManagement/installationFiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"upgradeManagement",
										"installationFiles"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/upgradeManagement/installationFiles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"upgradeManagement",
												"installationFiles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"excludedFromDownload\": false,\n    \"deletedFromMCStorage\": true,\n    \"deleteEnabled\": false,\n    \"readyNodeIds\": [\n      25784737,\n      -96710977\n    ],\n    \"fileSizeInBytes\": -22271279,\n    \"countOfTenantsUsingThisAgentAsStandardVersion\": 9263436,\n    \"type\": \"ODIN\",\n    \"version\": \"nisi ame\",\n    \"status\": \"READY\"\n  },\n  {\n    \"excludedFromDownload\": true,\n    \"deletedFromMCStorage\": true,\n    \"deleteEnabled\": false,\n    \"readyNodeIds\": [\n      92728752,\n      -48557702\n    ],\n    \"fileSizeInBytes\": 1744446,\n    \"countOfTenantsUsingThisAgentAsStandardVersion\": -78546853,\n    \"type\": \"NGINX\",\n    \"version\": \"labore ad dolore commodo\",\n    \"status\": \"EXCLUDED\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Get system precondition check state for the cluster",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/upgradeManagement/clusterUpgradeStartupState",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"upgradeManagement",
								"clusterUpgradeStartupState"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/upgradeManagement/clusterUpgradeStartupState",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"upgradeManagement",
										"clusterUpgradeStartupState"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"state\": \"FINISHED\",\n  \"error\": \"Duis\"\n}"
						}
					]
				},
				{
					"name": "Trigger manual cluster upgrade",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/upgradeManagement/triggerUpgrade",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"upgradeManagement",
								"triggerUpgrade"
							]
						}
					},
					"response": [
						{
							"name": "Started successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/upgradeManagement/triggerUpgrade",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"upgradeManagement",
										"triggerUpgrade"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Triggering of upgrade failed due to missing new version on all nodes.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/upgradeManagement/triggerUpgrade",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"upgradeManagement",
										"triggerUpgrade"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Could not trigger upgrade. Check logs for details...",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/upgradeManagement/triggerUpgrade",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"upgradeManagement",
										"triggerUpgrade"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Upgrade suspended by Dynatrace Mission Control. Could not upgrade cluster now.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/upgradeManagement/triggerUpgrade",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"upgradeManagement",
										"triggerUpgrade"
									]
								}
							},
							"code": 553,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "groups",
			"item": [
				{
					"name": "{group Id}",
					"item": [
						{
							"name": "Get group",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "sint et",
											"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "sint et",
													"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"sit incididunt\",\n  \"isClusterAdminGroup\": true,\n  \"name\": \"labore minim amet laborum\",\n  \"hasAccessAccountRole\": false,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"ldapGroupNames\": [\n    \"irure amet culpa\",\n    \"Lorem\"\n  ],\n  \"ssoGroupNames\": [\n    \"nulla deserunt\",\n    \"dolor in ea Excepteur\"\n  ],\n  \"accessRight\": {\n    \"ex_6\": {\n      \"empty\": false\n    },\n    \"incididunt_3b\": {\n      \"empty\": true\n    }\n  }\n}"
								},
								{
									"name": "No ID information received for the request to get a group",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "sint et",
													"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "sint et",
													"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete group",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "sint et",
											"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "sint et",
													"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"sit incididunt\",\n  \"isClusterAdminGroup\": true,\n  \"name\": \"labore minim amet laborum\",\n  \"hasAccessAccountRole\": false,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"ldapGroupNames\": [\n    \"irure amet culpa\",\n    \"Lorem\"\n  ],\n  \"ssoGroupNames\": [\n    \"nulla deserunt\",\n    \"dolor in ea Excepteur\"\n  ],\n  \"accessRight\": {\n    \"ex_6\": {\n      \"empty\": false\n    },\n    \"incididunt_3b\": {\n      \"empty\": true\n    }\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "sint et",
													"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "management Zones",
					"item": [
						{
							"name": "Get management zone permissions for all groups",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/managementZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"managementZones"
									]
								},
								"description": "This is a list of management zone specific permissions only. Environment permissions are not taken into account here. Groups with permissions for whole environments can also see all management zones defined in these environments, even if they have no management zone specific permissions and the list returned by this request is empty."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"groupId\": \"tempor elit dolore laborum consequat\",\n    \"mzPermissionsPerEnvironment\": [\n      {\n        \"environmentUuid\": \"nostrud sed\",\n        \"mzPermissions\": [\n          {\n            \"mzId\": \"consequat sed culpa\",\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"mzId\": \"volup\",\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"environmentUuid\": \"consequat nulla ad\",\n        \"mzPermissions\": [\n          {\n            \"mzId\": \"dolor dolore ex nulla\",\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"mzId\": \"ullamco cupidatat aliquip anim\",\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"groupId\": \"dolor Duis aliqua in\",\n    \"mzPermissionsPerEnvironment\": [\n      {\n        \"environmentUuid\": \"sun\",\n        \"mzPermissions\": [\n          {\n            \"mzId\": \"irure dolor\",\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"mzId\": \"pariatur fugiat Excepteur dolore\",\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"environmentUuid\": \"labore cillum\",\n        \"mzPermissions\": [\n          {\n            \"mzId\": \"laboris\",\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"mzId\": \"et quis id\",\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n]"
								}
							]
						},
						{
							"name": "Update management zone permissions for a single group",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupId\": \"adipisicing in tempor pariatur dolore\",\n  \"mzPermissionsPerEnvironment\": [\n    {\n      \"environmentUuid\": \"nisi est ex\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"culpa consectetur eu\",\n          \"permissions\": [\n            \"VIEWER\",\n            \"MANAGE_SECURITY_PROBLEMS\"\n          ]\n        },\n        {\n          \"mzId\": \"reprehenderit sint\",\n          \"permissions\": [\n            \"REPLAY_SESSION_DATA_WITHOUT_MASKING\",\n            \"VIEWER\"\n          ]\n        }\n      ]\n    },\n    {\n      \"environmentUuid\": \"Duis occaecat deserunt\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"veniam consectetur ad ex\",\n          \"permissions\": [\n            \"DEMO_USER\",\n            \"LOG_VIEWER\"\n          ]\n        },\n        {\n          \"mzId\": \"fugiat elit\",\n          \"permissions\": [\n            \"DEMO_USER\",\n            \"REPLAY_SESSION_DATA_WITHOUT_MASKING\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/managementZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"managementZones"
									]
								}
							},
							"response": [
								{
									"name": "Successfully updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupId\": \"adipisicing in tempor pariatur dolore\",\n  \"mzPermissionsPerEnvironment\": [\n    {\n      \"environmentUuid\": \"nisi est ex\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"culpa consectetur eu\",\n          \"permissions\": [\n            \"VIEWER\",\n            \"MANAGE_SECURITY_PROBLEMS\"\n          ]\n        },\n        {\n          \"mzId\": \"reprehenderit sint\",\n          \"permissions\": [\n            \"REPLAY_SESSION_DATA_WITHOUT_MASKING\",\n            \"VIEWER\"\n          ]\n        }\n      ]\n    },\n    {\n      \"environmentUuid\": \"Duis occaecat deserunt\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"veniam consectetur ad ex\",\n          \"permissions\": [\n            \"DEMO_USER\",\n            \"LOG_VIEWER\"\n          ]\n        },\n        {\n          \"mzId\": \"fugiat elit\",\n          \"permissions\": [\n            \"DEMO_USER\",\n            \"REPLAY_SESSION_DATA_WITHOUT_MASKING\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Provided model is incorrect or is missing required elements",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupId\": \"adipisicing in tempor pariatur dolore\",\n  \"mzPermissionsPerEnvironment\": [\n    {\n      \"environmentUuid\": \"nisi est ex\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"culpa consectetur eu\",\n          \"permissions\": [\n            \"VIEWER\",\n            \"MANAGE_SECURITY_PROBLEMS\"\n          ]\n        },\n        {\n          \"mzId\": \"reprehenderit sint\",\n          \"permissions\": [\n            \"REPLAY_SESSION_DATA_WITHOUT_MASKING\",\n            \"VIEWER\"\n          ]\n        }\n      ]\n    },\n    {\n      \"environmentUuid\": \"Duis occaecat deserunt\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"veniam consectetur ad ex\",\n          \"permissions\": [\n            \"DEMO_USER\",\n            \"LOG_VIEWER\"\n          ]\n        },\n        {\n          \"mzId\": \"fugiat elit\",\n          \"permissions\": [\n            \"DEMO_USER\",\n            \"REPLAY_SESSION_DATA_WITHOUT_MASKING\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "A group, environment or management zone does not exist",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupId\": \"adipisicing in tempor pariatur dolore\",\n  \"mzPermissionsPerEnvironment\": [\n    {\n      \"environmentUuid\": \"nisi est ex\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"culpa consectetur eu\",\n          \"permissions\": [\n            \"VIEWER\",\n            \"MANAGE_SECURITY_PROBLEMS\"\n          ]\n        },\n        {\n          \"mzId\": \"reprehenderit sint\",\n          \"permissions\": [\n            \"REPLAY_SESSION_DATA_WITHOUT_MASKING\",\n            \"VIEWER\"\n          ]\n        }\n      ]\n    },\n    {\n      \"environmentUuid\": \"Duis occaecat deserunt\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"veniam consectetur ad ex\",\n          \"permissions\": [\n            \"DEMO_USER\",\n            \"LOG_VIEWER\"\n          ]\n        },\n        {\n          \"mzId\": \"fugiat elit\",\n          \"permissions\": [\n            \"DEMO_USER\",\n            \"REPLAY_SESSION_DATA_WITHOUT_MASKING\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Operation failed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupId\": \"adipisicing in tempor pariatur dolore\",\n  \"mzPermissionsPerEnvironment\": [\n    {\n      \"environmentUuid\": \"nisi est ex\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"culpa consectetur eu\",\n          \"permissions\": [\n            \"VIEWER\",\n            \"MANAGE_SECURITY_PROBLEMS\"\n          ]\n        },\n        {\n          \"mzId\": \"reprehenderit sint\",\n          \"permissions\": [\n            \"REPLAY_SESSION_DATA_WITHOUT_MASKING\",\n            \"VIEWER\"\n          ]\n        }\n      ]\n    },\n    {\n      \"environmentUuid\": \"Duis occaecat deserunt\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"veniam consectetur ad ex\",\n          \"permissions\": [\n            \"DEMO_USER\",\n            \"LOG_VIEWER\"\n          ]\n        },\n        {\n          \"mzId\": \"fugiat elit\",\n          \"permissions\": [\n            \"DEMO_USER\",\n            \"REPLAY_SESSION_DATA_WITHOUT_MASKING\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones"
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get management zone permissions for a given group",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/managementZones/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"managementZones",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "sint et",
											"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
										}
									]
								},
								"description": "This is a list of management zone specific permissions only. Environment permissions are not taken into account here. Groups with permissions for whole environments can also see all management zones defined in these environments, even if they have no management zone specific permissions and the list returned by this request is empty."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "sint et",
													"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"groupId\": \"adipisicing in tempor pariatur dolore\",\n  \"mzPermissionsPerEnvironment\": [\n    {\n      \"environmentUuid\": \"nisi est ex\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"culpa consectetur eu\",\n          \"permissions\": [\n            \"VIEWER\",\n            \"MANAGE_SECURITY_PROBLEMS\"\n          ]\n        },\n        {\n          \"mzId\": \"reprehenderit sint\",\n          \"permissions\": [\n            \"REPLAY_SESSION_DATA_WITHOUT_MASKING\",\n            \"VIEWER\"\n          ]\n        }\n      ]\n    },\n    {\n      \"environmentUuid\": \"Duis occaecat deserunt\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"veniam consectetur ad ex\",\n          \"permissions\": [\n            \"DEMO_USER\",\n            \"LOG_VIEWER\"\n          ]\n        },\n        {\n          \"mzId\": \"fugiat elit\",\n          \"permissions\": [\n            \"DEMO_USER\",\n            \"REPLAY_SESSION_DATA_WITHOUT_MASKING\"\n          ]\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "No ID information received for the request to get group MZ permissions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "sint et",
													"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Group not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/managementZones/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												"managementZones",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "sint et",
													"description": "(Required) Group ID path parameter. Missing or empty values will return a 'Bad Request'."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get groups",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"sed amet \",\n    \"isClusterAdminGroup\": false,\n    \"name\": \"nisi magna ut\",\n    \"hasAccessAccountRole\": true,\n    \"hasManageAccountAndViewProductUsageRole\": true,\n    \"ldapGroupNames\": [\n      \"elit ipsum pariatur dolor\",\n      \"cup\"\n    ],\n    \"ssoGroupNames\": [\n      \"in voluptate repr\",\n      \"id laborum ex\"\n    ],\n    \"accessRight\": {\n      \"nulla05\": {\n        \"empty\": false\n      },\n      \"amet_fa\": {\n        \"empty\": false\n      }\n    }\n  },\n  {\n    \"id\": \"quis laboris Ut\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"aliquip cupidatat nisi sunt aliqua\",\n    \"hasAccessAccountRole\": false,\n    \"hasManageAccountAndViewProductUsageRole\": false,\n    \"ldapGroupNames\": [\n      \"cillum consectetur\",\n      \"et\"\n    ],\n    \"ssoGroupNames\": [\n      \"nostrud in non velit\",\n      \"minim deserunt Lorem tempor nostrud\"\n    ],\n    \"accessRight\": {\n      \"sint_9\": {\n        \"empty\": true\n      }\n    }\n  }\n]"
						}
					]
				},
				{
					"name": "Update group",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"anim\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"ipsum aliquip nisi et\",\n  \"hasAccessAccountRole\": true,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"isAccessAccount\": false,\n  \"isManageAccount\": false,\n  \"ldapGroupNames\": [\n    \"quis et do magna\",\n    \"tempor incididunt\"\n  ],\n  \"ssoGroupNames\": [\n    \"id elit ad reprehenderit n\",\n    \"nulla non\"\n  ],\n  \"accessRight\": {\n    \"et3a\": {\n      \"empty\": true\n    },\n    \"est6\": {\n      \"empty\": true\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": [
						{
							"name": "Successfully updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"anim\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"ipsum aliquip nisi et\",\n  \"hasAccessAccountRole\": true,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"isAccessAccount\": false,\n  \"isManageAccount\": false,\n  \"ldapGroupNames\": [\n    \"quis et do magna\",\n    \"tempor incididunt\"\n  ],\n  \"ssoGroupNames\": [\n    \"id elit ad reprehenderit n\",\n    \"nulla non\"\n  ],\n  \"accessRight\": {\n    \"et3a\": {\n      \"empty\": true\n    },\n    \"est6\": {\n      \"empty\": true\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"sit incididunt\",\n  \"isClusterAdminGroup\": true,\n  \"name\": \"labore minim amet laborum\",\n  \"hasAccessAccountRole\": false,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"ldapGroupNames\": [\n    \"irure amet culpa\",\n    \"Lorem\"\n  ],\n  \"ssoGroupNames\": [\n    \"nulla deserunt\",\n    \"dolor in ea Excepteur\"\n  ],\n  \"accessRight\": {\n    \"ex_6\": {\n      \"empty\": false\n    },\n    \"incididunt_3b\": {\n      \"empty\": true\n    }\n  }\n}"
						},
						{
							"name": "Operation failed. The input is invalid. Possible reasons:\n - No group information received for the request to create a group\n - Group ID is not set\n - Group name cannot be null or empty\n - At least one of the specified environments doesn't exist\n",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"anim\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"ipsum aliquip nisi et\",\n  \"hasAccessAccountRole\": true,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"isAccessAccount\": false,\n  \"isManageAccount\": false,\n  \"ldapGroupNames\": [\n    \"quis et do magna\",\n    \"tempor incididunt\"\n  ],\n  \"ssoGroupNames\": [\n    \"id elit ad reprehenderit n\",\n    \"nulla non\"\n  ],\n  \"accessRight\": {\n    \"et3a\": {\n      \"empty\": true\n    },\n    \"est6\": {\n      \"empty\": true\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. Group name already exists or group not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"anim\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"ipsum aliquip nisi et\",\n  \"hasAccessAccountRole\": true,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"isAccessAccount\": false,\n  \"isManageAccount\": false,\n  \"ldapGroupNames\": [\n    \"quis et do magna\",\n    \"tempor incididunt\"\n  ],\n  \"ssoGroupNames\": [\n    \"id elit ad reprehenderit n\",\n    \"nulla non\"\n  ],\n  \"accessRight\": {\n    \"et3a\": {\n      \"empty\": true\n    },\n    \"est6\": {\n      \"empty\": true\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create group",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"anim\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"ipsum aliquip nisi et\",\n  \"hasAccessAccountRole\": true,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"isAccessAccount\": false,\n  \"isManageAccount\": false,\n  \"ldapGroupNames\": [\n    \"quis et do magna\",\n    \"tempor incididunt\"\n  ],\n  \"ssoGroupNames\": [\n    \"id elit ad reprehenderit n\",\n    \"nulla non\"\n  ],\n  \"accessRight\": {\n    \"et3a\": {\n      \"empty\": true\n    },\n    \"est6\": {\n      \"empty\": true\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": [
						{
							"name": "Successfully updated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"anim\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"ipsum aliquip nisi et\",\n  \"hasAccessAccountRole\": true,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"isAccessAccount\": false,\n  \"isManageAccount\": false,\n  \"ldapGroupNames\": [\n    \"quis et do magna\",\n    \"tempor incididunt\"\n  ],\n  \"ssoGroupNames\": [\n    \"id elit ad reprehenderit n\",\n    \"nulla non\"\n  ],\n  \"accessRight\": {\n    \"et3a\": {\n      \"empty\": true\n    },\n    \"est6\": {\n      \"empty\": true\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"sit incididunt\",\n  \"isClusterAdminGroup\": true,\n  \"name\": \"labore minim amet laborum\",\n  \"hasAccessAccountRole\": false,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"ldapGroupNames\": [\n    \"irure amet culpa\",\n    \"Lorem\"\n  ],\n  \"ssoGroupNames\": [\n    \"nulla deserunt\",\n    \"dolor in ea Excepteur\"\n  ],\n  \"accessRight\": {\n    \"ex_6\": {\n      \"empty\": false\n    },\n    \"incididunt_3b\": {\n      \"empty\": true\n    }\n  }\n}"
						},
						{
							"name": "Operation failed. The input is invalid. Possible reasons:\n - No group information received for the request to create a group\n - Group ID cannot be set\n - Group name cannot be null or empty\n - At least one of the specified environments doesn't exist\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"anim\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"ipsum aliquip nisi et\",\n  \"hasAccessAccountRole\": true,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"isAccessAccount\": false,\n  \"isManageAccount\": false,\n  \"ldapGroupNames\": [\n    \"quis et do magna\",\n    \"tempor incididunt\"\n  ],\n  \"ssoGroupNames\": [\n    \"id elit ad reprehenderit n\",\n    \"nulla non\"\n  ],\n  \"accessRight\": {\n    \"et3a\": {\n      \"empty\": true\n    },\n    \"est6\": {\n      \"empty\": true\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. Group already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"anim\",\n  \"isClusterAdminGroup\": false,\n  \"name\": \"ipsum aliquip nisi et\",\n  \"hasAccessAccountRole\": true,\n  \"hasManageAccountAndViewProductUsageRole\": true,\n  \"isAccessAccount\": false,\n  \"isManageAccount\": false,\n  \"ldapGroupNames\": [\n    \"quis et do magna\",\n    \"tempor incididunt\"\n  ],\n  \"ssoGroupNames\": [\n    \"id elit ad reprehenderit n\",\n    \"nulla non\"\n  ],\n  \"accessRight\": {\n    \"et3a\": {\n      \"empty\": true\n    },\n    \"est6\": {\n      \"empty\": true\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create groups",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"id\": \"et sit incididunt Excepteur\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"ut irure non exercitation\",\n    \"hasAccessAccountRole\": false,\n    \"hasManageAccountAndViewProductUsageRole\": true,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": true,\n    \"ldapGroupNames\": [\n      \"dolore\",\n      \"fugiat mollit\"\n    ],\n    \"ssoGroupNames\": [\n      \"fugiat veniam\",\n      \"dolor laborum ipsum\"\n    ],\n    \"accessRight\": {\n      \"sed_f2\": {\n        \"empty\": false\n      }\n    }\n  },\n  {\n    \"id\": \"culpa\",\n    \"isClusterAdminGroup\": false,\n    \"name\": \"laborum\",\n    \"hasAccessAccountRole\": false,\n    \"hasManageAccountAndViewProductUsageRole\": false,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n      \"culpa irure mollit esse\",\n      \"sint culpa voluptate\"\n    ],\n    \"ssoGroupNames\": [\n      \"Duis\",\n      \"irure nisi est ex\"\n    ],\n    \"accessRight\": {\n      \"officia1f_\": {\n        \"empty\": true\n      }\n    }\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"bulk"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"ut laborum magna dolor\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"magna occaecat tempor in\",\n    \"hasAccessAccountRole\": true,\n    \"hasManageAccountAndViewProductUsageRole\": false,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n      \"magna consequat id\",\n      \"aliqua laboris in magna fugiat\"\n    ],\n    \"ssoGroupNames\": [\n      \"exercitation do aliquip\",\n      \"ipsum ex sed\"\n    ],\n    \"accessRight\": {\n      \"Ut_5b\": {\n        \"empty\": false\n      },\n      \"veniam_4_1\": {\n        \"empty\": true\n      }\n    }\n  },\n  {\n    \"id\": \"elit cupidatat in\",\n    \"isClusterAdminGroup\": false,\n    \"name\": \"ipsum in cup\",\n    \"hasAccessAccountRole\": false,\n    \"hasManageAccountAndViewProductUsageRole\": false,\n    \"isAccessAccount\": true,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n      \"ea nisi sit\",\n      \"incididunt Duis minim\"\n    ],\n    \"ssoGroupNames\": [\n      \"exercitation non\",\n      \"do consectetur\"\n    ],\n    \"accessRight\": {\n      \"velit_50d\": {\n        \"empty\": false\n      }\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"bulk"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"occaecat cillum officia\",\n    \"isClusterAdminGroup\": false,\n    \"name\": \"id commodo veniam\",\n    \"hasAccessAccountRole\": false,\n    \"hasManageAccountAndViewProductUsageRole\": false,\n    \"ldapGroupNames\": [\n      \"sit voluptate magna pariatur\",\n      \"consectetur deserunt laboris voluptate dolor\"\n    ],\n    \"ssoGroupNames\": [\n      \"voluptate Excepteur dolore\",\n      \"fugiat Duis cupidatat aliquip\"\n    ],\n    \"accessRight\": {\n      \"proident_76a\": {\n        \"empty\": false\n      }\n    }\n  },\n  {\n    \"id\": \"dolor sint ut anim\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"amet Duis\",\n    \"hasAccessAccountRole\": false,\n    \"hasManageAccountAndViewProductUsageRole\": false,\n    \"ldapGroupNames\": [\n      \"aute cupidatat\",\n      \"aliquip\"\n    ],\n    \"ssoGroupNames\": [\n      \"dolore aliquip\",\n      \"ad deserunt culpa eiusmod\"\n    ],\n    \"accessRight\": {\n      \"laborum_26_\": {\n        \"empty\": true\n      },\n      \"nostruddf\": {\n        \"empty\": true\n      },\n      \"Excepteur_302\": {\n        \"empty\": true\n      },\n      \"ut2_\": {\n        \"empty\": false\n      }\n    }\n  }\n]"
						},
						{
							"name": "No group information received for the create-group request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"ut laborum magna dolor\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"magna occaecat tempor in\",\n    \"hasAccessAccountRole\": true,\n    \"hasManageAccountAndViewProductUsageRole\": false,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n      \"magna consequat id\",\n      \"aliqua laboris in magna fugiat\"\n    ],\n    \"ssoGroupNames\": [\n      \"exercitation do aliquip\",\n      \"ipsum ex sed\"\n    ],\n    \"accessRight\": {\n      \"Ut_5b\": {\n        \"empty\": false\n      },\n      \"veniam_4_1\": {\n        \"empty\": true\n      }\n    }\n  },\n  {\n    \"id\": \"elit cupidatat in\",\n    \"isClusterAdminGroup\": false,\n    \"name\": \"ipsum in cup\",\n    \"hasAccessAccountRole\": false,\n    \"hasManageAccountAndViewProductUsageRole\": false,\n    \"isAccessAccount\": true,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n      \"ea nisi sit\",\n      \"incididunt Duis minim\"\n    ],\n    \"ssoGroupNames\": [\n      \"exercitation non\",\n      \"do consectetur\"\n    ],\n    \"accessRight\": {\n      \"velit_50d\": {\n        \"empty\": false\n      }\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"bulk"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unacceptable or incomplete request. Some groups were added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"ut laborum magna dolor\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"magna occaecat tempor in\",\n    \"hasAccessAccountRole\": true,\n    \"hasManageAccountAndViewProductUsageRole\": false,\n    \"isAccessAccount\": false,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n      \"magna consequat id\",\n      \"aliqua laboris in magna fugiat\"\n    ],\n    \"ssoGroupNames\": [\n      \"exercitation do aliquip\",\n      \"ipsum ex sed\"\n    ],\n    \"accessRight\": {\n      \"Ut_5b\": {\n        \"empty\": false\n      },\n      \"veniam_4_1\": {\n        \"empty\": true\n      }\n    }\n  },\n  {\n    \"id\": \"elit cupidatat in\",\n    \"isClusterAdminGroup\": false,\n    \"name\": \"ipsum in cup\",\n    \"hasAccessAccountRole\": false,\n    \"hasManageAccountAndViewProductUsageRole\": false,\n    \"isAccessAccount\": true,\n    \"isManageAccount\": false,\n    \"ldapGroupNames\": [\n      \"ea nisi sit\",\n      \"incididunt Duis minim\"\n    ],\n    \"ssoGroupNames\": [\n      \"exercitation non\",\n      \"do consectetur\"\n    ],\n    \"accessRight\": {\n      \"velit_50d\": {\n        \"empty\": false\n      }\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										"bulk"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"occaecat cillum officia\",\n    \"isClusterAdminGroup\": false,\n    \"name\": \"id commodo veniam\",\n    \"hasAccessAccountRole\": false,\n    \"hasManageAccountAndViewProductUsageRole\": false,\n    \"ldapGroupNames\": [\n      \"sit voluptate magna pariatur\",\n      \"consectetur deserunt laboris voluptate dolor\"\n    ],\n    \"ssoGroupNames\": [\n      \"voluptate Excepteur dolore\",\n      \"fugiat Duis cupidatat aliquip\"\n    ],\n    \"accessRight\": {\n      \"proident_76a\": {\n        \"empty\": false\n      }\n    }\n  },\n  {\n    \"id\": \"dolor sint ut anim\",\n    \"isClusterAdminGroup\": true,\n    \"name\": \"amet Duis\",\n    \"hasAccessAccountRole\": false,\n    \"hasManageAccountAndViewProductUsageRole\": false,\n    \"ldapGroupNames\": [\n      \"aute cupidatat\",\n      \"aliquip\"\n    ],\n    \"ssoGroupNames\": [\n      \"dolore aliquip\",\n      \"ad deserunt culpa eiusmod\"\n    ],\n    \"accessRight\": {\n      \"laborum_26_\": {\n        \"empty\": true\n      },\n      \"nostruddf\": {\n        \"empty\": true\n      },\n      \"Excepteur_302\": {\n        \"empty\": true\n      },\n      \"ut2_\": {\n        \"empty\": false\n      }\n    }\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get user",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "sint et",
											"description": "(Required) User ID path parameter. Missing or empty values will return a 'Bad Request'"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "sint et",
													"description": "(Required) User ID path parameter. Missing or empty values will return a 'Bad Request'"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}"
								},
								{
									"name": "No ID information received for the get-user request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "sint et",
													"description": "(Required) User ID path parameter. Missing or empty values will return a 'Bad Request'"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "sint et",
													"description": "(Required) User ID path parameter. Missing or empty values will return a 'Bad Request'"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete user",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "sint et",
											"description": "(Required) User ID path parameter. Missing or empty values will return a 'Bad Request'."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "sint et",
													"description": "(Required) User ID path parameter. Missing or empty values will return a 'Bad Request'."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}"
								},
								{
									"name": "Not modified",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "sint et",
													"description": "(Required) User ID path parameter. Missing or empty values will return a 'Bad Request'."
												}
											]
										}
									},
									"status": "Not Modified",
									"code": 304,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "No ID information received for the delete-user request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "sint et",
													"description": "(Required) User ID path parameter. Missing or empty values will return a 'Bad Request'."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unacceptable request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "sint et",
													"description": "(Required) User ID path parameter. Missing or empty values will return a 'Bad Request'."
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get users",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"email\": \"amet tempor do\",\n    \"firstName\": \"amet velit est aliqua\",\n    \"id\": \"ullamco nisi anim\",\n    \"lastName\": \"mollit aute Excepteur id\",\n    \"passwordClearText\": \"labore qui veniam\",\n    \"groups\": [\n      \"nisi tempor in\",\n      \"ut est Duis qui ut\"\n    ]\n  },\n  {\n    \"email\": \"amet\",\n    \"firstName\": \"esse\",\n    \"id\": \"quis consectetur qui\",\n    \"lastName\": \"id\",\n    \"passwordClearText\": \"incididunt v\",\n    \"groups\": [\n      \"ex\",\n      \"eiusmod fugiat anim\"\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "Update user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Successfully updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}"
						},
						{
							"name": "Operation failed. The input is invalid. Possible reasons:\n - all required values (ID, email, first name, last name) must be set\n - invalid user data\n - user email address already assigned\n - user group ID does not exist",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation forbidden - users and groups are fully managed via LDAP or SSO",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unacceptable request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Email address already registered",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"code": 524,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}"
						},
						{
							"name": "Operation failed. The input is invalid. Possible reasons:\n - all required values (ID, email, first name, last name) must be set\n - invalid user data\n - user ID already exists\n - user email address already assigned\n - user group ID does not exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation forbidden - users and groups are fully managed via LDAP or SSO",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unacceptable request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Couldn't create user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"code": 522,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"code": 523,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Email address already registered",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"laborum reprehenderit est in\",\n  \"firstName\": \"Excepteur ullamco\",\n  \"id\": \"commodo occaecat irure anim\",\n  \"lastName\": \"laboris reprehenderit in\",\n  \"passwordClearText\": \"eu sed officia exercitation\",\n  \"groups\": [\n    \"cupidatat\",\n    \"cupidatat in adipisicing sed\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"code": 524,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create users",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"email\": \"in\",\n    \"firstName\": \"veniam Excepteur aliquip Ut\",\n    \"id\": \"qui eu laborum elit nostrud\",\n    \"lastName\": \"do nostrud\",\n    \"passwordClearText\": \"magna\",\n    \"groups\": [\n      \"irure\",\n      \"cupidatat eu\"\n    ]\n  },\n  {\n    \"email\": \"deserunt ea id la\",\n    \"firstName\": \"ut consectetur reprehenderit\",\n    \"id\": \"do magna\",\n    \"lastName\": \"adipisicing comm\",\n    \"passwordClearText\": \"ea in incididunt dolore\",\n    \"groups\": [\n      \"irure pariatur enim incididunt sint\",\n      \"ipsum in laboris eu sed\"\n    ]\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"bulk"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"email\": \"nulla in aliquip\",\n    \"firstName\": \"in\",\n    \"id\": \"incididunt laborum\",\n    \"lastName\": \"et in nulla ut\",\n    \"passwordClearText\": \"nostrud magna laboris ipsum cillu\",\n    \"groups\": [\n      \"dolor anim\",\n      \"ut ullamco dolor cillum\"\n    ]\n  },\n  {\n    \"email\": \"veniam qui sed\",\n    \"firstName\": \"nulla Duis in sit\",\n    \"id\": \"nulla proident tempor\",\n    \"lastName\": \"offici\",\n    \"passwordClearText\": \"id\",\n    \"groups\": [\n      \"cillum\",\n      \"incididunt\"\n    ]\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"bulk"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"email\": \"in\",\n    \"firstName\": \"veniam Excepteur aliquip Ut\",\n    \"id\": \"qui eu laborum elit nostrud\",\n    \"lastName\": \"do nostrud\",\n    \"passwordClearText\": \"magna\",\n    \"groups\": [\n      \"irure\",\n      \"cupidatat eu\"\n    ]\n  },\n  {\n    \"email\": \"deserunt ea id la\",\n    \"firstName\": \"ut consectetur reprehenderit\",\n    \"id\": \"do magna\",\n    \"lastName\": \"adipisicing comm\",\n    \"passwordClearText\": \"ea in incididunt dolore\",\n    \"groups\": [\n      \"irure pariatur enim incididunt sint\",\n      \"ipsum in laboris eu sed\"\n    ]\n  }\n]"
						},
						{
							"name": "Operation failed. The input is invalid. Possible reasons:\n - no user information received for the create-users request\n - all required values (ID, email, first name, last name) must be set\n - invalid user data\n - input contains duplicated IDs\n - input con",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"email\": \"nulla in aliquip\",\n    \"firstName\": \"in\",\n    \"id\": \"incididunt laborum\",\n    \"lastName\": \"et in nulla ut\",\n    \"passwordClearText\": \"nostrud magna laboris ipsum cillu\",\n    \"groups\": [\n      \"dolor anim\",\n      \"ut ullamco dolor cillum\"\n    ]\n  },\n  {\n    \"email\": \"veniam qui sed\",\n    \"firstName\": \"nulla Duis in sit\",\n    \"id\": \"nulla proident tempor\",\n    \"lastName\": \"offici\",\n    \"passwordClearText\": \"id\",\n    \"groups\": [\n      \"cillum\",\n      \"incididunt\"\n    ]\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"bulk"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation forbidden - either LDAP or SSO with group assignment integration is turned on",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"email\": \"nulla in aliquip\",\n    \"firstName\": \"in\",\n    \"id\": \"incididunt laborum\",\n    \"lastName\": \"et in nulla ut\",\n    \"passwordClearText\": \"nostrud magna laboris ipsum cillu\",\n    \"groups\": [\n      \"dolor anim\",\n      \"ut ullamco dolor cillum\"\n    ]\n  },\n  {\n    \"email\": \"veniam qui sed\",\n    \"firstName\": \"nulla Duis in sit\",\n    \"id\": \"nulla proident tempor\",\n    \"lastName\": \"offici\",\n    \"passwordClearText\": \"id\",\n    \"groups\": [\n      \"cillum\",\n      \"incididunt\"\n    ]\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"bulk"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unacceptable or incomplete request. Some users added",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"email\": \"nulla in aliquip\",\n    \"firstName\": \"in\",\n    \"id\": \"incididunt laborum\",\n    \"lastName\": \"et in nulla ut\",\n    \"passwordClearText\": \"nostrud magna laboris ipsum cillu\",\n    \"groups\": [\n      \"dolor anim\",\n      \"ut ullamco dolor cillum\"\n    ]\n  },\n  {\n    \"email\": \"veniam qui sed\",\n    \"firstName\": \"nulla Duis in sit\",\n    \"id\": \"nulla proident tempor\",\n    \"lastName\": \"offici\",\n    \"passwordClearText\": \"id\",\n    \"groups\": [\n      \"cillum\",\n      \"incididunt\"\n    ]\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"bulk"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"email\": \"in\",\n    \"firstName\": \"veniam Excepteur aliquip Ut\",\n    \"id\": \"qui eu laborum elit nostrud\",\n    \"lastName\": \"do nostrud\",\n    \"passwordClearText\": \"magna\",\n    \"groups\": [\n      \"irure\",\n      \"cupidatat eu\"\n    ]\n  },\n  {\n    \"email\": \"deserunt ea id la\",\n    \"firstName\": \"ut consectetur reprehenderit\",\n    \"id\": \"do magna\",\n    \"lastName\": \"adipisicing comm\",\n    \"passwordClearText\": \"ea in incididunt dolore\",\n    \"groups\": [\n      \"irure pariatur enim incididunt sint\",\n      \"ipsum in laboris eu sed\"\n    ]\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "user Repository",
			"item": [
				{
					"name": "authentication Mode",
					"item": [
						{
							"name": "Get authentication mode",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userRepository/authenticationMode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userRepository",
										"authenticationMode"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userRepository/authenticationMode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"authenticationMode"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"authenticationProvider\": \"LDAP\",\n  \"authorizationProvider\": \"INTERNAL\",\n  \"ssoOnly\": false\n}"
								}
							]
						},
						{
							"name": "Update authentication mode",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authenticationProvider\": \"LDAP\",\n  \"authorizationProvider\": \"LDAP\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/userRepository/authenticationMode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userRepository",
										"authenticationMode"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationProvider\": \"LDAP\",\n  \"authorizationProvider\": \"LDAP\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/userRepository/authenticationMode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"authenticationMode"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"authenticationProvider\": \"LDAP\",\n  \"authorizationProvider\": \"INTERNAL\",\n  \"ssoOnly\": false\n}"
								},
								{
									"name": "Not Acceptable. LDAP cannot be turned on if \"Import user groups\" from SSO flag is turned on",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationProvider\": \"LDAP\",\n  \"authorizationProvider\": \"LDAP\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/userRepository/authenticationMode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"authenticationMode"
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "ldap",
					"item": [
						{
							"name": "connection Configuration",
							"item": [
								{
									"name": "Get LDAP configuration",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userRepository/ldap/connectionConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"ldap",
												"connectionConfiguration"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/connectionConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"connectionConfiguration"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"shouldUseSecureConnection\": true,\n  \"hostName\": \"aliqua enim\",\n  \"port\": 44258182,\n  \"bindDn\": \"elit \",\n  \"bindPassword\": \"aliquip anim sunt eu\",\n  \"bindPasswordSet\": false,\n  \"referralHopLimit\": 70156204\n}"
										}
									]
								},
								{
									"name": "Update LDAP connection",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"shouldUseSecureConnection\": true,\n  \"hostName\": \"aliqua enim\",\n  \"port\": 44258182,\n  \"bindDn\": \"elit \",\n  \"bindPassword\": \"aliquip anim sunt eu\",\n  \"bindPasswordSet\": false,\n  \"referralHopLimit\": 70156204\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/userRepository/ldap/connectionConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"ldap",
												"connectionConfiguration"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"shouldUseSecureConnection\": true,\n  \"hostName\": \"aliqua enim\",\n  \"port\": 44258182,\n  \"bindDn\": \"elit \",\n  \"bindPassword\": \"aliquip anim sunt eu\",\n  \"bindPasswordSet\": false,\n  \"referralHopLimit\": 70156204\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/connectionConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"connectionConfiguration"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Acceptable",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"shouldUseSecureConnection\": true,\n  \"hostName\": \"aliqua enim\",\n  \"port\": 44258182,\n  \"bindDn\": \"elit \",\n  \"bindPassword\": \"aliquip anim sunt eu\",\n  \"bindPasswordSet\": false,\n  \"referralHopLimit\": 70156204\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/connectionConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"connectionConfiguration"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "query Groups",
							"item": [
								{
									"name": "Get LDAP group configuration",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userRepository/ldap/queryGroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"ldap",
												"queryGroups"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/queryGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"queryGroups"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"groupsDn\": \"dolor proident\",\n  \"groupsFilter\": \"eu Ut velit\",\n  \"groupsIdAttribute\": \"ad nostrud dolor\",\n  \"groupsDisplayNameAttribute\": \"ut\",\n  \"groupsMemberAttribute\": \"aute voluptate anim commodo\"\n}"
										}
									]
								},
								{
									"name": "Update LDAP groups query configuration",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupsDn\": \"dolor proident\",\n  \"groupsFilter\": \"eu Ut velit\",\n  \"groupsIdAttribute\": \"ad nostrud dolor\",\n  \"groupsDisplayNameAttribute\": \"ut\",\n  \"groupsMemberAttribute\": \"aute voluptate anim commodo\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/userRepository/ldap/queryGroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"ldap",
												"queryGroups"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupsDn\": \"dolor proident\",\n  \"groupsFilter\": \"eu Ut velit\",\n  \"groupsIdAttribute\": \"ad nostrud dolor\",\n  \"groupsDisplayNameAttribute\": \"ut\",\n  \"groupsMemberAttribute\": \"aute voluptate anim commodo\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/queryGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"queryGroups"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unacceptable request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupsDn\": \"dolor proident\",\n  \"groupsFilter\": \"eu Ut velit\",\n  \"groupsIdAttribute\": \"ad nostrud dolor\",\n  \"groupsDisplayNameAttribute\": \"ut\",\n  \"groupsMemberAttribute\": \"aute voluptate anim commodo\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/queryGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"queryGroups"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "query Users",
							"item": [
								{
									"name": "Get LDAP users query configuration",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userRepository/ldap/queryUsers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"ldap",
												"queryUsers"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/queryUsers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"queryUsers"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"usersBaseDn\": \"velit consectetur Lorem id\",\n  \"usersAccountNameAttribute\": \"esse exercitation\",\n  \"usersFirstNameAttribute\": \"veniam ut\",\n  \"usersLastNameAttribute\": \"tempor et\",\n  \"usersEmailAttribute\": \"dolor amet voluptate tempor\",\n  \"usersMembershipAttribute\": \"dolor elit minim dolore\",\n  \"usersFilter\": \"sunt\"\n}"
										}
									]
								},
								{
									"name": "Update LDAP users query configuration",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"usersBaseDn\": \"velit consectetur Lorem id\",\n  \"usersAccountNameAttribute\": \"esse exercitation\",\n  \"usersFirstNameAttribute\": \"veniam ut\",\n  \"usersLastNameAttribute\": \"tempor et\",\n  \"usersEmailAttribute\": \"dolor amet voluptate tempor\",\n  \"usersMembershipAttribute\": \"dolor elit minim dolore\",\n  \"usersFilter\": \"sunt\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/userRepository/ldap/queryUsers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userRepository",
												"ldap",
												"queryUsers"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"usersBaseDn\": \"velit consectetur Lorem id\",\n  \"usersAccountNameAttribute\": \"esse exercitation\",\n  \"usersFirstNameAttribute\": \"veniam ut\",\n  \"usersLastNameAttribute\": \"tempor et\",\n  \"usersEmailAttribute\": \"dolor amet voluptate tempor\",\n  \"usersMembershipAttribute\": \"dolor elit minim dolore\",\n  \"usersFilter\": \"sunt\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/queryUsers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"queryUsers"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unacceptable request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"usersBaseDn\": \"velit consectetur Lorem id\",\n  \"usersAccountNameAttribute\": \"esse exercitation\",\n  \"usersFirstNameAttribute\": \"veniam ut\",\n  \"usersLastNameAttribute\": \"tempor et\",\n  \"usersEmailAttribute\": \"dolor amet voluptate tempor\",\n  \"usersMembershipAttribute\": \"dolor elit minim dolore\",\n  \"usersFilter\": \"sunt\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/userRepository/ldap/queryUsers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userRepository",
														"ldap",
														"queryUsers"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "proxy",
			"item": [
				{
					"name": "configurations",
					"item": [
						{
							"name": "{dc}",
							"item": [
								{
									"name": "Get Data Center proxy configuration (Multi Data Center deployment)",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/proxy/configurations/:dc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configurations",
												":dc"
											],
											"variable": [
												{
													"key": "dc",
													"value": "sint et",
													"description": "(Required) Data Center"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc",
															"value": "sint et",
															"description": "(Required) Data Center"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"scheme\": \"in sint\",\n  \"server\": \"mollit\",\n  \"port\": 8604124,\n  \"nonProxyHosts\": [\n    \"Duis in\",\n    \"sint\"\n  ],\n  \"userOrPasswordDefined\": false\n}"
										},
										{
											"name": "Proxy is not configured for given Data Center",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc",
															"value": "sint et",
															"description": "(Required) Data Center"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set/update Data Center proxy configuration (Multi Data Center deployment)",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"port\": 55145,\n  \"scheme\": \"https\",\n  \"server\": \"ZXFK.YElB\",\n  \"user\": \"amet sed commodo cillum\",\n  \"password\": \"velit in consectetur ex\",\n  \"nonProxyHosts\": [\n    \"sunt eu sit sed\",\n    \"sunt consequat veniam\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/proxy/configurations/:dc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configurations",
												":dc"
											],
											"variable": [
												{
													"key": "dc",
													"value": "sint et",
													"description": "(Required) Data Center"
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful, new configuration created",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"port\": 60764,\n  \"scheme\": \"http\",\n  \"server\": \"PbKp\",\n  \"user\": \"tempor sint\",\n  \"password\": \"com\",\n  \"nonProxyHosts\": [\n    \"velit\",\n    \"nostrud ipsum Ut\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc",
															"value": "sint et",
															"description": "(Required) Data Center"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successful, configuration updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"port\": 60764,\n  \"scheme\": \"http\",\n  \"server\": \"PbKp\",\n  \"user\": \"tempor sint\",\n  \"password\": \"com\",\n  \"nonProxyHosts\": [\n    \"velit\",\n    \"nostrud ipsum Ut\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc",
															"value": "sint et",
															"description": "(Required) Data Center"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Given proxy configuration is invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"port\": 60764,\n  \"scheme\": \"http\",\n  \"server\": \"PbKp\",\n  \"user\": \"tempor sint\",\n  \"password\": \"com\",\n  \"nonProxyHosts\": [\n    \"velit\",\n    \"nostrud ipsum Ut\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc",
															"value": "sint et",
															"description": "(Required) Data Center"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Remove Data Center proxy configuration (Multi Data Center deployment)",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/proxy/configurations/:dc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configurations",
												":dc"
											],
											"variable": [
												{
													"key": "dc",
													"value": "sint et",
													"description": "(Required) Data Center"
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful, previous configuration returned",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc",
															"value": "sint et",
															"description": "(Required) Data Center"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"scheme\": \"in sint\",\n  \"server\": \"mollit\",\n  \"port\": 8604124,\n  \"nonProxyHosts\": [\n    \"Duis in\",\n    \"sint\"\n  ],\n  \"userOrPasswordDefined\": false\n}"
										},
										{
											"name": "Proxy was not configured for given Data Center",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/proxy/configurations/:dc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"proxy",
														"configurations",
														":dc"
													],
													"variable": [
														{
															"key": "dc",
															"value": "sint et",
															"description": "(Required) Data Center"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get proxy configurations for all Data Centers (Multi Data Center deployment)",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"configurations"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/proxy/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configurations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"configurations\": {\n    \"ut_5\": {\n      \"scheme\": \"Ut enim incididunt\",\n      \"server\": \"Excepteur\",\n      \"port\": 25162543,\n      \"nonProxyHosts\": [\n        \"ipsum cupidatat\",\n        \"veniam eiusmod labore Excepteur\"\n      ],\n      \"userOrPasswordDefined\": true\n    },\n    \"aliquip_ac\": {\n      \"scheme\": \"esse ea Ut veniam\",\n      \"server\": \"sint\",\n      \"port\": 79795821,\n      \"nonProxyHosts\": [\n        \"eu occaecat tempor\",\n        \"commodo laboris\"\n      ],\n      \"userOrPasswordDefined\": false\n    },\n    \"Lorem_4b\": {\n      \"scheme\": \"pariatur Lorem\",\n      \"server\": \"sunt mollit ea cillum quis\",\n      \"port\": -27316867,\n      \"nonProxyHosts\": [\n        \"proident magna\",\n        \"consequat minim\"\n      ],\n      \"userOrPasswordDefined\": false\n    }\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "configuration",
					"item": [
						{
							"name": "Get cluster proxy configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"configuration"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"scheme\": \"in sint\",\n  \"server\": \"mollit\",\n  \"port\": 8604124,\n  \"nonProxyHosts\": [\n    \"Duis in\",\n    \"sint\"\n  ],\n  \"userOrPasswordDefined\": false\n}"
								},
								{
									"name": "Proxy is not configured",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set/update cluster proxy configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"port\": 60764,\n  \"scheme\": \"http\",\n  \"server\": \"PbKp\",\n  \"user\": \"tempor sint\",\n  \"password\": \"com\",\n  \"nonProxyHosts\": [\n    \"velit\",\n    \"nostrud ipsum Ut\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"configuration"
									]
								}
							},
							"response": [
								{
									"name": "Successful, new configuration created",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"port\": 60764,\n  \"scheme\": \"http\",\n  \"server\": \"PbKp\",\n  \"user\": \"tempor sint\",\n  \"password\": \"com\",\n  \"nonProxyHosts\": [\n    \"velit\",\n    \"nostrud ipsum Ut\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successful, configuration updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"port\": 60764,\n  \"scheme\": \"http\",\n  \"server\": \"PbKp\",\n  \"user\": \"tempor sint\",\n  \"password\": \"com\",\n  \"nonProxyHosts\": [\n    \"velit\",\n    \"nostrud ipsum Ut\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Given proxy configuration is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"port\": 60764,\n  \"scheme\": \"http\",\n  \"server\": \"PbKp\",\n  \"user\": \"tempor sint\",\n  \"password\": \"com\",\n  \"nonProxyHosts\": [\n    \"velit\",\n    \"nostrud ipsum Ut\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove cluster proxy configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/proxy/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"configuration"
									]
								}
							},
							"response": [
								{
									"name": "Successful, previous configuration returned",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"scheme\": \"in sint\",\n  \"server\": \"mollit\",\n  \"port\": 8604124,\n  \"nonProxyHosts\": [\n    \"Duis in\",\n    \"sint\"\n  ],\n  \"userOrPasswordDefined\": false\n}"
								},
								{
									"name": "Proxy was not configured",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/proxy/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"configuration"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "test",
					"item": [
						{
							"name": "Test Internet connection using given proxy configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"port\": 60764,\n  \"scheme\": \"http\",\n  \"server\": \"PbKp\",\n  \"user\": \"tempor sint\",\n  \"password\": \"com\",\n  \"nonProxyHosts\": [\n    \"velit\",\n    \"nostrud ipsum Ut\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"test"
									]
								}
							},
							"response": [
								{
									"name": "Request was processed, check response body for details",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"port\": 60764,\n  \"scheme\": \"http\",\n  \"server\": \"PbKp\",\n  \"user\": \"tempor sint\",\n  \"password\": \"com\",\n  \"nonProxyHosts\": [\n    \"velit\",\n    \"nostrud ipsum Ut\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/proxy/test",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"test"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"connectionOk\": true,\n  \"testExecuted\": false,\n  \"testExecutionMessage\": \"culpa pariatur\"\n}"
								}
							]
						},
						{
							"name": "Test Internet connection from specific Data Center using given proxy configuration (Multi Data Center deployment)",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"port\": 60764,\n  \"scheme\": \"http\",\n  \"server\": \"PbKp\",\n  \"user\": \"tempor sint\",\n  \"password\": \"com\",\n  \"nonProxyHosts\": [\n    \"velit\",\n    \"nostrud ipsum Ut\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/proxy/test/:dc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy",
										"test",
										":dc"
									],
									"variable": [
										{
											"key": "dc",
											"value": "sint et",
											"description": "(Required) Data Center"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request was processed, check response body for details",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"port\": 60764,\n  \"scheme\": \"http\",\n  \"server\": \"PbKp\",\n  \"user\": \"tempor sint\",\n  \"password\": \"com\",\n  \"nonProxyHosts\": [\n    \"velit\",\n    \"nostrud ipsum Ut\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/proxy/test/:dc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"proxy",
												"test",
												":dc"
											],
											"variable": [
												{
													"key": "dc",
													"value": "sint et",
													"description": "(Required) Data Center"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"connectionOk\": true,\n  \"testExecuted\": false,\n  \"testExecutionMessage\": \"culpa pariatur\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "password Policy",
			"item": [
				{
					"name": "Get default's realm password policy configuration",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/passwordPolicy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"passwordPolicy"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordPolicy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"minNumberOfDigits\": 21,\n  \"minNumberOfLowercaseChars\": 18,\n  \"minNumberOfNonAlphanumericChars\": 73,\n  \"minNumberOfUppercaseChars\": 97,\n  \"minPasswordLength\": 120\n}"
						},
						{
							"name": "Realm not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passwordPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordPolicy"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update password policy configuration",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"minNumberOfDigits\": 21,\n  \"minNumberOfLowercaseChars\": 18,\n  \"minNumberOfNonAlphanumericChars\": 73,\n  \"minNumberOfUppercaseChars\": 97,\n  \"minPasswordLength\": 120\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/passwordPolicy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"passwordPolicy"
							]
						}
					},
					"response": [
						{
							"name": "Successfully updated. Response doesn't have a body.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"minNumberOfDigits\": 21,\n  \"minNumberOfLowercaseChars\": 18,\n  \"minNumberOfNonAlphanumericChars\": 73,\n  \"minNumberOfUppercaseChars\": 97,\n  \"minPasswordLength\": 120\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordPolicy"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"minNumberOfDigits\": 21,\n  \"minNumberOfLowercaseChars\": 18,\n  \"minNumberOfNonAlphanumericChars\": 73,\n  \"minNumberOfUppercaseChars\": 97,\n  \"minPasswordLength\": 120\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordPolicy"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"aute in\",\n        \"message\": \"est aliqua\",\n        \"path\": \"ullamco exercitation est elit\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"esse ut\",\n        \"message\": \"irure sint cillum\",\n        \"path\": \"Excepteur Ut\"\n      }\n    ],\n    \"message\": \"dolore occaecat \",\n    \"code\": -24779862\n  }\n}"
						},
						{
							"name": "Realm not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"minNumberOfDigits\": 21,\n  \"minNumberOfLowercaseChars\": 18,\n  \"minNumberOfNonAlphanumericChars\": 73,\n  \"minNumberOfUppercaseChars\": 97,\n  \"minPasswordLength\": 120\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/passwordPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passwordPolicy"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://{{DT_HOST}}/api/v1.0/onpremise",
			"type": "string"
		}
	]
}