{
    "item": [
        {
            "id": "a86cd889-6cfd-44ab-9701-dc0156c95a06",
            "name": "activeGates",
            "item": [
                {
                    "id": "7af0d779-ed72-403e-a26a-25af1a802d3f",
                    "name": "Lists all available ActiveGates",
                    "request": {
                        "name": "Lists all available ActiveGates",
                        "description": {
                            "content": "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGates"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "hostname",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "osType",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the OS type of the host it's running on."
                                },
                                {
                                    "disabled": false,
                                    "key": "networkAddress",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "loadBalancerAddress",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the Load Balancer address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "type",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the ActiveGate type."
                                },
                                {
                                    "disabled": false,
                                    "key": "networkZone",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "updateStatus",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the auto-update status."
                                },
                                {
                                    "disabled": false,
                                    "key": "versionCompareType",
                                    "value": "EQUAL",
                                    "description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here."
                                },
                                {
                                    "disabled": false,
                                    "key": "version",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here."
                                },
                                {
                                    "disabled": false,
                                    "key": "autoUpdate",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the actual state of auto-update."
                                },
                                {
                                    "disabled": false,
                                    "key": "group",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "online",
                                    "value": "<boolean>",
                                    "description": "Filters the resulting set of ActiveGates by the communication status."
                                },
                                {
                                    "disabled": false,
                                    "key": "enabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the enabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "enabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the enabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "disabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the disabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "disabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the disabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "containerized",
                                    "value": "<boolean>",
                                    "description": "Filters the resulting set of ActiveGates to those which are running in container (`true`) or not (`false`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "tokenState",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates to those with authorization token in specified state."
                                },
                                {
                                    "disabled": false,
                                    "key": "tokenExpirationSet",
                                    "value": "<boolean>",
                                    "description": "Filters the resulting set of ActiveGates to those with set expiration date for authorization token."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "bf7e3d7d-79f0-4ff4-9815-985928bc26c0",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "hostname",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "osType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "loadBalancerAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkZone",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "versionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "version",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "autoUpdate",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "group",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "online",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "containerized",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "tokenState",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tokenExpirationSet",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"activeGates\": [\n    {\n      \"id\": \"0x3efdd091\",\n      \"networkAddresses\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loadBalancerAddresses\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"osType\": \"WINDOWS\",\n      \"osArchitecture\": \"X86\",\n      \"osBitness\": \"64\",\n      \"autoUpdateStatus\": \"OUTDATED\",\n      \"offlineSince\": 1582031917814,\n      \"version\": \"1.185.0.20200201-120000\",\n      \"type\": \"ENVIRONMENT\",\n      \"hostname\": \"exampleHostname\",\n      \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n      \"environments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"autoUpdateSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"networkZone\": \"exampleNetworkZone\",\n      \"group\": \"default\",\n      \"modules\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"containerized\": false,\n      \"connectedHosts\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"activeGateTokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0x3efdd091\",\n      \"networkAddresses\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loadBalancerAddresses\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"osType\": \"WINDOWS\",\n      \"osArchitecture\": \"X86\",\n      \"osBitness\": \"64\",\n      \"autoUpdateStatus\": \"OUTDATED\",\n      \"offlineSince\": 1582031917814,\n      \"version\": \"1.185.0.20200201-120000\",\n      \"type\": \"ENVIRONMENT\",\n      \"hostname\": \"exampleHostname\",\n      \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n      \"environments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"autoUpdateSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"networkZone\": \"exampleNetworkZone\",\n      \"group\": \"default\",\n      \"modules\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"containerized\": false,\n      \"connectedHosts\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"activeGateTokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9f40de39-5ba5-4078-849a-f3e894a0e634",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "hostname",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "osType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "loadBalancerAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkZone",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "versionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "version",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "autoUpdate",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "group",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "online",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "containerized",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "tokenState",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tokenExpirationSet",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"veniam ex Duis\",\n    \"code\": -92310320\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9fb2b7fe-09f9-4072-ae7c-6120d3597225",
                    "name": "{agId}",
                    "item": [
                        {
                            "id": "63f028eb-4054-44ab-b751-be12b831e7b9",
                            "name": "Gets the details of the specified ActiveGate",
                            "request": {
                                "name": "Gets the details of the specified ActiveGate",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        ":agId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "agId",
                                            "description": "(Required) The ID of the required ActiveGate."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "fbe361a7-a82b-4c7e-899c-b9beb5938813",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"id\": \"0x3efdd091\",\n  \"networkAddresses\": [\n    \"occaecat velit\",\n    \"cupidatat\"\n  ],\n  \"loadBalancerAddresses\": [\n    \"est consequat sint eiusmod\",\n    \"sed commodo\"\n  ],\n  \"osType\": \"WINDOWS\",\n  \"osArchitecture\": \"X86\",\n  \"osBitness\": \"64\",\n  \"autoUpdateStatus\": \"OUTDATED\",\n  \"offlineSince\": 1582031917814,\n  \"version\": \"1.185.0.20200201-120000\",\n  \"type\": \"ENVIRONMENT\",\n  \"hostname\": \"exampleHostname\",\n  \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n  \"environments\": [\n    \"id commodo nostrud magna sed\",\n    \"labore laborum dolor proident tempor\"\n  ],\n  \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n  },\n  \"networkZone\": \"exampleNetworkZone\",\n  \"group\": \"default\",\n  \"modules\": [\n    {\n      \"misconfigured\": false,\n      \"version\": \"off\",\n      \"type\": \"KUBERNETES\",\n      \"attributes\": {\n        \"velit_ec\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eue6e\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"labore4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ipsum_cac\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"aliqua9\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"enabled\": false\n    },\n    {\n      \"misconfigured\": false,\n      \"version\": \"nulla do in\",\n      \"type\": \"KUBERNETES\",\n      \"attributes\": {\n        \"consecteturac\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"enabled\": true\n    }\n  ],\n  \"containerized\": false,\n  \"connectedHosts\": {\n    \"number\": 150\n  },\n  \"activeGateTokens\": [\n    {\n      \"environmentId\": \"magna non quis qui dolore\",\n      \"id\": \"dt0g02.4KWZO5EF\",\n      \"state\": \"VALID\"\n    },\n    {\n      \"environmentId\": \"anim\",\n      \"id\": \"dt0g02.4KWZO5EF\",\n      \"state\": \"UNKNOWN\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "d4d05fec-a25a-4cce-a1ff-890eddb3f199",
                                    "name": "Not found. See response body for details.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "29331879-7745-4720-b98e-0a2aa57edb36",
                            "name": "autoUpdate",
                            "item": [
                                {
                                    "id": "7508598f-5368-47c8-927c-858fe6a91841",
                                    "name": "Gets the configuration of auto-update for the specified ActiveGate",
                                    "request": {
                                        "name": "Gets the configuration of auto-update for the specified ActiveGate",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "b2325b1d-8a2b-4ed6-bb41-84442e18b469",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"setting\": \"INHERITED\",\n  \"effectiveSetting\": \"ENABLED\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "239c88b6-3931-45c8-8204-febcf63a3452",
                                            "name": "Not found. See response body for details.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "19c8c397-9d01-45ac-b4cc-7b860000610c",
                                    "name": "Updates the configuration of auto-update for the specified ActiveGate",
                                    "request": {
                                        "name": "Updates the configuration of auto-update for the specified ActiveGate",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"setting\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "d70a603f-fc27-4dd3-b4e3-dca840f30a23",
                                            "name": "Success. The auto-update configuration have been updated. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"setting\": \"INHERITED\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "e2e17861-bbd4-496e-a35e-9b23b23caf57",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"setting\": \"INHERITED\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "dc3b2613-02c6-490a-879a-b99ffb4ecbb2",
                                    "name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
                                    "request": {
                                        "name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "autoUpdate",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"setting\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "46a0dd6b-ff23-4aa2-a405-25eb455de7af",
                                            "name": "Validated. The submitted auto-update configuration is valid. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"setting\": \"INHERITED\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "1baa79b8-1ab2-44df-8b44-c7aadf6caa90",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"setting\": \"INHERITED\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "5e646929-da42-4506-a864-7f96e1d1728f",
                            "name": "updateJobs",
                            "item": [
                                {
                                    "id": "d70abb0c-14f8-4d5b-b386-ae6886aa634d",
                                    "name": "Lists update jobs for the specified ActiveGate",
                                    "request": {
                                        "name": "Lists update jobs for the specified ActiveGate",
                                        "description": {
                                            "content": "The job can update the ActiveGate to the specified version or the latest available one.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "updateJobs"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "from",
                                                    "value": "<string>",
                                                    "description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "to",
                                                    "value": "<string>",
                                                    "description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "startVersionCompareType",
                                                    "value": "EQUAL",
                                                    "description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "startVersion",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "updateType",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of update-jobs by the update type."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "targetVersionCompareType",
                                                    "value": "EQUAL",
                                                    "description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "targetVersion",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "lastUpdates",
                                                    "value": "false",
                                                    "description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "e9e1c02c-b407-4886-9288-ac7cf77d438b",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "startVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "updateType",
                                                            "value": "ACTIVE_GATE"
                                                        },
                                                        {
                                                            "key": "targetVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "targetVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "lastUpdates",
                                                            "value": "false"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"updateJobs\": [\n    {\n      \"targetVersion\": \"1.190.0.20200301-130000\",\n      \"cancelable\": false,\n      \"environments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"jobState\": \"SUCCEED\",\n      \"updateMethod\": \"AUTOMATIC\",\n      \"updateType\": \"ACTIVE_GATE\",\n      \"agType\": \"ENVIRONMENT\",\n      \"startVersion\": \"1.185.0.20200201-120000\",\n      \"jobId\": \"-3524498778810258605\",\n      \"timestamp\": 1582031917814,\n      \"duration\": 3608000,\n      \"error\": \"Excepteur dolor incididunt dolore\"\n    },\n    {\n      \"targetVersion\": \"1.190.0.20200301-130000\",\n      \"cancelable\": false,\n      \"environments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"jobState\": \"SUCCEED\",\n      \"updateMethod\": \"AUTOMATIC\",\n      \"updateType\": \"ACTIVE_GATE\",\n      \"agType\": \"ENVIRONMENT\",\n      \"startVersion\": \"1.185.0.20200201-120000\",\n      \"jobId\": \"-3524498778810258605\",\n      \"timestamp\": 1582031917814,\n      \"duration\": 3608000,\n      \"error\": \"Lorem\"\n    }\n  ],\n  \"agId\": \"0x3efdd092\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "adb069b0-2d1d-4248-8d92-e860893e02fa",
                                            "name": "Not found. See response body for details.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "startVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "updateType",
                                                            "value": "ACTIVE_GATE"
                                                        },
                                                        {
                                                            "key": "targetVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "targetVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "lastUpdates",
                                                            "value": "false"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "f88ec080-7217-468c-8dd3-95c236378a7c",
                                    "name": "Creates a new update job for the specified ActiveGate",
                                    "request": {
                                        "name": "Creates a new update job for the specified ActiveGate",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "updateJobs"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"targetVersion\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "73df16ad-eedf-4072-8d48-6ef6cec859e9",
                                            "name": "Success. The update-job have been created.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Created",
                                            "code": 201,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\",\n  \"cancelable\": false,\n  \"environments\": [\n    \"ut cupidatat dolor quis\",\n    \"est sed dolor incididunt\"\n  ],\n  \"jobState\": \"SUCCEED\",\n  \"updateMethod\": \"AUTOMATIC\",\n  \"updateType\": \"ACTIVE_GATE\",\n  \"agType\": \"ENVIRONMENT\",\n  \"startVersion\": \"1.185.0.20200201-120000\",\n  \"jobId\": \"-3524498778810258605\",\n  \"timestamp\": 1582031917814,\n  \"duration\": 3608000,\n  \"error\": \"sit minim\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "404e4471-51d0-44c5-a884-9d301115d6dc",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "ac35329e-5987-443e-91dc-a7cb9d3a9993",
                                    "name": "{jobId}",
                                    "item": [
                                        {
                                            "id": "84000453-a633-4941-9792-293c74c1dec4",
                                            "name": "Gets the parameters of the specified update job",
                                            "request": {
                                                "name": "Gets the parameters of the specified update job",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        ":jobId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "jobId",
                                                            "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "ffd001d5-dc6d-4d7a-8ef6-5ab4de2da983",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\",\n  \"cancelable\": false,\n  \"environments\": [\n    \"ut cupidatat dolor quis\",\n    \"est sed dolor incididunt\"\n  ],\n  \"jobState\": \"SUCCEED\",\n  \"updateMethod\": \"AUTOMATIC\",\n  \"updateType\": \"ACTIVE_GATE\",\n  \"agType\": \"ENVIRONMENT\",\n  \"startVersion\": \"1.185.0.20200201-120000\",\n  \"jobId\": \"-3524498778810258605\",\n  \"timestamp\": 1582031917814,\n  \"duration\": 3608000,\n  \"error\": \"sit minim\"\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "97a2c534-bf1a-40a5-afcf-584d6172c67c",
                                                    "name": "Not found. See response body for details.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "b0b42919-9f4a-414c-825d-0357202e4976",
                                            "name": "Deletes the specified update job",
                                            "request": {
                                                "name": "Deletes the specified update job",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        ":jobId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "jobId",
                                                            "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "ea93eefe-5fb8-41bb-aca9-b07763b21674",
                                                    "name": "Success. The update-job have been deleted. Response doesn't have a body.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                },
                                                {
                                                    "id": "2bc2a46f-db4d-40b3-bc35-30ccb76a469a",
                                                    "name": "Failed. The input is invalid.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "145c5aa2-7c08-4a13-aa2a-200a3aa56df3",
                                                    "name": "Not found. See response body for details.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "5c49ea01-7ef7-49e0-8282-9448c90aebf3",
                                    "name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
                                    "request": {
                                        "name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "updateJobs",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"targetVersion\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "29a1d2e5-d917-4b23-9fba-9fffc5b12590",
                                            "name": "Validated. The submitted update-job is valid. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "0ae3c2f1-645a-4744-bc24-46a4ed773d39",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "c9ee58f1-8115-46e9-b0f5-d475eb29bd86",
                    "name": "autoUpdate",
                    "item": [
                        {
                            "id": "56e5c272-a248-421d-b186-db1ee5379183",
                            "name": "Gets the global auto-update configuration of environment ActiveGates.",
                            "request": {
                                "name": "Gets the global auto-update configuration of environment ActiveGates.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "autoUpdate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "6b7ec9a3-2acb-450e-b8ac-a3a9d86a5f0c",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"globalSetting\": \"ENABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "fdd3ef05-61bd-497d-9df9-8effa2c8a686",
                            "name": "Puts the global auto-update configuration of environment ActiveGates.",
                            "request": {
                                "name": "Puts the global auto-update configuration of environment ActiveGates.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "autoUpdate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      \"<long>\",\n      \"<long>\"\n    ],\n    \"currentConfigurationVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"clusterVersion\": \"<string>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "5c8ca868-22e9-44c6-9463-a57f737ff432",
                                    "name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "5d3689ce-fd79-4635-bb77-d5649095c68d",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "ac373404-7b95-4f5e-bfb2-7a677b8e5768",
                            "name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
                            "request": {
                                "name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "autoUpdate",
                                        "validator"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      \"<long>\",\n      \"<long>\"\n    ],\n    \"currentConfigurationVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"clusterVersion\": \"<string>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "694097b8-6acd-4caa-addd-54793fa1d2fd",
                                    "name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "5090e447-6aef-4d4a-bd11-0e02f6f17d56",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "acd55417-99e5-4602-b4b6-5382d4d1e972",
                    "name": "List ActiveGates with update jobs",
                    "request": {
                        "name": "List ActiveGates with update jobs",
                        "description": {
                            "content": "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGates",
                                "updateJobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "startVersionCompareType",
                                    "value": "EQUAL",
                                    "description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
                                },
                                {
                                    "disabled": false,
                                    "key": "startVersion",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "updateType",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of update-jobs by the update type."
                                },
                                {
                                    "disabled": false,
                                    "key": "targetVersionCompareType",
                                    "value": "EQUAL",
                                    "description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
                                },
                                {
                                    "disabled": false,
                                    "key": "targetVersion",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "lastUpdates",
                                    "value": "false",
                                    "description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "4a46594a-2d9c-4592-b95e-30ccf30bb148",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "updateJobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "startVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "startVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateType",
                                            "value": "ACTIVE_GATE"
                                        },
                                        {
                                            "key": "targetVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "targetVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "lastUpdates",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"allUpdateJobs\": [\n    {\n      \"updateJobs\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"agId\": \"0x3efdd092\"\n    },\n    {\n      \"updateJobs\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"agId\": \"0x3efdd092\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "186aee21-04fd-47d7-aeee-b3732d2dce98",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "updateJobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "startVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "startVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateType",
                                            "value": "ACTIVE_GATE"
                                        },
                                        {
                                            "key": "targetVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "targetVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "lastUpdates",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "fc7c37a6-a52b-4f9e-9d00-031e66522a5f",
                    "name": "remoteConfigurationManagement",
                    "item": [
                        {
                            "id": "e47d8e57-b9df-40e2-a6a8-807a43e7fa73",
                            "name": "Lists finished ActiveGate remote configuration management jobs",
                            "request": {
                                "name": "Lists finished ActiveGate remote configuration management jobs",
                                "description": {
                                    "content": "The response includes finished jobs for the last 7 days.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
                                        },
                                        {
                                            "disabled": false,
                                            "key": "to",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "957a24b1-e3ec-4202-9e62-68d8a9ae3435",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"jobs\": [\n    {\n      \"entityType\": \"ACTIVE_GATE\",\n      \"id\": \"7974003406714390819\",\n      \"startTime\": \"2020-11-05T08:15:30.144Z\",\n      \"endTime\": \"2020-11-05T08:15:30.144Z\"\n    },\n    {\n      \"entityType\": \"ACTIVE_GATE\",\n      \"id\": \"7974003406714390819\",\n      \"startTime\": \"2020-11-05T08:15:30.144Z\",\n      \"endTime\": \"2020-11-05T08:15:30.144Z\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "17c23525-17c2-4bbe-9bf7-8c9130345134",
                            "name": "Creates a new remote configuration management job",
                            "request": {
                                "name": "Creates a new remote configuration management job",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "f4b89bf1-227b-431a-924d-364d0a28e085",
                                    "name": "Created",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"processedEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"totalEntitiesCount\": 1,\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"entityType\": \"ONE_AGENT\",\n  \"id\": \"7974003406714390819\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "22ec3573-d72b-4c13-a27c-118813c8f72e",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"invalidEntities\": [\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    },\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "a25e72d6-3a07-4284-b5b0-93d0b38aa0d6",
                                    "name": "Other remote configuration management job is currently being executed",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "a8a6c870-6b58-4b84-85a2-497e73658002",
                            "name": "Creates a preview for remote configuration management job",
                            "request": {
                                "name": "Creates a preview for remote configuration management job",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement",
                                        "preview"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "e7d0dc47-1df6-481a-a3b5-9e5c36b7e8c3",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "preview"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"previews\": [\n    {\n      \"alreadyConfiguredEntitiesCount\": 1,\n      \"targetEntitiesCount\": 2,\n      \"attribute\": \"networkZone\",\n      \"value\": \"exampleNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"alreadyConfiguredEntitiesCount\": 1,\n      \"targetEntitiesCount\": 2,\n      \"attribute\": \"networkZone\",\n      \"value\": \"exampleNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "88f30e69-210a-43c6-9e48-fc4b94340248",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "preview"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"invalidEntities\": [\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    },\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "5b2cd4fc-a00a-4c8d-a9e1-ea0003c71118",
                            "name": "Gets remote configuration management job that is currently running",
                            "request": {
                                "name": "Gets remote configuration management job that is currently running",
                                "description": {
                                    "content": "The currently running remote configuration management job may be related to ActiveGates or OneAgents. There is a limit of one concurrent remote configuration management job, regardless of the entity type.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement",
                                        "current"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "5939a409-2b73-4ca4-91c0-4ccb83cca3a1",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "current"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"processedEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"totalEntitiesCount\": 1,\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"entityType\": \"ONE_AGENT\",\n  \"id\": \"7974003406714390819\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "d5c05d19-d68f-431d-b2ec-655e4dbd6655",
                                    "name": "No remote configuration management job is currently running ",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "current"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "64841f70-e633-43f2-84bd-00f0cafc7f0c",
                            "name": "Gets the specified remote configuration management job",
                            "request": {
                                "name": "Gets the specified remote configuration management job",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required remote configuration management job."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "44cdcfef-83d4-42d3-9e54-baca4b356506",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required remote configuration management job."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"processedEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"totalEntitiesCount\": 1,\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"entityType\": \"ONE_AGENT\",\n  \"id\": \"7974003406714390819\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "11fe7549-f62b-4040-b44c-603603b4f667",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required remote configuration management job."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "7792331f-4b45-4a64-91de-d0aeda8f6319",
                            "name": "Validates the payload for the `POST /activeGates/remoteConfigurationManagement` request.",
                            "request": {
                                "name": "Validates the payload for the `POST /activeGates/remoteConfigurationManagement` request.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement",
                                        "validator"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "e1da0a6e-3cde-4ffe-8006-e34416c75826",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "6a956440-8786-4f8e-b037-05527a6b8db9",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"invalidEntities\": [\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    },\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "b82992b0-57fe-4bb0-9ea8-e7c7bc6dc5ac",
                    "name": "Gets the status of ActiveGate tokens enforcement | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets the status of ActiveGate tokens enforcement | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "activeGates",
                                "tokenEnforcement"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "96ca18ce-16fa-4dbc-8e32-080ee3fb6524",
                            "name": "Success. The response contains the status of ActiveGate tokens enforcement",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "tokenEnforcement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"manualEnforced\": true,\n  \"autoEnforced\": false,\n  \"autoEnforcementEstimation\": {\n    \"value\": -85287495,\n    \"unit\": \"DAYS\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "f695003a-a771-4773-baad-28a9f2c5b3b2",
            "name": "entities",
            "item": [
                {
                    "id": "5294b0ba-cf59-4fa6-88f3-2e8cad1683cb",
                    "name": "Gets the information about monitored entities",
                    "request": {
                        "name": "Gets the information about monitored entities",
                        "description": {
                            "content": "Lists entities observed within the specified timeframe along with their properties. \n\nWhen you query entities of the `SERVICE_METHOD` type, only the following requests are returned: \n\n* [Key requests](https://dt-url.net/a903u9s) \n* Top X requests that are used for [baselining](https://dt-url.net/0j23uqb) \n* Requests that have caused a [problem](https://dt-url.net/pf43uqg) \n\nYou can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "entities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of entities. \n\nIf not set, 50 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "Defines the scope of the query. Only entities matching the specified criteria are included into response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\nThe field is **required** when you're querying the first page of results."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "<string>",
                                    "description": "Defines the ordering of the entities returned. \n\nThis field is **optional**, each field has a sign prefix (+/-), which corresponds to sorting order ( + for ascending and - for descending). If no sign prefix is set, then default ascending sorting order will be applied. \n\nCurrently ordering is only available for the display name (for example `sort=name or sort =+name for ascending, sort=-name for descending`)"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "c51eaa31-4da2-4241-b09c-18bb26badf81",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 40809417,\n  \"pageSize\": 82061436,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"entities\": [\n    {\n      \"entityId\": \"HOST-06F288EE2A930951\",\n      \"type\": \"HOST\",\n      \"displayName\": \"my host\",\n      \"icon\": {\n        \"primaryIconType\": \"linux\",\n        \"secondaryIconType\": \"microsoft-azure-signet\",\n        \"customIconPath\": \"host\"\n      },\n      \"firstSeenTms\": 1574697667547,\n      \"lastSeenTms\": 1588242361417,\n      \"properties\": {\n        \"bitness\": 64,\n        \"monitoringMode\": \"FULL_STACK\",\n        \"osType\": \"LINUX\",\n        \"osArchitecture\": \"X86\",\n        \"networkZoneId\": \"aws.us.east01\",\n        \"cpuCores\": 8\n      },\n      \"tags\": [\n        {\n          \"context\": \"CONTEXTLESS\",\n          \"key\": \"architecture\",\n          \"value\": \"x86\",\n          \"stringRepresentation\": \"architecture:x86\"\n        },\n        {\n          \"context\": \"ENVIRONMENT\",\n          \"key\": \"Infrastructure\",\n          \"value\": \"Linux\",\n          \"stringRepresentation\": \"[ENVIRONMENT]Infrastructure:Linux\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"name\": \"main app\"\n        }\n      ],\n      \"fromRelationships\": {\n        \"isInstanceOf\": [\n          {\n            \"type\": \"HOST_GROUP\"\n          }\n        ]\n      },\n      \"toRelationships\": {\n        \"isDiskOf\": [\n          {\n            \"type\": \"DISK\"\n          }\n        ]\n      }\n    },\n    {\n      \"entityId\": \"HOST-06F288EE2A930951\",\n      \"type\": \"HOST\",\n      \"displayName\": \"my host\",\n      \"icon\": {\n        \"primaryIconType\": \"linux\",\n        \"secondaryIconType\": \"microsoft-azure-signet\",\n        \"customIconPath\": \"host\"\n      },\n      \"firstSeenTms\": 1574697667547,\n      \"lastSeenTms\": 1588242361417,\n      \"properties\": {\n        \"bitness\": 64,\n        \"monitoringMode\": \"FULL_STACK\",\n        \"osType\": \"LINUX\",\n        \"osArchitecture\": \"X86\",\n        \"networkZoneId\": \"aws.us.east01\",\n        \"cpuCores\": 8\n      },\n      \"tags\": [\n        {\n          \"context\": \"CONTEXTLESS\",\n          \"key\": \"architecture\",\n          \"value\": \"x86\",\n          \"stringRepresentation\": \"architecture:x86\"\n        },\n        {\n          \"context\": \"ENVIRONMENT\",\n          \"key\": \"Infrastructure\",\n          \"value\": \"Linux\",\n          \"stringRepresentation\": \"[ENVIRONMENT]Infrastructure:Linux\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"name\": \"main app\"\n        }\n      ],\n      \"fromRelationships\": {\n        \"isInstanceOf\": [\n          {\n            \"type\": \"HOST_GROUP\"\n          }\n        ]\n      },\n      \"toRelationships\": {\n        \"isDiskOf\": [\n          {\n            \"type\": \"DISK\"\n          }\n        ]\n      }\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "0b647215-3fab-4ac6-a2bf-b9387f414572",
                    "name": "Gets the properties of the specified monitored entity",
                    "request": {
                        "name": "Gets the properties of the specified monitored entity",
                        "description": {},
                        "url": {
                            "path": [
                                "entities",
                                ":entityId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
                                }
                            ],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "entityId",
                                    "description": "(Required) The ID of the required entity."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "38b37211-f8c7-4d2a-be50-27013981ca32",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities",
                                        ":entityId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "entityId",
                                            "description": "(Required) The ID of the required entity."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"firstSeenTms\": 18315525,\n  \"lastSeenTms\": 72122272,\n  \"entityId\": \"in amet\",\n  \"fromRelationships\": {\n    \"consequat_387\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"quidd\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"estb2d\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"toRelationships\": {\n    \"ipsum3a\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"nulla_a\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"in_2\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"managementZones\": [\n    {\n      \"name\": \"tempor exercitation ut ipsum non\",\n      \"id\": \"esse Ut aliquip\"\n    },\n    {\n      \"name\": \"labore in\",\n      \"id\": \"Ut minim\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"stringRepresentation\": \"id quis in ea\",\n      \"value\": \"\",\n      \"key\": \"elit ex reprehenderit nisi\",\n      \"context\": \"sit deserunt mollit sint est\"\n    },\n    {\n      \"stringRepresentation\": \"quis do\",\n      \"value\": \"commodo sed dolor\",\n      \"key\": \"laborum eu\",\n      \"context\": \"laborum aute\"\n    }\n  ],\n  \"icon\": {\n    \"secondaryIconType\": \"ipsum Excepteur amet laboris exercitation\",\n    \"primaryIconType\": \"voluptate ut do\",\n    \"customIconPath\": \"do nisi elit\"\n  },\n  \"displayName\": \"pariatur ad qui sed\",\n  \"properties\": {\n    \"deserunt_bd6\": {},\n    \"nostrud83_\": {}\n  },\n  \"type\": \"fugiat\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "6e7ef6cb-d557-4121-bdd9-85ac0194cb5b",
                    "name": "Creates or updates a custom device",
                    "request": {
                        "name": "Creates or updates a custom device",
                        "description": {},
                        "url": {
                            "path": [
                                "entities",
                                "custom"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"customDeviceId\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"group\": \"<string>\",\n  \"ipAddresses\": [\n    \"<string>\"\n  ],\n  \"listenPorts\": [\n    \"<integer>\"\n  ],\n  \"type\": \"<string>\",\n  \"faviconUrl\": \"<string>\",\n  \"configUrl\": \"<string>\",\n  \"properties\": {\n    \"ut271\": \"<string>\",\n    \"aute_0\": \"<string>\"\n  },\n  \"dnsNames\": [\n    \"<string>\"\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "0cfc359a-ba05-4d5c-a61e-471eeeb325fe",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities",
                                        "custom"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"customDeviceId\": \"customDeviceId\",\n  \"displayName\": \"coffeeMachine\",\n  \"group\": \"myCustomDeviceGroup\",\n  \"ipAddresses\": [\n    \"10.0.0.1\"\n  ],\n  \"listenPorts\": [\n    80\n  ],\n  \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n  \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n  \"type\": \"coffee machine\",\n  \"properties\": {},\n  \"dnsNames\": [\n    \"coffee-machine.dynatrace.internal.com\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"entityId\": \"tempor consequat\",\n  \"groupId\": \"reprehenderit dolore aliquip aliqua nisi\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c095e5a7-7b7f-48fd-b8ba-d19cf052c40e",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities",
                                        "custom"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"customDeviceId\": \"customDeviceId\",\n  \"displayName\": \"coffeeMachine\",\n  \"group\": \"myCustomDeviceGroup\",\n  \"ipAddresses\": [\n    \"10.0.0.1\"\n  ],\n  \"listenPorts\": [\n    80\n  ],\n  \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n  \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n  \"type\": \"coffee machine\",\n  \"properties\": {},\n  \"dnsNames\": [\n    \"coffee-machine.dynatrace.internal.com\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "0d4e60ac-2a52-44e5-8e1b-5313b2c2c87a",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities",
                                        "custom"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"customDeviceId\": \"customDeviceId\",\n  \"displayName\": \"coffeeMachine\",\n  \"group\": \"myCustomDeviceGroup\",\n  \"ipAddresses\": [\n    \"10.0.0.1\"\n  ],\n  \"listenPorts\": [\n    80\n  ],\n  \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n  \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n  \"type\": \"coffee machine\",\n  \"properties\": {},\n  \"dnsNames\": [\n    \"coffee-machine.dynatrace.internal.com\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "ba471a13-51f8-4125-9dc6-f4b4d4f16c89",
            "name": "entityTypes",
            "item": [
                {
                    "id": "21d0b8a4-c639-44e7-a368-d21ec890162c",
                    "name": "Gets a list of properties for all entity types",
                    "request": {
                        "name": "Gets a list of properties for all entity types",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "entityTypes"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of entity types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "c67c7ec0-a20f-4157-8948-f07e65358f7f",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entityTypes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -84325833,\n  \"pageSize\": 76754160,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"types\": [\n    {\n      \"entityLimitExceeded\": true,\n      \"dimensionKey\": \"laborum sint pariatur\",\n      \"fromRelationships\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"toRelationships\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"managementZones\": \"tempor nostrud enim\",\n      \"tags\": \"dolore irure\",\n      \"displayName\": \"voluptate anim\",\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"sint ex nisi\"\n    },\n    {\n      \"entityLimitExceeded\": true,\n      \"dimensionKey\": \"reprehenderit mollit\",\n      \"fromRelationships\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"toRelationships\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"managementZones\": \"laboris Duis consequat\",\n      \"tags\": \"ad aliquip\",\n      \"displayName\": \"occaecat irure Excepteur\",\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"qui fugiat ex cillum ull\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a65967a9-81da-45ec-8f3c-e951b0e0baa7",
                            "name": "Failed. There are no more entity types to export.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entityTypes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "062f5395-8f59-4368-a5ef-df8cade818b0",
                    "name": "Gets a list of properties for the specified entity type",
                    "request": {
                        "name": "Gets a list of properties for the specified entity type",
                        "description": {},
                        "url": {
                            "path": [
                                "entityTypes",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "description": "(Required) The required entity type."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2cb1c0f0-35eb-42e4-b5de-aed4fd7064f5",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entityTypes",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "type",
                                            "description": "(Required) The required entity type."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"entityLimitExceeded\": true,\n  \"dimensionKey\": \"sint proident elit\",\n  \"fromRelationships\": [\n    {\n      \"toTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"sit ut dolore eu\"\n    },\n    {\n      \"toTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"eiusmod dolore\"\n    }\n  ],\n  \"toRelationships\": [\n    {\n      \"fromTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"pariatur voluptate reprehenderit\"\n    },\n    {\n      \"fromTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"ullamco minim\"\n    }\n  ],\n  \"managementZones\": \"in minim\",\n  \"tags\": \"ut sint ex non\",\n  \"displayName\": \"laboris nulla\",\n  \"properties\": [\n    {\n      \"displayName\": \"cpu cores\",\n      \"id\": \"cpuCores\",\n      \"type\": \"Number\"\n    },\n    {\n      \"displayName\": \"cpu cores\",\n      \"id\": \"cpuCores\",\n      \"type\": \"Number\"\n    }\n  ],\n  \"type\": \"voluptate reprehenderit tempor anim irure\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c2aabbb9-a224-4d9d-a922-fdda32db620f",
                            "name": "Failed. The requested monitored entity type is not exportable or doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entityTypes",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "type",
                                            "description": "(Required) The required entity type."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "4ad2f26b-c8dd-4363-a73e-d477c884c2fd",
            "name": "events",
            "item": [
                {
                    "id": "8db2d340-85eb-4df5-bb4c-5fb2b1987a7c",
                    "name": "Lists events within the specified timeframe",
                    "request": {
                        "name": "Lists events within the specified timeframe",
                        "description": {},
                        "url": {
                            "path": [
                                "events"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of events in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "eventSelector",
                                    "value": "<string>",
                                    "description": "Defines the scope of the query. Only events matching the specified criteria are included in the response.\n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies.\n* Event ID: `eventId(\"id-1\", \"id-2\")`.\n* ID of related entity: `entityId(\"id-1\", \"id-2\")`.\n* Event status: `status(\"OPEN\")` or `status(\"CLOSED\")`. You can specify only one status.\n* Management zone ID: `managementZoneId(\"123\", \"321\")`.\n* Event type: `eventType(\"event-type\")`. You can specify only one event type. You can fetch the list of possible event types with the [GET event types](https://dt-url.net/qc03u6w) call. \n* Correlation ID: `correlationId(\"id-1\", \"id-2\")`.\n* Happened during maintenance (true, false): `underMaintenance(true)`. \n* Notifications are suppressed (true, false): `suppressAlert(true)`. \n* Problem creation is suppressed (true, false): `suppressProblem(true)`. \n* Frequent event (true, false): `frequentEvent(true)`. \n* Event property: `property.<key>(\"value-1\", \"value-2\")`.\n\nTo set several criteria, separate them with commas (`,`). Only results matching **all** criteria are included in the response. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\nThe number of entities that can be selected is limited to 10000."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "8f080422-5cdd-44b5-b622-8492f70b71cf",
                            "name": "Success. The response contains the list of events.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "events"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "eventSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 80532035,\n  \"warnings\": [\n    \"et eiusmod ea sint Duis\",\n    \"nulla ea\"\n  ],\n  \"events\": [\n    {\n      \"underMaintenance\": true,\n      \"frequentEvent\": true,\n      \"suppressProblem\": true,\n      \"suppressAlert\": false,\n      \"entityId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventType\": \"LOW_DISK_SPACE\",\n      \"managementZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"eventId\": \"4293884258445543163_1564039524182\",\n      \"entityTags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"OPEN\",\n      \"startTime\": 1564039524182,\n      \"endTime\": 1564039524182,\n      \"title\": \"High CPU load on host X\",\n      \"correlationId\": \"933613657e1c8fcf\"\n    },\n    {\n      \"underMaintenance\": true,\n      \"frequentEvent\": false,\n      \"suppressProblem\": true,\n      \"suppressAlert\": true,\n      \"entityId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventType\": \"LOW_DISK_SPACE\",\n      \"managementZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"eventId\": \"4293884258445543163_1564039524182\",\n      \"entityTags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"OPEN\",\n      \"startTime\": 1564039524182,\n      \"endTime\": 1564039524182,\n      \"title\": \"High CPU load on host X\",\n      \"correlationId\": \"933613657e1c8fcf\"\n    }\n  ],\n  \"pageSize\": 39995355,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "07316b95-0672-4b03-a906-c5c72d76823f",
                    "name": "Ingests a custom event",
                    "request": {
                        "name": "Ingests a custom event",
                        "description": {
                            "content": "The ingestion of custom events consumes [Davis Data Units](https://dt-url.net/ddu) (DDUs) from the events pool.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "events",
                                "ingest"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"eventType\": \"<string>\",\n  \"title\": \"<string>\",\n  \"startTime\": \"<long>\",\n  \"endTime\": \"<long>\",\n  \"timeout\": \"<integer>\",\n  \"entitySelector\": \"<string>\",\n  \"properties\": {\n    \"tempor_3c\": \"<string>\",\n    \"sed92\": \"<string>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "97b47076-74fa-4ba8-9cbd-5fd25202572a",
                            "name": "The event ingest request was received by the server. The response body indicates for each event whether its creation was successful.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "events",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"eventType\": \"<string>\",\n  \"title\": \"<string>\",\n  \"startTime\": \"<long>\",\n  \"endTime\": \"<long>\",\n  \"timeout\": \"<integer>\",\n  \"entitySelector\": \"<string>\",\n  \"properties\": {\n    \"ullamco5\": \"<string>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"reportCount\": 22846448,\n  \"eventIngestResults\": [\n    {\n      \"status\": \"INVALID_ENTITY_TYPE\",\n      \"correlationId\": \"incididunt aliqua fugiat in\"\n    },\n    {\n      \"status\": \"INVALID_METADATA\",\n      \"correlationId\": \"aliquip ut\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9e859db0-48cc-4beb-acc2-548bea3778bf",
                    "name": "Gets the properties of an event",
                    "request": {
                        "name": "Gets the properties of an event",
                        "description": {},
                        "url": {
                            "path": [
                                "events",
                                ":eventId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "eventId",
                                    "description": "(Required) The ID of the required event."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "56fadace-1e88-434e-aa65-44047a01bec5",
                            "name": "Success. The response contains the configuration of the event.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "events",
                                        ":eventId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "eventId",
                                            "description": "(Required) The ID of the required event."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"underMaintenance\": true,\n  \"frequentEvent\": true,\n  \"suppressProblem\": false,\n  \"suppressAlert\": false,\n  \"entityId\": {\n    \"entityId\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"name\": \"adipisicing deserunt aute sint\"\n  },\n  \"eventType\": \"LOW_DISK_SPACE\",\n  \"managementZones\": [\n    {\n      \"name\": \"et laboris\",\n      \"id\": \"consequat dolore qui\"\n    },\n    {\n      \"name\": \"ullamco et nu\",\n      \"id\": \"quis veniam\"\n    }\n  ],\n  \"eventId\": \"4293884258445543163_1564039524182\",\n  \"entityTags\": [\n    {\n      \"stringRepresentation\": \"sit cillum\",\n      \"value\": \"eu aliqua\",\n      \"key\": \"sed\",\n      \"context\": \"ea ex ut dolore\"\n    },\n    {\n      \"stringRepresentation\": \"esse\",\n      \"value\": \"deseru\",\n      \"key\": \"nostrud eiusmod in\",\n      \"context\": \"dolore\"\n    }\n  ],\n  \"properties\": [\n    {\n      \"value\": \"no\",\n      \"key\": \"in id elit quis\"\n    },\n    {\n      \"value\": \"voluptate consequat\",\n      \"key\": \"voluptate magna\"\n    }\n  ],\n  \"status\": \"OPEN\",\n  \"startTime\": 1564039524182,\n  \"endTime\": 1564039524182,\n  \"title\": \"High CPU load on host X\",\n  \"correlationId\": \"933613657e1c8fcf\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "7cdfaa1a-c55f-495c-89da-1d891216404a",
            "name": "eventProperties",
            "item": [
                {
                    "id": "b144e298-cd43-4b3e-a93a-9790ffa9b135",
                    "name": "Lists all event properties",
                    "request": {
                        "name": "Lists all event properties",
                        "description": {},
                        "url": {
                            "path": [
                                "eventProperties"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of event properties in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "6b6a7fea-5ba7-4034-bc56-57ea4c52abae",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "eventProperties"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 24705471,\n  \"eventProperties\": [\n    {\n      \"displayName\": \"Custom description\",\n      \"writable\": true,\n      \"key\": \"dt.event.description\",\n      \"description\": \"Duis eu aliqua ex\"\n    },\n    {\n      \"displayName\": \"Custom description\",\n      \"writable\": true,\n      \"key\": \"dt.event.description\",\n      \"description\": \"id magna\"\n    }\n  ],\n  \"pageSize\": 55267332,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "52b65ee8-a1ac-40dc-ba13-c97c8c6fe542",
                    "name": "Gets the details of an event property",
                    "request": {
                        "name": "Gets the details of an event property",
                        "description": {},
                        "url": {
                            "path": [
                                "eventProperties",
                                ":propertyKey"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "propertyKey",
                                    "description": "(Required) The event property key you're inquiring."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "0eeee4d1-34c1-4da6-b053-85d0c25ab3ee",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "eventProperties",
                                        ":propertyKey"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "propertyKey",
                                            "description": "(Required) The event property key you're inquiring."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"displayName\": \"Custom description\",\n  \"writable\": false,\n  \"key\": \"dt.event.description\",\n  \"description\": \"ex quis nostrud magna minim\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "3a184689-3088-48e6-9e40-40cbad390c91",
            "name": "eventTypes",
            "item": [
                {
                    "id": "45978607-fb02-4ce3-8c7c-019237d1ce41",
                    "name": "Lists all event types",
                    "request": {
                        "name": "Lists all event types",
                        "description": {},
                        "url": {
                            "path": [
                                "eventTypes"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of event types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "0c549e69-efa3-4f00-a26f-ea0e8bb807a2",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "eventTypes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 55432929,\n  \"eventTypeInfos\": [\n    {\n      \"severityLevel\": \"PERFORMANCE\",\n      \"displayName\": \"High CPU\",\n      \"type\": \"OSI_HIGH_CPU\",\n      \"description\": \"dolor labore ullamco ut et\"\n    },\n    {\n      \"severityLevel\": \"PERFORMANCE\",\n      \"displayName\": \"High CPU\",\n      \"type\": \"OSI_HIGH_CPU\",\n      \"description\": \"consequat eiusmod ullamco irure deserunt\"\n    }\n  ],\n  \"pageSize\": 37527788,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "32d2394d-80e6-4662-9f21-f4f37a0225dc",
                    "name": "Gets the properties of an event type",
                    "request": {
                        "name": "Gets the properties of an event type",
                        "description": {},
                        "url": {
                            "path": [
                                "eventTypes",
                                ":eventType"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "eventType",
                                    "description": "(Required) The event type you're inquiring."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "c8a08a65-e014-481d-b12a-1493611ba54f",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "eventTypes",
                                        ":eventType"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "eventType",
                                            "description": "(Required) The event type you're inquiring."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"severityLevel\": \"PERFORMANCE\",\n  \"displayName\": \"High CPU\",\n  \"type\": \"OSI_HIGH_CPU\",\n  \"description\": \"commodo veniam sunt incididunt\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "f6244792-ddbb-42c9-bc55-6d5e3c8b40fc",
            "name": "metrics",
            "item": [
                {
                    "id": "966cc163-0397-443c-baee-ae1e3769148e",
                    "name": "Lists all available metrics",
                    "request": {
                        "name": "Lists all available metrics",
                        "description": {
                            "content": "You can narrow down the output by selecting metrics in the **metricSelector** field. \n\nYou can additionally limit the output by using pagination: \n\n1. Specify the number of results per page in the **pageSize** query parameter. \n\n2. Then use the cursor from the **nextPageKey** field of the response in the **nextPageKey** query parameter to obtain subsequent pages. All other query parameters must be omitted.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "metrics"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of metric schemata in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\n If a value higher than 500 is used, only 500 results per page are returned."
                                },
                                {
                                    "disabled": false,
                                    "key": "metricSelector",
                                    "value": "<string>",
                                    "description": "Selects metrics for the query by their keys.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can select a full set of related metrics by using a trailing asterisk (`*`) wildcard. For example, `builtin:host.*` selects all host-based metrics and `builtin:*` selects all Dynatrace-provided metrics. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax.\n\n Only `aggregation`, `merge`, `parents`, and `splitBy` transformations are supported by this endpoint.\n\n If the metric key contains any symbols you must quote (`\"`) the key. The following characters inside of a quoted metric key must be escaped with a tilde (`~`):\n\n* Quotes (`\"`)\n* Tildes (`~`) \n\nFor example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents: Type \"APACHE\"** you must specify this selector: \n\n `\"ext:selfmonitoring.jmx.Agents: Type ~\"APACHE~\"\"` \n\n\n\n To find metrics based on a search term, rather than metricId, use the **text** query parameter instead of this one."
                                },
                                {
                                    "disabled": false,
                                    "key": "text",
                                    "value": "<string>",
                                    "description": "Metric registry search term. Only show metrics that contain the term in their key, display name, or description. Use the `metricSelector` parameter instead of this one to select a complete metric hierarchy instead of doing a text-based search."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Defines the list of metric properties included in the response. \n\n`metricId` is **always** included in the result. The following additional properties are available: \n\n* `displayName`: The name of the metric in the user interface. Enabled by default. \n* `description`: A short description of the metric. Enabled by default. \n* `unit`: The unit of the metric. Enabled by default. \n* `tags`: The tags of the metric. \n+ `dduBillable`:  An indicator whether the usage of metric consumes [Davis data units](https://dt-url.net/ddu). \n* `created`:  The timestamp (UTC milliseconds) when the metrics has been created. \n* `lastWritten`:  The timestamp (UTC milliseconds) when metric data points have been written for the last time. \n* `aggregationTypes`: The list of allowed aggregations for the metric. Note that it may be different after a [transformation](https://dt-url.net/metricSelector) is applied. \n* `defaultAggregation`: The default aggregation of the metric. It is used when no aggregation is specified or the `:auto` transformation is set. \n* `dimensionDefinitions`: The fine metric division (for example, process group and process ID for some process-related metric). \n* `transformations`: A list of [transformations](https://dt-url.net/metricSelector) that can be applied to the metric.\n* `entityType`: A list of entity types supported by the metric.\n* `minimumValue`: The minimum allowed value of the metric.\n* `maximumValue`: The maximum allowed value of the metric.\n* `rootCauseRelevant`: Whether (true or false) the metric is related to a root cause of a problem. A root-cause relevant metric represents a strong indicator for a faulty component.\n* `impactRelevant`: Whether (true or false) the metric is relevant to a problem's impact. An impact-relevant metric is highly dependent on other metrics and changes because an underlying root-cause metric has changed.\n* `metricValueType`: The type of the metric's value. You have these options:\n\t * `score`: A score metric is a metric where high values indicate a good situation, while low values indicate trouble. An example of such a metric is a success rate.\n\t * `error`: An error metric is a metric where high values indicate trouble, while low values indicate a good situation. An example of such a metric is an error count.\n* `latency`: The latency of the metric, in minutes. The latency is the expected reporting delay (for example, caused by constraints of cloud vendors or other third-party data sources) between the observation of a metric data point and its availability in Dynatrace. The allowed value range is from `1` to `60` minutes.\n* `metricSelector`: The underlying metric selector used by a func: metric.\n* `scalar`: Indicates whether the metric expression resolves to a scalar (`true`) or to a series (`false`). \nA scalar result always contains one data point. The amount of data points in a series result depends on the resolution you're using. \n* `resolutionInfSupported`: If `true`, resolution=Inf can be applied to the metric query. \n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`.\n\nTo specify several properties, join them with a comma (for example `fields=+aggregationTypes,-description`).\n\nIf you specify just one property, the response contains the metric key and the specified property. To return metric keys only, specify `metricId` here."
                                },
                                {
                                    "disabled": false,
                                    "key": "writtenSince",
                                    "value": "<string>",
                                    "description": "Filters the resulted set of metrics to those that have data points within the specified timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "metadataSelector",
                                    "value": "<string>",
                                    "description": "The metadata scope of the query. Only metrics with specified properties are included to the response. \n\nYou can set one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used. If several values are specified, the **OR** logic applies. \n\n* `unit(\"unit-1\",\"unit-2\")` \n* `tags(\"tag-1\",\"tag-2\")` \n* `dimensionKey(\"dimkey-1\",\"dimkey-2\")`. The filtering applies only to dimensions that were written within the last 14 days.\n\nTo set several criteria, separate them with a comma (`,`). For example, `tags(\"feature\",\"cloud\"),unit(\"Percent\"),dimensionKey(\"location\")`. Only results matching **all** criteria are included in response. \n\nFor example, to list metrics that have the tags **feature** AND **cloud** with a unit of **Percent** OR **MegaByte** AND a dimension with a dimension key **location**, use this **metadataSelector**: `tags(\"feature\"),unit(\"Percent\",\"MegaByte\"),tags(\"cloud\"),dimensionKey(\"location\")`."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "f4d60e50-ddaf-41ae-af26-84f339d3e3c3",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "text",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "writtenSince",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "metadataSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"metrics\": [\n    {\n      \"metricId\": \"laborum esse\",\n      \"dduBillable\": true,\n      \"defaultAggregation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimensionDefinitions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"lastWritten\": 60753922,\n      \"impactRelevant\": true,\n      \"minimumValue\": 42096892.830511004,\n      \"maximumValue\": 81295013.4433597,\n      \"latency\": 38949955,\n      \"resolutionInfSupported\": true,\n      \"unitDisplayFormat\": \"binary\",\n      \"dimensionCardinalities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"rootCauseRelevant\": false,\n      \"metricValueType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": -95736954,\n      \"tags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"scalar\": false,\n      \"aggregationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"metricSelector\": \"elit aliqua incididunt Duis Excepteur\",\n      \"entityType\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"quis sed\",\n      \"description\": \"Ut aute consequat\",\n      \"transformations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unit\": \"sunt et\",\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"metricId\": \"tempor est aliquip\",\n      \"dduBillable\": true,\n      \"defaultAggregation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimensionDefinitions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"lastWritten\": 1094071,\n      \"impactRelevant\": true,\n      \"minimumValue\": 87083496.76583335,\n      \"maximumValue\": 23708320.216008887,\n      \"latency\": -14666290,\n      \"resolutionInfSupported\": true,\n      \"unitDisplayFormat\": \"decimal\",\n      \"dimensionCardinalities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"rootCauseRelevant\": true,\n      \"metricValueType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": 62190248,\n      \"tags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"scalar\": true,\n      \"aggregationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"metricSelector\": \"est anim\",\n      \"entityType\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"est eiusmod ut\",\n      \"description\": \"tempor in ea veniam\",\n      \"transformations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unit\": \"cillum ut amet Ut\",\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"nextPageKey\": \"mollit pariatur consectetur incididunt\",\n  \"totalCount\": -62376202,\n  \"warnings\": [\n    \"nostrud dolore aute amet\",\n    \"magna sint\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0f374a56-f312-46a6-be90-5c3385b53b93",
                            "name": "Syntax or validation error. **metricSelector** or **fields** have syntactic or semantic errors.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "text",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "writtenSince",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "metadataSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "159e7d53-8e95-44f4-a628-8c1ae1f523eb",
                            "name": "A metric has not been found.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "text",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "writtenSince",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "metadataSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "b22457a2-1ff0-4d86-999b-8ca6f3adc821",
                            "name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "text",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "writtenSince",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "metadataSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Acceptable",
                            "code": 406,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7847586c-83f0-4afa-b9fb-27ff08cc0399",
                    "name": "{metricKey}",
                    "item": [
                        {
                            "id": "8eec76a2-6e6a-4b0b-8356-74652f0e2cbd",
                            "name": "Gets the descriptor of the specified metric",
                            "request": {
                                "name": "Gets the descriptor of the specified metric",
                                "description": {},
                                "url": {
                                    "path": [
                                        "metrics",
                                        ":metricKey"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "metricKey",
                                            "description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "09045d04-4385-4cc5-859b-74258c450e32",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"metricId\": \"veniam anim commodo\",\n  \"dduBillable\": true,\n  \"defaultAggregation\": {\n    \"type\": \"min\",\n    \"parameter\": 94204802.63507706\n  },\n  \"dimensionDefinitions\": [\n    {\n      \"displayName\": \"qui in minim\",\n      \"index\": 63206459,\n      \"key\": \"sunt cupidatat\",\n      \"name\": \"cupidatat ullamco \",\n      \"type\": \"VOID\"\n    },\n    {\n      \"displayName\": \"laboris venia\",\n      \"index\": 26527824,\n      \"key\": \"nostrud\",\n      \"name\": \"labore do\",\n      \"type\": \"VOID\"\n    }\n  ],\n  \"lastWritten\": -14223568,\n  \"impactRelevant\": false,\n  \"minimumValue\": 56814593.21647969,\n  \"maximumValue\": -60088885.63824941,\n  \"latency\": -44044998,\n  \"resolutionInfSupported\": false,\n  \"unitDisplayFormat\": \"binary\",\n  \"dimensionCardinalities\": [\n    {\n      \"estimate\": -2184604,\n      \"key\": \"Ut commodo\",\n      \"relative\": 87918452.6607824\n    },\n    {\n      \"estimate\": -52165567,\n      \"key\": \"ut dolor Lorem minim\",\n      \"relative\": -91161061.80120988\n    }\n  ],\n  \"rootCauseRelevant\": false,\n  \"metricValueType\": {\n    \"type\": \"unknown\"\n  },\n  \"created\": 88360717,\n  \"tags\": [\n    \"velit pariatur in\",\n    \"nulla consequat\"\n  ],\n  \"scalar\": false,\n  \"aggregationTypes\": [\n    \"auto\",\n    \"median\"\n  ],\n  \"metricSelector\": \"Duis Excepteur\",\n  \"entityType\": [\n    \"incididunt in esse exercitation\",\n    \"amet commodo\"\n  ],\n  \"displayName\": \"esse adipisicing in laborum\",\n  \"description\": \"in irure quis reprehenderit\",\n  \"transformations\": [\n    \"partition\",\n    \"last\"\n  ],\n  \"unit\": \"Lorem Duis\",\n  \"warnings\": [\n    \"reprehenderit exercitation commodo\",\n    \"commodo dolore\"\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "f687ebac-8347-4183-843d-1f32afaddcae",
                                    "name": "A metric has not been found.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "54524c37-a207-4481-845c-364419710315",
                                    "name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Acceptable",
                                    "code": 406,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "27f3137b-a8a3-4f5e-9deb-5f9ed902ae0a",
                            "name": "Deletes the specified metric",
                            "request": {
                                "name": "Deletes the specified metric",
                                "description": {
                                    "content": "Deletion cannot be undone! You can't delete a metric if it has data points ingested within the last two hours.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "metrics",
                                        ":metricKey"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "metricKey",
                                            "description": "(Required) The key of the required metric. \n\n"
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "9fcccfc1-64da-4fc5-a18f-d600a7b314c2",
                                    "name": "Success. The deletion of the metric has been triggered.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\n"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Accepted",
                                    "code": 202,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "d4ee84c9-25cd-4b13-9f12-d477eb89bdaa",
                                    "name": "Failed. The metric has been written within the last two hours.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\n"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "b4c23513-a081-4456-911e-6b7a755bffc7",
                                    "name": "Failed. The metric cannot be found or the key cannot be parsed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\n"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "53431250-d46a-4b1e-9fa1-5ea0863f5248",
                                    "name": "Failed. The deletion of metric dimensions failed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\n"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "80b6c205-28c9-484d-ad7b-8261a5e0cf10",
                    "name": "Gets data points of the specified metrics",
                    "request": {
                        "name": "Gets data points of the specified metrics",
                        "description": {
                            "content": "The following limits apply: \n* The amount of aggregated data points in the response is limited to 1,000 \n* The amount of series in the response is limited to 1,000 \n   * The amount of data points per series is limited to 10,080 (minutes of one week) \n   * The overall amount of data points is limited to 100,000 \n\nThe **dataPointCountRatio** specifies the ratio of queried data points divided by the maximum number of data points per metric that are allowed in a single query.\nThe **dimensionCountRatio** specifies the ratio of queried dimension tuples divided by the maximum number of dimension tuples allowed in a single query.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "metrics",
                                "query"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "metricSelector",
                                    "value": "<string>",
                                    "description": "Selects metrics for the query by their keys. You can select up to 10 metrics for one query.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\n\n\n If the metric key contains any symbols you must quote (`\"`) the key. The following characters inside of a quoted metric key must be escaped with a tilde (`~`):\n\n* Quotes (`\"`)\n* Tildes (`~`) \n\nFor example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents: Type \"APACHE\"** you must specify this selector: \n\n `\"ext:selfmonitoring.jmx.Agents: Type ~\"APACHE~\"\"` \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                },
                                {
                                    "disabled": false,
                                    "key": "resolution",
                                    "value": "<string>",
                                    "description": "The desired resolution of data points. \n\nYou can use one of the following options: \n* The desired amount of data points. This is the default option. This is a reference number of points, which is not necessarily equal to the number of the returned data points. \n* The desired timespan between data points. This is a reference timespan, which is not necessarily equal to the returned timespan. To use this option, specify the unit of the timespan. \n\nValid units for the timespan are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `q`: quarters \n* `y`: years \n\nIf not set, the default is **120 data points**.\n\nFor example: \n\n* Get data points which are 10 minutes apart: `resolution=10m` \n* Get data points which are 3 weeks apart: `resolution=3w`"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "Specifies the entity scope of the query. Only data points delivered by matched entities are included in response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\nUse the [`GET /metrics/{metricId}`](https://dt-url.net/6z23ifk) call to fetch the list of possible entity types for your metric. \n\nTo set a universal scope matching all entities, omit this parameter."
                                },
                                {
                                    "disabled": false,
                                    "key": "mzSelector",
                                    "value": "<string>",
                                    "description": "The management zone scope of the query. Only metrics data relating to the specified management zones are included to the response. \n\nYou can set one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used. If several values are specified, the **OR** logic applies. \n\n* `mzId(123,456)` \n* `mzName(\"name-1\",\"name-2\")` \nTo set several criteria, separate them with a comma (`,`). For example, `mzName(\"name-1\",\"name-2\"),mzId(1234)`. Only results matching **all** of the criteria are included in the response.For example, to list metrics that have the id **123** OR **234** AND the name **name-1** OR **name-2**, use this **mzSelector**: `mzId(123,234),mzName(\"name-1\",\"name-2\")."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "acc591c4-19e2-4aa8-a7fd-34fa05fe27a7",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "query"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "resolution",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mzSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"resolution\": \"sunt laborum\",\n  \"result\": [\n    {\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataPointCountRatio\": 74975078.7499857,\n      \"dimensionCountRatio\": 66126872.18638617,\n      \"metricId\": \"culpa minim\",\n      \"appliedOptionalFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataPointCountRatio\": 25031250.060702786,\n      \"dimensionCountRatio\": -60796960.425572835,\n      \"metricId\": \"in minim in est\",\n      \"appliedOptionalFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"totalCount\": 7397549,\n  \"warnings\": [\n    \"deseru\",\n    \"occaecat Ut\"\n  ],\n  \"nextPageKey\": \"pariatur sit\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bceb9d68-70ab-4b21-a057-40f78eed7d40",
                            "name": "Syntax or validation error. From and to parameters, entitySelector or resolution are incorrect individually or in their combined meaning.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "query"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "resolution",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mzSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "16226361-5b3e-4e30-a68e-0ffb9bf73b44",
                            "name": "A metric has not been found.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "query"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "resolution",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mzSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "32a42471-96d3-483d-9584-9f583ea53f3d",
                            "name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "query"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "resolution",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mzSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Acceptable",
                            "code": 406,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "edad96bf-a8cf-4375-986f-3dc0b6be574f",
                    "name": "Pushes metric data points to Dynatrace",
                    "request": {
                        "name": "Pushes metric data points to Dynatrace",
                        "description": {},
                        "url": {
                            "path": [
                                "metrics",
                                "ingest"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "text/plain; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "<string>"
                        }
                    },
                    "response": [
                        {
                            "id": "729e3539-540f-4a75-8033-79add7564696",
                            "name": "The provided metric data points are accepted and will be processed in the background.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "server.cpu.temperature,cpu.id=0 42"
                                }
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"linesOk\": -26917931,\n  \"linesInvalid\": -73252704,\n  \"warnings\": {\n    \"changedMetricKeys\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"nostrud officia qui\"\n  },\n  \"error\": {\n    \"invalidLines\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"laborum ut proident commodo\",\n    \"code\": 89690721\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bb43073c-1c2a-47e5-9ed5-92a0a4bb6482",
                            "name": "Some data points are invalid. Valid data points are accepted and will be processed in the background.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "server.cpu.temperature,cpu.id=0 42"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"linesOk\": -75873827,\n  \"linesInvalid\": 57780502,\n  \"warnings\": {\n    \"changedMetricKeys\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"veniam qui\"\n  },\n  \"error\": {\n    \"invalidLines\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"esse proident in\",\n    \"code\": 43748538\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "2f7a19ad-c16c-4953-bac0-5b1c1d27687a",
            "name": "networkZones",
            "item": [
                {
                    "id": "aaa78f70-0220-4091-ba9c-be625802d62d",
                    "name": "Lists all existing network zones",
                    "request": {
                        "name": "Lists all existing network zones",
                        "description": {},
                        "url": {
                            "path": [
                                "networkZones"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "946818d5-dd11-402b-b8c7-1c348e6339e2",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "networkZones"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"networkZones\": [\n    {\n      \"alternativeZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"numOfOneAgentsUsing\": -40089152,\n      \"numOfConfiguredOneAgents\": 12068264,\n      \"numOfOneAgentsFromOtherZones\": -24079458,\n      \"numOfConfiguredActiveGates\": 35583536,\n      \"id\": \"in\",\n      \"description\": \"co\"\n    },\n    {\n      \"alternativeZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"numOfOneAgentsUsing\": 5487127,\n      \"numOfConfiguredOneAgents\": 21887227,\n      \"numOfOneAgentsFromOtherZones\": -52127182,\n      \"numOfConfiguredActiveGates\": 22309492,\n      \"id\": \"ex labore cupida\",\n      \"description\": \"et cillum nisi enim\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "5197637f-ed6b-43a5-9abe-77912405c8c7",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "0d165f7f-aa2e-4938-99f8-f1437918a803",
                            "name": "Gets parameters of the specified network zone",
                            "request": {
                                "name": "Gets parameters of the specified network zone",
                                "description": {},
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required network zone."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "9b3a6e56-7c6c-4b43-a4b3-eacd55499e3c",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required network zone."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"alternativeZones\": [\n    \"ea Lorem veniam qui\",\n    \"in esse est minim\"\n  ],\n  \"numOfOneAgentsUsing\": 14728706,\n  \"numOfConfiguredOneAgents\": 79618328,\n  \"numOfOneAgentsFromOtherZones\": -82653282,\n  \"numOfConfiguredActiveGates\": 13869790,\n  \"id\": \"et\",\n  \"description\": \"tempor voluptate\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "4444830e-3637-4529-8478-ceca12e6880c",
                            "name": "Updates an existing network zone or creates a new one",
                            "request": {
                                "name": "Updates an existing network zone or creates a new one",
                                "description": {
                                    "content": "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"alternativeZones\": [\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "de0f8d4c-f72d-4d05-86d6-dac92c123b5b",
                                    "name": "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"alternativeZones\": [\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"id\": \"Ut commodo\",\n  \"name\": \"veniam\",\n  \"description\": \"non\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "27a6b474-7d06-4b8d-b95b-e4a34e4ed95b",
                                    "name": "Success. The network zone has been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"alternativeZones\": [\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "c5556357-53b9-4401-9c75-b315a35e02b8",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"alternativeZones\": [\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "4c89f246-bf2e-47f4-9862-1ec333b90ab5",
                            "name": "Deletes the specified network zone",
                            "request": {
                                "name": "Deletes the specified network zone",
                                "description": {
                                    "content": "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the network zone to be deleted."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "*/*"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "6cbc4c86-9327-4d0c-93ce-312ec9f5ee9d",
                                    "name": "Deleted. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "6eb8cef0-5915-4f4f-bab3-f446d2441a56",
                                    "name": "Failed. See error message in the response body for details.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "*/*"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "ddbe56e8-8eb0-438d-b03e-a645431e3f3c",
                            "name": "Gets the statistics about hosts using the network zone",
                            "request": {
                                "name": "Gets the statistics about hosts using the network zone",
                                "description": {},
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id",
                                        "hostConnectionStatistics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "filter",
                                            "value": "all",
                                            "description": "Filters the resulting set of hosts: \n\n* `all`: All hosts using the zone. \n* `configuredButNotConnectedOnly`: Hosts from the network zone that use other zones. \n* `connectedAsAlternativeOnly`: Hosts that use the network zone as an alternative. \n* `connectedAsFailoverOnly`: Hosts from other zones that use the zone (not configured as an alternative) even though ActiveGates of higher priority are available. \n* `connectedAsFailoverWithoutOwnActiveGatesOnly`: Hosts from other zones that use the zone (not configured as an alternative) and **no** ActiveGates of higher priority are available. \n\nIf not set, `all` is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required network zone."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "2faca74b-437e-47bf-9c5a-6725be013736",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id",
                                                "hostConnectionStatistics"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "filter",
                                                    "value": "all"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required network zone."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"hostsConnectedAsAlternative\": [\n    \"aute adipisicing sunt cillum\",\n    \"quis dolor minim\"\n  ],\n  \"hostsConnectedAsFailoverWithoutActiveGates\": [\n    \"sit commodo\",\n    \"est ullamco q\"\n  ],\n  \"hostsConnectedAsFailover\": [\n    \"reprehenderit eu sunt\",\n    \"quis sunt voluptate ex rep\"\n  ],\n  \"hostsConfiguredButNotConnected\": [\n    \"irure Duis cupidatat\",\n    \"non occaecat in\"\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "17e07d2e-cfcf-4634-9f52-1fef614a4acd",
            "name": "networkZoneSettings",
            "item": [
                {
                    "id": "7229c115-604d-4329-913b-99508c66c01c",
                    "name": "Gets the global configuration of network zones",
                    "request": {
                        "name": "Gets the global configuration of network zones",
                        "description": {},
                        "url": {
                            "path": [
                                "networkZoneSettings"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "1a3f1d99-161f-41aa-ac35-46348dcd27bc",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "networkZoneSettings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"networkZonesEnabled\": false\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f6868120-f83b-4b3b-807f-18d60da3be43",
                    "name": "Updates the global configuration of network zones",
                    "request": {
                        "name": "Updates the global configuration of network zones",
                        "description": {},
                        "url": {
                            "path": [
                                "networkZoneSettings"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"networkZonesEnabled\": \"<boolean>\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "205b5844-a61a-4c87-8727-6839e3556ee1",
                            "name": "Success. The global network zones configuration has been updated. Response doesn't have a body.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "networkZoneSettings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"networkZonesEnabled\": \"<boolean>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "d17ede00-881b-42df-b2df-f798ae104cfa",
            "name": "oneagents/remoteConfigurationManagement",
            "item": [
                {
                    "id": "2944cecc-8ffc-4be0-a5a8-742d14f411cc",
                    "name": "Lists finished OneAgent remote configuration management jobs",
                    "request": {
                        "name": "Lists finished OneAgent remote configuration management jobs",
                        "description": {
                            "content": "The response includes finished jobs for the last 7 days.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "oneagents",
                                "remoteConfigurationManagement"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "47675de3-318d-40e1-8cea-f6d3118d120e",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"jobs\": [\n    {\n      \"entityType\": \"ACTIVE_GATE\",\n      \"id\": \"7974003406714390819\",\n      \"startTime\": \"2020-11-05T08:15:30.144Z\",\n      \"endTime\": \"2020-11-05T08:15:30.144Z\"\n    },\n    {\n      \"entityType\": \"ACTIVE_GATE\",\n      \"id\": \"7974003406714390819\",\n      \"startTime\": \"2020-11-05T08:15:30.144Z\",\n      \"endTime\": \"2020-11-05T08:15:30.144Z\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "caa9cc2d-611b-4d48-a5e7-688152d7946d",
                    "name": "Creates a new remote configuration management job",
                    "request": {
                        "name": "Creates a new remote configuration management job",
                        "description": {},
                        "url": {
                            "path": [
                                "oneagents",
                                "remoteConfigurationManagement"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "restart",
                                    "value": "true",
                                    "description": "When set to `false`, OneAgents will not be restarted after the configuration is applied."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "003321e4-6b38-461c-b4c6-d8c8dfd364dd",
                            "name": "Created",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "restart",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"HOST-D454A967666E7970\",\n    \"HOST-811760CFF2A5E872\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"processedEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"totalEntitiesCount\": 1,\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"entityType\": \"ONE_AGENT\",\n  \"id\": \"7974003406714390819\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "21bc924b-2f46-462a-b314-792377cf7cc2",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "restart",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"HOST-D454A967666E7970\",\n    \"HOST-811760CFF2A5E872\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"invalidEntities\": [\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    },\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "647311cc-7708-4070-a926-82171a4669f9",
                            "name": "Other remote configuration management job is currently being executed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "restart",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"HOST-D454A967666E7970\",\n    \"HOST-811760CFF2A5E872\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "0e47d92b-cdd1-4546-9177-b0939967082f",
                    "name": "Creates a preview for remote configuration management job",
                    "request": {
                        "name": "Creates a preview for remote configuration management job",
                        "description": {},
                        "url": {
                            "path": [
                                "oneagents",
                                "remoteConfigurationManagement",
                                "preview"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "c49feb0b-7036-46dd-9727-02e4a18b0a43",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        "preview"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"HOST-D454A967666E7970\",\n    \"HOST-811760CFF2A5E872\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"previews\": [\n    {\n      \"alreadyConfiguredEntitiesCount\": 1,\n      \"targetEntitiesCount\": 2,\n      \"attribute\": \"networkZone\",\n      \"value\": \"exampleNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"alreadyConfiguredEntitiesCount\": 1,\n      \"targetEntitiesCount\": 2,\n      \"attribute\": \"networkZone\",\n      \"value\": \"exampleNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "76aafa65-0e97-4acd-b5af-2139871d93d8",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        "preview"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"HOST-D454A967666E7970\",\n    \"HOST-811760CFF2A5E872\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"invalidEntities\": [\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    },\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "569642e1-3100-46df-b447-6d783f70f674",
                    "name": "Gets remote configuration management job that is currently running",
                    "request": {
                        "name": "Gets remote configuration management job that is currently running",
                        "description": {
                            "content": "The currently running remote configuration management job may be related to ActiveGates or OneAgents. There is a limit of one concurrent remote configuration management job, regardless of the entity type.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "oneagents",
                                "remoteConfigurationManagement",
                                "current"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "a666acfb-4571-47a1-b6bd-5ec5af8977b1",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        "current"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"processedEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"totalEntitiesCount\": 1,\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"entityType\": \"ONE_AGENT\",\n  \"id\": \"7974003406714390819\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0418e90c-4c73-41cd-ac59-a1f935bdc30c",
                            "name": "No remote configuration management job is currently running ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        "current"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "16d5b770-66d6-481e-b945-916357eab814",
                    "name": "Gets the specified remote configuration management job",
                    "request": {
                        "name": "Gets the specified remote configuration management job",
                        "description": {},
                        "url": {
                            "path": [
                                "oneagents",
                                "remoteConfigurationManagement",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "id",
                                    "description": "(Required) The ID of the required remote configuration management job."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "8b7e7ab6-76ad-47e8-8388-6ae050b15686",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required remote configuration management job."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"processedEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"totalEntitiesCount\": 1,\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"entityType\": \"ONE_AGENT\",\n  \"id\": \"7974003406714390819\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f48b2de8-9407-4515-b52e-4ae30b3aece0",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required remote configuration management job."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7fdb346d-e1c0-4778-9fab-61b7d42787e9",
                    "name": "Validates the payload for the `POST /oneagents/remoteConfigurationManagement` request.",
                    "request": {
                        "name": "Validates the payload for the `POST /oneagents/remoteConfigurationManagement` request.",
                        "description": {},
                        "url": {
                            "path": [
                                "oneagents",
                                "remoteConfigurationManagement",
                                "validator"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "f63fb973-8950-496e-97f1-4b633794e710",
                            "name": "Success. Response doesn't have a body.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        "validator"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"HOST-D454A967666E7970\",\n    \"HOST-811760CFF2A5E872\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "384197a1-815b-4ddf-a445-f028284f2ad7",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        "validator"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"HOST-D454A967666E7970\",\n    \"HOST-811760CFF2A5E872\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"invalidEntities\": [\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    },\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "7b183bc2-7e5e-4a74-b1a3-d2f6df1d9f3f",
            "name": "tags",
            "item": [
                {
                    "id": "7abd4fd3-d624-4634-8836-1ab75c193c50",
                    "name": "Gets a list of custom tags applied to the specified entities",
                    "request": {
                        "name": "Gets a list of custom tags applied to the specified entities",
                        "description": {
                            "content": "Automatically applied tags and imported tags are not included.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tags"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "(Required) Specifies the entities where you want to read tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "d0e33346-b34b-4d96-af0c-0c88bd5f84ad",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"tags\": {\n    \"empty\": true\n  },\n  \"totalCount\": -59652593\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4d47cd1c-ae09-485a-a4cb-6371a4f24c2a",
                    "name": "Adds custom tags to the specified entities",
                    "request": {
                        "name": "Adds custom tags to the specified entities",
                        "description": {
                            "content": "All existing tags remain unaffected.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tags"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "(Required) Specifies the entities where you want to update tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"tags\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "b92d419f-98b9-4eef-a539-3b959de7b04b",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tags\": [\n    {\n      \"key\": \"mainApp\"\n    },\n    {\n      \"key\": \"bookings\",\n      \"value\": \"42\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"matchedEntitiesCount\": -40892153,\n  \"appliedTags\": {\n    \"empty\": true\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9303a1c8-3159-4969-8a95-96ee198ec2e0",
                    "name": "Deletes the specified tag from the specified entities",
                    "request": {
                        "name": "Deletes the specified tag from the specified entities",
                        "description": {},
                        "url": {
                            "path": [
                                "tags"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "key",
                                    "value": "<string>",
                                    "description": "(Required) The key of the tag to be deleted. \n\nIf **deleteAllWithKey** is `true`, then all tags with this key are deleted. Otherwise, only tags with exact match of key **and** value are deleted. \n\nFor value-only tags, specify the value here."
                                },
                                {
                                    "disabled": false,
                                    "key": "value",
                                    "value": "<string>",
                                    "description": "The value of the tag to be deleted. The value is ignored if **deleteAllWithKey** is `true`. \n\nFor value-only tags, specify the value in the **key** parameter."
                                },
                                {
                                    "disabled": false,
                                    "key": "deleteAllWithKey",
                                    "value": "<boolean>",
                                    "description": "* If `true`, all tags with the specified key are deleted, regardless of the value. \n* If `false`, only tags with exact match of key **and** value are deleted. \n\nIf not set, `false` is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "(Required) Specifies the entities where you want to delete tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "DELETE",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "f46007c9-3104-4fd8-85c9-5f34e2ff7e0a",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "key",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "value",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "deleteAllWithKey",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"matchedEntitiesCount\": 2\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "9055fe9a-d6f0-44db-81cd-aa66fb15196d",
            "name": "logs",
            "item": [
                {
                    "id": "86e9ec40-3f01-43e8-8fc1-e78b4af3702b",
                    "name": "Pushes log records to Dynatrace | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Pushes log records to Dynatrace | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "Ingested logs are stored in the indexed log storage. \n\nThis endpoint requires an ActiveGate with the **Log Analytics Collector** module enabled. \n\nThe maximum payload size of a single request is **5 MB**. Requests with a greater payload are rejected, and the API returns a 413 response code.\n\nIf the ingested payload is a JSON array, the maximum array size is **5000**. Requests with a greater payload are rejected, and the API returns a 413 response code.\n\n<br />**Log events per minute (SaaS)**: \n\nTrial tenants: 10k, paid one: 100k per minute by default. \n\nIf your log data stream within your cluster exceeds the limit, all log events above the limit are ignored. \n\n<br />**Log events per minute (Managed)**: \n\n10k/minute per cluster by default. \n\nIf your log data stream within your cluster exceeds the limit, all log events above the limit are ignored. \n\nIf you increase resources (RAM) in your nodes, you can increase the limit based on the cluster resources size using an API call or Cluster Management Console (CMC). \n\n<br />Refresh cluster limit using the API call \n\nSee [Update log events per cluster for Log Monitoring](https://dt-url.net/f123yeu). \n\n<br />Refresh cluster limit using Cluster Management Console (CMC) \n\n1. In the CMC, select **Environments** and the environment for which you wish to update the total log events per cluster. \n\n2. On the environment details page, in the **Cluster overload prevention settings** section, select the **Refresh cluster limit**. \n\n**High-cardinality attributes:** \n\nUnique log data attributes (high-cardinality attributes) such as `span_id` and `trace_id` generate unnecessarily excessive facet lists that may impact log viewer performance. Because of this, they aren't listed in log viewer facets. You can still use them in a log viewer advanced search query. \n\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "logs",
                                "ingest"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "<object>",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "a6ae3142-bbff-4843-8456-751b0ade1a5b",
                            "name": "Only a part of input events were ingested due to event size limits or JSON parsing issues.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:31.0000\",\n    \"severity\": \"error\",\n    \"custom.attribute\": \"attribute value\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:35.0000\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"details\": {\n    \"message\": \"ut\",\n    \"code\": -77138596\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e088fb80-013b-4d05-97d9-a803a4106009",
                            "name": "Success. Response doesn't have a body.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:31.0000\",\n    \"severity\": \"error\",\n    \"custom.attribute\": \"attribute value\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:35.0000\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "371e27f8-ddd9-481e-a5f6-636e06bd011e",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:31.0000\",\n    \"severity\": \"error\",\n    \"custom.attribute\": \"attribute value\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:35.0000\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ae2b41b5-43ab-49e2-980c-40f701072827",
                            "name": "Failed. You can't add more logs to the storage, because you are out of [Davis Data Units](https://dt-url.net/dduLog) (DDU). Purchase additional DDUs.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:31.0000\",\n    \"severity\": \"error\",\n    \"custom.attribute\": \"attribute value\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:35.0000\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Payment Required",
                            "code": 402,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7bfce40d-67ef-4bd4-acc7-d958bb045811",
                            "name": "Failed. The requested resource doesn't exist. This may happen when no ActiveGate is available with the Log Analytics Collector module enabled.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:31.0000\",\n    \"severity\": \"error\",\n    \"custom.attribute\": \"attribute value\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:35.0000\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1a185ff2-86c9-4ea6-ba9a-faee1cd4b55f",
                            "name": "Failed. Request payload size is too big. This may happen when the payload byte size exceeds the limit or when the ingested payload is a JSON array with the size exceeding the limit.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:31.0000\",\n    \"severity\": \"error\",\n    \"custom.attribute\": \"attribute value\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:35.0000\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Request Entity Too Large",
                            "code": 413,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1c7df7dd-33af-457d-9791-bd7916db781c",
                            "name": "Failed. Too Many Requests. This happens when log ingest is disabled.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:31.0000\",\n    \"severity\": \"error\",\n    \"custom.attribute\": \"attribute value\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:35.0000\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7aa1ec48-a14d-4d91-b67c-958127c850a5",
                            "name": "Failed. The server either does not recognize the request method, or it lacks the ability to fulfil the request. May happen when indexed log storage is not enabled.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:31.0000\",\n    \"severity\": \"error\",\n    \"custom.attribute\": \"attribute value\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\",\n    \"timestamp\": \"2022-01-17T22:12:35.0000\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\",\n    \"log.source\": \"/var/log/syslog\"\n  },\n  {\n    \"content\": \"Exception: Custom error log sent via Generic Log Ingest\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d39f51fa-93cb-4973-8bb9-4c4459fc2852",
                    "name": "Exports log records | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Exports log records | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "Returns the first *X* records (specified in the **pageSize** query parameter).\n\n Unlike the **search** API, this API does not split the result into slices and has no limit for the total number of records. Log records are sorted by the criteria specified in the **sort** query parameter.\n\n In order to fetch large amount of records (exceeding the **pageSize** value), one should repeat the **export** call with **nextPageKey** param.\n\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "logs",
                                "export"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "1000",
                                    "description": "The number of results per result page."
                                },
                                {
                                    "disabled": false,
                                    "key": "query",
                                    "value": "",
                                    "description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f)."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "-timestamp",
                                    "description": "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first). \n\nWhen millisecond resolution provided by the timestamp is not enough, log records are sorted based on the order in which they appear in the log source (remote process writing to REST API endpoint or remote process from which logs are collected)."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "04cb654c-515c-4ba4-a363-a17e8e3e8b29",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "export"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -5110793,\n  \"results\": [\n    {\n      \"additionalColumns\": {\n        \"exercitation_5\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"eventType\": \"K8S\",\n      \"timestamp\": -34374549,\n      \"content\": \"elit officia\",\n      \"status\": \"WARN\"\n    },\n    {\n      \"additionalColumns\": {\n        \"laboris_4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"eventType\": \"K8S\",\n      \"timestamp\": -52203284,\n      \"content\": \"ut\",\n      \"status\": \"INFO\"\n    }\n  ],\n  \"pageSize\": 3586276,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7d9e6cab-d894-4824-a1fd-c1f1e378ba3e",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "export"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3d00e30c-8b2d-464b-bb5e-848e6b6b1024",
                            "name": "Failed. The server either does not recognize the request method, or it lacks the ability to fulfill the request. May happen when Grail log storage is enabled.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "export"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7cdb6772-a4a7-4dc3-8b29-3e7dfa9dd42e",
                    "name": "Gets aggregated log records | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets aggregated log records | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "Returns the aggregated number of occurrences of log values divided into time slots. \n\nIt is possible that the timeframe covered by results exceeds the specified timeframe. In that case the request returns fewer time slots than specified in the **timeBuckets** query parameter.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "logs",
                                "aggregate"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "query",
                                    "value": "",
                                    "description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f)."
                                },
                                {
                                    "disabled": false,
                                    "key": "timeBuckets",
                                    "value": "1",
                                    "description": "The number of time slots in the result. \n\nThe query timeframe is divided equally into the specified number of slots. \n\nThe minimum length of a slot is 1 ms. \n\nIf not set, 1 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "maxGroupValues",
                                    "value": "10",
                                    "description": "The maximum number of values in each group. \n\nYou can get up to 100 values per group. \n\nIf not set, 10 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "groupBy",
                                    "value": "<string>",
                                    "description": "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values. \n\nUnique log data attributes (high-cardinality attributes) for example, `span_id` or `trace_id` cannot be used for grouping."
                                },
                                {
                                    "disabled": false,
                                    "key": "groupBy",
                                    "value": "<string>",
                                    "description": "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values. \n\nUnique log data attributes (high-cardinality attributes) for example, `span_id` or `trace_id` cannot be used for grouping."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "86abe73a-1c5f-476c-a5f1-eca03f5bc83a",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "aggregate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "timeBuckets",
                                            "value": "1"
                                        },
                                        {
                                            "key": "maxGroupValues",
                                            "value": "10"
                                        },
                                        {
                                            "key": "groupBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "groupBy",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"aggregationResult\": {\n    \"do_50\": {\n      \"aliquip_ea7\": {\n        \"dolor0\": 18389739,\n        \"ipsum_89\": 72997944\n      },\n      \"officia0d3\": {\n        \"amet_f3_\": 28640491\n      },\n      \"id_a\": {\n        \"Excepteuraa2\": -83008238,\n        \"commodo_f2f\": -93675097\n      }\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7dc8a660-272a-4be4-8577-d47929bb0d9b",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "aggregate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "timeBuckets",
                                            "value": "1"
                                        },
                                        {
                                            "key": "maxGroupValues",
                                            "value": "10"
                                        },
                                        {
                                            "key": "groupBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "groupBy",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c0fd33c7-c838-4301-89c7-3c8967b73272",
                    "name": "Reads log records | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Reads log records | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "Returns the first *X* records (specified in the **limit** query parameter). Log records are sorted by the criteria specified in the **sort** query parameter. \n\nIf the query is too large to be processed in a single request, it is divided into slices. In that case the first response contains the **nextSliceKey** cursor for the second slice. Use it in the **nextSliceKey** query parameter to obtain the second slice, which contains **nextSliceKey** cursor for the third slice, and so on. \n\nResults can be distributed unevenly between slices and some slices might be empty.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "logs",
                                "search"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The desired amount of log records. \n\nThe maximal allowed limit is 1000. \n\nIf not set, 1000 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "query",
                                    "value": "",
                                    "description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f)."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "-timestamp",
                                    "description": "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first). \n\nWhen millisecond resolution provided by the timestamp is not enough, log records are sorted based on the order in which they appear in the log source (remote process writing to REST API endpoint or remote process from which logs are collected)."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextSliceKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next slice of results. You can find it in the **nextSliceKey** field of the previous response. \n\nThe first slice is always returned if you don't specify this parameter. \n\nIf this parameter is set, all other query parameters are ignored."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "c6840945-4de7-41ea-b3d7-65ae3a3034de",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "search"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        },
                                        {
                                            "key": "nextSliceKey",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"sliceSize\": 56894254,\n  \"nextSliceKey\": \"enim\",\n  \"results\": [\n    {\n      \"additionalColumns\": {\n        \"pariaturb\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"irure_6_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"voluptate_cb\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"eventType\": \"K8S\",\n      \"timestamp\": 56055195,\n      \"content\": \"laborum do minim\",\n      \"status\": \"NOT_APPLICABLE\"\n    },\n    {\n      \"additionalColumns\": {\n        \"adipisicingd\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"eventType\": \"LOG\",\n      \"timestamp\": -64868455,\n      \"content\": \"commodo eiusmod esse\",\n      \"status\": \"INFO\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0104fe62-5c3f-4052-9026-635fb675c188",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "search"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        },
                                        {
                                            "key": "nextSliceKey",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "d6517c3d-bc9b-4c69-81ca-65f6f3d79a3f",
            "name": "otlp/v1",
            "item": [
                {
                    "id": "ef4b2139-b329-4015-b318-b261f5c6f74a",
                    "name": "Implementation of the OTLP/HTTP protocol for trace ingest.",
                    "request": {
                        "name": "Implementation of the OTLP/HTTP protocol for trace ingest.",
                        "description": {
                            "content": "This endpoint can be targeted by OpenTelemetry exporters. Ingested traces are forwarded to the server.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "otlp",
                                "v1",
                                "traces"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-protobuf"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  \"<byte>\",\n  \"<byte>\"\n]"
                        }
                    },
                    "response": [
                        {
                            "id": "24cee32d-a510-43a6-89e6-493063492420",
                            "name": "The request has been received and will be processed.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "traces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<byte>\",\n  \"<byte>\"\n]"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "007f32d0-6583-447a-ab6f-85c46cf4f652",
                            "name": "The request could not be processed. This may happen if the message is malformed.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "traces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<byte>\",\n  \"<byte>\"\n]"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "f2da93f4-2d4a-4a4e-8f75-afaeb4001fe2",
                            "name": "The request could not be processed due to an internal server error.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "traces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<byte>\",\n  \"<byte>\"\n]"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "e2d71bf4-b2eb-4bd9-bfa5-900993086978",
                            "name": "The service is currently unavailable. This may happen if the module is paused.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "traces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<byte>\",\n  \"<byte>\"\n]"
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "08151700-d5a1-4983-b137-c4a68766c5b9",
                    "name": "Implementation of the OTLP/HTTP protocol for metric ingest. | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Implementation of the OTLP/HTTP protocol for metric ingest. | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "This endpoint can be targeted by OpenTelemetry metric exporters.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "otlp",
                                "v1",
                                "metrics"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-protobuf"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  \"<byte>\",\n  \"<byte>\"\n]"
                        }
                    },
                    "response": [
                        {
                            "id": "0eecac89-39e1-4abf-84d8-e0a400871993",
                            "name": "The request has been received and will be processed.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<byte>\",\n  \"<byte>\"\n]"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "e1bec92b-6c97-42aa-b974-b84d446476fa",
                            "name": "The request could not be processed. This may happen if the message is malformed.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<byte>\",\n  \"<byte>\"\n]"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "c19690f2-e6e3-414a-9354-4d4b37beaa28",
                            "name": "The OTLP message exceeded the payload size limit.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<byte>\",\n  \"<byte>\"\n]"
                                }
                            },
                            "status": "Request Entity Too Large",
                            "code": 413,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "cf597d76-ecf7-4af9-a1c0-f56a4ff16417",
                            "name": "The request could not be processed due to an internal server error.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<byte>\",\n  \"<byte>\"\n]"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7671b93c-9231-4c6c-a706-b46dbf66fac5",
                            "name": "The service is currently unavailable. This may happen if the module is paused.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<byte>\",\n  \"<byte>\"\n]"
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "bb8a0b4f-d9ac-44cd-bf3d-7aa57fb51100",
            "name": "activeGateTokens",
            "item": [
                {
                    "id": "f67acf0f-807f-4aab-b1bd-d8d1f083a1b1",
                    "name": "Lists all available ActiveGate tokens | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Lists all available ActiveGate tokens | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGateTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of ActiveGate tokens in a single response payload. \n\nThe maximal allowed page size is 3000 and the minimal size is 100. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "a4b06060-3dd7-407d-ac55-d6bf6126b289",
                            "name": "Success. The response contains the list of ActiveGate tokens.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 1000,\n  \"pageSize\": 100,\n  \"nextPageKey\": \"AAAAAAAAAAAAAABOAAAAAAAAAAAAAAA6ACQAEAAAABgACgAITFdXQk1BRzYAAAhtZXRhZGF0YQB___-bf___m3iIYxfF7xVQvY72rwblQkcAAwAAAAAAAADHAAAAZA==\",\n  \"activeGateTokens\": {\n    \"name\": \"myToken\",\n    \"owner\": \"john.smith\",\n    \"creationDate\": \"2020-11-22T08:15:30.144Z\",\n    \"expirationDate\": \"2020-11-24T08:15:30.144Z\",\n    \"lastUsedDate\": \"2020-11-23T08:15:30.144Z\",\n    \"seedToken\": \"false\",\n    \"activeGateType\": \"ENVIRONMENT\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "83f8f71d-ac77-46a9-8643-a0ce099e6170",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "78572ae0-2c20-44e3-9513-673075d450dc",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1f5418bb-b01a-4a16-a179-c48e8ae63aea",
                    "name": "Creates a new ActiveGate token | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Creates a new ActiveGate token | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "The newly created token will be owned by the same user who owns the token used for authentication of the call.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGateTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"activeGateType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"seedToken\": \"<boolean>\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "b157ba7f-a131-4537-864e-d4e3ea7b1740",
                            "name": "Success. The token has been created. The body of the response contains the token secret.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"activeGateType\": \"<string>\",\n  \"name\": \"myToken\",\n  \"expirationDate\": \"now+14d\",\n  \"seedToken\": false\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"id\": \"dt0g02.4KWZO5EF\",\n  \"token\": \"dt0g02.4KWZO5EF.XT47R5DRADJIZUFOX4UDNOKTSUSABGLN7XSMJG7UXHRXKNY4WLORH4OF4T75MG7E\",\n  \"expirationDate\": \"2020-11-24T08:15:30.144Z\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e3df1953-60f8-4c15-8ba5-56862b2d7875",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"activeGateType\": \"<string>\",\n  \"name\": \"myToken\",\n  \"expirationDate\": \"now+14d\",\n  \"seedToken\": false\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e93b1da1-6fc0-4093-bb04-4ac24339abdb",
                    "name": "{activeGateTokenIdentifier}",
                    "item": [
                        {
                            "id": "126720bd-7631-473b-aa90-185461ab8f4f",
                            "name": "Gets metadata of an ActiveGate token | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Gets metadata of an ActiveGate token | maturity=EARLY_ADOPTER",
                                "description": {
                                    "content": "The token secret is **not** exposed.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "activeGateTokens",
                                        ":activeGateTokenIdentifier"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "activeGateTokenIdentifier",
                                            "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "b4dd275c-4924-4a2f-b884-92f13467fbc6",
                                    "name": "Success. The response contains the metadata of the tokens.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"activeGateType\": \"ENVIRONMENT\",\n  \"creationDate\": \"2020-11-22T08:15:30.144Z\",\n  \"id\": \"dt0g02.4KWZO5EF\",\n  \"name\": \"myToken\",\n  \"owner\": \"john.smith\",\n  \"expirationDate\": \"2020-11-24T08:15:30.144Z\",\n  \"lastUsedDate\": \"2020-11-23T08:15:30.144Z\",\n  \"seedToken\": false\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "5afb4d83-0381-41b9-98a6-b232dcff3624",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "455b5a6e-f9be-4380-bdbb-19e1cbf48e95",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "951a966f-9668-40cd-829f-280e7a9420d0",
                            "name": "Deletes an ActiveGate token | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Deletes an ActiveGate token | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGateTokens",
                                        ":activeGateTokenIdentifier"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "activeGateTokenIdentifier",
                                            "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "262615c9-fa0c-43a1-a5ed-374f512eea45",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "66b964b5-d41e-4315-9141-de878d31047b",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "53f99da6-9056-4604-b4a3-5ffe145be297",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "497fdd70-3e46-46e3-bf39-61723b151a77",
            "name": "apiTokens",
            "item": [
                {
                    "id": "69f4c6d7-c170-4989-9ff1-dfb7f70ee321",
                    "name": "Lists all available API tokens",
                    "request": {
                        "name": "Lists all available API tokens",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "apiTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of API tokens in a single response payload. \n\nThe maximal allowed page size is 10000 and the minimal allowed page size is 100. \n\nIf not set, 200 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "apiTokenSelector",
                                    "value": "<string>",
                                    "description": "Filters the resulting sets of tokens. Only tokens matching the specified criteria are included into response. \n\nYou can set one or more of the following criteria: \n\n* Owner: `owner(\"value\")`. The user that owns the token. Case-sensitive.\n* Personal access token: `personalAccessToken(false)`. Set to `true` to include only personal access tokens or to `false` to include only API tokens.\n* Token scope: `scope(\"scope1\",\"scope2\")`. If several values are specified, the **OR** logic applies. \n\nTo set multiple criteria, separate them with commas (`,`). Only results matching **all** criteria are included into response."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Specifies the fields to be included in the response.\n\nThe following fields are included by default: \n\n* `id` \n* `name` \n* `enabled` \n* `owner` \n* `creationDate` \n\nTo remove fields from the response, specify them with the minus (`-`) operator as a comma-separated list (for example, `-creationDate,-owner`). \n\nYou can include additional fields: \n\n* `personalAccessToken` \n* `expirationDate` \n* `lastUsedDate` \n* `lastUsedIpAddress` \n* `modifiedDate` \n* `scopes` \n\n* `additionalMetadata` \n\nTo add fields to the response, specify them with the plus (`+`) operator as a comma-separated list (for example, `+expirationDate,+scopes`). You can combine adding and removing of fields (for example, `+scopes,-creationDate`). \n\nAlternatively, you can define the desired set of fields in the response. Specify the required fields as a comma-separated list, without operators (for example, `creationDate,expirationDate,owner`). The ID is always included in the response. \n\nThe **fields** string must be URL-encoded."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "Filters tokens based on the last usage time. \nThe start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "Filters tokens based on the last usage time. \nThe end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "-creationDate",
                                    "description": "The sort order of the token list. \n\nYou can sort by the following properties with a sign prefix for the sort order: \n\n * `name`: token name (`+` a...z or `-` z...a) \n * `lastUsedDate` last used (`+` never used tokens first `-` most recently used tokens first) \n * `creationDate` (`+` oldest tokens first `-` newest tokens first) \n * `expirationDate` (`+` tokens that expire soon first `-` unlimited tokens first) \n * `modifiedDate` last modified (`+` never modified tokens first `-` most recently modified tokens first) \n\nIf no prefix is set, + is used. \n\nIf not set, tokens are sorted by creation date with newest first."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "27a5f14b-8c5f-4248-b331-d6baf58417d4",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "apiTokenSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-creationDate"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -46761880,\n  \"apiTokens\": [\n    {\n      \"lastUsedIpAddress\": \"34.197.2.44\",\n      \"modifiedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"additionalMetadata\": {\n        \"dashboardId\": \"82402bab-7370-4359-924d-88ed13c8919a\"\n      },\n      \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n      \"personalAccessToken\": true,\n      \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n      \"name\": \"myToken\",\n      \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n      \"owner\": \"john.smith\",\n      \"enabled\": true,\n      \"scopes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"lastUsedIpAddress\": \"34.197.2.44\",\n      \"modifiedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"additionalMetadata\": {\n        \"dashboardId\": \"82402bab-7370-4359-924d-88ed13c8919a\"\n      },\n      \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n      \"personalAccessToken\": true,\n      \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n      \"name\": \"myToken\",\n      \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n      \"owner\": \"john.smith\",\n      \"enabled\": true,\n      \"scopes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"pageSize\": 38419950,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1edd9921-a326-4e1f-a712-ca2cdb17d4c8",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "apiTokenSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-creationDate"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "45e957ca-1f0e-4751-9e71-a5b9ccc398a6",
                    "name": "Creates a new API token",
                    "request": {
                        "name": "Creates a new API token",
                        "description": {
                            "content": "The newly created token will be owned by the same user who owns the token used for authentication of the call.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "apiTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"<string>\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"expirationDate\": \"<string>\",\n  \"personalAccessToken\": \"<boolean>\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "eea4d4e9-83fe-42c5-9ecd-7ddab5ba5f95",
                            "name": "Success. The token has been created. The body of the response contains the token secret.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"tokenName\",\n  \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n  ],\n  \"expirationDate\": \"now+14d\",\n  \"personalAccessToken\": false\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n  \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n  \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d013deaf-994a-46e1-87f5-9a045cb2726e",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"tokenName\",\n  \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n  ],\n  \"expirationDate\": \"now+14d\",\n  \"personalAccessToken\": false\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c04a6357-1eaf-467d-a22f-a5dc23f02327",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "9ab57d6e-32bb-4caa-85bb-c92413f0cf6b",
                            "name": "Gets API token metadata by token ID",
                            "request": {
                                "name": "Gets API token metadata by token ID",
                                "description": {
                                    "content": "The token secret is **not** exposed.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the token."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "f33dd410-e0ee-4b99-88c1-d93dcc19db17",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"lastUsedIpAddress\": \"34.197.2.44\",\n  \"modifiedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"additionalMetadata\": {\n    \"dashboardId\": \"82402bab-7370-4359-924d-88ed13c8919a\"\n  },\n  \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n  \"personalAccessToken\": true,\n  \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n  \"name\": \"myToken\",\n  \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n  \"owner\": \"john.smith\",\n  \"enabled\": true,\n  \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "6c5ae138-0298-41cc-bb48-90fabcffeb63",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "4f95301c-5a02-46fd-a870-d28038cf6b60",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "74d28807-6a5b-48a2-adbc-dcb9cfdf6308",
                            "name": "Updates an API token",
                            "request": {
                                "name": "Updates an API token",
                                "description": {},
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "8e1c3d67-80ad-4cb8-bab9-990d91de5658",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"myToken\",\n  \"enabled\": true,\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "813fd30e-f7a7-47a4-b0ab-46fbc8bd6d35",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"myToken\",\n  \"enabled\": true,\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "3dc71cc1-8e05-494f-8865-b4e0fe6497ae",
                            "name": "Deletes an API token",
                            "request": {
                                "name": "Deletes an API token",
                                "description": {},
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "d344cd9d-b10d-407d-910c-9e0a44bb4d95",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "f0710996-c03e-48ea-9c7b-a2fb46c4625d",
                                    "name": "Failed. You can't delete the token you're using for authentication of the request.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "86ffb800-8650-41c1-a601-dde1f377861f",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "e1c45664-c95e-4344-8742-b5d8ecac4ce1",
                    "name": "Gets API token metadata by token secret",
                    "request": {
                        "name": "Gets API token metadata by token secret",
                        "description": {},
                        "url": {
                            "path": [
                                "apiTokens",
                                "lookup"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"token\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "8f909e53-bde3-44c5-8c3a-0d1cccd89445",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        "lookup"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"lastUsedIpAddress\": \"34.197.2.44\",\n  \"modifiedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"additionalMetadata\": {\n    \"dashboardId\": \"82402bab-7370-4359-924d-88ed13c8919a\"\n  },\n  \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n  \"personalAccessToken\": true,\n  \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n  \"name\": \"myToken\",\n  \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n  \"owner\": \"john.smith\",\n  \"enabled\": true,\n  \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e84313c4-b120-4d26-803b-8aaac6e32441",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        "lookup"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "c5ec2dd6-7bf5-4f61-b439-48996fa8c3bd",
            "name": "auditlogs",
            "item": [
                {
                    "id": "f95ff48f-f3ca-4572-b744-318c8626e0ea",
                    "name": "Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "auditlogs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of log entries in a single response payload. \n\nThe maximal allowed page size is 5000. \n\nIf not set, 1000 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "filter",
                                    "value": "<string>",
                                    "description": "Filters the audit log. You can use the following criteria: \n* User: `user(\"userIdentification\")`. The `EQUALS` operator applies. \n* Event type: `eventType(\"value\")`. The `EQUALS` operator applies. \n* Category of a logged operation: `category(\"value\")`. The `EQUALS` operator applies. \n* Entity ID: `entityId(\"id\")`. The `CONTAINS` operator applies. \n\nFor each criterion, you can specify multiple alternatives with comma-separated values. In this case, the OR logic applies. For example, `eventType(\"CREATE\",\"UPDATE\")` means eventType can be \"CREATE\" or \"UPDATE\". \n\nYou can specify multiple comma-separated criteria, such as `eventType(\"CREATE\",\"UPDATE\"),category(\"CONFIG\")`. Only results matching **all** criteria are included in response. \n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes: \n* Tilde `~` \n* Quote `\"`"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "-timestamp",
                                    "description": "The sorting of audit log entries: \n* `timestamp`: Oldest first. \n* `-timestamp`: Newest first. \n\nIf not set, the newest first sorting is applied."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "6f97d67b-fcbd-40ca-9b90-8ab72dbcc175",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "auditlogs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -81625066,\n  \"pageSize\": -92740354,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"auditLogs\": [\n    {\n      \"category\": \"CONFIG\",\n      \"environmentId\": \"aute sed\",\n      \"eventType\": \"PATCH\",\n      \"logId\": \"aute non v\",\n      \"success\": true,\n      \"timestamp\": -23175279,\n      \"user\": \"officia\",\n      \"userType\": \"TOKEN_HASH\",\n      \"entityId\": \"Excepteur culpa minim dolore\",\n      \"userOrigin\": \"occaecat velit in eiusmod\",\n      \"message\": \"id pariatur dolor dolore\",\n      \"patch\": {}\n    },\n    {\n      \"category\": \"ACTIVE_GATE\",\n      \"environmentId\": \"in aliquip\",\n      \"eventType\": \"LOGOUT\",\n      \"logId\": \"adipisici\",\n      \"success\": true,\n      \"timestamp\": 30792542,\n      \"user\": \"adipisicing elit in\",\n      \"userType\": \"PUBLIC_TOKEN_IDENTIFIER\",\n      \"entityId\": \"ad velit\",\n      \"userOrigin\": \"dolor labore aute\",\n      \"message\": \"aliqua \",\n      \"patch\": {}\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4bf1b110-7536-45e6-b8a8-bb8ae78565f7",
                    "name": "Gets the specified entry of the audit log | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets the specified entry of the audit log | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "auditlogs",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "id",
                                    "description": "(Required) The ID of the required log entry."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "4af2df44-3007-4f7e-8022-3d8f19fd8307",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "auditlogs",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required log entry."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"category\": \"MANUAL_TAGGING_SERVICE\",\n  \"environmentId\": \"non Excepteur sunt\",\n  \"eventType\": \"POST\",\n  \"logId\": \"labore id ut dolore\",\n  \"success\": true,\n  \"timestamp\": 53652152,\n  \"user\": \"laboris est in in\",\n  \"userType\": \"USER_NAME\",\n  \"entityId\": \"dolore qui in\",\n  \"userOrigin\": \"sint nulla in\",\n  \"message\": \"commodo pariatur Excepteur\",\n  \"patch\": {}\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "902015f7-00b5-444e-9f9c-da70302e5d62",
                            "name": "Failed. Invalid ID format.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "auditlogs",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required log entry."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3dac4334-9f2f-41e1-bd8c-5dc26dd88945",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "auditlogs",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required log entry."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "fb153805-eb62-40b5-842a-62980befcf3b",
            "name": "Provides advice for security problems. | maturity=EARLY_ADOPTER",
            "request": {
                "name": "Provides advice for security problems. | maturity=EARLY_ADOPTER",
                "description": {
                    "content": "You can narrow down the output by providing the management zone and pagination. If you specify a management zone, only problems originating from that zone are included to the request.",
                    "type": "text/plain"
                },
                "url": {
                    "path": [
                        "davis",
                        "securityAdvices"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [
                        {
                            "disabled": false,
                            "key": "managementZoneFilter",
                            "value": "<string>",
                            "description": "To specify management zones, use one of the options listed below. For each option you can specify multiple comma-separated values. If several values are specified, the **OR** logic applies. All values are case-sensitive and must be quoted. \n\n* Management zone ID: ids(\"mzId-1\", \"mzId-2\"). \n* Management zone names: names(\"mz-1\", \"mz-2\"). \n\nYou can specify several comma-separated criteria (for example, `names(\"myMz\"),ids(\"9130632296508575249\")`)."
                        },
                        {
                            "disabled": false,
                            "key": "nextPageKey",
                            "value": "<string>",
                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                        },
                        {
                            "disabled": false,
                            "key": "pageSize",
                            "value": "<long>",
                            "description": "The amount of security advices in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 5 is used."
                        }
                    ],
                    "variable": []
                },
                "header": [
                    {
                        "key": "Accept",
                        "value": "application/json; charset=utf-8"
                    }
                ],
                "method": "GET",
                "auth": {
                    "type": "apikey",
                    "apikey": [
                        {
                            "key": "key",
                            "value": "Authorization"
                        },
                        {
                            "key": "value",
                            "value": "Api-Token {{DT_TOKEN}}"
                        },
                        {
                            "key": "in",
                            "value": "header"
                        }
                    ]
                }
            },
            "response": [
                {
                    "id": "780fa4c6-e703-4063-b552-eedc45e2a3c2",
                    "name": "Success",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "davis",
                                "securityAdvices"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "managementZoneFilter",
                                    "value": "<string>"
                                },
                                {
                                    "key": "nextPageKey",
                                    "value": "<string>"
                                },
                                {
                                    "key": "pageSize",
                                    "value": "<long>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "<API Key>"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        }
                    ],
                    "body": "{\n  \"totalCount\": 33380341,\n  \"pageSize\": -50364006,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"advices\": [\n    {\n      \"name\": \"aliqua\",\n      \"vulnerableComponent\": \"sint occaecat sunt tempor\",\n      \"technology\": \"PHP\",\n      \"adviceType\": \"UPGRADE\",\n      \"critical\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"high\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"low\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"none\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"et sint\",\n      \"vulnerableComponent\": \"eiusmod adipisicing\",\n      \"technology\": \"JAVA\",\n      \"adviceType\": \"UPGRADE\",\n      \"critical\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"high\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"low\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"none\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                }
            ],
            "event": [],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            }
        },
        {
            "id": "b26fad13-816a-44ad-8951-bbd9bd819cfb",
            "name": "securityProblems",
            "item": [
                {
                    "id": "60c89458-f461-46a6-9057-496e39c11d03",
                    "name": "Lists all security problems",
                    "request": {
                        "name": "Lists all security problems",
                        "description": {},
                        "url": {
                            "path": [
                                "securityProblems"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of security problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "securityProblemSelector",
                                    "value": "<string>",
                                    "description": "Defines the scope of the query. Only security problems matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Status: `status(\"value\")`. Find the possible values in the description of the **status** field of the response. If not set, all security problems are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Risk level: `riskLevel(\"value\")`. The Davis risk level. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum risk score: `minRiskScore(\"5.5\")`. The Davis minimum risk score. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum risk score: `maxRiskScore(\"5.5\")`. The Davis maximum risk score. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* Base risk level: `baseRiskLevel(\"value\")`. The Base risk level from the CVSS. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum base risk score: `minBaseRiskScore(\"5.5\")`. The minimum base risk score from the CVSS. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum base risk score: `maxBaseRiskScore(\"5.5\")`. The maximum base risk score from the CVSS. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* External vulnerability ID contains: `externalVulnerabilityIdContains(\"id-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* External vulnerability ID: `externalVulnerabilityId(\"id-1\", \"id-2\")`. \n* CVE ID: `cveId(\"id\")`.\n* Risk assessment `riskAssessment(\"value-1\", \"value-2\")` Possible values are `EXPOSED`, `SENSITIVE`, `EXPLOIT`, `VULNERABLE_FUNCTION_IN_USE` and `ACCURACY_REDUCED`.\n* Related host ID: `relatedHostIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related host name: `relatedHostNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related host name contains: `relatedHostNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes cluster ID: `relatedKubernetesClusterIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes cluster name: `relatedKubernetesClusterNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes cluster name contains: `relatedKubernetesClusterNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes workload ID: `relatedKubernetesWorkloadIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes workload name: `relatedKubernetesWorkloadNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes workload name contains: `relatedKubernetesWorkloadNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Management zone ID: `managementZoneIds(\"mzId-1\", \"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Affected process group instance ID: `affectedPgiIds(\"pgiId-1\", \"pgiId-2\")`. Specify Dynatrace entity IDs here.\n* Affected process group ID: `affectedPgIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Affected process group name: `affectedPgNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Affected process group name contains: `affectedPgNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Vulnerable component ID: `vulnerableComponentIds(\"componentId-1\", \"componentId-2\")`. Specify component IDs here.\n* Vulnerable component name: `vulnerableComponentNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Vulnerable component name contains: `vulnerableComponentNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Host tags: `hostTags(\"hostTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Process group tags: `pgTags(\"pgTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Process group instance tags: `pgiTags(\"pgiTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Tags: `tags(\"tag-1\")`. The `CONTAINS` operator is used. This selector picks hosts, process groups, and process group instances at the same time. Maximum value length is 48 characters.\n* Display ID: `displayIds(\"S-1234\", \"S-5678\")`. The `EQUALS` operator is used.\n* Security problem ID: `securityProblemIds(\"12544152654387159360\", \"5904857564184044850\")`. The `EQUALS` operator is used.\n* Technology: `technology(\"technology-1\", \"technology-2\")`. Find the possible values in the description of the **technology** field of the response. The `EQUALS` operator is used.\n* Vulnerability type: `vulnerabilityType(\"type-1\", \"type-2\")`. Possible values are `THIRD_PARTY`, `CODE_LEVEL`, `RUNTIME`.\n\nRisk score and risk category are mutually exclusive (cannot be used at the same time).\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "<string>",
                                    "description": "Specifies one or more fields for sorting the security problem list. Multiple fields can be concatenated using a comma (`,`) as a separator (e.g. `+status,-timestamp`).\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n* `status`: The security problem status (`+` open first or `-` resolved first) \n* `muted`: The security problem mute state (`+` unmuted first or `-` muted first) \n* `technology`: The security problem technology \n* `firstSeenTimestamp`: The timestamp of the first occurrence of the security problem (`+` new problems first or `-` old problems first) \n* `lastUpdatedTimestamp`: The timestamp of the last update of the security problem (`+` recently updated problems first or `-`  earlier updated problems first)\n* `securityProblemId`: The auto-generated ID of the security problem (`+` lower number first or `-` higher number first) \n* `externalVulnerabilityId`: The ID of the external vulnerability (`+` lower number first or `-` higher number first) \n* `displayId`: The display ID (`+` lower number first or `-` higher number first) \n* `riskAssessment.riskScore`: The Davis security score (`+` lower score first or `-` higher score first) \n* `riskAssessment.riskLevel`: The Davis security level (`+` lower level first or `-` higher level first) \n* `riskAssessment.exposure`: Whether the problem is exposed to the internet \n* `riskAssessment.dataAssets`: Whether data assets are affected \n* `riskAssessment.vulnerableFunctionUsage`: Whether vulnerable functions are used \n* `riskAssessment.assessmentAccuracy`: The assessments accuracy (`+` less accuracy first or `-` more accuracy first) \n* `globalCounts.affectedNodes`: Number of affected nodes (`+` lower number first or `-` higher number first) \n* `globalCounts.affectedProcessGroupInstances`: Number of affected process group instances (`+` lower number first or `-` higher number first) \n* `globalCounts.affectedProcessGroups`: Number of affected process groups (`+` lower number first or `-` higher number first) \n* `globalCounts.exposedProcessGroups`: Number of exposed process groups (`+` lower number first or `-` higher number first) \n* `globalCounts.reachableDataAssets`: Number of reachable data assets (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedApplications`: Number of related applications (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedAttacks`: Number of attacks on the security problem (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedHosts`: Number of related hosts (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedKubernetesClusters`: Number of related Kubernetes cluster (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedKubernetesWorkloads`: Number of related Kubernetes workloads (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedServices`: Number of related services (`+` lower number first or `-` higher number first) \n* `globalCounts.vulnerableComponents`: Number of vulnerable components (`+` lower number first or `-` higher number first) \n\nIf no prefix is set, `+` is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "A list of additional security problem properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n* `codeLevelVulnerabilityDetails`: Details of the code-level vulnerability.\n* `globalCounts`: Globally calculated statistics about the security problem. No management zone information is taken into account.\n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.\n\nThe end of the timeframe must not be older than 365 days."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "5a1f69c6-845d-4fd1-b447-311ea69f4689",
                            "name": "Success. The response contains the list of security problems.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "securityProblems"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "securityProblemSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -9492959,\n  \"pageSize\": -81574453,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"securityProblems\": [\n    {\n      \"securityProblemId\": \"incididunt in dolore qui consecte\",\n      \"displayId\": \"ullamco sed voluptat\",\n      \"status\": \"RESOLVED\",\n      \"muted\": false,\n      \"externalVulnerabilityId\": \"dolore Excepteur incididunt dolore proident\",\n      \"vulnerabilityType\": \"RUNTIME\",\n      \"title\": \"Ut ipsum ad tempor\",\n      \"packageName\": \"consequat dolor ullamco\",\n      \"url\": \"officia enim\",\n      \"technology\": \"PHP\",\n      \"firstSeenTimestamp\": 53769498,\n      \"lastUpdatedTimestamp\": 88186840,\n      \"riskAssessment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"cveIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"globalCounts\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"codeLevelVulnerabilityDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"securityProblemId\": \"irure et\",\n      \"displayId\": \"cupidatat Duis ad esse\",\n      \"status\": \"OPEN\",\n      \"muted\": false,\n      \"externalVulnerabilityId\": \"do amet\",\n      \"vulnerabilityType\": \"RUNTIME\",\n      \"title\": \"aliquip fugiat\",\n      \"packageName\": \"exercitation sint sed ex\",\n      \"url\": \"dolor ad culpa\",\n      \"technology\": \"PHP\",\n      \"firstSeenTimestamp\": 61988447,\n      \"lastUpdatedTimestamp\": -37054164,\n      \"riskAssessment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"cveIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"globalCounts\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"codeLevelVulnerabilityDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f6a933ee-7ac3-45d6-aa12-029463d524d5",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "1c492836-ab3e-446a-852b-dceff137e190",
                            "name": "Gets parameters of a security problem",
                            "request": {
                                "name": "Gets parameters of a security problem",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "fields",
                                            "value": "<string>",
                                            "description": "A list of additional security problem properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n* `codeLevelVulnerabilityDetails`: Details of the code-level vulnerability.\n* `globalCounts`: Globally calculated statistics about the security problem. No management zone information is taken into account.\n* `filteredCounts`: Statistics about the security problem, filtered by the management zone and timeframe start ('from') query parameters. \n* `description`: The description of the vulnerability.\n* `events`: The security problem's last 10 events within the last 365 days, sorted from newest to oldest.\n* `vulnerableComponents`: A list of vulnerable components of the security problem within the provided filter range. \n* `affectedEntities`: A list of affected entities of the security problem within the provided filter range. \n* `exposedEntities`: A list of exposed entities of the security problem within the provided filter range. \n* `reachableDataAssets`: A list of data assets reachable by affected entities of the security problem within the provided filter range. \n* `relatedEntities`: A list of related entities of the security problem within the provided filter range. \n* `relatedContainerImages`: A list of related container images of the security problem within the provided filter range. \n* `relatedAttacks`: A list of attacks detected on the exposed security problem. \n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n"
                                        },
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "Based on the timeframe start the affected-, related- and vulnerable entities are being calculated.\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the default timeframe start of 24 hours in the past is used (`now-24h`).\n\nThe timeframe start must not be older than 365 days."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "41f41df0-1d04-4852-836b-7f4b4172eccd",
                                    "name": "Success. The response contains parameters of the security problem.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "fields",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"securityProblemId\": \"nulla minim non amet\",\n  \"displayId\": \"veniam adipisicing\",\n  \"status\": \"OPEN\",\n  \"muted\": false,\n  \"externalVulnerabilityId\": \"consequat off\",\n  \"vulnerabilityType\": \"RUNTIME\",\n  \"title\": \"elit labore\",\n  \"packageName\": \"id Duis officia\",\n  \"url\": \"culpa est dolore Ut\",\n  \"description\": \"incididunt ex consectetur elit\",\n  \"technology\": \"KUBERNETES\",\n  \"firstSeenTimestamp\": -7330859,\n  \"lastUpdatedTimestamp\": 65346234,\n  \"riskAssessment\": {\n    \"riskLevel\": \"MEDIUM\",\n    \"riskScore\": 64192397.60793424,\n    \"riskVector\": \"commodo ullamco\",\n    \"baseRiskLevel\": \"HIGH\",\n    \"baseRiskScore\": -4567386.449381366,\n    \"baseRiskVector\": \"id\",\n    \"exposure\": \"PUBLIC_NETWORK\",\n    \"dataAssets\": \"NOT_AVAILABLE\",\n    \"publicExploit\": \"NOT_AVAILABLE\",\n    \"vulnerableFunctionUsage\": \"NOT_AVAILABLE\",\n    \"assessmentAccuracy\": \"NOT_AVAILABLE\"\n  },\n  \"managementZones\": [\n    {\n      \"name\": \"in exercitation ut magna laboris\",\n      \"id\": \"Ut\"\n    },\n    {\n      \"name\": \"occaecat velit\",\n      \"id\": \"occaecat Duis\"\n    }\n  ],\n  \"cveIds\": [\n    \"exercitat\",\n    \"ex aute cillum sint in\"\n  ],\n  \"globalCounts\": {\n    \"affectedNodes\": 84557544,\n    \"affectedProcessGroupInstances\": 11832537,\n    \"affectedProcessGroups\": 86324049,\n    \"exposedProcessGroups\": 44730784,\n    \"reachableDataAssets\": 37989715,\n    \"relatedApplications\": -86759128,\n    \"relatedAttacks\": 981573,\n    \"relatedHosts\": 52482900,\n    \"relatedKubernetesClusters\": 56449693,\n    \"relatedKubernetesWorkloads\": 53667889,\n    \"relatedServices\": -16827728,\n    \"vulnerableComponents\": 79112588\n  },\n  \"filteredCounts\": {\n    \"affectedNodes\": -67617129,\n    \"affectedProcessGroupInstances\": 58222445,\n    \"affectedProcessGroups\": -19321789,\n    \"exposedProcessGroups\": 79344983,\n    \"reachableDataAssets\": 77126816,\n    \"relatedApplications\": 82993639,\n    \"relatedAttacks\": -66168758,\n    \"relatedDatabases\": 76907345,\n    \"relatedHosts\": -54520850,\n    \"relatedKubernetesClusters\": -48626716,\n    \"relatedKubernetesWorkloads\": -3833476,\n    \"relatedServices\": -36311449,\n    \"vulnerableComponents\": -80246582\n  },\n  \"codeLevelVulnerabilityDetails\": {\n    \"processGroupIds\": [\n      \"pari\",\n      \"in commodo\"\n    ],\n    \"processGroups\": [\n      \"in\",\n      \"magna nostrud est fugiat velit\"\n    ],\n    \"shortVulnerabilityLocation\": \"Lorem ea sit\",\n    \"type\": \"IMPROPER_INPUT_VALIDATION\",\n    \"vulnerabilityLocation\": \"et Duis sunt nulla laborum\",\n    \"vulnerableFunction\": \"elit velit\",\n    \"vulnerableFunctionInput\": {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inputSegments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"events\": [\n    {\n      \"timestamp\": -44375687,\n      \"reason\": \"SECURITY_PROBLEM_REOPENED\",\n      \"riskAssessmentSnapshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"muteState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"timestamp\": -12978356,\n      \"reason\": \"SECURITY_PROBLEM_REOPENED\",\n      \"riskAssessmentSnapshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"muteState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"vulnerableComponents\": [\n    {\n      \"id\": \"dolore\",\n      \"displayName\": \"ex\",\n      \"shortName\": \"officia velit labore eu\",\n      \"fileName\": \"aute eiusmod consectetur anim officia\",\n      \"numberOfAffectedEntities\": -49347696,\n      \"affectedEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"mollit Excepte\",\n      \"displayName\": \"tempor ni\",\n      \"shortName\": \"aute anim labore consequat aliquip\",\n      \"fileName\": \"velit laborum ullamco dolor\",\n      \"numberOfAffectedEntities\": -24178819,\n      \"affectedEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"affectedEntities\": [\n    \"cillum \",\n    \"et sunt dolor in Excepteur\"\n  ],\n  \"exposedEntities\": [\n    \"officia ullamco pariatur ut\",\n    \"dolor sit\"\n  ],\n  \"reachableDataAssets\": [\n    \"nisi consectetur ad ex Ut\",\n    \"aliqua quis\"\n  ],\n  \"relatedEntities\": {\n    \"applications\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"services\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"hosts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"databases\": [\n      \"commodo aliqua dolore pariatur\",\n      \"pariatur anim ad sunt Ut\"\n    ],\n    \"kubernetesWorkloads\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kubernetesClusters\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"relatedContainerImages\": [\n    {\n      \"containerImages\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"containerImages\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"relatedAttacks\": {\n    \"attacks\": [\n      \"sunt culpa\",\n      \"mollit nostrud occaecat\"\n    ]\n  },\n  \"muteStateChangeInProgress\": true\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "8c831dcb-7b6e-4bf3-99ab-e8db3c1842a6",
                            "name": "Lists all events of a security problem | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Lists all events of a security problem | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id",
                                        "events"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "to",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "30206dc7-4375-4fde-9167-178ca5d974f5",
                                    "name": "Success. The response contains the list of security problem events.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "events"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"totalCount\": -30945579,\n  \"events\": [\n    {\n      \"timestamp\": 33242077,\n      \"reason\": \"SECURITY_PROBLEM_UNMUTED\",\n      \"riskAssessmentSnapshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"muteState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"timestamp\": 68035326,\n      \"reason\": \"SECURITY_PROBLEM_CREATED\",\n      \"riskAssessmentSnapshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"muteState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"pageSize\": 73658868,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "553d4cad-7780-4c7d-964f-260dcb95d9fe",
                            "name": "remediationItems",
                            "item": [
                                {
                                    "id": "3b2f932d-a200-43fe-a8f1-f4664298e977",
                                    "name": "Lists remediation items of a third-party security problem",
                                    "request": {
                                        "name": "Lists remediation items of a third-party security problem",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "remediationItems"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "remediationItemSelector",
                                                    "value": "<string>",
                                                    "description": "Defines the scope of the query. Only remediable entities matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Vulnerability state: `vulnerabilityState(\"value\")`. Find the possible values in the description of the **vulnerabilityState** field of the response. If not set, all entities are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Reachable data asset assessment: `assessment.dataAssets(\"value\")` Possible values are `REACHABLE`, and `NOT_DETECTED`.\n* Network exposure assessment: `assessment.exposure(\"value\")` Possible values are `PUBLIC_NETWORK`, and `NOT_DETECTED`.\n* Vulnerable function usage assessment: `assessment.vulnerableFunctionUsage(\"value\")` Possible values are `IN_USE`, and `NOT_IN_USE`.\n* Vulnerable function in use contains: `assessment.vulnerableFunctionInUseContains(\"value\")`. Possible values are `class::function`, `class::` and `function`. The `CONTAINS` operator is used. Only vulnerable functions in use are considered.\n* Assessment accuracy: `assessment.accuracy(\"value\")` Possible values are `FULL` and `REDUCED`.\n* Entity name contains: `entityNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required third-party security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "05609595-0c1d-4f88-ab91-c6e9fde70547",
                                            "name": "Success. The response contains the list of remediation items of a problem.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "securityProblems",
                                                        ":id",
                                                        "remediationItems"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "remediationItemSelector",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "id",
                                                            "description": "(Required) The ID of the required third-party security problem."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"remediationItems\": [\n    {\n      \"id\": \"et fugiat quis incididunt in\",\n      \"entityIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"tempor dolor\",\n      \"firstAffectedTimestamp\": -1000911,\n      \"assessment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resolvedTimestamp\": 5047800,\n      \"vulnerabilityState\": \"VULNERABLE\",\n      \"muteState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vulnerableComponents\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"remediationProgress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": \"t\",\n      \"entityIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"nisi tempor Duis\",\n      \"firstAffectedTimestamp\": 1021261,\n      \"assessment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resolvedTimestamp\": 89863669,\n      \"vulnerabilityState\": \"VULNERABLE\",\n      \"muteState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vulnerableComponents\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"remediationProgress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "d87f3192-41a7-40e3-90d7-538aa46e3bce",
                                    "name": "Sets the mute state of a remediation item | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Sets the mute state of a remediation item | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "remediationItems",
                                                ":remediationItemId",
                                                "muteState"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required third-party security problem."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "remediationItemId",
                                                    "description": "(Required) The ID of the remediation item."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"comment\": \"<string>\",\n  \"muted\": \"<boolean>\",\n  \"reason\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "97f2a3b4-6918-4054-a5a7-9f3fc0b38942",
                                            "name": "Success. The requested mute state has been applied to the remediation item.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "securityProblems",
                                                        ":id",
                                                        "remediationItems",
                                                        ":remediationItemId",
                                                        "muteState"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "id",
                                                            "description": "(Required) The ID of the required third-party security problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "remediationItemId",
                                                            "description": "(Required) The ID of the remediation item."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"comment\": \"<string>\",\n  \"muted\": \"<boolean>\",\n  \"reason\": \"IGNORE\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "906a2710-e00a-4245-a805-847737ded44e",
                                            "name": "Not executed. The remediation item was previously put into the requested mute state by the same user with the same reason and comment.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "securityProblems",
                                                        ":id",
                                                        "remediationItems",
                                                        ":remediationItemId",
                                                        "muteState"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "id",
                                                            "description": "(Required) The ID of the required third-party security problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "remediationItemId",
                                                            "description": "(Required) The ID of the remediation item."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"comment\": \"<string>\",\n  \"muted\": \"<boolean>\",\n  \"reason\": \"IGNORE\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "bb0fe407-376c-4741-a500-59f6c5d6a57e",
                            "name": "Lists all vulnerable functions and their usage for a third-party security problem",
                            "request": {
                                "name": "Lists all vulnerable functions and their usage for a third-party security problem",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id",
                                        "vulnerableFunctions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "vulnerableFunctionsSelector",
                                            "value": "<string>",
                                            "description": "Defines the scope of the query. Only vulnerable functions matching the specified criteria are included in the response.\n\nYou can add the following criteria. Values are *not* case sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Management zone ID: `managementZoneIds(\"mzId-1\", \"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\", \"name-2\")`. Values are case sensitive.\n* Process group ID: `processGroupIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Process group name: `processGroupNames(\"name-1\", \"name-2\")`. Values are case sensitive.\n* Process group name contains: `processGroupNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
                                        },
                                        {
                                            "disabled": false,
                                            "key": "groupBy",
                                            "value": "<string>",
                                            "description": "Defines additional grouping types in which vulnerable functions should be displayed.\n\nYou can add one of the following grouping types.\n\n* Process group: `PROCESS_GROUP`"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required third-party security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "baab5d17-f0ee-4547-9f69-ab7f9c0a7400",
                                    "name": "Success. The response contains the list of vulnerable functions.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "vulnerableFunctions"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "vulnerableFunctionsSelector",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "groupBy",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required third-party security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"vulnerableFunctions\": [\n    {\n      \"function\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usage\": \"NOT_AVAILABLE\",\n      \"processGroupsInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"processGroupsNotInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"processGroupsNotAvailable\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"function\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usage\": \"NOT_AVAILABLE\",\n      \"processGroupsInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"processGroupsNotInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"processGroupsNotAvailable\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"vulnerableFunctionsByProcessGroup\": [\n    {\n      \"processGroup\": \"do veniam voluptate laborum\",\n      \"functionsInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"functionsNotInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"functionsNotAvailable\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"processGroup\": \"sit pariatur\",\n      \"functionsInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"functionsNotInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"functionsNotAvailable\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "6e8dfe9e-db14-46c2-ab34-fe5ed3869319",
                            "name": "Mutes a security problem",
                            "request": {
                                "name": "Mutes a security problem",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id",
                                        "mute"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"comment\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "b8548ae5-9941-464a-908f-9e6dc0c9e82e",
                                    "name": "Success. The security problem has been muted.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "mute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"comment\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "6bf69775-2597-4ba2-9c7f-c03445a5c752",
                                    "name": "Not executed. The security problem is already muted.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "mute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"comment\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "61ca5de2-5db5-41d7-a40b-f87887a02199",
                            "name": "Un-mutes a security problem",
                            "request": {
                                "name": "Un-mutes a security problem",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id",
                                        "unmute"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"comment\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "20d7a5e2-9342-4144-8208-1cb855d696a1",
                                    "name": "Success. The security problem has been un-muted.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "unmute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"comment\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "98b331f8-38ef-46f9-a20a-11157017d506",
                                    "name": "Not executed. The security problem is already un-muted.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "unmute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"comment\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "d18719d5-804c-4d43-adbe-5f3ff72ed03a",
            "name": "credentials",
            "item": [
                {
                    "id": "89021aec-f936-49f4-9be5-3854887eb61a",
                    "name": "Lists all sets of credentials for synthetic monitors stored in your environment.",
                    "request": {
                        "name": "Lists all sets of credentials for synthetic monitors stored in your environment.",
                        "description": {
                            "content": "The credentials set itself (username/certificate and password) is not included in the response.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "credentials"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "type",
                                    "value": "<string>",
                                    "description": "Filters the result by the specified credentials type."
                                },
                                {
                                    "disabled": false,
                                    "key": "name",
                                    "value": "<string>",
                                    "description": "Filters the result by the name. When in quotation marks, whole phrase is taken. Case insensitive."
                                },
                                {
                                    "disabled": false,
                                    "key": "user",
                                    "value": "<string>",
                                    "description": "Filters credentials accessible to the user (owned by the user or the ones that are accessible for all)."
                                },
                                {
                                    "disabled": false,
                                    "key": "scope",
                                    "value": "<string>",
                                    "description": "Filters credentials with specified scope."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of credentials in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "ae4728fe-dc2d-47dd-9944-5a6edfee8b36",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "credentials"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "name",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "user",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"credentials\": [\n    {\n      \"name\": \"Sample username-password credentials\",\n      \"type\": \"USERNAME_PASSWORD\",\n      \"description\": \"Sample credentials for demo purposes.\",\n      \"owner\": \"user@domain.com\",\n      \"ownerAccessOnly\": true,\n      \"scope\": \"SYNTHETIC\",\n      \"externalVault\": {\n        \"sourceAuthMethod\": \"HASHICORP_VAULT_APPROLE\",\n        \"vaultUrl\": \"https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200\",\n        \"usernameSecretName\": \"username\",\n        \"passwordSecretName\": \"password\",\n        \"pathToCredentials\": \"kv/credentials\",\n        \"roleId\": \"00e4858c-ec33-bc99-4e7e-34de6967de6c\",\n        \"secretId\": \"CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX\",\n        \"vaultNamespace\": \"admin\"\n      },\n      \"credentialUsageSummary\": [\n        {\n          \"HTTP_MONITOR\": 3,\n          \"BROWSER_MONITOR\": 2\n        }\n      ]\n    },\n    {\n      \"name\": \"Sample username-password credentials\",\n      \"type\": \"USERNAME_PASSWORD\",\n      \"description\": \"Sample credentials for demo purposes.\",\n      \"owner\": \"user@domain.com\",\n      \"ownerAccessOnly\": true,\n      \"scope\": \"SYNTHETIC\",\n      \"externalVault\": {\n        \"sourceAuthMethod\": \"HASHICORP_VAULT_APPROLE\",\n        \"vaultUrl\": \"https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200\",\n        \"usernameSecretName\": \"username\",\n        \"passwordSecretName\": \"password\",\n        \"pathToCredentials\": \"kv/credentials\",\n        \"roleId\": \"00e4858c-ec33-bc99-4e7e-34de6967de6c\",\n        \"secretId\": \"CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX\",\n        \"vaultNamespace\": \"admin\"\n      },\n      \"credentialUsageSummary\": [\n        {\n          \"HTTP_MONITOR\": 3,\n          \"BROWSER_MONITOR\": 2\n        }\n      ]\n    }\n  ],\n  \"totalCount\": 64458933,\n  \"pageSize\": -86001095,\n  \"nextPageKey\": \"aute reprehenderit sit\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ef571fd5-5a69-4500-bd7e-135d4fdf8cd7",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "credentials"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "name",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "user",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d2691d0a-8b23-4e41-9c26-98cbc2bf0398",
                    "name": "Creates a new credentials set.",
                    "request": {
                        "name": "Creates a new credentials set.",
                        "description": {
                            "content": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "credentials"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"<string>\",\n  \"scope\": \"<string>\",\n  \"id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"ownerAccessOnly\": \"<boolean>\",\n  \"type\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "eff55aa7-f8d2-41d7-b7f5-14072371f21e",
                            "name": "Success. The new credentials set has been created. The response contains the ID of the set.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "credentials"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"Sample credentials\",\n  \"type\": \"USERNAME_PASSWORD\",\n  \"description\": \"Sample set of credentials for API documentation\",\n  \"user\": \"john.smith\",\n  \"password\": \"1234abcd\",\n  \"ownerAccessOnly\": true,\n  \"scope\": \"SYNTHETIC\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"id\": \"cillum sint mollit\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5d9505fb-fd28-4b38-83d6-09827a26c1f3",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "credentials"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"Sample credentials\",\n  \"type\": \"USERNAME_PASSWORD\",\n  \"description\": \"Sample set of credentials for API documentation\",\n  \"user\": \"john.smith\",\n  \"password\": \"1234abcd\",\n  \"ownerAccessOnly\": true,\n  \"scope\": \"SYNTHETIC\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "21fe0d82-794e-481f-94f1-835cb443f3aa",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "3e8cf8b7-4947-4f86-a064-32515530c996",
                            "name": "Gets the metadata of the specified credentials set.",
                            "request": {
                                "name": "Gets the metadata of the specified credentials set.",
                                "description": {
                                    "content": "The credentials set itself (e.g. username/certificate and password) is not included in the response.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "credentials",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The Dynatrace entity ID of the required credentials set."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "540e6b57-b904-40a8-919b-d71585bc51d7",
                                    "name": "Success. The response contains the metadata of the credentials set.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The Dynatrace entity ID of the required credentials set."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"credentialUsageSummary\": [\n    {\n      \"type\": \"amet laborum cupidatat enim qui\",\n      \"count\": -55882037\n    },\n    {\n      \"type\": \"et\",\n      \"count\": -2272834\n    }\n  ],\n  \"description\": \"dolore\",\n  \"name\": \"dolore irure id\",\n  \"owner\": \"sit laboris anim\",\n  \"ownerAccessOnly\": false,\n  \"type\": \"TOKEN\",\n  \"id\": \"Duis id offic\",\n  \"scope\": \"UNKNOWN\",\n  \"externalVault\": {\n    \"sourceAuthMethod\": \"HASHICORP_VAULT_APPROLE\",\n    \"vaultUrl\": \"pariatur Excepteur\",\n    \"usernameSecretName\": \"proident nulla\",\n    \"passwordSecretName\": \"do eu\",\n    \"tokenSecretName\": \"Excepte\",\n    \"credentialsUsedForExternalSynchronization\": [\n      \"eiusmod ut nostrud\",\n      \"reprehenderit\"\n    ],\n    \"type\": \"AZURE_CERTIFICATE_MODEL\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "88defbbb-7a5b-4e44-8bd1-dd1819091e34",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The Dynatrace entity ID of the required credentials set."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "1d9f8572-2c44-4415-84d7-da4f6000fc78",
                            "name": "Updates the specified credentials set.",
                            "request": {
                                "name": "Updates the specified credentials set.",
                                "description": {
                                    "content": "The body must not provide an ID. The ID should be provided in the path.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "credentials",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The Dynatrace entity ID of the credentials set to be updated."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"<string>\",\n  \"scope\": \"<string>\",\n  \"id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"ownerAccessOnly\": \"<boolean>\",\n  \"type\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "6c29e885-d0cd-4ff3-8be6-22551c4a9f57",
                                    "name": "Success. The new credentials set has been created. The response contains the ID of the set.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The Dynatrace entity ID of the credentials set to be updated."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"Sample credentials\",\n  \"type\": \"USERNAME_PASSWORD\",\n  \"description\": \"Sample set of credentials for API documentation\",\n  \"user\": \"john.smith\",\n  \"password\": \"1234abcd\",\n  \"ownerAccessOnly\": true,\n  \"scope\": \"SYNTHETIC\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"id\": \"cillum sint mollit\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "be933b05-51b2-46ba-ba19-8f6f779e3fdb",
                                    "name": "Success. The credentials set has been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The Dynatrace entity ID of the credentials set to be updated."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"Sample credentials\",\n  \"type\": \"USERNAME_PASSWORD\",\n  \"description\": \"Sample set of credentials for API documentation\",\n  \"user\": \"john.smith\",\n  \"password\": \"1234abcd\",\n  \"ownerAccessOnly\": true,\n  \"scope\": \"SYNTHETIC\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "ea77ebf4-1a97-464f-8c04-bad1d6ae1c9b",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The Dynatrace entity ID of the credentials set to be updated."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"Sample credentials\",\n  \"type\": \"USERNAME_PASSWORD\",\n  \"description\": \"Sample set of credentials for API documentation\",\n  \"user\": \"john.smith\",\n  \"password\": \"1234abcd\",\n  \"ownerAccessOnly\": true,\n  \"scope\": \"SYNTHETIC\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "5a38e23a-ebdb-4a7a-aa54-d500f08fdb46",
                            "name": "Deletes the specified credentials set",
                            "request": {
                                "name": "Deletes the specified credentials set",
                                "description": {
                                    "content": "Provide credential ID in the path.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "credentials",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the credentials set to be deleted."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "b6699608-a3af-41db-957e-c43df47f79a4",
                                    "name": "Success. The credentials set has been deleted. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the credentials set to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "93b1d421-4339-4746-a3d6-29f1d6231700",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the credentials set to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "16ff8123-3e3a-462c-9d16-ec1105120831",
                                    "name": "Failed. Could not delete the credential.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the credentials set to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "1aa16710-b153-4283-872e-7851751daf7e",
            "name": "extensions",
            "item": [
                {
                    "id": "efd589c3-d16a-45bb-b0fe-f38e12541db2",
                    "name": "Lists all the extensions 2.0 available in your environment",
                    "request": {
                        "name": "Lists all the extensions 2.0 available in your environment",
                        "description": {},
                        "url": {
                            "path": [
                                "extensions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "name",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of extensions 2.0 by name. You can specify a partial name. In that case, the CONTAINS operator is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2bc15be0-54e7-4b2d-b1c2-9bec6c6cd07d",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "name",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 76693817,\n  \"extensions\": [\n    {\n      \"extensionName\": \"anim deserunt ipsum \",\n      \"version\": \"1.2.3\"\n    },\n    {\n      \"extensionName\": \"ea qui exercitation cillum magna\",\n      \"version\": \"1.2.3\"\n    }\n  ],\n  \"pageSize\": 98601617,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b045aab7-99a9-4dba-ae36-32c3a8e10511",
                    "name": "Uploads or verifies a new extension 2.0",
                    "request": {
                        "name": "Uploads or verifies a new extension 2.0",
                        "description": {},
                        "url": {
                            "path": [
                                "extensions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "validateOnly",
                                    "value": "false",
                                    "description": "Only run validation but do not persist the extension even if validation was successful."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "file",
                                    "type": "file",
                                    "description": "(Required) Extension 2.0 zip file to upload."
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "7baf5462-73d5-48ec-aa28-96f6a32eb2da",
                            "name": "The extension is valid",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "validateOnly",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) Extension 2.0 zip file to upload.",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<binary>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"extensionName\": \"Excepteur\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"velit do irure elit\"\n  },\n  \"dataSources\": [\n    \"nulla id\",\n    \"occaecat exercitation\"\n  ],\n  \"variables\": [\n    \"eiusmod aliqua\",\n    \"incididun\"\n  ],\n  \"featureSets\": [\n    \"in fugiat Excepteur mollit\",\n    \"quis deserunt tempor\"\n  ],\n  \"featureSetsDetails\": {\n    \"irure_e\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sunt5e\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"sint id nisi esse magna\",\n  \"minEECVersion\": \"in Lorem deserunt dolore\",\n  \"fileHash\": \"in Lorem veniam Ut\",\n  \"assetsInfo\": [\n    {\n      \"assetType\": \"adipisicing tempor aliquip eiusmod\",\n      \"count\": 46403653\n    },\n    {\n      \"assetType\": \"voluptate deserunt\",\n      \"count\": 95076276\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2f873156-cd79-48ce-9222-e46ac4613f51",
                            "name": "Success. The extension 2.0 has been uploaded.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "validateOnly",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) Extension 2.0 zip file to upload.",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<binary>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"extensionName\": \"dolor fugiat\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"culpa cupidatat fugiat nisi veniam\"\n  },\n  \"dataSources\": [\n    \"dolore \",\n    \"Duis exercitation voluptate\"\n  ],\n  \"variables\": [\n    \"esse proident ea dolore\",\n    \"quis commodo fugiat\"\n  ],\n  \"featureSets\": [\n    \"adipisicing nostrud dolor sit occaecat\",\n    \"aliquip mollit sed ex dolore\"\n  ],\n  \"featureSetsDetails\": {\n    \"Duis7\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"magnab\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"commodo\",\n  \"minEECVersion\": \"dolor in fugiat\",\n  \"fileHash\": \"velit in enim\",\n  \"assetsInfo\": [\n    {\n      \"assetType\": \"esse aute nisi minim\",\n      \"count\": 87531964\n    },\n    {\n      \"assetType\": \"laborum ad\",\n      \"count\": 77461233\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "68d27314-390d-409a-84c8-9ddc23b2cc5f",
                            "name": "Failed. The input file is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "validateOnly",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) Extension 2.0 zip file to upload.",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<binary>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cd8202ad-f5aa-4aff-85f7-3739e84e8fa7",
                            "name": "Upload not possible yet, please try again in a few seconds.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "validateOnly",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) Extension 2.0 zip file to upload.",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<binary>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9f7d14fc-3368-409a-836d-0f4faf1f8278",
                    "name": "{extensionName}",
                    "item": [
                        {
                            "id": "69f03e4f-d9ab-45bd-af23-f7adc55a23d0",
                            "name": "Lists all versions of the extension 2.0",
                            "request": {
                                "name": "Lists all versions of the extension 2.0",
                                "description": {},
                                "url": {
                                    "path": [
                                        "extensions",
                                        ":extensionName"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "nextPageKey",
                                            "value": "<string>",
                                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                        },
                                        {
                                            "disabled": false,
                                            "key": "pageSize",
                                            "value": "<long>",
                                            "description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionName",
                                            "description": "(Required) The name of the requested extension 2.0."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "722243f0-12d1-4150-8774-420da7971788",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"totalCount\": -83206361,\n  \"extensions\": [\n    {\n      \"extensionName\": \"amet occaecat cupidatat ut proident\",\n      \"version\": \"1.2.3\"\n    },\n    {\n      \"extensionName\": \"Ut irure\",\n      \"version\": \"1.2.3\"\n    }\n  ],\n  \"pageSize\": -53509387,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ca20e8ab-3f59-4d26-b8c8-8292476d36d4",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "21da3db8-af6c-40d7-ad41-38ff6068a28c",
                            "name": "environmentConfiguration",
                            "item": [
                                {
                                    "id": "599b007c-0196-4c71-9b7d-fb95a4d3518a",
                                    "name": "Gets the active environment configuration version of the specified extension 2.0",
                                    "request": {
                                        "name": "Gets the active environment configuration version of the specified extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "3102c1e3-6e9a-4f5f-ad7b-5d5978b90769",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"version\": \"1.2.3\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "e76a69c5-4a6e-4c90-8a91-28a6f4a8360a",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "e09b69c1-b9cd-4225-8d1f-973d73c65061",
                                    "name": "Updates the active environment configuration version of the extension 2.0",
                                    "request": {
                                        "name": "Updates the active environment configuration version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"version\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "f2b74fdb-2b61-4b47-b7a8-b22ac84bb83b",
                                            "name": "Success. Environment configuration updated.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"version\": \"1.2.3\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"version\": \"1.2.3\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "553da93a-4702-47b9-8ff6-5d4e06ffe9b6",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"version\": \"1.2.3\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "ec338923-f585-43ad-9254-82eb941bab74",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"version\": \"1.2.3\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "9ec69966-3ebe-4092-8d03-493fda79f923",
                                    "name": "Activates the environment configuration from the specified version of the extension 2.0",
                                    "request": {
                                        "name": "Activates the environment configuration from the specified version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"version\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "e05cbad2-d2d8-4a82-abb6-c3b111ee207d",
                                            "name": "Success. Environment configuration created.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"version\": \"1.2.3\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"version\": \"1.2.3\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "5b36239a-87c8-46de-82f8-487aa64bdb27",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"version\": \"1.2.3\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "2649c234-179c-4e7d-9535-b95152aa7d27",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"version\": \"1.2.3\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "72615b44-dad3-4e5a-91ed-8d16aa32479c",
                                    "name": "Deactivates the environment configuration of the specified extension 2.0",
                                    "request": {
                                        "name": "Deactivates the environment configuration of the specified extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "67630de9-d5bf-42aa-9cb3-13636252a4c2",
                                            "name": "Success. Environment configuration deactivated.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"version\": \"1.2.3\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "8c7ab87f-d8a5-4e8e-9528-9743370c8c2c",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "736de11f-ef1a-4871-bc86-ef55bf247b5d",
                                    "name": "List of the latest extension environment configuration events",
                                    "request": {
                                        "name": "List of the latest extension environment configuration events",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration",
                                                "events"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "from",
                                                    "value": "<string>",
                                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "to",
                                                    "value": "<string>",
                                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "content",
                                                    "value": "<string>",
                                                    "description": "Content of the event"
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "status",
                                                    "value": "<string>",
                                                    "description": "Status of the event"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "9e69faf3-d23f-4629-9d49-5837f8d84e4b",
                                            "name": "List of the latest extension environment configuration events",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration",
                                                        "events"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "content",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "status",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"extensionEvents\": [\n    {\n      \"timestamp\": \"officia sunt dolore\",\n      \"severity\": \"ut dolore Excepteur\",\n      \"content\": \"amet est laborum ut\",\n      \"dt.entity.host\": \"voluptate non\",\n      \"dt.active_gate.id\": \"velit consequat\",\n      \"dt.extension.ds\": \"esse commodo ut pariatur labo\",\n      \"status\": \"NONE\"\n    },\n    {\n      \"timestamp\": \"aliqua sint sit\",\n      \"severity\": \"pariatur in\",\n      \"content\": \"nulla\",\n      \"dt.entity.host\": \"ea culpa adi\",\n      \"dt.active_gate.id\": \"minim dolor\",\n      \"dt.extension.ds\": \"Ut\",\n      \"status\": \"NONE\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "34747a74-71cc-4228-a0a1-f91dc8b5dd6d",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration",
                                                        "events"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "content",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "status",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "a9eec2dd-96aa-4239-a818-498e7f8670e3",
                            "name": "monitoringConfigurations",
                            "item": [
                                {
                                    "id": "4614e5b3-cb25-4a0e-a1f6-63b527159e7a",
                                    "name": "Lists all the monitoring configurations of the specified extension 2.0",
                                    "request": {
                                        "name": "Lists all the monitoring configurations of the specified extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "monitoringConfigurations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "nextPageKey",
                                                    "value": "<string>",
                                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "pageSize",
                                                    "value": "<long>",
                                                    "description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "version",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of configurations by extension 2.0 version."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "active",
                                                    "value": "<boolean>",
                                                    "description": "Filters the resulting set of configurations by the active state."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "3bae8e2f-b50b-4f07-aa92-b3c3cff0d452",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "nextPageKey",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "pageSize",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "version",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "active",
                                                            "value": "<boolean>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"totalCount\": 87275095,\n  \"items\": [\n    {\n      \"objectId\": \"ex\",\n      \"scope\": \"dolor in dolore qui non\",\n      \"value\": {}\n    },\n    {\n      \"objectId\": \"officia\",\n      \"scope\": \"nisi consequat enim non cupidatat\",\n      \"value\": {}\n    }\n  ],\n  \"pageSize\": -78100178,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "b5afdfea-dd4a-4dff-8fab-5e0074610a08",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "nextPageKey",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "pageSize",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "version",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "active",
                                                            "value": "<boolean>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "06a0e460-d2ae-48e5-be95-369954e33eb6",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "nextPageKey",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "pageSize",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "version",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "active",
                                                            "value": "<boolean>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "50414dca-9526-4d05-ae20-c4783907aba4",
                                    "name": "Creates new monitoring configuration for the specified extension 2.0",
                                    "request": {
                                        "name": "Creates new monitoring configuration for the specified extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "monitoringConfigurations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"scope\": \"<string>\",\n    \"value\": \"<object>\"\n  },\n  {\n    \"scope\": \"<string>\",\n    \"value\": \"<object>\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "ef6ceca2-9482-473e-8f02-e779c98d0cc2",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": \"<object>\"\n  },\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": \"<object>\"\n  }\n]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "[\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -76217025\n  },\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -87770418\n  }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "f50426f7-c41b-4179-b7c6-745958ff2f4f",
                                            "name": "Multi-Status, if not all requests resulted in the same status",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": \"<object>\"\n  },\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": \"<object>\"\n  }\n]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Multi-Status (WebDAV) (RFC 4918)",
                                            "code": 207,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "[\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -76217025\n  },\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -87770418\n  }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "63c51994-f0ba-46ad-9785-cb1783a47481",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": \"<object>\"\n  },\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": \"<object>\"\n  }\n]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "246bcb74-7abc-44f3-93c9-1e56e4696ebb",
                                    "name": "{configurationId}",
                                    "item": [
                                        {
                                            "id": "f735963f-91dd-41fd-9722-6816538d1b47",
                                            "name": "Gets the details of the specified monitoring configuration",
                                            "request": {
                                                "name": "Gets the details of the specified monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "5c7d3403-1d9d-41b8-ba7b-2673e56412ec",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"objectId\": \"culpa magna\",\n  \"scope\": \"et laborum Lorem\",\n  \"value\": {}\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "8d89d989-bd52-4e44-b82d-292946fae040",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "1bef4cb9-29ac-4d84-9411-8f0ffc0a0cd9",
                                            "name": "Updates the specified monitoring configuration",
                                            "request": {
                                                "name": "Updates the specified monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json; charset=utf-8"
                                                    },
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                },
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"value\": \"<object>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "63efc19a-0871-4c72-b29e-394a8b3c71fe",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"value\": \"<object>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 51063820\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "47e6e826-8037-4e2e-8f21-22333ef9c0d5",
                                                    "name": "Failed. The input is invalid.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"value\": \"<object>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "f592c6aa-a0b8-473e-8356-0610d07aa004",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"value\": \"<object>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "228da899-235d-4abb-ae4c-8223c434082b",
                                            "name": "Deletes the specified monitoring configuration",
                                            "request": {
                                                "name": "Deletes the specified monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "ea5dd03a-0d50-4261-b4c8-b9893c872e0b",
                                                    "name": "Success. Response doesn't have a body.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                },
                                                {
                                                    "id": "10ccda1d-ca1f-4e17-8673-ad337a125bb1",
                                                    "name": "Failed. The input is invalid.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "8391d7e6-00aa-4da3-87c1-dfb6195a635b",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "f8821b9c-8652-491a-b1f6-ab045929131e",
                                            "name": "Gets the list of the events linked to specific monitoring configuration",
                                            "request": {
                                                "name": "Gets the list of the events linked to specific monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId",
                                                        "events"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "disabled": false,
                                                            "key": "from",
                                                            "value": "<string>",
                                                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "to",
                                                            "value": "<string>",
                                                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "dt.entity.host",
                                                            "value": "<string>",
                                                            "description": "Host that uses this monitoring configuration.\n\nExample: `HOST-ABCDEF0123456789`"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "dt.active_gate.id",
                                                            "value": "<string>",
                                                            "description": "Hexadecimal ID of Active Gate that uses this monitoring configuration.\n\nExample: `0x1a2b3c4d`"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "dt.extension.ds",
                                                            "value": "<string>",
                                                            "description": "Data source that uses this monitoring configuration.\n\nExample: `snmp`"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "content",
                                                            "value": "<string>",
                                                            "description": "Content of the event"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "status",
                                                            "value": "<string>",
                                                            "description": "Status of the event"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "f4656215-af9a-4cf6-a00a-15c9cb4e1f98",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId",
                                                                "events"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "from",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "to",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.entity.host",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.active_gate.id",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.extension.ds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "content",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "status",
                                                                    "value": "<string>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"extensionEvents\": [\n    {\n      \"timestamp\": \"eiusmod proident Lorem laborum\",\n      \"severity\": \"ipsum qui\",\n      \"content\": \"id aliquip et\",\n      \"dt.entity.host\": \"sint deserunt in aute voluptate\",\n      \"dt.active_gate.id\": \"nulla aliqua\",\n      \"dt.extension.ds\": \"pariatur dolore fugiat\",\n      \"status\": \"NONE\"\n    },\n    {\n      \"timestamp\": \"occaecat veniam minim\",\n      \"severity\": \"officia aliqua\",\n      \"content\": \"non\",\n      \"dt.entity.host\": \"elit si\",\n      \"dt.active_gate.id\": \"sit eiusmod\",\n      \"dt.extension.ds\": \"officia\",\n      \"status\": \"ERROR\"\n    }\n  ]\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "f6b87d64-93b9-4e66-a507-386e37d25023",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId",
                                                                "events"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "from",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "to",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.entity.host",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.active_gate.id",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.extension.ds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "content",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "status",
                                                                    "value": "<string>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "74e8608f-381c-42f5-8ad0-1af87edd185b",
                                            "name": "Gets the most recent status of the execution of given monitoring configuration",
                                            "request": {
                                                "name": "Gets the most recent status of the execution of given monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId",
                                                        "status"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "8a057802-9a08-401d-aff8-4acc32598973",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId",
                                                                "status"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"timestamp\": -51669648,\n  \"status\": \"UNKNOWN\"\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "df8a42ef-d0de-4f8b-bde1-2eb337cf8996",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId",
                                                                "status"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "e1da1e31-387e-4119-b1af-7a427b1b4e80",
                            "name": "{extensionVersion}",
                            "item": [
                                {
                                    "id": "0b16fa97-f021-4dea-afdb-6b87b5c699b9",
                                    "name": "Gets details of the specified version of the extension 2.0",
                                    "request": {
                                        "name": "Gets details of the specified version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                ":extensionVersion"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionVersion",
                                                    "description": "(Required) The version of the requested extension 2.0"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "383c12cc-a689-4fbc-80a7-50da9f766d1e",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "ad id officia ut est"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"extensionName\": \"aliqua dolor sed\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"elit consectetur\"\n  },\n  \"dataSources\": [\n    \"sit\",\n    \"ut ea voluptate sed\"\n  ],\n  \"variables\": [\n    \"laboris aute ex\",\n    \"exercitation anim\"\n  ],\n  \"featureSets\": [\n    \"in ullamco dolor magna\",\n    \"reprehenderit Excepteur tempor\"\n  ],\n  \"featureSetsDetails\": {\n    \"proident2\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"ad eu\",\n  \"minEECVersion\": \"aliqua ad\",\n  \"fileHash\": \"u\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "69464f91-f039-4603-a56b-061bc50b297d",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "ad id officia ut est"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "16cfe753-e159-47ed-a6d0-59f0e8e3a9ab",
                                            "name": "Not acceptable",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "ad id officia ut est"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Acceptable",
                                            "code": 406,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "6faef96b-36a3-47be-9186-f090d37c703f",
                                    "name": "Deletes the specified version of the extension 2.0",
                                    "request": {
                                        "name": "Deletes the specified version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                ":extensionVersion"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionVersion",
                                                    "description": "(Required) The version of the requested extension 2.0"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "05a87500-1c2d-4555-9498-6b61cbe7cbc8",
                                            "name": "Success. The extension 2.0 version has been deleted.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"extensionName\": \"consequat Excepteur\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"dolor id\"\n  },\n  \"dataSources\": [\n    \"eu nisi amet\",\n    \"cupidatat commodo eiusmod eu\"\n  ],\n  \"variables\": [\n    \"ad cupidatat aliquip adipisicing proident\",\n    \"consectetur velit\"\n  ],\n  \"featureSets\": [\n    \"eu non ut sit laboris\",\n    \"proident nostrud ut pariatur\"\n  ],\n  \"featureSetsDetails\": {\n    \"voluptated73\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"id in irure tempor\",\n  \"minEECVersion\": \"in eiusmod sint fugiat\",\n  \"fileHash\": \"cupidatat esse nisi commodo\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "25857f44-69b9-46c7-87f9-898693a7ac6b",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "2a4a14a3-bd57-4911-b26f-cbb79bbaa894",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "62d9ef8f-4896-4683-a8ae-4b5430252353",
                                    "name": "Gets the configuration schema of the specified version of the extension 2.0",
                                    "request": {
                                        "name": "Gets the configuration schema of the specified version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                ":extensionVersion",
                                                "schema"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionVersion",
                                                    "description": "(Required) The version of the requested extension 2.0"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "947a4aef-3bce-4a73-9f4f-4091543f31d3",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion",
                                                        "schema"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"allowedScopes\": [\n    \"host\",\n    \"application\"\n  ],\n  \"description\": \"Dynatrace disables monitoring of containers that do not run any applications\",\n  \"displayName\": \"Built-in container monitoring rules\",\n  \"dynatrace\": \"1\",\n  \"enums\": {\n    \"ipsum14\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"enum\",\n      \"enumClass\": \"enumClass\",\n      \"displayName\": \"typeDisplayName\"\n    }\n  },\n  \"maxObjects\": 10,\n  \"multiObject\": true,\n  \"properties\": {\n    \"Excepteur19\": {\n      \"maxObjects\": -92608521,\n      \"nullable\": true,\n      \"type\": {},\n      \"documentation\": \"propertyDocumentation\",\n      \"uiCustomization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"datasource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minObjects\": 1,\n      \"modificationPolicy\": \"ALWAYS\",\n      \"precondition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"referencedType\": \"propertyReferencedType\",\n      \"subType\": \"propertySubType\",\n      \"displayName\": \"propertyDisplayName\",\n      \"items\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default\": {},\n      \"description\": \"propertyDescription\",\n      \"metadata\": {\n        \"reprehenderit_a96\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tempor88\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"iruref0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"magna4f\": {\n      \"maxObjects\": -31589676,\n      \"nullable\": true,\n      \"type\": {},\n      \"documentation\": \"propertyDocumentation\",\n      \"uiCustomization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"datasource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minObjects\": 1,\n      \"modificationPolicy\": \"ALWAYS\",\n      \"precondition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"referencedType\": \"propertyReferencedType\",\n      \"subType\": \"propertySubType\",\n      \"displayName\": \"propertyDisplayName\",\n      \"items\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default\": {},\n      \"description\": \"propertyDescription\",\n      \"metadata\": {\n        \"mollit_1a\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n  \"types\": {\n    \"magna7\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"properties\": {\n        \"esse_3\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"summaryPattern\": \"summaryPatternOfType\",\n      \"version\": \"0\",\n      \"searchPattern\": \"searchPatternOfType\",\n      \"versionInfo\": \"Added new property\",\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"typeDisplayName\"\n    },\n    \"commodo_14\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"properties\": {\n        \"enim_2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"consequat_d82\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"summaryPattern\": \"summaryPatternOfType\",\n      \"version\": \"0\",\n      \"searchPattern\": \"searchPatternOfType\",\n      \"versionInfo\": \"Added new property\",\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"typeDisplayName\"\n    },\n    \"dolored0\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"properties\": {\n        \"enim_368\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eiusmodd\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"summaryPattern\": \"summaryPatternOfType\",\n      \"version\": \"0\",\n      \"searchPattern\": \"searchPatternOfType\",\n      \"versionInfo\": \"Added new property\",\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"typeDisplayName\"\n    }\n  },\n  \"version\": \"1.4.2\",\n  \"documentation\": \"dolore id\",\n  \"schemaGroups\": [\n    \"group:some.1\",\n    \"group:some.2\"\n  ],\n  \"ordered\": true,\n  \"constraints\": [\n    {\n      \"type\": \"GREATER_THAN_OR_EQUAL\",\n      \"customMessage\": \"sed reprehenderit consectetur Lorem tempor\",\n      \"customValidatorId\": \"my-min-max\",\n      \"minimumPropertyCount\": 1,\n      \"maximumPropertyCount\": 2,\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"CUSTOM_VALIDATOR_REF\",\n      \"customMessage\": \"qui\",\n      \"customValidatorId\": \"my-min-max\",\n      \"minimumPropertyCount\": 1,\n      \"maximumPropertyCount\": 2,\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"in_e2\": \"consequat dolore\"\n  },\n  \"deletionConstraints\": [\n    {\n      \"customMessage\": \"enim deserunt\",\n      \"customValidatorId\": \"my-min-max\"\n    },\n    {\n      \"customMessage\": \"labore commodo et\",\n      \"customValidatorId\": \"my-min-max\"\n    }\n  ],\n  \"uiCustomization\": {\n    \"tabs\": {\n      \"groups\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"callback\": {\n      \"buttons\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"expandable\": {\n      \"expanded\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sections\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"table\": {\n      \"emptyState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"columns\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "093dc390-4715-4acb-a883-15b10b17a4bf",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion",
                                                        "schema"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "2a90829f-7b42-4076-8d24-9beeb798a041",
                    "name": "schemas",
                    "item": [
                        {
                            "id": "1939d89f-63c0-4cc1-b964-9abd765bf70c",
                            "name": "Lists all the extension 2.0 schemas versions available in your environment",
                            "request": {
                                "name": "Lists all the extension 2.0 schemas versions available in your environment",
                                "description": {},
                                "url": {
                                    "path": [
                                        "extensions",
                                        "schemas"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "c857abe1-2b66-482a-9de7-47fecdc1a163",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "extensions",
                                                "schemas"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"versions\": [\n    \"1.2.3\",\n    \"1.2.3\"\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "ce4b43ad-c50c-46eb-9e34-fdcf14e279c1",
                            "name": "{schemaVersion}",
                            "item": [
                                {
                                    "id": "fffd34de-4356-4865-92ac-2372fe3fe531",
                                    "name": "Lists all the files available for the specified extension 2.0 schema version",
                                    "request": {
                                        "name": "Lists all the files available for the specified extension 2.0 schema version",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                "schemas",
                                                ":schemaVersion"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaVersion",
                                                    "description": "(Required) The version of the schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "30ff24fa-adc2-40b4-83d4-1d89cc0e5728",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "ad id officia ut est"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"files\": [\n    \"minim nisi labore commodo\",\n    \"ex non\"\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "d95861d9-d830-451f-8190-745a770b6566",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "ad id officia ut est"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "6a469bc8-8ec2-4e14-9a07-3e473ac87e47",
                                            "name": "Not acceptable",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "ad id officia ut est"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Acceptable",
                                            "code": 406,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "02d2270f-f696-4c88-8924-f42c38555a61",
                                    "name": "Gets the extension 2.0 schema file in the specified version",
                                    "request": {
                                        "name": "Gets the extension 2.0 schema file in the specified version",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                "schemas",
                                                ":schemaVersion",
                                                ":fileName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaVersion",
                                                    "description": "(Required) The version of the schema."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "fileName",
                                                    "description": "(Required) The name of the schema file."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "eb33159f-3a98-40c7-87d0-908f166a5a1e",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion",
                                                        ":fileName"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "fileName",
                                                            "description": "(Required) The name of the schema file."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "\"<object>\"",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "b079b24c-3263-46b8-921f-c6eca4a7b4fe",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion",
                                                        ":fileName"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "fileName",
                                                            "description": "(Required) The name of the schema file."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "59e9d537-22aa-4d10-8623-672fb0ca6389",
            "name": "problems",
            "item": [
                {
                    "id": "dfd21657-506a-4d91-b010-84d182fadc77",
                    "name": "Lists problems observed within the specified timeframe",
                    "request": {
                        "name": "Lists problems observed within the specified timeframe",
                        "description": {},
                        "url": {
                            "path": [
                                "problems"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).\n\n The field is valid only for the current page of results. You must set it for each page you're requesting."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "problemSelector",
                                    "value": "<string>",
                                    "description": "Defines the scope of the query. Only problems matching the specified criteria are included into response. \n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies. All values must be quoted. \n* Status: `status(\"open\")` or `status(\"closed\")`. You can specify only one status. \n* Severity level: `severityLevel(\"level-1\",\"level-2\")`. Find the possible values in the description of the **severityLevel** field of the response.\n* Impact level: `impactLevel(\"level-11\",\"level-2\")` Find the possible values in the description of the **impactLevel** field of the response.\n* Root cause entity: `rootCauseEntity(\"id-1\", \"id-2\")`. \n* Management zone ID: `managementZoneIds(\"mZId-1\", \"mzId-2\")`. \n* Management zone name: `managementZones(\"value-1\",\"value-2\")`. \n* Impacted entities: `impactedEntities(\"id-1\", \"id-2\")`. \n* Affected entities: `affectedEntities(\"id-1\", \"id-2\")`. \n* Type of affected entities: `affectedEntityTypes(\"value-1\",\"value-2\")`. \n* Problem ID: `problemId(\"id-1\", \"id-2\")`. \n* Alerting profile ID: `problemFilterIds(\"id-1\", \"id-2\")`. \n* Alerting profile name (contains, case-insensitive): `problemFilterNames(\"value-1\",\"value-2\")`. \n* Alerting profile name (exact match, case-insensitive): `problemFilterNames.equals(\"value-1\",\"value-2\")`. \n* Entity tags: `entityTags(\"[context]key:value\",\"key:value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value tag`. All tag values are case-sensitive.\n* Display ID of the problem: `displayId(\"id-1\", \"id-2\")`. \n* Under maintenance: `underMaintenance(true|false)`. Shows (true) or hides (false) all problems created during maintenance mode.\n* Text search: `text(\"value\")`. Text search on the following fields: problem title, event titles, displayId and the id of affected and impacted entities. The text search is case insensitive, partial matching and based on a relevance score. Therefore the `relevance` sort option should be used to get the most relevant problems first. The special characters `~` and `\"` need to be escaped using a `~` (e.g. double quote search `text(\"~\"\")`). The search value is limited to 30 characters.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\nThe maximum number of entities that may be selected is limited to 10000.\n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "<string>",
                                    "description": "Specifies a set of comma-separated (`,`) fields for sorting in the problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n * `status`: problem status (`+` open problems first or `-` closed problems first)\n * `startTime`: problem start time (`+` old problems first or `-` new problems first) \n * `relevance`: problem relevance (`+` least relevant problems first or `-` most relevant problems first) - can be used only in combination with text search \n\nIf no prefix is set, `+` is used. \n\nYou can specify several levels of sorting. For example, `+status,-startTime` sorts problems by status, open problems first. Within the status, problems are sorted by start time, oldest first."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "96ab1220-ca46-435f-99cf-4a275b2d1f3c",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "problems"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "problemSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"problems\": [\n    {\n      \"affectedEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayId\": \"sunt Lorem exercitation cil\",\n      \"endTime\": -31804259,\n      \"impactLevel\": \"APPLICATION\",\n      \"impactedEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"problemFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"problemId\": \"aute inci\",\n      \"severityLevel\": \"AVAILABILITY\",\n      \"startTime\": -33158714,\n      \"status\": \"OPEN\",\n      \"title\": \"in veniam\",\n      \"recentComments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"impactAnalysis\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"linkedProblemInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rootCauseEntity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"evidenceDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"entityTags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"affectedEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayId\": \"sed dolore\",\n      \"endTime\": 34677832,\n      \"impactLevel\": \"APPLICATION\",\n      \"impactedEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"problemFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"problemId\": \"ea in nostrud\",\n      \"severityLevel\": \"CUSTOM_ALERT\",\n      \"startTime\": -80776385,\n      \"status\": \"CLOSED\",\n      \"title\": \"Ut enim\",\n      \"recentComments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"impactAnalysis\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"linkedProblemInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rootCauseEntity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"evidenceDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"entityTags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"totalCount\": -28864367,\n  \"pageSize\": -19869218,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"warnings\": [\n    \"cillum in Duis laborum\",\n    \"et aliqua\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7928c352-053c-451e-8c19-a9c7399ca53a",
                    "name": "{problemId}",
                    "item": [
                        {
                            "id": "33cb487c-261c-43d2-8c11-c971f591608a",
                            "name": "Gets the properties of the specified problem",
                            "request": {
                                "name": "Gets the properties of the specified problem",
                                "description": {},
                                "url": {
                                    "path": [
                                        "problems",
                                        ":problemId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "fields",
                                            "value": "<string>",
                                            "description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`)."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "problemId",
                                            "description": "(Required) The ID of the required problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "19a04765-0bc1-4701-9ff5-383dfafaad9e",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "fields",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"affectedEntities\": [\n    {\n      \"entityId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"sed in id Lorem\"\n    },\n    {\n      \"entityId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"in laborum ex\"\n    }\n  ],\n  \"displayId\": \"incididunt proiden\",\n  \"endTime\": 68748917,\n  \"impactLevel\": \"INFRASTRUCTURE\",\n  \"impactedEntities\": [\n    {\n      \"entityId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"aliquip dolore nulla\"\n    },\n    {\n      \"entityId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"dolore occaecat dolor\"\n    }\n  ],\n  \"managementZones\": [\n    {\n      \"name\": \"qui aliqua esse nulla amet\",\n      \"id\": \"laboris\"\n    },\n    {\n      \"name\": \"proident tempor\",\n      \"id\": \"in voluptate\"\n    }\n  ],\n  \"problemFilters\": [\n    {\n      \"id\": \"commodo Duis culpa aliqua\",\n      \"name\": \"anim magna nostrud\"\n    },\n    {\n      \"id\": \"enim irure\",\n      \"name\": \"minim irure non occaecat\"\n    }\n  ],\n  \"problemId\": \"sint mollit\",\n  \"severityLevel\": \"PERFORMANCE\",\n  \"startTime\": -54850490,\n  \"status\": \"CLOSED\",\n  \"title\": \"irure\",\n  \"recentComments\": {\n    \"comments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"totalCount\": -2611821,\n    \"pageSize\": -55393698,\n    \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n  },\n  \"impactAnalysis\": {\n    \"impacts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"linkedProblemInfo\": {\n    \"displayId\": \"id ea adipisicing reprehenderit\",\n    \"problemId\": \"occ\"\n  },\n  \"rootCauseEntity\": {\n    \"entityId\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"name\": \"ex dolor commodo\"\n  },\n  \"evidenceDetails\": {\n    \"details\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"totalCount\": 31878001\n  },\n  \"entityTags\": [\n    {\n      \"stringRepresentation\": \"consequat dolore\",\n      \"value\": \"exe\",\n      \"key\": \"ad dolore eu voluptate\",\n      \"context\": \"in nulla ea\"\n    },\n    {\n      \"stringRepresentation\": \"commodo\",\n      \"value\": \"deserunt laboris amet in ad\",\n      \"key\": \"consectetur laboris aliqua ut\",\n      \"context\": \"nostrud est\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "76acae72-2143-4d4a-be57-703bc3845d69",
                            "name": "Closes the specified problem and adds a closing comment on it",
                            "request": {
                                "name": "Closes the specified problem and adds a closing comment on it",
                                "description": {},
                                "url": {
                                    "path": [
                                        "problems",
                                        ":problemId",
                                        "close"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "problemId",
                                            "description": "(Required) The ID of the required problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"message\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "7add618d-c1ae-446b-8e8b-89af76a67d5d",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId",
                                                "close"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"message\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"closeTimestamp\": -87716024,\n  \"closing\": true,\n  \"problemId\": \"Duis anim commodo\",\n  \"comment\": {\n    \"createdAtTimestamp\": 17945136,\n    \"authorName\": \"comm\",\n    \"context\": \"Duis nulla ut ut\",\n    \"id\": \"tempor veniam\",\n    \"content\": \"proident aliquip sunt\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "34731950-f836-49e9-b3ed-dd630066b1d0",
                                    "name": "The problem is closed already the request hasn't been executed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId",
                                                "close"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"message\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "04acb323-d1bf-4337-aad7-d5b627bc3641",
                            "name": "comments",
                            "item": [
                                {
                                    "id": "ad37ecca-4e5d-4696-a59e-a5f694e12509",
                                    "name": "Gets all comments on the specified problem",
                                    "request": {
                                        "name": "Gets all comments on the specified problem",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId",
                                                "comments"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "nextPageKey",
                                                    "value": "<string>",
                                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "pageSize",
                                                    "value": "<long>",
                                                    "description": "The amount of comments in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 10 is used."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "d951c43d-3a47-4eaf-90b5-843b8da2fecc",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "nextPageKey",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "pageSize",
                                                            "value": "<long>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"comments\": [\n    {\n      \"createdAtTimestamp\": -94581229,\n      \"authorName\": \"labore aute elit \",\n      \"context\": \"officia dolor occaecat non\",\n      \"id\": \"Duis magna\",\n      \"content\": \"dolor anim ea qui\"\n    },\n    {\n      \"createdAtTimestamp\": -27991135,\n      \"authorName\": \"laborum veniam\",\n      \"context\": \"sed officia culpa\",\n      \"id\": \"eiusmod incididunt dolor nostrud\",\n      \"content\": \"anim esse\"\n    }\n  ],\n  \"totalCount\": 44452505,\n  \"pageSize\": 38865222,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "82e6b8f8-a607-4904-9b7c-37ffff04a902",
                                    "name": "Adds a new comment on the specified problem",
                                    "request": {
                                        "name": "Adds a new comment on the specified problem",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId",
                                                "comments"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"message\": \"<string>\",\n  \"context\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "71159b9a-4d61-4a5d-8283-feb8ab07fa2f",
                                            "name": "Success. The comment has been added.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"message\": \"<string>\",\n  \"context\": \"<string>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Created",
                                            "code": 201,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "62d1d0c2-511e-4989-8fe1-9c1eda9f2124",
                                    "name": "{commentId}",
                                    "item": [
                                        {
                                            "id": "8cb824a6-72e7-4a0c-92bc-079dbfb31a25",
                                            "name": "Gets the specified comment on a problem",
                                            "request": {
                                                "name": "Gets the specified comment on a problem",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments",
                                                        ":commentId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "commentId",
                                                            "description": "(Required) The ID of the required comment."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "3c6f67f0-e6a7-470c-9a42-8b620ec95b1c",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "problems",
                                                                ":problemId",
                                                                "comments",
                                                                ":commentId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "problemId",
                                                                    "description": "(Required) The ID of the required problem."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "commentId",
                                                                    "description": "(Required) The ID of the required comment."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"createdAtTimestamp\": 75255526,\n  \"authorName\": \"sint est occaecat\",\n  \"context\": \"in magna voluptate dolor\",\n  \"id\": \"deserun\",\n  \"content\": \"Excepteur nostrud\"\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "45817716-fba9-4ce7-bd56-d158e5af11a4",
                                            "name": "Updates the specified comment on a problem",
                                            "request": {
                                                "name": "Updates the specified comment on a problem",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments",
                                                        ":commentId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "commentId",
                                                            "description": "(Required) The ID of the required comment."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                },
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"message\": \"<string>\",\n  \"context\": \"<string>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "b6f27438-44b9-4355-b956-fe235de51e41",
                                                    "name": "Success. The comment has been updated.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "problems",
                                                                ":problemId",
                                                                "comments",
                                                                ":commentId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "problemId",
                                                                    "description": "(Required) The ID of the required problem."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "commentId",
                                                                    "description": "(Required) The ID of the required comment."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"message\": \"<string>\",\n  \"context\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "767dfff9-ad74-47d9-8f03-97fc7f05160b",
                                            "name": "Deletes the specified comment from a problem",
                                            "request": {
                                                "name": "Deletes the specified comment from a problem",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments",
                                                        ":commentId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "commentId",
                                                            "description": "(Required) The ID of the required comment."
                                                        }
                                                    ]
                                                },
                                                "method": "DELETE",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "c4acfa31-9b88-45f9-9d5c-029a08b9e6ba",
                                                    "name": "Success. The comment has been deleted.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "problems",
                                                                ":problemId",
                                                                "comments",
                                                                ":commentId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "problemId",
                                                                    "description": "(Required) The ID of the required problem."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "commentId",
                                                                    "description": "(Required) The ID of the required comment."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "97ee7300-0a44-43c2-b781-c7aa3ac97dfc",
            "name": "hub/extensions2/{extensionName}",
            "item": [
                {
                    "id": "dc5bd974-88a3-4f0d-93e3-0f3b3d60fd23",
                    "name": "Sets or updates the release notes of the specified extension release | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Sets or updates the release notes of the specified extension release | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "hub",
                                "extensions2",
                                ":extensionName",
                                "releases",
                                ":version",
                                "releaseNotes"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "extensionName",
                                    "description": "(Required) Fully qualified name of the extension"
                                },
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "version",
                                    "description": "(Required) Version of the extension release"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"markdown\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "41a662dc-2fd6-417a-99c6-d394da5cb1c0",
                            "name": "Extension release notes updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "extensions2",
                                        ":extensionName",
                                        "releases",
                                        ":version",
                                        "releaseNotes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionName",
                                            "description": "(Required) Fully qualified name of the extension"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "version",
                                            "description": "(Required) Version of the extension release"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"markdown\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "22f9f567-eb28-4760-ae9b-e8923721027e",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "extensions2",
                                        ":extensionName",
                                        "releases",
                                        ":version",
                                        "releaseNotes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionName",
                                            "description": "(Required) Fully qualified name of the extension"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "version",
                                            "description": "(Required) Version of the extension release"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"markdown\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1efa9631-669f-4ff7-8c91-46242ca0fc6b",
                            "name": "Not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "extensions2",
                                        ":extensionName",
                                        "releases",
                                        ":version",
                                        "releaseNotes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionName",
                                            "description": "(Required) Fully qualified name of the extension"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "version",
                                            "description": "(Required) Version of the extension release"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"markdown\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1ff51be5-6f15-4e97-9328-df81a0512c18",
                            "name": "Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "extensions2",
                                        ":extensionName",
                                        "releases",
                                        ":version",
                                        "releaseNotes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionName",
                                            "description": "(Required) Fully qualified name of the extension"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "version",
                                            "description": "(Required) Version of the extension release"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"markdown\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "31f07ba6-e34c-4698-a805-ee43dae2c7fd",
                    "name": "Create/Replace metadata for an extension that does not have Dynatrace distributed metadata. | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Create/Replace metadata for an extension that does not have Dynatrace distributed metadata. | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "hub",
                                "extensions2",
                                ":extensionName",
                                "metadata"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "extensionName",
                                    "description": "(Required) Fully qualified name of the extension"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "logo",
                                    "type": "file",
                                    "description": "Logo of the extension"
                                },
                                {
                                    "key": "name",
                                    "value": "<string>",
                                    "type": "text",
                                    "description": "If left empty or blank, the extension name will be used as name"
                                },
                                {
                                    "key": "description",
                                    "value": "<string>",
                                    "type": "text",
                                    "description": ""
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "36065209-db12-4ffb-ba33-b77e09b2a556",
                            "name": "Extension metadata uploaded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "extensions2",
                                        ":extensionName",
                                        "metadata"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionName",
                                            "description": "(Required) Fully qualified name of the extension"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "Logo of the extension",
                                                "type": "text/plain"
                                            },
                                            "key": "logo",
                                            "value": "<binary>",
                                            "type": "text"
                                        },
                                        {
                                            "description": {
                                                "content": "If left empty or blank, the extension name will be used as name",
                                                "type": "text/plain"
                                            },
                                            "key": "name",
                                            "value": "<string>",
                                            "type": "text"
                                        },
                                        {
                                            "description": {
                                                "content": "",
                                                "type": "text/plain"
                                            },
                                            "key": "description",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "abe6da5a-9e41-4bd5-9f9a-4a7ca3b0cf52",
            "name": "Returns all releases",
            "request": {
                "name": "Returns all releases",
                "description": {},
                "url": {
                    "path": [
                        "releases"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [
                        {
                            "disabled": false,
                            "key": "from",
                            "value": "<string>",
                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                        },
                        {
                            "disabled": false,
                            "key": "to",
                            "value": "<string>",
                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                        },
                        {
                            "disabled": false,
                            "key": "nextPageKey",
                            "value": "<string>",
                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                        },
                        {
                            "disabled": false,
                            "key": "pageSize",
                            "value": "<long>",
                            "description": "The amount of Releases in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
                        },
                        {
                            "disabled": false,
                            "key": "demo",
                            "value": "false",
                            "description": "Get your Releases (`false`) or a set of demo Releases (`true`)."
                        },
                        {
                            "disabled": false,
                            "key": "releasesSelector",
                            "value": "",
                            "description": "Defines the scope of the query. Only Releases matching the provided criteria are included in the response.\n\nYou can add one or several of the criteria listed below.\n* Management zone: type(PROCESS_GROUP_INSTANCE),mzName(\"ManagementZone-A\"). Filters for all releases in the given management zone. The filter is case-sensitive.\n* Monitoring state: monitoringState(\"Active\") or monitoringState(\"Inactive\"). You can specify only one monitoring state. \n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Security vulnerability: affectedBySecurityProblem(\"Detected\") or affectedBySecurityProblem(\"Not detected\"). You can specify only one security vulnerability state.\n* Name: entityName(\"name\"). Filters for all releases that contain the given value in their name. The filter is case-insensitive.\n* Entity ID: entityId(\"id\").\n* Product: releasesProduct(\"product\"). Filters for all releases that contain the given value in their product. The filter is case-insensitive.\n* Stage: releasesStage(\"stage\"). Filters for all releases that contain the given value in their stage. The filter is case-insensitive.\n* Version: releasesVersion(\"version\"). Filters for all releases that contain the given value in their version. The filter is case-insensitive.\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/releases?releasesSelector=name(\"Server\"),monitoringState(\"Active\"),healthState(\"HEALTHY\"),releasesVersion(\"1.0.7\").\n\nThe special characters ~ and \" need to be escaped using a ~ (e.g. double quote search entityName(\"~\"\")."
                        },
                        {
                            "disabled": false,
                            "key": "sort",
                            "value": "name",
                            "description": "Specifies the field that is used for sorting the releases list.\nThe field has a sign prefix (+/-) which corresponds to the sorting order ('+' for ascending and '-' for descending). If no sign prefix is set, then the default ascending sorting order will be applied. You can sort by the following properties:\n* 'product': Product name\n* 'name': Release name\n* 'stage': Stage name\n* 'version': Version\n* 'instances': Instances\n* 'traffic': Traffic\n\nIf not set, the ascending order sorting for name is applied."
                        }
                    ],
                    "variable": []
                },
                "header": [
                    {
                        "key": "Accept",
                        "value": "application/json; charset=utf-8"
                    }
                ],
                "method": "GET",
                "auth": {
                    "type": "apikey",
                    "apikey": [
                        {
                            "key": "key",
                            "value": "Authorization"
                        },
                        {
                            "key": "value",
                            "value": "Api-Token {{DT_TOKEN}}"
                        },
                        {
                            "key": "in",
                            "value": "header"
                        }
                    ]
                }
            },
            "response": [
                {
                    "id": "2742054e-5706-49db-9075-de463d6e4841",
                    "name": "Success",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "releases"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "from",
                                    "value": "<string>"
                                },
                                {
                                    "key": "to",
                                    "value": "<string>"
                                },
                                {
                                    "key": "nextPageKey",
                                    "value": "<string>"
                                },
                                {
                                    "key": "pageSize",
                                    "value": "<long>"
                                },
                                {
                                    "key": "demo",
                                    "value": "false"
                                },
                                {
                                    "key": "releasesSelector",
                                    "value": ""
                                },
                                {
                                    "key": "sort",
                                    "value": "name"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "<API Key>"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        }
                    ],
                    "body": "{\n  \"totalCount\": -63061854,\n  \"releasesWithProblems\": -8957628,\n  \"releases\": [\n    {\n      \"securityVulnerabilitiesCount\": 4,\n      \"affectedByProblems\": true,\n      \"securityVulnerabilitiesEnabled\": true,\n      \"affectedBySecurityVulnerabilities\": true,\n      \"throughput\": 923234,\n      \"softwareTechs\": [\n        {\n          \"technology\": \"JAVA\",\n          \"edition\": \"OpenJDK\",\n          \"version\": \"1.8.0_242\",\n          \"verbatimType\": \"Java\"\n        }\n      ],\n      \"product\": \"Sockshop\",\n      \"releaseEntityId\": \"PROCESS_GROUP-DFDBAC9CBF104253\",\n      \"instances\": [\n        \"PROCESS_GROUP_INSTANCE-49D94B90FB71C45B\",\n        \"PROCESS_GROUP_INSTANCE-7EA049157C82D1A5\"\n      ],\n      \"running\": true,\n      \"version\": \"1.195.34.12341232423-012342\",\n      \"name\": \"cluster\",\n      \"problemCount\": 4,\n      \"stage\": \"staging\"\n    },\n    {\n      \"securityVulnerabilitiesCount\": 4,\n      \"affectedByProblems\": true,\n      \"securityVulnerabilitiesEnabled\": true,\n      \"affectedBySecurityVulnerabilities\": true,\n      \"throughput\": 923234,\n      \"softwareTechs\": [\n        {\n          \"technology\": \"JAVA\",\n          \"edition\": \"OpenJDK\",\n          \"version\": \"1.8.0_242\",\n          \"verbatimType\": \"Java\"\n        }\n      ],\n      \"product\": \"Sockshop\",\n      \"releaseEntityId\": \"PROCESS_GROUP-DFDBAC9CBF104253\",\n      \"instances\": [\n        \"PROCESS_GROUP_INSTANCE-49D94B90FB71C45B\",\n        \"PROCESS_GROUP_INSTANCE-7EA049157C82D1A5\"\n      ],\n      \"running\": true,\n      \"version\": \"1.195.34.12341232423-012342\",\n      \"name\": \"cluster\",\n      \"problemCount\": 4,\n      \"stage\": \"staging\"\n    }\n  ],\n  \"pageSize\": -45879913,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                },
                {
                    "id": "e2577599-8b9e-4239-96d3-91d90611b951",
                    "name": "Failed. The input is invalid.",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "releases"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "from",
                                    "value": "<string>"
                                },
                                {
                                    "key": "to",
                                    "value": "<string>"
                                },
                                {
                                    "key": "nextPageKey",
                                    "value": "<string>"
                                },
                                {
                                    "key": "pageSize",
                                    "value": "<long>"
                                },
                                {
                                    "key": "demo",
                                    "value": "false"
                                },
                                {
                                    "key": "releasesSelector",
                                    "value": ""
                                },
                                {
                                    "key": "sort",
                                    "value": "name"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "<API Key>"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        }
                    ],
                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                }
            ],
            "event": [],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            }
        },
        {
            "id": "46022b36-a1a1-4827-a551-2c075b29237e",
            "name": "rum",
            "item": [
                {
                    "id": "c3bd7f05-b05d-4f60-a2ad-490e7ddbecc0",
                    "name": "cities/{countryCode}",
                    "item": [
                        {
                            "id": "f182879e-1d7b-43dd-b191-1f87593cf99a",
                            "name": "Lists all cities of a country",
                            "request": {
                                "name": "Lists all cities of a country",
                                "description": {},
                                "url": {
                                    "path": [
                                        "rum",
                                        "cities",
                                        ":countryCode"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "countryCode",
                                            "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "b3a6364f-9101-48d2-91b4-694236218f9d",
                                    "name": "Success. The response contains the list of country's cities.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "cities",
                                                ":countryCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"countryName\": \"France\",\n  \"countryCode\": \"FR\",\n  \"regionCount\": 13,\n  \"regions\": [\n    {\n      \"name\": \"Auvergne-Rhone-Alpes\",\n      \"code\": \"ARA\",\n      \"cityCount\": 4,\n      \"cities\": [\n        {\n          \"name\": \"Abondance\",\n          \"latitude\": 46.2806,\n          \"longitude\": 6.7217\n        },\n        {\n          \"name\": \"Abrest\",\n          \"latitude\": 46.1008,\n          \"longitude\": 3.4463\n        }\n      ]\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "d268fe3e-db00-42c8-8dd7-6fe6aa708595",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "cities",
                                                ":countryCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "66291876-a2b8-4be8-88ce-7da49a58dd3f",
                            "name": "Lists all cities of a country's region",
                            "request": {
                                "name": "Lists all cities of a country's region",
                                "description": {},
                                "url": {
                                    "path": [
                                        "rum",
                                        "cities",
                                        ":countryCode",
                                        ":regionCode"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "countryCode",
                                            "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "regionCode",
                                            "description": "(Required) The code of the required region. \n\n To fetch the list of available region codes, use the [GET regions of the country](https://dt-url.net/az230x0) request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "0a11cfb6-b5e0-4e40-be00-e3074b05d3f9",
                                    "name": "Success. The response contains the list of region's cities.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "cities",
                                                ":countryCode",
                                                ":regionCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "regionCode",
                                                    "description": "(Required) The code of the required region. \n\n To fetch the list of available region codes, use the [GET regions of the country](https://dt-url.net/az230x0) request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"countryName\": \"consequat ea\",\n  \"countryCode\": \"adipisicing cupidatat laborum quis\",\n  \"regionCount\": -64081184,\n  \"regions\": [\n    {\n      \"name\": \"Burgenland\",\n      \"code\": \"01\",\n      \"cityCount\": 2,\n      \"cities\": [\n        {\n          \"name\": \"Althodis\",\n          \"latitude\": 47.3148,\n          \"longitude\": 16.3884\n        },\n        {\n          \"name\": \"Andau\",\n          \"latitude\": 47.7733,\n          \"longitude\": 17.029\n        }\n      ]\n    },\n    {\n      \"name\": \"Burgenland\",\n      \"code\": \"01\",\n      \"cityCount\": 2,\n      \"cities\": [\n        {\n          \"name\": \"Althodis\",\n          \"latitude\": 47.3148,\n          \"longitude\": 16.3884\n        },\n        {\n          \"name\": \"Andau\",\n          \"latitude\": 47.7733,\n          \"longitude\": 17.029\n        }\n      ]\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "8dcf92a9-fd37-4f02-9919-105fe43fad54",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "cities",
                                                ":countryCode",
                                                ":regionCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "regionCode",
                                                    "description": "(Required) The code of the required region. \n\n To fetch the list of available region codes, use the [GET regions of the country](https://dt-url.net/az230x0) request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "51c3f461-4803-4808-98ed-db780a0d25c3",
                    "name": "Lists all countries",
                    "request": {
                        "name": "Lists all countries",
                        "description": {},
                        "url": {
                            "path": [
                                "rum",
                                "countries"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "973064df-ed9c-4a28-8103-d861b29a9581",
                            "name": "Success. The response contains the list of countries.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "rum",
                                        "countries"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"countryCount\": 252,\n  \"countries\": [\n    {\n      \"name\": \"France\",\n      \"code\": \"FR\"\n    },\n    {\n      \"name\": \"Belgium\",\n      \"code\": \"BE\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e867b5dc-32c2-4aa0-9249-f605c41a4d07",
                    "name": "regions",
                    "item": [
                        {
                            "id": "17801a1f-3713-4ed8-8a72-831f2802c23e",
                            "name": "Lists all countries along with their regions",
                            "request": {
                                "name": "Lists all countries along with their regions",
                                "description": {},
                                "url": {
                                    "path": [
                                        "rum",
                                        "regions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "8349a8cc-3f29-4fce-9c46-68d3b9531866",
                                    "name": "Success. The response contains the list of countries with regional divisions.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "regions"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"countryCount\": 252,\n  \"countries\": [\n    {\n      \"name\": \"France\",\n      \"code\": \"FR\",\n      \"regionCount\": 2,\n      \"regions\": [\n        {\n          \"name\": \"Auvergne-Rhone-Alpes\",\n          \"code\": \"ARA\"\n        },\n        {\n          \"name\": \"Bourgogne-Franche-Comte\",\n          \"code\": \"BFC\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Belgium\",\n      \"code\": \"BE\",\n      \"regionCount\": 2,\n      \"regions\": [\n        {\n          \"name\": \"Antwerp Province\",\n          \"code\": \"01\"\n        },\n        {\n          \"name\": \"Brussels Captial\",\n          \"code\": \"11\"\n        }\n      ]\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "9c95f457-5bbd-42c7-b9b4-e62815a1ceb7",
                            "name": "Lists all regions of a country",
                            "request": {
                                "name": "Lists all regions of a country",
                                "description": {},
                                "url": {
                                    "path": [
                                        "rum",
                                        "regions",
                                        ":countryCode"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "countryCode",
                                            "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "b191fef5-1445-446c-9788-0ed8bc2e66f9",
                                    "name": "Success. The response contains the list of country's regions.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "regions",
                                                ":countryCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"countyName\": \"France\",\n  \"countryCode\": \"FR\",\n  \"regionCount\": 2,\n  \"regions\": [\n    {\n      \"name\": \"Auvergne-Rhone-Alpes\",\n      \"code\": \"ARA\"\n    },\n    {\n      \"name\": \"Bourgogne-Franche-Comte\",\n      \"code\": \"BFC\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "00d706e9-c9dd-44fe-a6d8-904de6e2bcc4",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "regions",
                                                ":countryCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "28813bfb-9886-4bca-835f-340570902e86",
            "name": "settings",
            "item": [
                {
                    "id": "695a2545-d718-44a0-b99d-9452276550a7",
                    "name": "objects",
                    "item": [
                        {
                            "id": "b07ee9cb-8303-49be-8681-1540882eb18b",
                            "name": "Lists persisted settings objects",
                            "request": {
                                "name": "Lists persisted settings objects",
                                "description": {
                                    "content": "Lists persisted settings objects for selected schemas at selected scopes (or entities).\n\nIf nothing is persisted or if all persisted settings objects are not accessible due to missing permissions, no items will be returned.\n\nTo query the effective values (including schema defaults) please see [/settings/effectiveValues](#/Settings%20-%20Objects/getEffectiveSettingsValues).",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "settings",
                                        "objects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "schemaIds",
                                            "value": "<string>",
                                            "description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nTo load the first page, when the **nextPageKey** is not set, either this parameter or **scopes** is required. \n\nTo load all objects belonging to the given schema IDs leave the **scopes** parameter empty."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "scopes",
                                            "value": "<string>",
                                            "description": "A list of comma-separated scopes, that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scopes. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, either this parameter or **schemaIds** is required. \n\nTo load all objects belonging to the given scopes leave the **schemaIds** parameter empty."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "fields",
                                            "value": "objectId,value",
                                            "description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `objectId,value`).\n\nSupported fields: `objectId`, `summary`, `searchSummary`, `created`, `modified`, `author`, `updateToken`, `scope`, `schemaId`, `schemaVersion`, `value`, `externalId`."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "nextPageKey",
                                            "value": "<string>",
                                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                        },
                                        {
                                            "disabled": false,
                                            "key": "pageSize",
                                            "value": "<long>",
                                            "description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "f6e33f40-9e15-4795-936e-7735aaf6b3bf",
                                    "name": "Success. Accessible objects returned.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "scopes",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fields",
                                                    "value": "objectId,value"
                                                },
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"items\": [\n    {\n      \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"created\": -48388165,\n      \"schemaVersion\": \"1.0.0\",\n      \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"searchSummary\": \"adipisicing Lorem\",\n      \"modified\": -45303412,\n      \"author\": \"john.doe@example.com\",\n      \"externalId\": \"et dolore\",\n      \"scope\": \"HOST-D3A3C5A146830A79\",\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"summary\": \"eiusmod ut incidi\"\n    },\n    {\n      \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"created\": -97256058,\n      \"schemaVersion\": \"1.0.0\",\n      \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"searchSummary\": \"esse occaecat\",\n      \"modified\": -87935597,\n      \"author\": \"john.doe@example.com\",\n      \"externalId\": \"esse cupidatat est incididunt\",\n      \"scope\": \"HOST-D3A3C5A146830A79\",\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"summary\": \"Duis enim nisi\"\n    }\n  ],\n  \"pageSize\": 63184004,\n  \"totalCount\": -41855302,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "c625166d-aed2-4f29-b008-e2a0e31d617a",
                                    "name": "Failed. Forbidden.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "scopes",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fields",
                                                    "value": "objectId,value"
                                                },
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "72d51b88-c675-493d-b39d-d99b8170a861",
                                    "name": "Failed. The specified schema or scope is not found.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "scopes",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fields",
                                                    "value": "objectId,value"
                                                },
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "29053170-dd93-414b-a0bf-d1c37a15e9c8",
                            "name": "Creates a new settings object",
                            "request": {
                                "name": "Creates a new settings object",
                                "description": {
                                    "content": "You can upload several objects at once. In that case each object returns its own response code. Check the response body for details.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "settings",
                                        "objects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "validateOnly",
                                            "value": "false",
                                            "description": "If `true`, the request runs only validation of the submitted settings objects, without saving them."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"schemaId\": \"<string>\",\n    \"value\": \"<object>\",\n    \"schemaVersion\": \"<string>\",\n    \"insertAfter\": \"<string>\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"<string>\"\n  },\n  {\n    \"schemaId\": \"<string>\",\n    \"value\": \"<object>\",\n    \"schemaVersion\": \"<string>\",\n    \"insertAfter\": \"<string>\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "8d697458-10be-4453-b116-e97a18680c7d",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 69227369,\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"in est\",\n      \"code\": -18994210\n    }\n  },\n  {\n    \"code\": 22597415,\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"dolor sed\",\n      \"code\": -39931088\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "e534eda7-aa23-4666-a181-465fa0401a8a",
                                    "name": "Multi-status: different objects in the payload resulted in different statuses.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Multi-Status (WebDAV) (RFC 4918)",
                                    "code": 207,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 69227369,\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"in est\",\n      \"code\": -18994210\n    }\n  },\n  {\n    \"code\": 22597415,\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"dolor sed\",\n      \"code\": -39931088\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "e97c8583-f813-4a1f-9b86-5bf09c481820",
                                    "name": "Failed. Schema validation failed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 69227369,\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"in est\",\n      \"code\": -18994210\n    }\n  },\n  {\n    \"code\": 22597415,\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"dolor sed\",\n      \"code\": -39931088\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "582d42b5-4155-47f1-8a87-ecef56ebf4c1",
                                    "name": "Failed. Forbidden.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "fb06d2e7-0d08-4808-9141-caa06137c3f5",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 69227369,\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"in est\",\n      \"code\": -18994210\n    }\n  },\n  {\n    \"code\": 22597415,\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"dolor sed\",\n      \"code\": -39931088\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "cac122b1-8160-4050-b008-095fc396b291",
                                    "name": "Failed. Conflicting resource.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"externalId\": \"<string>\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 69227369,\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"in est\",\n      \"code\": -18994210\n    }\n  },\n  {\n    \"code\": 22597415,\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"dolor sed\",\n      \"code\": -39931088\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "85d9b57d-cd53-41b1-b9fd-309b998b2dad",
                            "name": "{objectId}",
                            "item": [
                                {
                                    "id": "7bd5768c-b27b-4bcd-a4ff-59865306e76c",
                                    "name": "Gets the specified settings object",
                                    "request": {
                                        "name": "Gets the specified settings object",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects",
                                                ":objectId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "objectId",
                                                    "description": "(Required) The ID of the required settings object."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "1b8791d3-ddf2-480f-b197-5becdd861016",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"created\": 59310681,\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n  \"searchSummary\": \"eu culpa ad magna\",\n  \"modified\": -80181226,\n  \"author\": \"john.doe@example.com\",\n  \"externalId\": \"minim do Ut voluptate amet\",\n  \"scope\": \"HOST-D3A3C5A146830A79\",\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"summary\": \"ut dolore est exercitation adipisicing\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "521678cf-6776-4138-8566-1669598688c6",
                                            "name": "Failed. Forbidden.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "7ebd94de-f527-4998-b14e-2e0271201f77",
                                            "name": "No object available for the given objectId",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "e0f7e332-0f4d-462f-a80d-1595de3f7fe9",
                                    "name": "Updates an existing settings object",
                                    "request": {
                                        "name": "Updates an existing settings object",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects",
                                                ":objectId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "objectId",
                                                    "description": "(Required) The ID of the required settings object."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"value\": \"<object>\",\n  \"schemaVersion\": \"<string>\",\n  \"updateToken\": \"<string>\",\n  \"insertAfter\": \"<string>\",\n  \"insertBefore\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "97ff2102-725e-4877-aa8e-b5c2919a2e11",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertBefore\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": 59443133,\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"culpa sed ut\",\n    \"code\": -84523710\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "17aee4c9-b4af-4927-b76f-95fa788e9939",
                                            "name": "Failed. Schema validation failed.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertBefore\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": 59443133,\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"culpa sed ut\",\n    \"code\": -84523710\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "e53852f5-cd3d-482c-867b-c315517015fc",
                                            "name": "Failed. Forbidden.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertBefore\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "0fafc499-9d74-4d9b-ac51-be310143bdb4",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertBefore\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": 59443133,\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"culpa sed ut\",\n    \"code\": -84523710\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "c31d6fbc-2e32-4af3-a95c-8b3bbaa49551",
                                            "name": "Failed. Conflicting resource.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertBefore\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": 59443133,\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"culpa sed ut\",\n    \"code\": -84523710\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "b0396211-ecb7-4aff-bb87-a8925dd8d835",
                                    "name": "Deletes the specified settings object",
                                    "request": {
                                        "name": "Deletes the specified settings object",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects",
                                                ":objectId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "updateToken",
                                                    "value": "<string>",
                                                    "description": "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "objectId",
                                                    "description": "(Required) The ID of the required settings object."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "a4f9c8cb-db2a-477a-8a77-0c973fa299b2",
                                            "name": "Success. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "409efb9f-7718-4721-8cf3-3b4b2308d5eb",
                                            "name": "Failed. Schema validation failed.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": 59443133,\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"culpa sed ut\",\n    \"code\": -84523710\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "e803d4b0-85bd-4d99-a51a-8f042f28a990",
                                            "name": "Failed. Forbidden.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "40b9d9b2-b4ea-4878-a5b9-4784f56e158f",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": 59443133,\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"culpa sed ut\",\n    \"code\": -84523710\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "e49cd2a6-5029-4862-b1c9-f857a2e0da79",
                                            "name": "Failed. Conflicting resource.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": 59443133,\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"culpa sed ut\",\n    \"code\": -84523710\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "ce0661c1-7d11-4397-bdce-7eb2be7deeb4",
                    "name": "Lists effective settings values",
                    "request": {
                        "name": "Lists effective settings values",
                        "description": {
                            "content": "Lists effective settings values for selected schemas at a selected scope (or entity). This operation evaluates the hierarchy of persisted objects (see [/settings/objects](#/Settings%20-%20Objects/getSettingsObjects))\n\nIt will always return a result for a schema/scope combination, even if the schema would not be relevant to the given scope/entity.\n\nIf no object along the hierarchy is persisted, the default value as defined in the schema will be returned.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "settings",
                                "effectiveValues"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "schemaIds",
                                    "value": "<string>",
                                    "description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nOnly considered on load of the first page, when the **nextPageKey** is not set."
                                },
                                {
                                    "disabled": false,
                                    "key": "scope",
                                    "value": "<string>",
                                    "description": "The scope that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scope. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "origin,value",
                                    "description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `origin,value`).\n\nSupported fields: `summary`, `searchSummary`, `created`, `modified`, `author`, `origin`, `schemaId`, `schemaVersion`, `value`, `externalId`."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "e10669a3-249a-43c7-a265-11c886d15d8d",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "settings",
                                        "effectiveValues"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "schemaIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "origin,value"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"items\": [\n    {\n      \"origin\": \"HOST-D3A3C5A146830A79\",\n      \"created\": -27440463,\n      \"schemaVersion\": \"1.0.0\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"searchSummary\": \"labore Ut aliqua\",\n      \"modified\": -44967302,\n      \"author\": \"john.doe@example.com\",\n      \"externalId\": \"quis ullamco\",\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"summary\": \"et adipisicing ipsum cupidatat\"\n    },\n    {\n      \"origin\": \"HOST-D3A3C5A146830A79\",\n      \"created\": 98575771,\n      \"schemaVersion\": \"1.0.0\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"searchSummary\": \"exercitation\",\n      \"modified\": 86480137,\n      \"author\": \"john.doe@example.com\",\n      \"externalId\": \"Duis\",\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"summary\": \"qui ullamco\"\n    }\n  ],\n  \"pageSize\": -39730799,\n  \"totalCount\": -50060111,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "15dd27e1-fded-42a7-9e79-75a64b44a3b4",
                            "name": "Failed. The specified schema or scope is not found.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "settings",
                                        "effectiveValues"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "schemaIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "origin,value"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "303c38ed-3ca4-46ec-b6e2-e07c2acae354",
                    "name": "schemas",
                    "item": [
                        {
                            "id": "de8f45a8-fe13-4f3e-bd8c-d9d9f6963d36",
                            "name": "Lists available settings schemas",
                            "request": {
                                "name": "Lists available settings schemas",
                                "description": {},
                                "url": {
                                    "path": [
                                        "settings",
                                        "schemas"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "4a0d8396-a3eb-4cd7-97b4-d901bf39bc10",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"items\": [\n    {\n      \"displayName\": \"Built-in container monitoring rules\",\n      \"latestSchemaVersion\": \"1.4.2\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\"\n    },\n    {\n      \"displayName\": \"Built-in container monitoring rules\",\n      \"latestSchemaVersion\": \"1.4.2\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\"\n    }\n  ],\n  \"totalCount\": 1\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "416ebfb1-738a-4445-ae37-3384fafce57f",
                            "name": "Gets parameters of the specified settings schema",
                            "request": {
                                "name": "Gets parameters of the specified settings schema",
                                "description": {},
                                "url": {
                                    "path": [
                                        "settings",
                                        "schemas",
                                        ":schemaId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "schemaVersion",
                                            "value": "<string>",
                                            "description": "The version of the required schema. \n\n If not set, the most recent version is returned."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "schemaId",
                                            "description": "(Required) The ID of the required schema."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "be018e1d-1dd1-43fc-b8c8-f4c33a05cb48",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas",
                                                ":schemaId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaVersion",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaId",
                                                    "description": "(Required) The ID of the required schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"allowedScopes\": [\n    \"host\",\n    \"application\"\n  ],\n  \"description\": \"Dynatrace disables monitoring of containers that do not run any applications\",\n  \"displayName\": \"Built-in container monitoring rules\",\n  \"dynatrace\": \"1\",\n  \"enums\": {\n    \"id0\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"enum\",\n      \"enumClass\": \"enumClass\",\n      \"displayName\": \"typeDisplayName\"\n    },\n    \"Lorem4de\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"enum\",\n      \"enumClass\": \"enumClass\",\n      \"displayName\": \"typeDisplayName\"\n    },\n    \"incididunt8a9\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"enum\",\n      \"enumClass\": \"enumClass\",\n      \"displayName\": \"typeDisplayName\"\n    },\n    \"cillum__\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"enum\",\n      \"enumClass\": \"enumClass\",\n      \"displayName\": \"typeDisplayName\"\n    }\n  },\n  \"maxObjects\": 10,\n  \"multiObject\": true,\n  \"properties\": {\n    \"nostrud_c\": {\n      \"maxObjects\": 82067845,\n      \"nullable\": true,\n      \"type\": {},\n      \"documentation\": \"propertyDocumentation\",\n      \"uiCustomization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"datasource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minObjects\": 1,\n      \"modificationPolicy\": \"ALWAYS\",\n      \"precondition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"referencedType\": \"propertyReferencedType\",\n      \"subType\": \"propertySubType\",\n      \"displayName\": \"propertyDisplayName\",\n      \"items\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default\": {},\n      \"description\": \"propertyDescription\",\n      \"metadata\": {\n        \"ullamco4f\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dolore1b1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"animce\": {\n      \"maxObjects\": 84181716,\n      \"nullable\": true,\n      \"type\": {},\n      \"documentation\": \"propertyDocumentation\",\n      \"uiCustomization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"datasource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minObjects\": 1,\n      \"modificationPolicy\": \"ALWAYS\",\n      \"precondition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"referencedType\": \"propertyReferencedType\",\n      \"subType\": \"propertySubType\",\n      \"displayName\": \"propertyDisplayName\",\n      \"items\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default\": {},\n      \"description\": \"propertyDescription\",\n      \"metadata\": {\n        \"ut_86f\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eiusmod631\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n  \"types\": {\n    \"incididunt71e\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"properties\": {\n        \"sint_f0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"esse_b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"summaryPattern\": \"summaryPatternOfType\",\n      \"version\": \"0\",\n      \"searchPattern\": \"searchPatternOfType\",\n      \"versionInfo\": \"Added new property\",\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"typeDisplayName\"\n    },\n    \"doloreb\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"properties\": {\n        \"nostrud_d\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"anim_6_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"summaryPattern\": \"summaryPatternOfType\",\n      \"version\": \"0\",\n      \"searchPattern\": \"searchPatternOfType\",\n      \"versionInfo\": \"Added new property\",\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"typeDisplayName\"\n    }\n  },\n  \"version\": \"1.4.2\",\n  \"documentation\": \"sit nostrud consequat in\",\n  \"schemaGroups\": [\n    \"group:some.1\",\n    \"group:some.2\"\n  ],\n  \"ordered\": true,\n  \"constraints\": [\n    {\n      \"type\": \"PROPERTY_COUNT_RANGE\",\n      \"customMessage\": \"adipisicing\",\n      \"customValidatorId\": \"my-min-max\",\n      \"minimumPropertyCount\": 1,\n      \"maximumPropertyCount\": 2,\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"PROPERTY_COUNT_RANGE\",\n      \"customMessage\": \"laborum\",\n      \"customValidatorId\": \"my-min-max\",\n      \"minimumPropertyCount\": 1,\n      \"maximumPropertyCount\": 2,\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"eu_764\": \"sunt voluptate qui\"\n  },\n  \"deletionConstraints\": [\n    {\n      \"customMessage\": \"Lorem aute exercitation dolor\",\n      \"customValidatorId\": \"my-min-max\"\n    },\n    {\n      \"customMessage\": \"nostrud cupidatat\",\n      \"customValidatorId\": \"my-min-max\"\n    }\n  ],\n  \"uiCustomization\": {\n    \"tabs\": {\n      \"groups\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"callback\": {\n      \"buttons\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"expandable\": {\n      \"expanded\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sections\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"table\": {\n      \"emptyState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"columns\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "42a514c4-2a42-4660-ba95-db72373cbb19",
                                    "name": "Failed. Forbidden.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas",
                                                ":schemaId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaVersion",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaId",
                                                    "description": "(Required) The ID of the required schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "b4f5911d-7d30-48e6-af2b-5e4a30cf2d50",
                                    "name": "Failed. The specified schema doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas",
                                                ":schemaId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaVersion",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaId",
                                                    "description": "(Required) The ID of the required schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "815bacca-b7b9-4a29-96e7-b9b0d1a80478",
            "name": "slo",
            "item": [
                {
                    "id": "e64c5d7c-32e3-4e15-8689-4befb177ffca",
                    "name": "Lists all available SLOs along with calculated values",
                    "request": {
                        "name": "Lists all available SLOs along with calculated values",
                        "description": {
                            "content": "By default the values are calculated for the SLO's own timeframe. You can use a custom timeframe: \n\n1. Set the **timeFrame** parameter to `GTF`. \n2. Provide the timeframe in **from** and **to** parameters.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "slo"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of SLOs in a single response payload. \n\nThe maximal allowed page size is 10000. \n\nIf not set, 10 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "sloSelector",
                                    "value": "",
                                    "description": "The scope of the query. Only SLOs matching the provided criteria are included in the response. \n\nYou can add one or several of the criteria listed below.\n* SLO ID: id(\"id-1\",\"id-2\").\n* Name: name(\"name\"). Filters for an SLO with the given name. The filter is case-sensitive.\n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Text: text(\"value\"). Filters for all SLOs that contain the given value in their name or description. The filter is case-insensitive.\n* Problem: problemDisplayName(\"value\"). Filters for all SLOs that are related to a given problem display name (e.g. P-12345).\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/slo?sloSelector=name(\"Service Availability\"), .../api/v2/slo?sloSelector=id(\"id\"), .../api/v2/slo?sloSelector=text(\"Description\"),healthState(\"HEALTHY\").\n\nThe special characters ~ and \" need to be escaped using a ~ (e.g. double quote search text(\"~\"\")."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "name",
                                    "description": "The sorting of SLO entries: \n* `name`: Names in ascending order. \n* `-name`: Names in descending order. \n\nIf not set, the ascending order is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "timeFrame",
                                    "value": "CURRENT",
                                    "description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "demo",
                                    "value": "false",
                                    "description": "Get your SLOs (`false`) or a set of demo SLOs (`true`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "evaluate",
                                    "value": "false",
                                    "description": "Get your SLOs without them being evaluated (`false`) or with evaluations (`true`) with maximum `pageSize` of 25."
                                },
                                {
                                    "disabled": false,
                                    "key": "enabledSlos",
                                    "value": "true",
                                    "description": "Get your enabled SLOs (`true`), disabled ones (`false`) or both enabled and disabled ones (`all`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "showGlobalSlos",
                                    "value": "true",
                                    "description": "Get your global SLOs (`true`) regardless of the selected filter or filter them out (`false`)."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "0e2e00b6-d667-4df6-915f-692eb54df5a4",
                            "name": "Success. The response contains the parameters and calculated values of the requested SLO.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sloSelector",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "name"
                                        },
                                        {
                                            "key": "timeFrame",
                                            "value": "CURRENT"
                                        },
                                        {
                                            "key": "demo",
                                            "value": "false"
                                        },
                                        {
                                            "key": "evaluate",
                                            "value": "false"
                                        },
                                        {
                                            "key": "enabledSlos",
                                            "value": "true"
                                        },
                                        {
                                            "key": "showGlobalSlos",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 7619321,\n  \"slo\": [\n    {\n      \"problemFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"errorBudget\": 1.25,\n      \"metricDenominator\": \"builtin:service.requestCount.server\",\n      \"evaluationType\": \"AGGREGATE\",\n      \"errorBudgetBurnRate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n      \"useRateMetric\": true,\n      \"metricRate\": \"builtin:service.successes.server.rate\",\n      \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n      \"burnRateMetricKey\": \"func:slo.errorBudgetBurnRate.payment_service_availability\",\n      \"errorBudgetMetricKey\": \"func:slo.errorBudget.payment_service_availability\",\n      \"normalizedErrorBudgetMetricKey\": \"func:slo.normalizedErrorBudget.payment_service_availability\",\n      \"numeratorValue\": 80,\n      \"denominatorValue\": 90,\n      \"relatedOpenProblems\": -53208517,\n      \"relatedTotalProblems\": 55503529,\n      \"evaluatedPercentage\": 96.25,\n      \"timeframe\": \"-1d\",\n      \"metricKey\": \"func:slo.payment_service_availability\",\n      \"filter\": \"type(\\\"SERVICE\\\")\",\n      \"name\": \"Payment service availability\",\n      \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n      \"target\": 95,\n      \"description\": \"Rate of successful payments per week\",\n      \"enabled\": true,\n      \"status\": \"WARNING\",\n      \"error\": \"NONE\",\n      \"warning\": 97.5\n    },\n    {\n      \"problemFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"errorBudget\": 1.25,\n      \"metricDenominator\": \"builtin:service.requestCount.server\",\n      \"evaluationType\": \"AGGREGATE\",\n      \"errorBudgetBurnRate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n      \"useRateMetric\": true,\n      \"metricRate\": \"builtin:service.successes.server.rate\",\n      \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n      \"burnRateMetricKey\": \"func:slo.errorBudgetBurnRate.payment_service_availability\",\n      \"errorBudgetMetricKey\": \"func:slo.errorBudget.payment_service_availability\",\n      \"normalizedErrorBudgetMetricKey\": \"func:slo.normalizedErrorBudget.payment_service_availability\",\n      \"numeratorValue\": 80,\n      \"denominatorValue\": 90,\n      \"relatedOpenProblems\": -54055734,\n      \"relatedTotalProblems\": -34450402,\n      \"evaluatedPercentage\": 96.25,\n      \"timeframe\": \"-1d\",\n      \"metricKey\": \"func:slo.payment_service_availability\",\n      \"filter\": \"type(\\\"SERVICE\\\")\",\n      \"name\": \"Payment service availability\",\n      \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n      \"target\": 95,\n      \"description\": \"Rate of successful payments per week\",\n      \"enabled\": true,\n      \"status\": \"WARNING\",\n      \"error\": \"NONE\",\n      \"warning\": 97.5\n    }\n  ],\n  \"pageSize\": -28491516,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "723854d4-1897-46db-9c65-acf48a6f5e6f",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sloSelector",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "name"
                                        },
                                        {
                                            "key": "timeFrame",
                                            "value": "CURRENT"
                                        },
                                        {
                                            "key": "demo",
                                            "value": "false"
                                        },
                                        {
                                            "key": "evaluate",
                                            "value": "false"
                                        },
                                        {
                                            "key": "enabledSlos",
                                            "value": "true"
                                        },
                                        {
                                            "key": "showGlobalSlos",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "04991bf2-2c1b-4282-a960-1b3e475de14f",
                    "name": "Creates a new SLO",
                    "request": {
                        "name": "Creates a new SLO",
                        "description": {},
                        "url": {
                            "path": [
                                "slo"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"enabled\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metricName\": \"<string>\",\n  \"metricExpression\": \"<string>\",\n  \"evaluationType\": \"<string>\",\n  \"filter\": \"<string>\",\n  \"target\": \"<double>\",\n  \"warning\": \"<double>\",\n  \"errorBudgetBurnRate\": {\n    \"burnRateVisualizationEnabled\": \"<boolean>\",\n    \"fastBurnThreshold\": \"<double>\"\n  },\n  \"timeframe\": \"<string>\",\n  \"useRateMetric\": \"<boolean>\",\n  \"metricRate\": \"<string>\",\n  \"metricNumerator\": \"<string>\",\n  \"metricDenominator\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "923eda58-3faf-44ae-99e4-7e7726e6b02c",
                            "name": "Success. The new SLO has been created. Response doesn't have a body. The **location** response header contains the ID of the new SLO.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"description\": \"Rate of successful payments per week\",\n  \"metricName\": \"payment_service_availability\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5,\n  \"errorBudgetBurnRate\": {\n    \"burnRateVisualizationEnabled\": true,\n    \"fastBurnThreshold\": 1.5\n  },\n  \"timeframe\": \"-1d\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "disabled": false,
                                    "description": "The location of the new resource created by this request.",
                                    "key": "location",
                                    "value": "ad id officia ut est"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "a00e9f99-a770-49d8-aebb-9b4a9ef1fb4a",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"description\": \"Rate of successful payments per week\",\n  \"metricName\": \"payment_service_availability\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5,\n  \"errorBudgetBurnRate\": {\n    \"burnRateVisualizationEnabled\": true,\n    \"fastBurnThreshold\": 1.5\n  },\n  \"timeframe\": \"-1d\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7687387f-f09e-48a2-a58e-1399b43499ab",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"description\": \"Rate of successful payments per week\",\n  \"metricName\": \"payment_service_availability\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5,\n  \"errorBudgetBurnRate\": {\n    \"burnRateVisualizationEnabled\": true,\n    \"fastBurnThreshold\": 1.5\n  },\n  \"timeframe\": \"-1d\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "419c5d6f-d185-4cf9-8bbf-9c440dc0f6c9",
                            "name": "Failed. Conflicting resource.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"description\": \"Rate of successful payments per week\",\n  \"metricName\": \"payment_service_availability\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5,\n  \"errorBudgetBurnRate\": {\n    \"burnRateVisualizationEnabled\": true,\n    \"fastBurnThreshold\": 1.5\n  },\n  \"timeframe\": \"-1d\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c87691bd-e0f0-4923-b6b8-f9ede110dae6",
                            "name": "Internal server error.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"description\": \"Rate of successful payments per week\",\n  \"metricName\": \"payment_service_availability\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5,\n  \"errorBudgetBurnRate\": {\n    \"burnRateVisualizationEnabled\": true,\n    \"fastBurnThreshold\": 1.5\n  },\n  \"timeframe\": \"-1d\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b7a2792e-81de-4cea-bde7-5b4856ae47a8",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "8773c321-e465-4866-83c9-6eaab8380aff",
                            "name": "Gets parameters and calculated values of a specific SLO",
                            "request": {
                                "name": "Gets parameters and calculated values of a specific SLO",
                                "description": {
                                    "content": "If **from** and **to** parameters are provided, the SLO is calculated for that timeframe; otherwise the SLO's own timeframe is used.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "slo",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "to",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "timeFrame",
                                            "value": "CURRENT",
                                            "description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<uuid>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required SLO."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "9c6bcb61-8be9-4708-adc2-a8cb6d6ca845",
                                    "name": "Success. The response contains the parameters and calculated values of the requested SLO.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"problemFilters\": [\n    \"[type(\\\"SERVICE\\\")]\"\n  ],\n  \"errorBudget\": 1.25,\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"errorBudgetBurnRate\": {\n    \"burnRateType\": \"SLOW\",\n    \"burnRateValue\": 1.25,\n    \"burnRateVisualizationEnabled\": true,\n    \"fastBurnThreshold\": 1.5,\n    \"sloValue\": 95,\n    \"estimatedTimeToConsumeErrorBudget\": 24\n  },\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"burnRateMetricKey\": \"func:slo.errorBudgetBurnRate.payment_service_availability\",\n  \"errorBudgetMetricKey\": \"func:slo.errorBudget.payment_service_availability\",\n  \"normalizedErrorBudgetMetricKey\": \"func:slo.normalizedErrorBudget.payment_service_availability\",\n  \"numeratorValue\": 80,\n  \"denominatorValue\": 90,\n  \"relatedOpenProblems\": 26172098,\n  \"relatedTotalProblems\": 59545287,\n  \"evaluatedPercentage\": 96.25,\n  \"timeframe\": \"-1d\",\n  \"metricKey\": \"func:slo.payment_service_availability\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"name\": \"Payment service availability\",\n  \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n  \"target\": 95,\n  \"description\": \"Rate of successful payments per week\",\n  \"enabled\": true,\n  \"status\": \"WARNING\",\n  \"error\": \"NONE\",\n  \"warning\": 97.5\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "c460a621-6681-49c3-8ed4-5b14814dd002",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ade533f3-1c06-4a6f-9776-652b21e23866",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "da9933f0-efd7-4836-ba69-8f8b68470047",
                            "name": "Updates an existing SLO",
                            "request": {
                                "name": "Updates an existing SLO",
                                "description": {},
                                "url": {
                                    "path": [
                                        "slo",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<uuid>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required SLO."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"enabled\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metricName\": \"<string>\",\n  \"metricExpression\": \"<string>\",\n  \"evaluationType\": \"<string>\",\n  \"filter\": \"<string>\",\n  \"target\": \"<double>\",\n  \"warning\": \"<double>\",\n  \"errorBudgetBurnRate\": {\n    \"burnRateVisualizationEnabled\": \"<boolean>\",\n    \"fastBurnThreshold\": \"<double>\"\n  },\n  \"timeframe\": \"<string>\",\n  \"useRateMetric\": \"<boolean>\",\n  \"metricRate\": \"<string>\",\n  \"metricNumerator\": \"<string>\",\n  \"metricDenominator\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "c2d7adee-ecf7-40a2-b12e-af1d17e8986f",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"description\": \"Rate of successful payments per week\",\n  \"metricName\": \"payment_service_availability\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5,\n  \"errorBudgetBurnRate\": {\n    \"burnRateVisualizationEnabled\": true,\n    \"fastBurnThreshold\": 1.5\n  },\n  \"timeframe\": \"-1d\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "399df70b-2a02-45ae-9044-9686660fc894",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"description\": \"Rate of successful payments per week\",\n  \"metricName\": \"payment_service_availability\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5,\n  \"errorBudgetBurnRate\": {\n    \"burnRateVisualizationEnabled\": true,\n    \"fastBurnThreshold\": 1.5\n  },\n  \"timeframe\": \"-1d\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "29fd0519-b54e-482d-aea2-8a0d2a77dbbd",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"description\": \"Rate of successful payments per week\",\n  \"metricName\": \"payment_service_availability\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5,\n  \"errorBudgetBurnRate\": {\n    \"burnRateVisualizationEnabled\": true,\n    \"fastBurnThreshold\": 1.5\n  },\n  \"timeframe\": \"-1d\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "7499d4a1-8be7-46a9-9078-94c22c2f5ed5",
                                    "name": "Internal server error.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"description\": \"Rate of successful payments per week\",\n  \"metricName\": \"payment_service_availability\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5,\n  \"errorBudgetBurnRate\": {\n    \"burnRateVisualizationEnabled\": true,\n    \"fastBurnThreshold\": 1.5\n  },\n  \"timeframe\": \"-1d\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "2574870d-49ec-49b8-8e6b-f6db5ac16f0b",
                            "name": "Deletes an SLO",
                            "request": {
                                "name": "Deletes an SLO",
                                "description": {},
                                "url": {
                                    "path": [
                                        "slo",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<uuid>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required SLO."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "8c0e7daa-bb3c-4321-a672-0578e3bdc601",
                                    "name": "Success. The SLO has been deleted. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "17b0c02b-d23e-4c1d-b7f5-39ffc0c6e59d",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ee657802-ca0e-4eae-b091-397386957859",
                                    "name": "Failed. Conflicting resource.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "6754f286-4dd0-45d7-a772-5740cb8efaf5",
                                    "name": "Internal server error.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "51f8969d-32e9-4a04-b305-754e834b8d4c",
                            "name": "Creates an alert of the provided alert type for an SLO",
                            "request": {
                                "name": "Creates an alert of the provided alert type for an SLO",
                                "description": {},
                                "url": {
                                    "path": [
                                        "slo",
                                        ":id",
                                        "alert"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "to",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "timeFrame",
                                            "value": "CURRENT",
                                            "description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<uuid>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required SLO."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"alertName\": \"<string>\",\n  \"alertThreshold\": \"<double>\",\n  \"alertType\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "9baca9cb-37b4-4cce-9561-d7301fb34305",
                                    "name": "Success. The new alert has been created. Response doesn't have a body. The **location** response header contains the ID of the new alert.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"alertName\": \"Payment service availability burn rate alert\",\n  \"alertThreshold\": 10,\n  \"alertType\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "disabled": false,
                                            "description": "The location of the new resource created by this request.",
                                            "key": "location",
                                            "value": "ad id officia ut est"
                                        },
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "f5bdd881-3145-4580-9fc0-19a1f53649be",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"alertName\": \"Payment service availability burn rate alert\",\n  \"alertThreshold\": 10,\n  \"alertType\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "668f5e8c-59df-48e1-8696-becb5ffaede3",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"alertName\": \"Payment service availability burn rate alert\",\n  \"alertThreshold\": 10,\n  \"alertType\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "fe76d151-3bb1-401d-9348-02defa1922b3",
                                    "name": "Precondition for creating an SLO alert not fulfilled. The SLO func metric cannot be created or is not created by the SLO.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"alertName\": \"Payment service availability burn rate alert\",\n  \"alertThreshold\": 10,\n  \"alertType\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Precondition Failed",
                                    "code": 412,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "d4fd345d-f010-436a-a783-688e9d5208dc",
                                    "name": "Internal server error.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"alertName\": \"Payment service availability burn rate alert\",\n  \"alertThreshold\": 10,\n  \"alertType\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "7119ad65-514a-4c20-bc3e-e721acbe6030",
            "name": "synthetic",
            "item": [
                {
                    "id": "a4ea4197-3879-48ac-bd95-5a94c43510f7",
                    "name": "config",
                    "item": [
                        {
                            "id": "25618851-e164-4db1-955c-7e5f17af8141",
                            "name": "Gets set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Gets set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "config"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "9125b67a-1200-42c8-b979-1bda36cb3255",
                                    "name": "Success. The response contains synthetic related parameters defined for whole tenant.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "config"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"bmMonitorTimeout\": 2810481,\n  \"bmStepTimeout\": 37786\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "aa9e4943-00e3-45d1-b7c8-635efe54fcef",
                            "name": "Updates set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Updates set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "config"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"bmMonitorTimeout\": \"<long>\",\n  \"bmStepTimeout\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "50df4bd7-6fc5-4676-bca6-46ebf7a52359",
                                    "name": "Success. The set of synthetic related parameters has been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "config"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"bmMonitorTimeout\": \"<long>\",\n  \"bmStepTimeout\": \"<long>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"bmMonitorTimeout\": \"<long>\",\n  \"bmStepTimeout\": \"<long>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "283eef3f-e5f0-4541-b9c9-ae5f6f305c12",
                    "name": "Gets detailed information about the last execution of the specified HTTP monitor | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets detailed information about the last execution of the specified HTTP monitor | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "synthetic",
                                "execution",
                                ":monitorId",
                                ":resultType"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "locationId",
                                    "value": "<string>",
                                    "description": "Filters the results to those executed by specified Synthetic location. Specify the ID of the location."
                                }
                            ],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "monitorId",
                                    "description": "(Required) Identifier of the HTTP monitor for which last execution result is returned."
                                },
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "resultType",
                                    "description": "(Required) Defines the result type of the last HTTP monitor's execution."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "51c72d75-34b6-4e02-ac98-1fde795a3643",
                            "name": "Success. The response contains detailed data.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "execution",
                                        ":monitorId",
                                        ":resultType"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "locationId",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "monitorId",
                                            "description": "(Required) Identifier of the HTTP monitor for which last execution result is returned."
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "resultType",
                                            "description": "(Required) Defines the result type of the last HTTP monitor's execution."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"monitorId\": \"HTTP_CHECK-12B428F6D37A9197\",\n  \"locationsExecutionResults\": [\n    {\n      \"locationId\": \"7804738439930364165\",\n      \"executionId\": \"6136172183050046113\",\n      \"requestResults\": [\n        {\n          \"requestId\": \"HTTP_CHECK_STEP-53071FC3C4F72E28\",\n          \"requestName\": \"Request name\",\n          \"sequenceNumber\": 1,\n          \"startTimestamp\": 1615806570884,\n          \"engineId\": 338502283,\n          \"publicLocation\": false,\n          \"url\": \"https://www.examplePage.com\",\n          \"method\": \"GET\",\n          \"requestBody\": \"\",\n          \"requestHeaders\": [\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"DynatraceSynthetic/1.215.1\"\n            },\n            {\n              \"name\": \"X-Dynatrace-Visit\",\n              \"value\": \"6136172183050046113\"\n            },\n            {\n              \"name\": \"X-Dynatrace-Test\",\n              \"value\": \"HTTP_CHECK-12B428F6D37A9197\"\n            }\n          ],\n          \"responseStatusCode\": 200,\n          \"responseBody\": \"<html><head>Title</head><body>Main Page</body></html>\",\n          \"responseSize\": 1112,\n          \"responseBodySizeLimitExceeded\": false,\n          \"responseHeaders\": [\n            {\n              \"name\": \"Date\",\n              \"value\": \"Mon, 15 Mar 2021 11:09:30 GMT\"\n            },\n            {\n              \"name\": \"Content-Language\",\n              \"value\": \"en\"\n            }\n          ],\n          \"resolvedIps\": [\n            \"80.252.0.145\"\n          ],\n          \"errorCode\": 0,\n          \"responseMessage\": \"OK\",\n          \"peerCertificateExpiryDate\": 1647302399000,\n          \"peerCertificateDetails\": \"[Certificate details]\",\n          \"totalTime\": 238,\n          \"hostNameResolutionTime\": 26,\n          \"tcpConnectTime\": 15,\n          \"tlsHandshakeTime\": 8,\n          \"timeToFirstByte\": 96,\n          \"redirectionTime\": 70,\n          \"waitingTime\": 47,\n          \"redirectsCount\": 1,\n          \"failureMessage\": \"\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f9765f13-83f7-4c42-bb96-778dcde577b5",
                    "name": "locations",
                    "item": [
                        {
                            "id": "e4597e6f-ad2f-4c59-a0e4-0a025da26723",
                            "name": "Lists all synthetic locations (both public and private) available for your environment",
                            "request": {
                                "name": "Lists all synthetic locations (both public and private) available for your environment",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "locations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "cloudPlatform",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of locations to those which are hosted on a specific cloud platform."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "type",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of locations to those of a specific type."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "96d0e5c5-f880-417d-8635-f0249c9774e6",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "cloudPlatform",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"locations\": [\n    {\n      \"name\": \"Gdansk\",\n      \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n      \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n      \"type\": \"PUBLIC\",\n      \"cloudPlatform\": \"AMAZON_EC2\",\n      \"ips\": [\n        \"134.189.153.97\",\n        \"134.189.153.98\"\n      ],\n      \"stage\": \"GA\",\n      \"status\": \"ENABLED\",\n      \"capabilities\": [\n        \"BROWSER\",\n        \"HTTP\"\n      ]\n    },\n    {\n      \"name\": \"My private location\",\n      \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n      \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n      \"type\": \"PRIVATE\",\n      \"status\": \"ENABLED\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "bf8794e7-1752-43fc-9714-239fce78aa58",
                            "name": "Creates a new private synthetic location",
                            "request": {
                                "name": "Creates a new private synthetic location",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "locations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entityId\": \"<string>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"regionCode\": \"<string>\",\n  \"city\": \"<string>\",\n  \"status\": \"<string>\",\n  \"geoLocationId\": \"<string>\",\n  \"nodes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"availabilityLocationOutage\": \"<boolean>\",\n  \"availabilityNodeOutage\": \"<boolean>\",\n  \"locationNodeOutageDelayInMinutes\": \"<integer>\",\n  \"availabilityNotificationsEnabled\": \"<boolean>\",\n  \"deploymentType\": \"<string>\",\n  \"autoUpdateChromium\": \"<boolean>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "d2cb8104-395a-4e61-a033-1940a03841c6",
                                    "name": "Success. The private location has been created. The response contains the ID of the new location.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entityId\": \"<string>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"regionCode\": \"<string>\",\n  \"city\": \"<string>\",\n  \"status\": \"<string>\",\n  \"geoLocationId\": \"<string>\",\n  \"nodes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"availabilityLocationOutage\": \"<boolean>\",\n  \"availabilityNodeOutage\": \"<boolean>\",\n  \"locationNodeOutageDelayInMinutes\": \"<integer>\",\n  \"availabilityNotificationsEnabled\": \"<boolean>\",\n  \"deploymentType\": \"<string>\",\n  \"autoUpdateChromium\": \"<boolean>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"entityId\": \"id quis Excepteur\",\n  \"geoLocationId\": \"officia anim ullamco\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "3ee23d16-dc37-437e-8549-8f77f9f1d4a1",
                            "name": "{locationId}",
                            "item": [
                                {
                                    "id": "8d0a28c5-d98d-4100-8aca-d68f0f120651",
                                    "name": "Gets properties of the specified location",
                                    "request": {
                                        "name": "Gets properties of the specified location",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                ":locationId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "locationId",
                                                    "description": "(Required) The Dynatrace entity ID of the required location."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "037a4bd8-d3b7-484c-a175-b59754b8d5cb",
                                            "name": "Success. The response contains parameters of the synthetic location.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        ":locationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "locationId",
                                                            "description": "(Required) The Dynatrace entity ID of the required location."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"entityId\": \"<string>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"regionCode\": \"<string>\",\n  \"city\": \"<string>\",\n  \"status\": \"<string>\",\n  \"geoLocationId\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "7fc9fe0e-c047-48a8-90af-758a5d52d10f",
                                    "name": "Updates the specified synthetic location",
                                    "request": {
                                        "name": "Updates the specified synthetic location",
                                        "description": {
                                            "content": "For public locations you can only change the location status.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                ":locationId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "locationId",
                                                    "description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"type\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "b80156c8-b056-4f7a-b115-d8d676cc2169",
                                            "name": "Success. The location has been updated. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        ":locationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "locationId",
                                                            "description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"type\": \"<string>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "c873d5af-1199-4b13-a4b5-b800018825d5",
                                    "name": "Deletes the specified private synthetic location",
                                    "request": {
                                        "name": "Deletes the specified private synthetic location",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                ":locationId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "locationId",
                                                    "description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
                                                }
                                            ]
                                        },
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "7d41d97c-a706-4b16-8f13-60eb33ebc611",
                                            "name": "Success. The location has been deleted. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        ":locationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "locationId",
                                                            "description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "d5b3b796-7abe-4d2b-9d7c-c7a3092bbdd8",
                            "name": "status",
                            "item": [
                                {
                                    "id": "e939836f-5ff4-4c29-93fa-0f1086ba2a1a",
                                    "name": "Checks the status of public synthetic locations",
                                    "request": {
                                        "name": "Checks the status of public synthetic locations",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                "status"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "33f0bb7a-69c7-4c0a-9c4d-e32a75b5b75d",
                                            "name": "Success. The response contains the public locations status.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        "status"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": []
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"publicLocationsEnabled\": false\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "9219b8da-a946-40e6-bb9f-309348875d93",
                                    "name": "Changes the status of public synthetic locations",
                                    "request": {
                                        "name": "Changes the status of public synthetic locations",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                "status"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"publicLocationsEnabled\": \"<boolean>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "a39c678c-8b09-4522-8062-bcec1069ded8",
                                            "name": "Success. Locations status has been updated.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        "status"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": []
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"publicLocationsEnabled\": \"<boolean>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "bd675431-a9b3-409c-a9c7-149c6784d2a5",
                                            "name": "Conflict. Public locations couldn't be disabled because there are monitors assigned to them.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        "status"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": []
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"publicLocationsEnabled\": \"<boolean>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "b43ec459-c599-471a-86cd-08faa83ebb36",
                    "name": "nodes",
                    "item": [
                        {
                            "id": "15a5d084-8512-4ca1-9439-ca2287ad27e6",
                            "name": "Lists all synthetic nodes available in your environment",
                            "request": {
                                "name": "Lists all synthetic nodes available in your environment",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "nodes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "5e5bb056-dbd8-4993-9b65-d273c7050f63",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "nodes"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"nodes\": [\n    {\n      \"entityId\": \"3086117876\",\n      \"hostname\": \"gdn.dyna.trace\",\n      \"ips\": [\n        \"238.245.160.14\"\n      ],\n      \"version\": \"1.161.0.20181210-173639\",\n      \"browserMonitorsEnabled\": true,\n      \"activeGateVersion\": \"1.172.2.20190607-040913\",\n      \"oneAgentRoutingEnabled\": true,\n      \"operatingSystem\": \"Linux\",\n      \"autoUpdateEnabled\": true,\n      \"status\": \"Running\",\n      \"playerVersion\": \"1.179.0.20190920-145430\",\n      \"healthCheckStatus\": \"Ok\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "828dae5e-ae47-45b8-9872-b447e166348f",
                            "name": "Lists properties of the specified synthetic node",
                            "request": {
                                "name": "Lists properties of the specified synthetic node",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "nodes",
                                        ":nodeId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "nodeId",
                                            "description": "(Required) The ID of the required synthetic node."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "79fa92a6-2a77-4574-a3c4-b5666bd715dc",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "nodes",
                                                ":nodeId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "nodeId",
                                                    "description": "(Required) The ID of the required synthetic node."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"entityId\": \"3086117876\",\n  \"hostname\": \"gdn.dyna.trace\",\n  \"ips\": [\n    \"238.245.160.14\"\n  ],\n  \"version\": \"1.161.0.20181210-173639\",\n  \"browserMonitorsEnabled\": true,\n  \"activeGateVersion\": \"1.172.2.20190607-040913\",\n  \"oneAgentRoutingEnabled\": true,\n  \"operatingSystem\": \"Linux\",\n  \"autoUpdateEnabled\": true,\n  \"status\": \"Running\",\n  \"playerVersion\": \"1.179.0.20190920-145430\",\n  \"healthCheckStatus\": \"Ok\",\n  \"browserType\": \"Chrome\",\n  \"browserVersion\": \"69.0.3497.81\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "33e0ac61-789b-4097-b207-d168b720bfbc",
                    "name": "executions",
                    "item": [
                        {
                            "id": "e6c595e7-ccad-4231-b369-c5f28a5674fc",
                            "name": "Gets the list of all on-demand executions of synthetic monitors | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Gets the list of all on-demand executions of synthetic monitors | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "executions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "executionStage",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of executions by their stage."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "schedulingFrom",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe for scheduling timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "schedulingTo",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe for scheduling timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "executionFrom",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe for execution timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "executionTo",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe for execution timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "dataDeliveryFrom",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe for data delivering timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "dataDeliveryTo",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe for data delivering timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "batchId",
                                            "value": "<long>",
                                            "description": "Filters the resulting set of the executions by batch. Specify the ID of the batch."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "monitorId",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of the executions by monitor synthetic monitor. Specify the ID of the monitor."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "locationId",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of the executions by Synthetic location. Specify the ID of the location."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "userId",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of executions by scheduled user."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "source",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of the executions by the source of the triggering request."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "c8221eb0-a6ab-4bcf-98ec-337174540cf6",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "executionStage",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "schedulingFrom",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "schedulingTo",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "executionFrom",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "executionTo",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "dataDeliveryFrom",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "dataDeliveryTo",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "batchId",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "monitorId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "locationId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "userId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "source",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"executions\": [\n    {\n      \"batchId\": \"incididunt nisi Lorem veniam amet\",\n      \"dataDeliveryTimestamp\": 34219002,\n      \"executionId\": \"laborum culpa labore dolore\",\n      \"executionStage\": \"TIMED_OUT\",\n      \"executionTimestamp\": -9156953,\n      \"locationId\": \"ipsum sint amet aliqua\",\n      \"monitorId\": \"do ut\",\n      \"schedulingTimestamp\": -15234948,\n      \"source\": \"UI\",\n      \"userId\": \"ut commodo dolor in\",\n      \"metadata\": {\n        \"anim_7c\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"simpleResults\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fullResults\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"batchId\": \"laborum eiusmod nostrud\",\n      \"dataDeliveryTimestamp\": -75799859,\n      \"executionId\": \"pariatur dolor\",\n      \"executionStage\": \"NOT_TRIGGERED\",\n      \"executionTimestamp\": 42321610,\n      \"locationId\": \"adipisicing et aute\",\n      \"monitorId\": \"fugiat sed\",\n      \"schedulingTimestamp\": -3442314,\n      \"source\": \"API\",\n      \"userId\": \"non Lorem deserunt cillum\",\n      \"metadata\": {\n        \"et_7a_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eiusmod_22a\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"simpleResults\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fullResults\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "177e59ba-a411-43f4-ba04-235d9cb5497e",
                            "name": "batch",
                            "item": [
                                {
                                    "id": "67020716-c803-470a-a3aa-34818560030a",
                                    "name": "Triggers on-demand executions for synthetic monitors | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Triggers on-demand executions for synthetic monitors | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions",
                                                "batch"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"processingMode\": \"STANDARD\",\n  \"failOnPerformanceIssue\": true,\n  \"failOnSslWarning\": true,\n  \"stopOnProblem\": false,\n  \"takeScreenshotsOnSuccess\": false,\n  \"monitors\": [\n    {\n      \"monitorId\": \"<string>\",\n      \"locations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"monitorId\": \"<string>\",\n      \"locations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"group\": {\n    \"tags\": [\n      \"<string>\"\n    ],\n    \"applications\": [\n      \"<string>\"\n    ],\n    \"services\": [\n      \"<string>\"\n    ],\n    \"locations\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"ipsum_3d\": \"<string>\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "f9489cf8-96fa-4781-b06a-bf3861efdc26",
                                            "name": "Success. The monitor's execution response details",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "executions",
                                                        "batch"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": []
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"processingMode\": \"STANDARD\",\n  \"failOnPerformanceIssue\": true,\n  \"failOnSslWarning\": true,\n  \"stopOnProblem\": false,\n  \"takeScreenshotsOnSuccess\": false,\n  \"monitors\": [\n    {\n      \"monitorId\": \"<string>\",\n      \"locations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"monitorId\": \"<string>\",\n      \"locations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"group\": {\n    \"tags\": [\n      \"<string>\"\n    ],\n    \"applications\": [\n      \"<string>\"\n    ],\n    \"services\": [\n      \"<string>\"\n    ],\n    \"locations\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"metadata\": {\n    \"commodo_01b\": \"<string>\",\n    \"et_012\": \"<string>\"\n  }\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Created",
                                            "code": 201,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"batchId\": \"incididunt voluptate id aliquip pariatur\",\n  \"triggeredCount\": -29122915,\n  \"triggeringProblemsCount\": -37961415,\n  \"triggeringProblemsDetails\": [\n    {\n      \"cause\": \"amet cupidatat mollit dolore\",\n      \"entityId\": \"cupidatat eiusmod ad laboris\",\n      \"locationId\": \"mollit minim adipisicing in\"\n    },\n    {\n      \"cause\": \"in enim sed ullamco\",\n      \"entityId\": \"ut tempor\",\n      \"locationId\": \"Duis Lorem dolore\"\n    }\n  ],\n  \"triggered\": [\n    {\n      \"executions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"monitorId\": \"dolore commodo\"\n    },\n    {\n      \"executions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"monitorId\": \"sit dolor ipsum occaecat\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "6605c7ba-f55e-4732-bb50-1531b5d0d1b5",
                                    "name": "Gets summary information and the list of failed executions for the given batch ID | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Gets summary information and the list of failed executions for the given batch ID | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions",
                                                "batch",
                                                ":batchId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<long>",
                                                    "key": "batchId",
                                                    "description": "(Required) The batch identifier of the executions."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "833da5dc-2346-48e4-91db-1537ead55ece",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "executions",
                                                        "batch",
                                                        ":batchId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<long>",
                                                            "key": "batchId",
                                                            "description": "(Required) The batch identifier of the executions."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"batchId\": \"magna proident dolor non consectetur\",\n  \"batchStatus\": \"SUCCESS\",\n  \"executedCount\": -12258353,\n  \"failedCount\": 19703970,\n  \"failedToExecuteCount\": -78854769,\n  \"triggeredCount\": -92641295,\n  \"userId\": \"Lorem cillum exercitation culpa labore\",\n  \"failedExecutions\": [\n    {\n      \"errorCode\": \"magna esse sed consequat\",\n      \"executionId\": \"do velit in amet non\",\n      \"locationId\": \"cillum sunt quis\",\n      \"monitorId\": \"consectetur laborum cupidatat\",\n      \"executionStage\": \"EXECUTED\",\n      \"failureMessage\": \"sit \",\n      \"executionTimestamp\": 68198749\n    },\n    {\n      \"errorCode\": \"quis ut proident\",\n      \"executionId\": \"occaeca\",\n      \"locationId\": \"est\",\n      \"monitorId\": \"deserunt eu\",\n      \"executionStage\": \"EXECUTED\",\n      \"failureMessage\": \"deserunt minim enim ut\",\n      \"executionTimestamp\": -10823674\n    }\n  ],\n  \"failedToExecute\": [\n    {\n      \"errorCode\": \"nulla dolore culpa dolor\",\n      \"executionId\": \"qui laboris dolor non in\",\n      \"locationId\": \"non\",\n      \"monitorId\": \"cupidatat\",\n      \"executionStage\": \"NOT_TRIGGERED\",\n      \"failureMessage\": \"eu \",\n      \"executionTimestamp\": 17515306\n    },\n    {\n      \"errorCode\": \"elit consequat eiusmod\",\n      \"executionId\": \"veniam mi\",\n      \"locationId\": \"labore Duis \",\n      \"monitorId\": \"laboris amet sunt\",\n      \"executionStage\": \"DATA_RETRIEVED\",\n      \"failureMessage\": \"elit veniam\",\n      \"executionTimestamp\": -2056804\n    }\n  ],\n  \"metadata\": {\n    \"amet__c\": \"consectetur\",\n    \"anim_669\": \"aliqua ullamco ad in est\",\n    \"occaecat_5c\": \"sunt non esse voluptate sit\"\n  },\n  \"triggeringProblemsCount\": -83421290,\n  \"triggeringProblems\": [\n    {\n      \"cause\": \"nostrud sunt\",\n      \"entityId\": \"in culpa voluptate\",\n      \"locationId\": \"incididunt qui eu voluptate\"\n    },\n    {\n      \"cause\": \"dolore elit commodo in\",\n      \"entityId\": \"est\",\n      \"locationId\": \"ex et elit velit proident\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "189ac76f-3860-4c23-b5f1-787644a9eac6",
                            "name": "{executionId}",
                            "item": [
                                {
                                    "id": "b9c9abc0-7cec-4b4d-8251-722d34906ef7",
                                    "name": "Gets basic results of the specified on-demand execution | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Gets basic results of the specified on-demand execution | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions",
                                                ":executionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<long>",
                                                    "key": "executionId",
                                                    "description": "(Required) The identifier of the on-demand execution."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "43e2d249-8b0e-4818-8259-4a780d33f301",
                                            "name": "Success. The response contains basic information about the on-demand execution.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "executions",
                                                        ":executionId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<long>",
                                                            "key": "executionId",
                                                            "description": "(Required) The identifier of the on-demand execution."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"batchId\": \"id\",\n  \"dataDeliveryTimestamp\": 15257302,\n  \"executionId\": \"dolor dolor laboris\",\n  \"executionStage\": \"EXECUTED\",\n  \"executionTimestamp\": -83231644,\n  \"locationId\": \"enim eiusmod\",\n  \"monitorId\": \"proident exercitati\",\n  \"schedulingTimestamp\": -84347604,\n  \"source\": \"API\",\n  \"userId\": \"dolor laborum\",\n  \"metadata\": {\n    \"irure_25\": \"cupidatat sint sed commodo\",\n    \"laborisf0\": \"veniam ex sint\"\n  },\n  \"simpleResults\": {\n    \"status\": \"in et do Duis ullamco\",\n    \"failureMessage\": \"consectetur consequat\",\n    \"errorCode\": \"ipsum reprehenderit incididunt commodo sit\",\n    \"responseStatusCode\": -56413166,\n    \"executedSteps\": -71787126,\n    \"engineId\": -11617753,\n    \"publicLocation\": true,\n    \"responseSize\": 83618664,\n    \"responseBodySizeLimitExceeded\": true,\n    \"peerCertificateExpiryDate\": 27962259,\n    \"totalTime\": 3778982,\n    \"hostNameResolutionTime\": -12290676,\n    \"tcpConnectTime\": 33044745,\n    \"tlsHandshakeTime\": 33781571,\n    \"timeToFirstByte\": -13925163,\n    \"redirectionTime\": -56035122,\n    \"redirectsCount\": 92264608,\n    \"httperror\": true,\n    \"chromeError\": false,\n    \"startTimestamp\": -13442567\n  },\n  \"fullResults\": {\n    \"status\": \"in esse\",\n    \"failureMessage\": \"reprehenderit\",\n    \"errorCode\": \"aliquip ullamco sunt sed\",\n    \"executionStepCount\": 17619281,\n    \"executionSteps\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "a9e2baa0-2d4a-4b9b-aa9e-c2170127e9c2",
                                    "name": "Gets detailed results of the specified on-demand execution | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Gets detailed results of the specified on-demand execution | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions",
                                                ":executionId",
                                                "fullReport"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<long>",
                                                    "key": "executionId",
                                                    "description": "(Required) The identifier of the on-demand execution."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "0e1f6ffb-edeb-435a-adde-141ac753291f",
                                            "name": "Success. The response contains detailed information about the on-demand execution.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "executions",
                                                        ":executionId",
                                                        "fullReport"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<long>",
                                                            "key": "executionId",
                                                            "description": "(Required) The identifier of the on-demand execution."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"batchId\": \"dolor fugiat\",\n  \"dataDeliveryTimestamp\": 93706483,\n  \"executionId\": \"ex eu\",\n  \"executionStage\": \"DATA_RETRIEVED\",\n  \"executionTimestamp\": 16176448,\n  \"locationId\": \"aliquip Ut magna laboris\",\n  \"monitorId\": \"ad officia ipsum\",\n  \"schedulingTimestamp\": 58726556,\n  \"source\": \"UI\",\n  \"userId\": \"est aliqua Excepteur\",\n  \"metadata\": {\n    \"Lorem_0b\": \"esse pariatur Ut sit sint\",\n    \"esse_70\": \"sint minim do\"\n  },\n  \"simpleResults\": {\n    \"status\": \"occaecat\",\n    \"failureMessage\": \"laborum amet\",\n    \"errorCode\": \"in Duis Excepteur commod\",\n    \"responseStatusCode\": 58902310,\n    \"executedSteps\": -92734386,\n    \"engineId\": -89404007,\n    \"publicLocation\": false,\n    \"responseSize\": 42233259,\n    \"responseBodySizeLimitExceeded\": true,\n    \"peerCertificateExpiryDate\": -71618212,\n    \"totalTime\": 30162565,\n    \"hostNameResolutionTime\": 15317104,\n    \"tcpConnectTime\": -69000002,\n    \"tlsHandshakeTime\": -86770653,\n    \"timeToFirstByte\": 21622409,\n    \"redirectionTime\": 30916011,\n    \"redirectsCount\": 29287881,\n    \"httperror\": true,\n    \"chromeError\": false,\n    \"startTimestamp\": 34798825\n  },\n  \"fullResults\": {\n    \"status\": \"elit\",\n    \"failureMessage\": \"aliqua\",\n    \"errorCode\": \"occaecat eiusmod\",\n    \"executionStepCount\": -32783107,\n    \"executionSteps\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "4de3125d-a51f-44fb-9136-2e772ee56355",
            "name": "tenantTokenRotation",
            "item": [
                {
                    "id": "5157c8be-48b1-4ea1-a2fa-44afb90733c2",
                    "name": "Cancels tenant token rotation",
                    "request": {
                        "name": "Cancels tenant token rotation",
                        "description": {
                            "content": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tenantTokenRotation",
                                "cancel"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "a37d940b-6d33-4406-98f3-807530e7ba73",
                            "name": "Success. Rotation process has been cancelled. The current tenant token remains valid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "cancel"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"old\": {\n    \"value\": \"esse dolor\"\n  },\n  \"active\": {\n    \"value\": \"magna in esse ea\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "75c4a441-fbe9-4f26-b6b7-2aff8971e09b",
                            "name": "Failed. There is no ongoing rotation process.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "cancel"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "803cf3c3-4e83-4fe7-ae7d-6a7c48473d6d",
                    "name": "Finishes tenant token rotation",
                    "request": {
                        "name": "Finishes tenant token rotation",
                        "description": {
                            "content": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tenantTokenRotation",
                                "finish"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "0a77d73f-9902-49e5-8e8b-96b88475bccc",
                            "name": "Success. The rotation process is completed. The **active** field of the response contains the new tenant token.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "finish"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"old\": {\n    \"value\": \"esse dolor\"\n  },\n  \"active\": {\n    \"value\": \"magna in esse ea\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f87dc988-bebb-400c-8ec0-1c567603666c",
                            "name": "No ongoing rotation process.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "finish"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "0dd5b5af-5cdd-4645-b974-f5a75c515561",
                    "name": "Starts tenant token rotation",
                    "request": {
                        "name": "Starts tenant token rotation",
                        "description": {
                            "content": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tenantTokenRotation",
                                "start"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "59701477-ad8f-48f9-b031-b2d7ad6487c6",
                            "name": "Success. The new tenant token is created and will replace the old one. The **active** field of the response contains the new tenant token.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "start"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"old\": {\n    \"value\": \"esse dolor\"\n  },\n  \"active\": {\n    \"value\": \"magna in esse ea\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ed5ed557-9499-43d0-8fb6-5fdc5c49184f",
                            "name": "Failed. Another rotation process is already in progress.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "start"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ut pariat\",\n    \"code\": 72379611\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "5522f084-dcfd-4c2f-b433-b53c31fd3eb8",
            "name": "units",
            "item": [
                {
                    "id": "5e05d5b9-2eb5-471c-9184-adab8e5daa4c",
                    "name": "Lists all available units",
                    "request": {
                        "name": "Lists all available units",
                        "description": {
                            "content": "You can narrow down the output by providing filter criteria in the **unitSelector** field.\n\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "units"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "unitSelector",
                                    "value": "<string>",
                                    "description": "Selects units to be included to the response. Available criteria: \n* Compatibility: `compatibleTo(\"unit\",\"display-format\")`. Returns units that can be converted to the specified unit. The optional display format (`binary` or `decimal`) argument is supported by bit- and byte-based units and returns only units for the specified format."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Defines the list of properties to be included in the response. The ID of the unit is **always** included. The following additional properties are available: \n\n* `displayName`: The display name of the unit. \n* `symbol`: The symbol of the unit. \n* `description`: A short description of the unit.\n\nBy default, the ID, the display name, and the symbol are included. \n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`.\n\nTo specify several properties, join them with a comma (for example `fields=+description,-symbol`).\n\nIf you specify just one property, the response contains the unitId and the specified property. To return unit IDs only, specify `unitId` here."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "834b8b4b-8bf1-4926-b225-022a69d9da13",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "units"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "unitSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 2,\n  \"units\": [\n    {\n      \"unitId\": \"BytePerSecond\",\n      \"displayName\": \"byte per second\",\n      \"displayNamePlural\": \"bytes per second\",\n      \"symbol\": \"B/s\",\n      \"description\": \"byte per second\"\n    },\n    {\n      \"unitId\": \"BytePerMinute\",\n      \"displayName\": \"byte per minute\",\n      \"displayNamePlural\": \"bytes per minute\",\n      \"symbol\": \"B/min\",\n      \"description\": \"byte per minute\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "76b3359c-9804-48d7-a26d-46dfcf15b811",
                    "name": "{unitId}",
                    "item": [
                        {
                            "id": "6862ccae-bbbc-492f-bb06-4ceeec72d9cd",
                            "name": "Gets the properties of the specified unit",
                            "request": {
                                "name": "Gets the properties of the specified unit",
                                "description": {},
                                "url": {
                                    "path": [
                                        "units",
                                        ":unitId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "unitId",
                                            "description": "(Required) The ID of the required unit."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "083de867-6803-4193-a516-9b1225182d3b",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "units",
                                                ":unitId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "unitId",
                                                    "description": "(Required) The ID of the required unit."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"unitId\": \"Second\",\n  \"displayName\": \"second\",\n  \"displayNamePlural\": \"seconds\",\n  \"symbol\": \"s\",\n  \"description\": \"The second is the base unit of time and defined as 1/86400 of a day.\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "8be4f0f1-1e55-4503-9216-7df8a7b1b3b6",
                                    "name": "Not found. The requested resource is not found or the query is incorrect.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "units",
                                                ":unitId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "unitId",
                                                    "description": "(Required) The ID of the required unit."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "5c7b690d-b592-4180-b0a0-4bbf693c683e",
                            "name": "Converts a value from a source unit into a target unit",
                            "request": {
                                "name": "Converts a value from a source unit into a target unit",
                                "description": {
                                    "content": "If no target unit is set, the request finds an appropriate target unit automatically, taking into account the preferred number format (if specified).",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "units",
                                        ":unitId",
                                        "convert"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "value",
                                            "value": "<double>",
                                            "description": "(Required) The value to be converted."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "targetUnit",
                                            "value": "<string>",
                                            "description": "The ID of the target unit. \n\nIf not set, the request finds an appropriate target unit automatically, based on the specified number format."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "numberFormat",
                                            "value": "<string>",
                                            "description": "The preferred number format of the target value. You can specify the following formats: \n\n* `binary` \n* `decimal` \n\n`Only used if the target unit if not set."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "unitId",
                                            "description": "(Required) The ID of the source unit."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "81569bc5-a66d-4b78-8d9f-ff943ff6b336",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "units",
                                                ":unitId",
                                                "convert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "value",
                                                    "value": "<double>"
                                                },
                                                {
                                                    "key": "targetUnit",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "numberFormat",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "unitId",
                                                    "description": "(Required) The ID of the source unit."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"resultValue\": 70709677.68811437,\n  \"unitId\": \"officia in laboris Lorem\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "462ed685-d62b-47a9-bf2d-ed5171aa6605",
                                    "name": "Not found. The requested resource is not found or the query is incorrect.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "units",
                                                ":unitId",
                                                "convert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "value",
                                                    "value": "<double>"
                                                },
                                                {
                                                    "key": "targetUnit",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "numberFormat",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "unitId",
                                                    "description": "(Required) The ID of the source unit."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        }
    ],
    "event": [],
    "auth": {
        "type": "apikey",
        "apikey": [
            {
                "key": "value",
                "value": "Api-Token {{DT_TOKEN}}",
                "type": "string"
            },
            {
                "key": "key",
                "value": "Authorization",
                "type": "string"
            }
        ]
    },
    "variable": [
        {
            "type": "string",
            "value": "https://{{DT_HOST}}/api/v2",
            "key": "baseUrl"
        }
    ],
    "info": {
        "_postman_id": "a61941d2-4b2e-4691-bcc6-770d41f95d42",
        "name": "Dynatrace Environment API v2",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "\nDocumentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress. \n\nIf you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
            "type": "text/plain"
        }
    }
}