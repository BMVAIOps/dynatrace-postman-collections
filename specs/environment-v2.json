{
    "item": [
        {
            "id": "89bb5aa5-f4f6-481f-9805-1609f4032c07",
            "name": "active Gates",
            "item": [
                {
                    "id": "d77e0e6b-8791-487f-96c3-7bff9c1d0b4e",
                    "name": "Lists all available ActiveGates",
                    "request": {
                        "name": "Lists all available ActiveGates",
                        "description": {
                            "content": "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGates"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "hostname",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "osType",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the OS type of the host it's running on."
                                },
                                {
                                    "disabled": false,
                                    "key": "networkAddress",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "loadBalancerAddress",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the Load Balancer address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "type",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the ActiveGate type."
                                },
                                {
                                    "disabled": false,
                                    "key": "networkZone",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "updateStatus",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the auto-update status."
                                },
                                {
                                    "disabled": false,
                                    "key": "versionCompareType",
                                    "value": "EQUAL",
                                    "description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here."
                                },
                                {
                                    "disabled": false,
                                    "key": "version",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here."
                                },
                                {
                                    "disabled": false,
                                    "key": "autoUpdate",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the actual state of auto-update."
                                },
                                {
                                    "disabled": false,
                                    "key": "group",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "online",
                                    "value": "<boolean>",
                                    "description": "Filters the resulting set of ActiveGates by the communication status."
                                },
                                {
                                    "disabled": false,
                                    "key": "enabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the enabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "enabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the enabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "disabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the disabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "disabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the disabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "containerized",
                                    "value": "<boolean>",
                                    "description": "Filters the resulting set of ActiveGates to those which are running in container (`true`) or not (`false`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "tokenState",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates to those with authorization token in specified state."
                                },
                                {
                                    "disabled": false,
                                    "key": "tokenExpirationSet",
                                    "value": "<boolean>",
                                    "description": "Filters the resulting set of ActiveGates to those with set expiration date for authorization token."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "aeb2c529-e4b9-4888-bd6f-41b69e9bee12",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "hostname",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "osType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "loadBalancerAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkZone",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "versionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "version",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "autoUpdate",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "group",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "online",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "containerized",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "tokenState",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tokenExpirationSet",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"activeGates\": [\n    {\n      \"id\": \"0x3efdd091\",\n      \"networkAddresses\": [\n        \"ipsum veniam nostrud et\",\n        \"velit sed\"\n      ],\n      \"loadBalancerAddresses\": [\n        \"adipisicing\",\n        \"quis culpa dolore aliqua\"\n      ],\n      \"osType\": \"WINDOWS\",\n      \"osArchitecture\": \"X86\",\n      \"osBitness\": \"64\",\n      \"autoUpdateStatus\": \"OUTDATED\",\n      \"offlineSince\": 1582031917814,\n      \"version\": \"1.185.0.20200201-120000\",\n      \"type\": \"ENVIRONMENT\",\n      \"hostname\": \"exampleHostname\",\n      \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n      \"environments\": [\n        \"labore\",\n        \"irure\"\n      ],\n      \"autoUpdateSettings\": {\n        \"setting\": \"INHERITED\",\n        \"effectiveSetting\": \"ENABLED\"\n      },\n      \"networkZone\": \"exampleNetworkZone\",\n      \"group\": \"default\",\n      \"modules\": [\n        {\n          \"misconfigured\": true,\n          \"version\": \"consectetur cillum\",\n          \"enabled\": true,\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"Duis_d\": \"est dolor anim aliquip nisi\",\n            \"nisid90\": \"minim reprehenderit exercitation deserunt\"\n          }\n        },\n        {\n          \"misconfigured\": false,\n          \"version\": \"minim mollit est labo\",\n          \"enabled\": true,\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"ex_f\": \"aliqua\",\n            \"dolore_fb\": \"d\",\n            \"elit_6\": \"enim officia ut\"\n          }\n        }\n      ],\n      \"containerized\": false,\n      \"connectedHosts\": {\n        \"number\": 150\n      },\n      \"activeGateTokens\": [\n        {\n          \"environmentId\": \"nisi commodo et in\",\n          \"id\": \"dt0g02.4KWZO5EF\",\n          \"state\": \"UNSUPPORTED\"\n        },\n        {\n          \"environmentId\": \"Ut sint venia\",\n          \"id\": \"dt0g02.4KWZO5EF\",\n          \"state\": \"UNKNOWN\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0x3efdd091\",\n      \"networkAddresses\": [\n        \"amet dolore ullamco tempor\",\n        \"eiu\"\n      ],\n      \"loadBalancerAddresses\": [\n        \"in sed incididunt dese\",\n        \"nulla laborum id est cupidatat\"\n      ],\n      \"osType\": \"WINDOWS\",\n      \"osArchitecture\": \"X86\",\n      \"osBitness\": \"64\",\n      \"autoUpdateStatus\": \"OUTDATED\",\n      \"offlineSince\": 1582031917814,\n      \"version\": \"1.185.0.20200201-120000\",\n      \"type\": \"ENVIRONMENT\",\n      \"hostname\": \"exampleHostname\",\n      \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n      \"environments\": [\n        \"in ullamco qui\",\n        \"dese\"\n      ],\n      \"autoUpdateSettings\": {\n        \"setting\": \"INHERITED\",\n        \"effectiveSetting\": \"ENABLED\"\n      },\n      \"networkZone\": \"exampleNetworkZone\",\n      \"group\": \"default\",\n      \"modules\": [\n        {\n          \"misconfigured\": false,\n          \"version\": \"irure voluptate\",\n          \"enabled\": false,\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"non_7e8\": \"in et ex\",\n            \"qui9\": \"nostrud aute sed Lorem Ut\"\n          }\n        },\n        {\n          \"misconfigured\": true,\n          \"version\": \"anim consequat labore proident\",\n          \"enabled\": false,\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"incididunt_7\": \"commodo id officia\",\n            \"aliqua_db4\": \"eiusmod exercitation consequat ut\",\n            \"dolore_f\": \"cillum do aliquip sed\"\n          }\n        }\n      ],\n      \"containerized\": true,\n      \"connectedHosts\": {\n        \"number\": 150\n      },\n      \"activeGateTokens\": [\n        {\n          \"environmentId\": \"fugiat\",\n          \"id\": \"dt0g02.4KWZO5EF\",\n          \"state\": \"ABSENT\"\n        },\n        {\n          \"environmentId\": \"esse\",\n          \"id\": \"dt0g02.4KWZO5EF\",\n          \"state\": \"UNSUPPORTED\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fad16107-38c8-4814-b089-ab5ddd6b0b19",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "hostname",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "osType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "loadBalancerAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkZone",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "versionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "version",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "autoUpdate",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "group",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "online",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "containerized",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "tokenState",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tokenExpirationSet",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"et sunt veniam elit\",\n        \"message\": \"ad enim nisi\",\n        \"path\": \"tempor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"dolore do amet officia nisi\",\n        \"message\": \"magna et\",\n        \"path\": \"ex non voluptate cupidatat\"\n      }\n    ],\n    \"code\": -19246400,\n    \"message\": \"sunt aliqua veniam\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "dda3e44d-127e-4bed-887f-a5c75820987e",
                    "name": "{ag Id}",
                    "item": [
                        {
                            "id": "70d583ce-ee28-4f1f-a0f9-0a41d82f5d0f",
                            "name": "Gets the details of the specified ActiveGate",
                            "request": {
                                "name": "Gets the details of the specified ActiveGate",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        ":agId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "agId",
                                            "description": "(Required) The ID of the required ActiveGate."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "bdf662f8-bb47-495f-afe2-10982f9a645a",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"id\": \"0x3efdd091\",\n  \"networkAddresses\": [\n    \"aute velit\",\n    \"pariatur deserunt occaecat ipsum\"\n  ],\n  \"loadBalancerAddresses\": [\n    \"ut veniam mollit laborum\",\n    \"velit in do\"\n  ],\n  \"osType\": \"WINDOWS\",\n  \"osArchitecture\": \"X86\",\n  \"osBitness\": \"64\",\n  \"autoUpdateStatus\": \"OUTDATED\",\n  \"offlineSince\": 1582031917814,\n  \"version\": \"1.185.0.20200201-120000\",\n  \"type\": \"ENVIRONMENT\",\n  \"hostname\": \"exampleHostname\",\n  \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n  \"environments\": [\n    \"reprehenderit sunt Ut\",\n    \"labore commodo do esse culpa\"\n  ],\n  \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n  },\n  \"networkZone\": \"exampleNetworkZone\",\n  \"group\": \"default\",\n  \"modules\": [\n    {\n      \"misconfigured\": true,\n      \"version\": \"sint magna elit\",\n      \"enabled\": true,\n      \"type\": \"KUBERNETES\",\n      \"attributes\": {\n        \"consequat_80\": \"consequat ut sed\",\n        \"ut_8\": \"magna aute ut\"\n      }\n    },\n    {\n      \"misconfigured\": true,\n      \"version\": \"et dolore esse mollit\",\n      \"enabled\": false,\n      \"type\": \"KUBERNETES\",\n      \"attributes\": {\n        \"irure_96\": \"anim eiusmo\",\n        \"labore_9\": \"sit commodo\"\n      }\n    }\n  ],\n  \"containerized\": true,\n  \"connectedHosts\": {\n    \"number\": 150\n  },\n  \"activeGateTokens\": [\n    {\n      \"environmentId\": \"deserunt culpa reprehenderit qui\",\n      \"id\": \"dt0g02.4KWZO5EF\",\n      \"state\": \"UNKNOWN\"\n    },\n    {\n      \"environmentId\": \"qui\",\n      \"id\": \"dt0g02.4KWZO5EF\",\n      \"state\": \"EXPIRING\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "2abfbef2-e5a8-4e61-9504-33574c5d6e97",
                                    "name": "Not found. See response body for details.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "c3b9dccf-d97b-4080-84c9-c8c98ef93d81",
                            "name": "auto Update",
                            "item": [
                                {
                                    "id": "b3a0b8e3-22c5-4e0b-b8e5-529620651365",
                                    "name": "Gets the configuration of auto-update for the specified ActiveGate",
                                    "request": {
                                        "name": "Gets the configuration of auto-update for the specified ActiveGate",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "018b53fd-060a-4d52-9092-bba612934d61",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"setting\": \"INHERITED\",\n  \"effectiveSetting\": \"ENABLED\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "832dbb50-c8cc-4cbf-a293-42eb4d5417b2",
                                            "name": "Not found. See response body for details.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "021abbe5-aa8f-4136-a2da-54b1050c3ac3",
                                    "name": "Updates the configuration of auto-update for the specified ActiveGate",
                                    "request": {
                                        "name": "Updates the configuration of auto-update for the specified ActiveGate",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "c5a05198-8e45-4a9c-970d-3d78f6414029",
                                            "name": "Success. The auto-update configuration have been updated. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "e9d572ef-f7dc-4613-8916-034cbbfdf249",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "932d8fcb-654a-4ba7-b578-72ede6132cd4",
                                    "name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
                                    "request": {
                                        "name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "autoUpdate",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "51319cf8-868b-48e7-a741-ef688410e7d6",
                                            "name": "Validated. The submitted auto-update configuration is valid. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "e7c54862-9bae-4f40-a63b-a8be220eb852",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "1ce1cfc2-26ad-4080-824c-55f2c6343192",
                            "name": "update Jobs",
                            "item": [
                                {
                                    "id": "b39013a2-4e5f-4373-9556-8310303cb56b",
                                    "name": "Lists update jobs for the specified ActiveGate",
                                    "request": {
                                        "name": "Lists update jobs for the specified ActiveGate",
                                        "description": {
                                            "content": "The job can update the ActiveGate to the specified version or the latest available one.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "updateJobs"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "from",
                                                    "value": "<string>",
                                                    "description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "to",
                                                    "value": "<string>",
                                                    "description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "startVersionCompareType",
                                                    "value": "EQUAL",
                                                    "description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "startVersion",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "updateType",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of update-jobs by the update type."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "targetVersionCompareType",
                                                    "value": "EQUAL",
                                                    "description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "targetVersion",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "lastUpdates",
                                                    "value": "false",
                                                    "description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "89e9a63c-8598-47b3-b602-0fcbb0ce78bb",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "startVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "updateType",
                                                            "value": "ACTIVE_GATE"
                                                        },
                                                        {
                                                            "key": "targetVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "targetVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "lastUpdates",
                                                            "value": "false"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"agId\": \"0x3efdd092\",\n  \"updateJobs\": [\n    {\n      \"targetVersion\": \"1.190.0.20200301-130000\",\n      \"jobState\": \"SUCCEED\",\n      \"updateMethod\": \"AUTOMATIC\",\n      \"updateType\": \"ACTIVE_GATE\",\n      \"agType\": \"ENVIRONMENT\",\n      \"startVersion\": \"1.185.0.20200201-120000\",\n      \"environments\": [\n        \"culpa ullamco mollit\",\n        \"commodo eiusmod pariatur m\"\n      ],\n      \"jobId\": \"-3524498778810258605\",\n      \"cancelable\": false,\n      \"duration\": 3608000,\n      \"timestamp\": 1582031917814,\n      \"error\": \"proident dolore ad\"\n    },\n    {\n      \"targetVersion\": \"1.190.0.20200301-130000\",\n      \"jobState\": \"SUCCEED\",\n      \"updateMethod\": \"AUTOMATIC\",\n      \"updateType\": \"ACTIVE_GATE\",\n      \"agType\": \"ENVIRONMENT\",\n      \"startVersion\": \"1.185.0.20200201-120000\",\n      \"environments\": [\n        \"et amet\",\n        \"velit nostrud Duis\"\n      ],\n      \"jobId\": \"-3524498778810258605\",\n      \"cancelable\": false,\n      \"duration\": 3608000,\n      \"timestamp\": 1582031917814,\n      \"error\": \"incididunt dolor ut aute eiusmod\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "898079e8-a314-4446-b426-af78f55425c4",
                                            "name": "Not found. See response body for details.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "startVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "updateType",
                                                            "value": "ACTIVE_GATE"
                                                        },
                                                        {
                                                            "key": "targetVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "targetVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "lastUpdates",
                                                            "value": "false"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "35d41792-c4b9-4138-b03f-01b8d931a1d9",
                                    "name": "Creates a new update job for the specified ActiveGate",
                                    "request": {
                                        "name": "Creates a new update job for the specified ActiveGate",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "updateJobs"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "a26b00e5-dd57-4a24-a9ec-0144a1e9c685",
                                            "name": "Success. The update-job have been created.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Created",
                                            "code": 201,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\",\n  \"jobState\": \"SUCCEED\",\n  \"updateMethod\": \"AUTOMATIC\",\n  \"updateType\": \"ACTIVE_GATE\",\n  \"agType\": \"ENVIRONMENT\",\n  \"startVersion\": \"1.185.0.20200201-120000\",\n  \"environments\": [\n    \"laboris nostrud co\",\n    \"labore reprehenderit tempor in\"\n  ],\n  \"jobId\": \"-3524498778810258605\",\n  \"cancelable\": false,\n  \"duration\": 3608000,\n  \"timestamp\": 1582031917814,\n  \"error\": \"adipisicing ea\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "422a3edf-d029-4b86-be84-efbca8425b83",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "5194bdce-b860-4566-997b-16d2ef4b4d66",
                                    "name": "{job Id}",
                                    "item": [
                                        {
                                            "id": "181cebca-4ddd-4fb6-be0e-827a1ad27e64",
                                            "name": "Gets the parameters of the specified update job",
                                            "request": {
                                                "name": "Gets the parameters of the specified update job",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        ":jobId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "jobId",
                                                            "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "e4984638-1efa-43ad-8060-da8d2a9c865a",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\",\n  \"jobState\": \"SUCCEED\",\n  \"updateMethod\": \"AUTOMATIC\",\n  \"updateType\": \"ACTIVE_GATE\",\n  \"agType\": \"ENVIRONMENT\",\n  \"startVersion\": \"1.185.0.20200201-120000\",\n  \"environments\": [\n    \"laboris nostrud co\",\n    \"labore reprehenderit tempor in\"\n  ],\n  \"jobId\": \"-3524498778810258605\",\n  \"cancelable\": false,\n  \"duration\": 3608000,\n  \"timestamp\": 1582031917814,\n  \"error\": \"adipisicing ea\"\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "26cd7749-4021-4e68-8f3e-9e33ed7ecfb1",
                                                    "name": "Not found. See response body for details.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "b5c71356-f7f5-481b-a983-06024744789c",
                                            "name": "Deletes the specified update job",
                                            "request": {
                                                "name": "Deletes the specified update job",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        ":jobId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "jobId",
                                                            "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "2a6b0a24-d59c-40ef-a336-35dc51c60757",
                                                    "name": "Success. The update-job have been deleted. Response doesn't have a body.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                },
                                                {
                                                    "id": "dac20868-6aaa-4a9a-a4c5-19be56fc821f",
                                                    "name": "Failed. The input is invalid.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "bf632425-2832-4707-b885-7c5f4aca5936",
                                                    "name": "Not found. See response body for details.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "282b61b9-d721-4f2e-bd47-b2bed681bc46",
                                    "name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
                                    "request": {
                                        "name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "updateJobs",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "6e325c97-7b5d-491a-a8c0-839dcca04077",
                                            "name": "Validated. The submitted update-job is valid. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "4a52350c-c81b-4537-b044-6b25c55b7e63",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "7ab10182-8d3a-4f90-9462-91fafc461f56",
                    "name": "auto Update",
                    "item": [
                        {
                            "id": "0d2b3f24-2711-4564-8eb6-519f53b5b865",
                            "name": "Gets the global auto-update configuration of environment ActiveGates.",
                            "request": {
                                "name": "Gets the global auto-update configuration of environment ActiveGates.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "autoUpdate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "3a16fbe6-0a01-458e-bfb7-0ce91465a58e",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"globalSetting\": \"ENABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "d5bfceca-7fa4-4fe2-adea-7191d4bf3bee",
                            "name": "Puts the global auto-update configuration of environment ActiveGates.",
                            "request": {
                                "name": "Puts the global auto-update configuration of environment ActiveGates.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "autoUpdate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "40f6510f-f1c4-4049-8b36-05d7c96a00d3",
                                    "name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "604ac210-6ded-45b3-9904-36caee8c9e54",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "bf2c37b9-4685-4aaa-9116-fe2ea59dbf44",
                            "name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
                            "request": {
                                "name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "autoUpdate",
                                        "validator"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "ae78ecb9-79c6-46b9-98b9-986feb09062c",
                                    "name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "148c191f-141b-4800-a325-4a3eb073d87a",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "615d4f7c-16b3-44a9-ae0f-cb81e4c3751b",
                    "name": "List ActiveGates with update jobs",
                    "request": {
                        "name": "List ActiveGates with update jobs",
                        "description": {
                            "content": "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGates",
                                "updateJobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "startVersionCompareType",
                                    "value": "EQUAL",
                                    "description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
                                },
                                {
                                    "disabled": false,
                                    "key": "startVersion",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "updateType",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of update-jobs by the update type."
                                },
                                {
                                    "disabled": false,
                                    "key": "targetVersionCompareType",
                                    "value": "EQUAL",
                                    "description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
                                },
                                {
                                    "disabled": false,
                                    "key": "targetVersion",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "lastUpdates",
                                    "value": "false",
                                    "description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2a7a90bf-3c53-4dce-aa80-74b6be42be27",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "updateJobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "startVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "startVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateType",
                                            "value": "ACTIVE_GATE"
                                        },
                                        {
                                            "key": "targetVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "targetVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "lastUpdates",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"allUpdateJobs\": [\n    {\n      \"agId\": \"0x3efdd092\",\n      \"updateJobs\": [\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"jobState\": \"SUCCEED\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"environments\": [\n            \"cillum fugiat ut\",\n            \"consectetur Ut\"\n          ],\n          \"jobId\": \"-3524498778810258605\",\n          \"cancelable\": false,\n          \"duration\": 3608000,\n          \"timestamp\": 1582031917814,\n          \"error\": \"sint in\"\n        },\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"jobState\": \"SUCCEED\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"environments\": [\n            \"aliquip\",\n            \"qui culpa adipisicing enim\"\n          ],\n          \"jobId\": \"-3524498778810258605\",\n          \"cancelable\": false,\n          \"duration\": 3608000,\n          \"timestamp\": 1582031917814,\n          \"error\": \"ea culpa anim\"\n        }\n      ]\n    },\n    {\n      \"agId\": \"0x3efdd092\",\n      \"updateJobs\": [\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"jobState\": \"SUCCEED\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"environments\": [\n            \"consequat aliq\",\n            \"dolor quis\"\n          ],\n          \"jobId\": \"-3524498778810258605\",\n          \"cancelable\": false,\n          \"duration\": 3608000,\n          \"timestamp\": 1582031917814,\n          \"error\": \"non est occaecat\"\n        },\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"jobState\": \"SUCCEED\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"environments\": [\n            \"occaecat labore enim\",\n            \"amet Lorem id mollit\"\n          ],\n          \"jobId\": \"-3524498778810258605\",\n          \"cancelable\": false,\n          \"duration\": 3608000,\n          \"timestamp\": 1582031917814,\n          \"error\": \"sint Duis do\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "71f1a475-4d9d-47b1-9fa6-8df266e68f29",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "updateJobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "startVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "startVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateType",
                                            "value": "ACTIVE_GATE"
                                        },
                                        {
                                            "key": "targetVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "targetVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "lastUpdates",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8c0797cd-fe94-447e-bb70-4ba54db9af63",
                    "name": "Gets the status of ActiveGate tokens enforcement | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets the status of ActiveGate tokens enforcement | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "activeGates",
                                "tokenEnforcement"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "b88ebf1b-c52c-4ba6-bb4a-ba6c435b3371",
                            "name": "Success. The response contains the status of ActiveGate tokens enforcement",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "tokenEnforcement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"manualEnforced\": true,\n  \"autoEnforced\": true,\n  \"autoEnforcementEstimation\": {\n    \"value\": 86207029,\n    \"unit\": \"DAYS\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "2c8ce114-4c13-4a83-ac3a-7439e6267513",
            "name": "entities",
            "item": [
                {
                    "id": "0bb0b4b8-6997-467e-a033-45a8cb1cd900",
                    "name": "Gets the information about monitored entities",
                    "request": {
                        "name": "Gets the information about monitored entities",
                        "description": {
                            "content": "Lists entities observed within the specified timeframe along with their properties. \n\nWhen you query entities of the `SERVICE_METHOD` type, only the following requests are returned: \n\n* [Key requests](https://dt-url.net/a903u9s) \n* Top X requests that are used for [baselining](https://dt-url.net/0j23uqb) \n* Requests that have caused a [problem](https://dt-url.net/pf43uqg) \n\nYou can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "entities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of entities. \n\nIf not set, 50 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "Defines the scope of the query. Only entities matching the specified criteria are included into response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\nThe field is **required** when you're querying the first page of results."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "<string>",
                                    "description": "Defines the ordering of the entities returned. \n\nThis field is **optional**, each field has a sign prefix (+/-), which corresponds to sorting order ( + for ascending and - for descending). If no sign prefix is set, then default ascending sorting order will be applied. \n\nCurrently ordering is only available for the display name (for example `sort=name or sort =+name for ascending, sort=-name for descending`)"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "89b67d15-70aa-4570-8020-117becfbc9c1",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 60842957,\n  \"pageSize\": 96193344,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"entities\": [\n    {\n      \"firstSeenTms\": -58517509,\n      \"lastSeenTms\": 82454507,\n      \"fromRelationships\": {\n        \"cupidatat_9\": [\n          {\n            \"id\": \"veniam Duis exercitation non\",\n            \"type\": \"id voluptate\"\n          },\n          {\n            \"id\": \"ea aliqua esse\",\n            \"type\": \"in et ipsum\"\n          }\n        ],\n        \"veniam_e3\": [\n          {\n            \"id\": \"dolore exercitation in anim\",\n            \"type\": \"aliquip ut in\"\n          },\n          {\n            \"id\": \"est adipisicing occaecat id\",\n            \"type\": \"ea aliqua\"\n          }\n        ],\n        \"id32a\": [\n          {\n            \"id\": \"nulla\",\n            \"type\": \"id ex\"\n          },\n          {\n            \"id\": \"magna in do\",\n            \"type\": \"enim adipisicing minim anim\"\n          }\n        ]\n      },\n      \"toRelationships\": {\n        \"et_4\": [\n          {\n            \"id\": \"consectetur r\",\n            \"type\": \"laboris occaecat id eiusmod\"\n          },\n          {\n            \"id\": \"minim ullamco\",\n            \"type\": \"enim\"\n          }\n        ],\n        \"anim_e\": [\n          {\n            \"id\": \"Excepteur\",\n            \"type\": \"amet ullamco tempor\"\n          },\n          {\n            \"id\": \"dolore est ea\",\n            \"type\": \"aliqua\"\n          }\n        ],\n        \"ullamcofaf\": [\n          {\n            \"id\": \"ut Excepteur do\",\n            \"type\": \"officia aute al\"\n          },\n          {\n            \"id\": \"ea occaecat dolore\",\n            \"type\": \"in\"\n          }\n        ]\n      },\n      \"tags\": [\n        {\n          \"stringRepresentation\": \"minim culpa eu\",\n          \"value\": \"exercitation veniam aliquip enim adipisicing\",\n          \"key\": \"et esse laborum aute\",\n          \"context\": \"aliquip\"\n        },\n        {\n          \"stringRepresentation\": \"irure\",\n          \"value\": \"consequat labore mini\",\n          \"key\": \"ipsum\",\n          \"context\": \"labore ad\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"name\": \"minim Ut eu fugiat\",\n          \"id\": \"mollit sunt reprehender\"\n        },\n        {\n          \"name\": \"aute cill\",\n          \"id\": \"sed\"\n        }\n      ],\n      \"entityId\": \"nisi do\",\n      \"icon\": {\n        \"secondaryIconType\": \"ullamco\",\n        \"customIconPath\": \"veniam qui sed tempor\",\n        \"primaryIconType\": \"in officia exercitation Lorem\"\n      },\n      \"displayName\": \"consectetur nisi enim mo\",\n      \"properties\": {\n        \"et_f\": {},\n        \"minim_b\": {}\n      },\n      \"type\": \"ut aute Ut\"\n    },\n    {\n      \"firstSeenTms\": 45457766,\n      \"lastSeenTms\": -22432180,\n      \"fromRelationships\": {\n        \"commodo4d6\": [\n          {\n            \"id\": \"anim nostrud fugiat est ut\",\n            \"type\": \"amet Ut dolor\"\n          },\n          {\n            \"id\": \"eiusmod voluptate esse proident\",\n            \"type\": \"nulla in tempor ut\"\n          }\n        ]\n      },\n      \"toRelationships\": {\n        \"amet_48f\": [\n          {\n            \"id\": \"eu est exercitation\",\n            \"type\": \"veniam enim elit sit in\"\n          },\n          {\n            \"id\": \"veniam proident in cillum\",\n            \"type\": \"eu\"\n          }\n        ],\n        \"in0\": [\n          {\n            \"id\": \"do\",\n            \"type\": \"anim amet\"\n          },\n          {\n            \"id\": \"nostrud dolore\",\n            \"type\": \"elit eiusmod aliqua\"\n          }\n        ]\n      },\n      \"tags\": [\n        {\n          \"stringRepresentation\": \"id\",\n          \"value\": \"enim nisi in\",\n          \"key\": \"dolor aliqua\",\n          \"context\": \"exercitation eiusmod do\"\n        },\n        {\n          \"stringRepresentation\": \"mini\",\n          \"value\": \"tempor ullamco dolore occaecat laboris\",\n          \"key\": \"minim laboris sunt Ut incididunt\",\n          \"context\": \"eu eius\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"name\": \"officia in cons\",\n          \"id\": \"in ea\"\n        },\n        {\n          \"name\": \"ad dolor\",\n          \"id\": \"fugiat id sint veniam dolor\"\n        }\n      ],\n      \"entityId\": \"nostrud fugiat\",\n      \"icon\": {\n        \"secondaryIconType\": \"dolor voluptate fugiat\",\n        \"customIconPath\": \"occaecat ut ad cupidatat\",\n        \"primaryIconType\": \"non pariatur incididunt\"\n      },\n      \"displayName\": \"enim Lorem ex occaecat\",\n      \"properties\": {\n        \"laborum_5\": {}\n      },\n      \"type\": \"ea velit non\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "6abfb780-407a-4167-a12c-72c165fbc1f4",
                    "name": "Gets the properties of the specified monitored entity",
                    "request": {
                        "name": "Gets the properties of the specified monitored entity",
                        "description": {},
                        "url": {
                            "path": [
                                "entities",
                                ":entityId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
                                }
                            ],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "entityId",
                                    "description": "(Required) The ID of the required entity."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "9b80b822-9633-4f04-95f8-a86ae8fc9569",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities",
                                        ":entityId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "entityId",
                                            "description": "(Required) The ID of the required entity."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"firstSeenTms\": 68738080,\n  \"lastSeenTms\": 40476622,\n  \"fromRelationships\": {\n    \"nulla9\": [\n      {\n        \"id\": \"deserunt mollit proident est velit\",\n        \"type\": \"minim esse nisi reprehenderit\"\n      },\n      {\n        \"id\": \"dolore minim\",\n        \"type\": \"cupidatat nisi\"\n      }\n    ]\n  },\n  \"toRelationships\": {\n    \"pariatur_3\": [\n      {\n        \"id\": \"ad\",\n        \"type\": \"ipsum dolore in incididunt\"\n      },\n      {\n        \"id\": \"anim esse\",\n        \"type\": \"id \"\n      }\n    ]\n  },\n  \"tags\": [\n    {\n      \"stringRepresentation\": \"nisi ut\",\n      \"value\": \"id\",\n      \"key\": \"et fugiat laborum velit\",\n      \"context\": \"officia sed\"\n    },\n    {\n      \"stringRepresentation\": \"irure\",\n      \"value\": \"amet cupidatat\",\n      \"key\": \"officia aliqua dolore\",\n      \"context\": \"Excepteur enim\"\n    }\n  ],\n  \"managementZones\": [\n    {\n      \"name\": \"non qui dolore\",\n      \"id\": \"voluptate consequat\"\n    },\n    {\n      \"name\": \"qui ut fugiat magna Excepteur\",\n      \"id\": \"in laboris\"\n    }\n  ],\n  \"entityId\": \"dolor cupi\",\n  \"icon\": {\n    \"secondaryIconType\": \"deserunt magna esse\",\n    \"customIconPath\": \"sit\",\n    \"primaryIconType\": \"voluptate Excepteur\"\n  },\n  \"displayName\": \"exercitation Excepteur cupidatat anim\",\n  \"properties\": {\n    \"ad__\": {},\n    \"eiusmod_d\": {},\n    \"magna_e_\": {}\n  },\n  \"type\": \"cupidatat incididunt\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "039a24c8-b330-43ee-a42a-a0c4b5f01b25",
                    "name": "Creates or updates a custom device",
                    "request": {
                        "name": "Creates or updates a custom device",
                        "description": {},
                        "url": {
                            "path": [
                                "entities",
                                "custom"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "738a721c-c665-4d70-ae5e-da8434816ad4",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities",
                                        "custom"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"entityId\": \"reprehenderit proident fugiat laborum magna\",\n  \"groupId\": \"qui\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f51c27b2-c4e7-41f3-9eb1-f61aa026adb3",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities",
                                        "custom"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "a42abdd0-25fc-4ff4-9cd6-694e016aeda5",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities",
                                        "custom"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "aa5af18a-9ff7-4f1b-989e-ec219171542b",
            "name": "entity Types",
            "item": [
                {
                    "id": "5b15cd4e-7a72-4b68-98c8-461ec5b16185",
                    "name": "Gets a list of properties for all entity types",
                    "request": {
                        "name": "Gets a list of properties for all entity types",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "entityTypes"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of entity types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "4d86d6b1-51c2-490c-87de-d8768164a34b",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entityTypes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -69282556,\n  \"pageSize\": 68925967,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"types\": [\n    {\n      \"entityLimitExceeded\": true,\n      \"fromRelationships\": [\n        {\n          \"toTypes\": [\n            \"nulla nostrud in Lorem\",\n            \"Excepteur ad sunt eu dolore\"\n          ],\n          \"id\": \"quis irure aute Excepteur anim\"\n        },\n        {\n          \"toTypes\": [\n            \"fugiat ut dolore\",\n            \"laborum ullamco\"\n          ],\n          \"id\": \"qui nostrud\"\n        }\n      ],\n      \"toRelationships\": [\n        {\n          \"fromTypes\": [\n            \"cupidatat\",\n            \"Exce\"\n          ],\n          \"id\": \"deserunt\"\n        },\n        {\n          \"fromTypes\": [\n            \"officia adipisicing\",\n            \"deserunt enim veniam sit\"\n          ],\n          \"id\": \"esse dolor\"\n        }\n      ],\n      \"tags\": \"amet laboris ipsum\",\n      \"managementZones\": \"et\",\n      \"dimensionKey\": \"consequat dolore \",\n      \"displayName\": \"ullamco reprehenderit non\",\n      \"properties\": [\n        {\n          \"displayName\": \"cpu cores\",\n          \"id\": \"cpuCores\",\n          \"type\": \"Number\"\n        },\n        {\n          \"displayName\": \"cpu cores\",\n          \"id\": \"cpuCores\",\n          \"type\": \"Number\"\n        }\n      ],\n      \"type\": \"quis sint\"\n    },\n    {\n      \"entityLimitExceeded\": true,\n      \"fromRelationships\": [\n        {\n          \"toTypes\": [\n            \"occaecat ullamc\",\n            \"qui dolor\"\n          ],\n          \"id\": \"fu\"\n        },\n        {\n          \"toTypes\": [\n            \"elit nulla pariatur ut\",\n            \"ad nisi aliquip\"\n          ],\n          \"id\": \"ut veniam Lorem\"\n        }\n      ],\n      \"toRelationships\": [\n        {\n          \"fromTypes\": [\n            \"anim\",\n            \"ullamco et\"\n          ],\n          \"id\": \"ipsum sed\"\n        },\n        {\n          \"fromTypes\": [\n            \"ex Ut\",\n            \"ut dolore tempor\"\n          ],\n          \"id\": \"quis consequat\"\n        }\n      ],\n      \"tags\": \"proident officia laborum magna velit\",\n      \"managementZones\": \"exercitation in mollit\",\n      \"dimensionKey\": \"sint Exce\",\n      \"displayName\": \"aliquip ut exercitation fugiat eu\",\n      \"properties\": [\n        {\n          \"displayName\": \"cpu cores\",\n          \"id\": \"cpuCores\",\n          \"type\": \"Number\"\n        },\n        {\n          \"displayName\": \"cpu cores\",\n          \"id\": \"cpuCores\",\n          \"type\": \"Number\"\n        }\n      ],\n      \"type\": \"Excepteur magna nulla Duis\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f109113d-1705-481f-9e83-b338dddf12cd",
                            "name": "Failed. There are no more entity types to export.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entityTypes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "065b0bad-326c-417c-ac71-1345c3eb6cee",
                    "name": "Gets a list of properties for the specified entity type",
                    "request": {
                        "name": "Gets a list of properties for the specified entity type",
                        "description": {},
                        "url": {
                            "path": [
                                "entityTypes",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "description": "(Required) The required entity type."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "1207a956-9781-429e-8f12-c1e4ff21019d",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entityTypes",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "type",
                                            "description": "(Required) The required entity type."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"entityLimitExceeded\": false,\n  \"fromRelationships\": [\n    {\n      \"toTypes\": [\n        \"pariatur Duis elit\",\n        \"aliqua sunt ut eiusmod\"\n      ],\n      \"id\": \"nostrud commodo\"\n    },\n    {\n      \"toTypes\": [\n        \"sint eiusmod aliquip\",\n        \"commodo dolore anim laborum\"\n      ],\n      \"id\": \"occaecat sunt culpa cupidatat\"\n    }\n  ],\n  \"toRelationships\": [\n    {\n      \"fromTypes\": [\n        \"est ad anim nisi eu\",\n        \"pariatur ut\"\n      ],\n      \"id\": \"cupidatat pariatur adipisicing a\"\n    },\n    {\n      \"fromTypes\": [\n        \"e\",\n        \"labore incididunt laborum est\"\n      ],\n      \"id\": \"sint do pariatur\"\n    }\n  ],\n  \"tags\": \"ex cillum\",\n  \"managementZones\": \"fugiat enim mollit quis\",\n  \"dimensionKey\": \"deserunt officia\",\n  \"displayName\": \"sit irure\",\n  \"properties\": [\n    {\n      \"displayName\": \"cpu cores\",\n      \"id\": \"cpuCores\",\n      \"type\": \"Number\"\n    },\n    {\n      \"displayName\": \"cpu cores\",\n      \"id\": \"cpuCores\",\n      \"type\": \"Number\"\n    }\n  ],\n  \"type\": \"Ut\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a56c7ec0-f90a-42e6-9b87-9ac1f2f77135",
                            "name": "Failed. The requested monitored entity type is not exportable or doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entityTypes",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "type",
                                            "description": "(Required) The required entity type."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "a1434059-2d5e-41f1-ba2f-257d7bdba71c",
            "name": "events",
            "item": [
                {
                    "id": "15c1c2d2-a293-49e0-814d-471ffa9a2f11",
                    "name": "Lists events within the specified timeframe",
                    "request": {
                        "name": "Lists events within the specified timeframe",
                        "description": {},
                        "url": {
                            "path": [
                                "events"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of events in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "eventSelector",
                                    "value": "<string>",
                                    "description": "Defines the scope of the query. Only events matching the specified criteria are included in the response.\n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies.\n* Event ID: `eventId(\"id-1\", \"id-2\")`.\n* ID of related entity: `entityId(\"id-1\", \"id-2\")`.\n* Event status: `status(\"OPEN\")` or `status(\"CLOSED\")`. You can specify only one status.\n* Management zone ID: `managementZoneId(\"123\", \"321\")`.\n* Event type: `eventType(\"event-type\")`. You can specify only one event type. You can fetch the list of possible event types with the [GET event types](https://dt-url.net/qc03u6w) call. \n* Correlation ID: `correlationId(\"id-1\", \"id-2\")`.\n* Happened during maintenance (true, false): `underMaintenance(true)`. \n* Notifications are suppressed (true, false): `suppressAlert(true)`. \n* Problem creation is suppressed (true, false): `suppressProblem(true)`. \n* Frequent event (true, false): `frequentEvent(true)`. \n* Event property: `property.<key>(\"value-1\", \"value-2\")`.\n\nTo set several criteria, separate them with commas (`,`). Only results matching **all** criteria are included in the response. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\nThe number of entities that can be selected is limited to 10000."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "f23c2d4a-c2b3-4466-80b6-751ce7d87340",
                            "name": "Success. The response contains the list of events.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "events"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "eventSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -60693348,\n  \"warnings\": [\n    \"eiusmod cillum\",\n    \"elit\"\n  ],\n  \"events\": [\n    {\n      \"suppressAlert\": false,\n      \"suppressProblem\": false,\n      \"frequentEvent\": false,\n      \"underMaintenance\": true,\n      \"managementZones\": [\n        {\n          \"name\": \"occaecat nulla laboris\",\n          \"id\": \"velit aliquip\"\n        },\n        {\n          \"name\": \"ex\",\n          \"id\": \"aliquip Ut dolor\"\n        }\n      ],\n      \"entityId\": {\n        \"entityId\": {\n          \"id\": \"officia aliquip cupidatat\",\n          \"type\": \"amet reprehenderit ut\"\n        },\n        \"name\": \"aute\"\n      },\n      \"eventId\": \"4293884258445543163_1564039524182\",\n      \"entityTags\": [\n        {\n          \"stringRepresentation\": \"elit dolore\",\n          \"value\": \"enim\",\n          \"key\": \"mollit nulla Lorem nostrud aute\",\n          \"context\": \"in occaecat ipsum aliquip\"\n        },\n        {\n          \"stringRepresentation\": \"dolor ea quis aliquip\",\n          \"value\": \"in ipsum aliquip\",\n          \"key\": \"ipsum proident\",\n          \"context\": \"deserunt nulla\"\n        }\n      ],\n      \"eventType\": \"LOW_DISK_SPACE\",\n      \"status\": \"OPEN\",\n      \"startTime\": 1564039524182,\n      \"endTime\": 1564039524182,\n      \"title\": \"High CPU load on host X\",\n      \"correlationId\": \"933613657e1c8fcf\",\n      \"properties\": [\n        {\n          \"value\": \"ad dolor\",\n          \"key\": \"irure mollit voluptate do\"\n        },\n        {\n          \"value\": \"ad proident\",\n          \"key\": \"ut veniam\"\n        }\n      ]\n    },\n    {\n      \"suppressAlert\": true,\n      \"suppressProblem\": true,\n      \"frequentEvent\": false,\n      \"underMaintenance\": true,\n      \"managementZones\": [\n        {\n          \"name\": \"eiusmod elit\",\n          \"id\": \"nostrud culpa proident Duis\"\n        },\n        {\n          \"name\": \"in consectetur Ut\",\n          \"id\": \"quis proid\"\n        }\n      ],\n      \"entityId\": {\n        \"entityId\": {\n          \"id\": \"culpa laboris ea voluptate\",\n          \"type\": \"mollit Ut pariatur\"\n        },\n        \"name\": \"ipsum Lorem\"\n      },\n      \"eventId\": \"4293884258445543163_1564039524182\",\n      \"entityTags\": [\n        {\n          \"stringRepresentation\": \"id eu eiusmod\",\n          \"value\": \"do nostrud lab\",\n          \"key\": \"ea ex\",\n          \"context\": \"laboris veniam eiusmod\"\n        },\n        {\n          \"stringRepresentation\": \"cupidatat\",\n          \"value\": \"nostrud dolore id\",\n          \"key\": \"voluptate Lorem\",\n          \"context\": \"Ut\"\n        }\n      ],\n      \"eventType\": \"LOW_DISK_SPACE\",\n      \"status\": \"OPEN\",\n      \"startTime\": 1564039524182,\n      \"endTime\": 1564039524182,\n      \"title\": \"High CPU load on host X\",\n      \"correlationId\": \"933613657e1c8fcf\",\n      \"properties\": [\n        {\n          \"value\": \"dolore dolore ullamco v\",\n          \"key\": \"consectetur dolore\"\n        },\n        {\n          \"value\": \"magna\",\n          \"key\": \"sint dolore\"\n        }\n      ]\n    }\n  ],\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"pageSize\": 74909803\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "044460b7-7e3e-4467-8449-375d41a3d43a",
                    "name": "Ingests a custom event",
                    "request": {
                        "name": "Ingests a custom event",
                        "description": {
                            "content": "The ingestion of custom events consumes [Davis Data Units](https://dt-url.net/ddu) (DDUs) from the events pool.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "events",
                                "ingest"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "c341c1d8-73f7-4f26-98f2-1645fc1400e4",
                            "name": "The event ingest request was received by the server. The response body indicates for each event whether its creation was successful.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "events",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"reportCount\": 5797230,\n  \"eventIngestResults\": [\n    {\n      \"status\": \"INVALID_METADATA\",\n      \"correlationId\": \"Excepteur aliqua voluptate\"\n    },\n    {\n      \"status\": \"OK\",\n      \"correlationId\": \"sit qui ut eiusmod anim\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "42a94204-2f2e-4f2a-a757-aaa5428af7ed",
                    "name": "Gets the properties of an event",
                    "request": {
                        "name": "Gets the properties of an event",
                        "description": {},
                        "url": {
                            "path": [
                                "events",
                                ":eventId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "eventId",
                                    "description": "(Required) The ID of the required event."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "c39ecab2-3eba-47fb-a87f-d89d94d13b38",
                            "name": "Success. The response contains the configuration of the event.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "events",
                                        ":eventId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "eventId",
                                            "description": "(Required) The ID of the required event."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"suppressAlert\": false,\n  \"suppressProblem\": true,\n  \"frequentEvent\": true,\n  \"underMaintenance\": false,\n  \"managementZones\": [\n    {\n      \"name\": \"veniam in exercitation consectetur\",\n      \"id\": \"in irure\"\n    },\n    {\n      \"name\": \"officia sint cillum\",\n      \"id\": \"nulla\"\n    }\n  ],\n  \"entityId\": {\n    \"entityId\": {\n      \"id\": \"non Duis mollit commodo est\",\n      \"type\": \"eiusmod pariatur\"\n    },\n    \"name\": \"ullamco tempor sed\"\n  },\n  \"eventId\": \"4293884258445543163_1564039524182\",\n  \"entityTags\": [\n    {\n      \"stringRepresentation\": \"tempor exercitation Ut\",\n      \"value\": \"mollit incididunt\",\n      \"key\": \"esse ut\",\n      \"context\": \"fugiat laboris\"\n    },\n    {\n      \"stringRepresentation\": \"aliquip qui Ut\",\n      \"value\": \"minim\",\n      \"key\": \"cillum officia \",\n      \"context\": \"dolore\"\n    }\n  ],\n  \"eventType\": \"LOW_DISK_SPACE\",\n  \"status\": \"OPEN\",\n  \"startTime\": 1564039524182,\n  \"endTime\": 1564039524182,\n  \"title\": \"High CPU load on host X\",\n  \"correlationId\": \"933613657e1c8fcf\",\n  \"properties\": [\n    {\n      \"value\": \"culpa sunt\",\n      \"key\": \"aute ut nisi pariatur\"\n    },\n    {\n      \"value\": \"irure id dolor ea sit\",\n      \"key\": \"consectetur voluptate aute labore\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "d16d8f5d-2fe9-4c5d-b14d-ca8d5ea2d349",
            "name": "event Properties",
            "item": [
                {
                    "id": "30eb3d52-053b-4d11-8a04-0c1bb3f8b99d",
                    "name": "Lists all event properties",
                    "request": {
                        "name": "Lists all event properties",
                        "description": {},
                        "url": {
                            "path": [
                                "eventProperties"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of event properties in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "9ade3159-5ec3-4566-80b8-d761f46776c4",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "eventProperties"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -80570651,\n  \"eventProperties\": [\n    {\n      \"writable\": false,\n      \"displayName\": \"Custom description\",\n      \"description\": \"cillum adipisicing esse elit ipsum\",\n      \"key\": \"dt.event.description\"\n    },\n    {\n      \"writable\": true,\n      \"displayName\": \"Custom description\",\n      \"description\": \"amet magna aliqua veniam irure\",\n      \"key\": \"dt.event.description\"\n    }\n  ],\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"pageSize\": -4294325\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "222cb128-c70c-466f-8162-76415566ddd2",
                    "name": "Gets the details of an event property",
                    "request": {
                        "name": "Gets the details of an event property",
                        "description": {},
                        "url": {
                            "path": [
                                "eventProperties",
                                ":propertyKey"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "propertyKey",
                                    "description": "(Required) The event property key you're inquiring."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "5e43d6e3-68ef-43af-9279-8748e130f534",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "eventProperties",
                                        ":propertyKey"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "propertyKey",
                                            "description": "(Required) The event property key you're inquiring."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"writable\": false,\n  \"displayName\": \"Custom description\",\n  \"description\": \"cillum\",\n  \"key\": \"dt.event.description\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "404e54c1-3a97-4a22-9a2d-5fcbe21b1a9d",
            "name": "event Types",
            "item": [
                {
                    "id": "ff1fc842-c95d-4324-bab6-cc19d52e00f4",
                    "name": "Lists all event types",
                    "request": {
                        "name": "Lists all event types",
                        "description": {},
                        "url": {
                            "path": [
                                "eventTypes"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of event types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "b6b7993d-0321-4381-a8a0-3888ba960f4f",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "eventTypes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -3710841,\n  \"eventTypeInfos\": [\n    {\n      \"severityLevel\": \"PERFORMANCE\",\n      \"displayName\": \"High CPU\",\n      \"description\": \"minim Lorem amet\",\n      \"type\": \"OSI_HIGH_CPU\"\n    },\n    {\n      \"severityLevel\": \"PERFORMANCE\",\n      \"displayName\": \"High CPU\",\n      \"description\": \"incididunt nostrud occaecat\",\n      \"type\": \"OSI_HIGH_CPU\"\n    }\n  ],\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"pageSize\": 58050750\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "aba69bb2-74e6-4f37-9e83-14dff2c09690",
                    "name": "Gets the properties of an event type",
                    "request": {
                        "name": "Gets the properties of an event type",
                        "description": {},
                        "url": {
                            "path": [
                                "eventTypes",
                                ":eventType"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "eventType",
                                    "description": "(Required) The event type you're inquiring."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "7b45a7fd-38ef-46ef-b2b9-1ec14393befb",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "eventTypes",
                                        ":eventType"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "eventType",
                                            "description": "(Required) The event type you're inquiring."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"severityLevel\": \"PERFORMANCE\",\n  \"displayName\": \"High CPU\",\n  \"description\": \"laboris dolor nisi\",\n  \"type\": \"OSI_HIGH_CPU\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "efb49f08-3939-4e80-a778-a8f0fe17374a",
            "name": "metrics",
            "item": [
                {
                    "id": "f7957867-af85-4089-86d5-c84e6eeeb6fb",
                    "name": "Lists all available metrics",
                    "request": {
                        "name": "Lists all available metrics",
                        "description": {
                            "content": "You can narrow down the output by selecting metrics in the **metricSelector** field. \n\nYou can additionally limit the output by using pagination: \n\n1. Specify the number of results per page in the **pageSize** query parameter. \n\n2. Then use the cursor from the **nextPageKey** field of the response in the **nextPageKey** query parameter to obtain subsequent pages. All other query parameters must be omitted.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "metrics"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of metric schemata in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\n If a value higher than 500 is used, only 500 results per page are returned."
                                },
                                {
                                    "disabled": false,
                                    "key": "metricSelector",
                                    "value": "<string>",
                                    "description": "Selects metrics for the query by their keys.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can select a full set of related metrics by using a trailing asterisk (`*`) wildcard. For example, `builtin:host.*` selects all host-based metrics and `builtin:*` selects all Dynatrace-provided metrics. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax.\n\n Only `aggregation`, `merge`, `parents`, and `splitBy` transformations are supported by this endpoint.\n\n If the metric key contains any symbols you must quote (`\"`) the key. The following characters inside of a quoted metric key must be escaped with a tilde (`~`):\n\n* Quotes (`\"`)\n* Tildes (`~`) \n\nFor example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents: Type \"APACHE\"** you must specify this selector: \n\n `\"ext:selfmonitoring.jmx.Agents: Type ~\"APACHE~\"\"` \n\n\n\n To find metrics based on a search term, rather than metricId, use the **text** query parameter instead of this one."
                                },
                                {
                                    "disabled": false,
                                    "key": "text",
                                    "value": "<string>",
                                    "description": "Metric registry search term. Only show metrics that contain the term in their key, display name, or description. Use the `metricSelector` parameter instead of this one to select a complete metric hierarchy instead of doing a text-based search."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Defines the list of metric properties included in the response. \n\n`metricId` is **always** included in the result. The following additional properties are available: \n\n* `displayName`: The name of the metric in the user interface. Enabled by default. \n* `description`: A short description of the metric. Enabled by default. \n* `unit`: The unit of the metric. Enabled by default. \n* `tags`: The tags of the metric. \n+ `dduBillable`:  An indicator whether the usage of metric consumes [Davis data units](https://dt-url.net/ddu). \n* `created`:  The timestamp (UTC milliseconds) when the metrics has been created. \n* `lastWritten`:  The timestamp (UTC milliseconds) when metric data points have been written for the last time. \n* `aggregationTypes`: The list of allowed aggregations for the metric. Note that it may be different after a [transformation](https://dt-url.net/metricSelector) is applied. \n* `defaultAggregation`: The default aggregation of the metric. It is used when no aggregation is specified or the `:auto` transformation is set. \n* `dimensionDefinitions`: The fine metric division (for example, process group and process ID for some process-related metric). \n* `transformations`: A list of [transformations](https://dt-url.net/metricSelector) that can be applied to the metric.\n* `entityType`: A list of entity types supported by the metric.\n* `minimumValue`: The minimum allowed value of the metric.\n* `maximumValue`: The maximum allowed value of the metric.\n* `rootCauseRelevant`: Whether (true or false) the metric is related to a root cause of a problem. A root-cause relevant metric represents a strong indicator for a faulty component.\n* `impactRelevant`: Whether (true or false) the metric is relevant to a problem's impact. An impact-relevant metric is highly dependent on other metrics and changes because an underlying root-cause metric has changed.\n* `metricValueType`: The type of the metric's value. You have these options:\n\t * `score`: A score metric is a metric where high values indicate a good situation, while low values indicate trouble. An example of such a metric is a success rate.\n\t * `error`: An error metric is a metric where high values indicate trouble, while low values indicate a good situation. An example of such a metric is an error count.\n* `latency`: The latency of the metric, in minutes. The latency is the expected reporting delay (for example, caused by constraints of cloud vendors or other third-party data sources) between the observation of a metric data point and its availability in Dynatrace. The allowed value range is from `1` to `60` minutes.\n* `metricSelector`: The underlying metric selector used by a func: metric.\n* `scalar`: Indicates whether the metric expression resolves to a scalar (`true`) or to a series (`false`). \nA scalar result always contains one data point. The amount of data points in a series result depends on the resolution you're using. \n* `resolutionInfSupported`: If `true`, resolution=Inf can be applied to the metric query. \n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`.\n\nTo specify several properties, join them with a comma (for example `fields=+aggregationTypes,-description`).\n\nIf you specify just one property, the response contains the metric key and the specified property. To return metric keys only, specify `metricId` here."
                                },
                                {
                                    "disabled": false,
                                    "key": "writtenSince",
                                    "value": "<string>",
                                    "description": "Filters the resulted set of metrics to those that have data points within the specified timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "metadataSelector",
                                    "value": "<string>",
                                    "description": "The metadata scope of the query. Only metrics with specified properties are included to the response. \n\nYou can set one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used. If several values are specified, the **OR** logic applies. \n\n* `unit(\"unit-1\",\"unit-2\")` \n* `tags(\"tag-1\",\"tag-2\")` \n* `dimensionKey(\"dimkey\")` You can specify only one value. The filtering applies only to dimensions that were written within the last 14 days.\n\nTo set several criteria, separate them with a comma (`,`). For example, `tags(\"feature\",\"cloud\"),unit(\"Percent\"),dimensionKey(\"location\")`. Only results matching **all** criteria are included in response. \n\nFor example, to list metrics that have the tags **feature** AND **cloud** with a unit of **Percent** OR **MegaByte** AND a dimension with a dimension key **location**, use this **metadataSelector**: `tags(\"feature\"),unit(\"Percent\",\"MegaByte\"),tags(\"cloud\"),dimensionKey(\"location\")`."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "47e25c83-f8f7-4091-9378-47ba459e7744",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "text",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "writtenSince",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "metadataSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"metrics\": [\n    {\n      \"metricId\": \"nostrud sunt\",\n      \"rootCauseRelevant\": false,\n      \"dduBillable\": false,\n      \"lastWritten\": 51504919,\n      \"impactRelevant\": true,\n      \"defaultAggregation\": {\n        \"parameter\": 62527900.67613959,\n        \"type\": \"median\"\n      },\n      \"dimensionDefinitions\": [\n        {\n          \"displayName\": \"dolore commodo ea deserunt aliqua\",\n          \"index\": 45856245,\n          \"key\": \"enim sed officia\",\n          \"name\": \"Ut veniam in do voluptate\",\n          \"type\": \"ENTITY\"\n        },\n        {\n          \"displayName\": \"in\",\n          \"index\": 72290802,\n          \"key\": \"sit i\",\n          \"name\": \"quis labore in\",\n          \"type\": \"NUMBER\"\n        }\n      ],\n      \"minimumValue\": -68499118.34662929,\n      \"maximumValue\": 96501419.93493247,\n      \"latency\": -86300684,\n      \"resolutionInfSupported\": true,\n      \"unitDisplayFormat\": \"binary\",\n      \"dimensionCardinalities\": [\n        {\n          \"estimate\": 10887194,\n          \"key\": \"ut consequat\",\n          \"relative\": 29214197.181089446\n        },\n        {\n          \"estimate\": 55030111,\n          \"key\": \"reprehenderit nulla sunt\",\n          \"relative\": -91914707.48024106\n        }\n      ],\n      \"tags\": [\n        \"culpa eu esse\",\n        \"Lorem\"\n      ],\n      \"entityType\": [\n        \"i\",\n        \"mollit cillum aliquip voluptate\"\n      ],\n      \"metricSelector\": \"eu officia\",\n      \"scalar\": true,\n      \"aggregationTypes\": [\n        \"count\",\n        \"min\"\n      ],\n      \"metricValueType\": {\n        \"type\": \"score\"\n      },\n      \"displayName\": \"non do magna Lorem\",\n      \"description\": \"do ad aute voluptate\",\n      \"transformations\": [\n        \"rate\",\n        \"names\"\n      ],\n      \"unit\": \"ut Excepteur\",\n      \"warnings\": [\n        \"ex amet eiusmod\",\n        \"sint culpa est id occaecat\"\n      ],\n      \"created\": 507088\n    },\n    {\n      \"metricId\": \"consectetur labore\",\n      \"rootCauseRelevant\": false,\n      \"dduBillable\": false,\n      \"lastWritten\": 84346151,\n      \"impactRelevant\": true,\n      \"defaultAggregation\": {\n        \"parameter\": -67018062.48954143,\n        \"type\": \"avg\"\n      },\n      \"dimensionDefinitions\": [\n        {\n          \"displayName\": \"ut dolor quis eiusmod\",\n          \"index\": 82594909,\n          \"key\": \"dolore incididunt dolor\",\n          \"name\": \"ullamco cupidatat minim tempor\",\n          \"type\": \"NUMBER\"\n        },\n        {\n          \"displayName\": \"aute anim ipsum\",\n          \"index\": 38919429,\n          \"key\": \"nulla aliq\",\n          \"name\": \"Exce\",\n          \"type\": \"NUMBER\"\n        }\n      ],\n      \"minimumValue\": 2619206.154624447,\n      \"maximumValue\": 35350225.34670237,\n      \"latency\": -23313499,\n      \"resolutionInfSupported\": true,\n      \"unitDisplayFormat\": \"binary\",\n      \"dimensionCardinalities\": [\n        {\n          \"estimate\": -83196432,\n          \"key\": \"anim ex elit\",\n          \"relative\": -32238947.76894483\n        },\n        {\n          \"estimate\": -99976860,\n          \"key\": \"adipisicing cup\",\n          \"relative\": -730436.627511695\n        }\n      ],\n      \"tags\": [\n        \"nulla n\",\n        \"nisi dolor id ullamco\"\n      ],\n      \"entityType\": [\n        \"quis sunt ad\",\n        \"eiu\"\n      ],\n      \"metricSelector\": \"nisi quis aliqua\",\n      \"scalar\": true,\n      \"aggregationTypes\": [\n        \"count\",\n        \"auto\"\n      ],\n      \"metricValueType\": {\n        \"type\": \"unknown\"\n      },\n      \"displayName\": \"sint anim\",\n      \"description\": \"minim qui adipisic\",\n      \"transformations\": [\n        \"smooth\",\n        \"rate\"\n      ],\n      \"unit\": \"tempor\",\n      \"warnings\": [\n        \"officia dolor amet\",\n        \"eiusmod id\"\n      ],\n      \"created\": -26993306\n    }\n  ],\n  \"nextPageKey\": \"ex et voluptate qui\",\n  \"totalCount\": 27019889,\n  \"warnings\": [\n    \"ad ullamco mollit laboris do\",\n    \"incididunt in laborum\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cabda94b-2362-4c5c-ad61-85169087acc0",
                            "name": "Syntax or validation error. **metricSelector** or **fields** have syntactic or semantic errors.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "text",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "writtenSince",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "metadataSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "ba1023ef-2a19-421f-87de-2698101fb3cc",
                            "name": "A metric has not been found.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "text",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "writtenSince",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "metadataSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "0cd77ae1-0a1c-4b8c-958a-01675dd31352",
                            "name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "text",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "writtenSince",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "metadataSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Acceptable",
                            "code": 406,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d62509dd-02f3-45c7-92ee-1677a6e8e254",
                    "name": "{metric Key}",
                    "item": [
                        {
                            "id": "806549fb-538d-4fcb-a27b-e9044295d8d9",
                            "name": "Gets the descriptor of the specified metric",
                            "request": {
                                "name": "Gets the descriptor of the specified metric",
                                "description": {},
                                "url": {
                                    "path": [
                                        "metrics",
                                        ":metricKey"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "metricKey",
                                            "description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "e82a2896-0e02-4c56-8b7a-8a42c67d17e0",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"metricId\": \"sed Lorem ipsum tempor\",\n  \"rootCauseRelevant\": false,\n  \"dduBillable\": false,\n  \"lastWritten\": 51248951,\n  \"impactRelevant\": true,\n  \"defaultAggregation\": {\n    \"parameter\": 54494905.652480304,\n    \"type\": \"min\"\n  },\n  \"dimensionDefinitions\": [\n    {\n      \"displayName\": \"labore\",\n      \"index\": -385880,\n      \"key\": \"enim elit\",\n      \"name\": \"adipisicing qui deserunt\",\n      \"type\": \"NUMBER\"\n    },\n    {\n      \"displayName\": \"reprehenderit\",\n      \"index\": 59569205,\n      \"key\": \"quis nostrud\",\n      \"name\": \"magna ipsum dolor\",\n      \"type\": \"OTHER\"\n    }\n  ],\n  \"minimumValue\": -26710238.201603517,\n  \"maximumValue\": 75941898.97673315,\n  \"latency\": -85725311,\n  \"resolutionInfSupported\": true,\n  \"unitDisplayFormat\": \"binary\",\n  \"dimensionCardinalities\": [\n    {\n      \"estimate\": -34130990,\n      \"key\": \"aute consectetur\",\n      \"relative\": -29026054.580461964\n    },\n    {\n      \"estimate\": -91324380,\n      \"key\": \"laboris reprehenderit\",\n      \"relative\": -26689472.49096641\n    }\n  ],\n  \"tags\": [\n    \"aute fugiat\",\n    \"aute cillum\"\n  ],\n  \"entityType\": [\n    \"ut quis\",\n    \"nostrud fugiat dolore\"\n  ],\n  \"metricSelector\": \"do officia\",\n  \"scalar\": true,\n  \"aggregationTypes\": [\n    \"auto\",\n    \"value\"\n  ],\n  \"metricValueType\": {\n    \"type\": \"error\"\n  },\n  \"displayName\": \"et dolor enim\",\n  \"description\": \"non\",\n  \"transformations\": [\n    \"rate\",\n    \"names\"\n  ],\n  \"unit\": \"consectetur adipisicing labore repreh\",\n  \"warnings\": [\n    \"ea\",\n    \"veniam\"\n  ],\n  \"created\": -3972534\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "eb9bfc7a-d924-459d-b6a3-9934f15e0592",
                                    "name": "A metric has not been found.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "777ee1b3-9315-4030-8201-6d50d79167fb",
                                    "name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Acceptable",
                                    "code": 406,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "fcbd1db7-f3bc-4e1e-bb9f-beb10204c72a",
                            "name": "Deletes the specified metric",
                            "request": {
                                "name": "Deletes the specified metric",
                                "description": {
                                    "content": "Deletion cannot be undone! You can't delete a metric if it has data points ingested within the last two hours.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "metrics",
                                        ":metricKey"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "metricKey",
                                            "description": "(Required) The key of the required metric. \n\n"
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "3511ff97-8e97-4009-98cd-9e7ce50c697d",
                                    "name": "Success. The deletion of the metric has been triggered.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\n"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Accepted",
                                    "code": 202,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "40803d41-7fe8-4f79-84f2-5ac9bb282ce1",
                                    "name": "Failed. The metric has been written within the last two hours.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\n"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "1277ea94-60ee-4268-afab-031049ecf13c",
                                    "name": "Failed. The metric cannot be found or the key cannot be parsed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\n"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "cf4975bc-5e6a-4b81-92c9-28148ab345e0",
                                    "name": "Failed. The deletion of metric dimensions failed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\n"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "bb4bf691-1236-493d-9e58-c91c13e6971c",
                    "name": "Gets data points of the specified metrics",
                    "request": {
                        "name": "Gets data points of the specified metrics",
                        "description": {
                            "content": "The following limits apply: \n* The amount of aggregated data points in the response is limited to 1,000 \n* The amount of series in the response is limited to 1,000 \n   * The amount of data points per series is limited to 10,080 (minutes of one week) \n   * The overall amount of data points is limited to 100,000 \n\nThe **dataPointCountRatio** specifies the ratio of queried data points divided by the maximum number of data points per metric that are allowed in a single query.\nThe **dimensionCountRatio** specifies the ratio of queried dimension tuples divided by the maximum number of dimension tuples allowed in a single query.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "metrics",
                                "query"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "metricSelector",
                                    "value": "<string>",
                                    "description": "Selects metrics for the query by their keys. You can select up to 10 metrics for one query.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\n\n\n If the metric key contains any symbols you must quote (`\"`) the key. The following characters inside of a quoted metric key must be escaped with a tilde (`~`):\n\n* Quotes (`\"`)\n* Tildes (`~`) \n\nFor example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents: Type \"APACHE\"** you must specify this selector: \n\n `\"ext:selfmonitoring.jmx.Agents: Type ~\"APACHE~\"\"` \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                },
                                {
                                    "disabled": false,
                                    "key": "resolution",
                                    "value": "<string>",
                                    "description": "The desired resolution of data points. \n\nYou can use one of the following options: \n* The desired amount of data points. This is the default option. This is a reference number of points, which is not necessarily equal to the number of the returned data points. \n* The desired timespan between data points. This is a reference timespan, which is not necessarily equal to the returned timespan. To use this option, specify the unit of the timespan. \n\nValid units for the timespan are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the default is **120 data points**.\n\nFor example: \n\n* Get data points which are 10 minutes apart: `resolution=10m` \n* Get data points which are 3 weeks apart: `resolution=3w`"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "Specifies the entity scope of the query. Only data points delivered by matched entities are included in response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\nUse the [`GET /metrics/{metricId}`](https://dt-url.net/6z23ifk) call to fetch the list of possible entity types for your metric. \n\nTo set a universal scope matching all entities, omit this parameter."
                                },
                                {
                                    "disabled": false,
                                    "key": "mzSelector",
                                    "value": "<string>",
                                    "description": "The management zone scope of the query. Only metrics data relating to the specified management zones are included to the response. \n\nYou can set one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used. If several values are specified, the **OR** logic applies. \n\n* `mzId(123,456)` \n* `mzName(\"name-1\",\"name-2\")` \nTo set several criteria, separate them with a comma (`,`). For example, `mzName(\"name-1\",\"name-2\"),mzId(1234)`. Only results matching **all** of the criteria are included in the response.For example, to list metrics that have the id **123** OR **234** AND the name **name-1** OR **name-2**, use this **mzSelector**: `mzId(123,234),mzName(\"name-1\",\"name-2\")."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "9153b314-3ca7-4564-8993-5ad75dba769b",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "query"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "resolution",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mzSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"resolution\": \"est\",\n  \"result\": [\n    {\n      \"data\": [\n        {\n          \"dimensionMap\": {\n            \"Excepteurad\": \"elit ullam\"\n          },\n          \"dimensions\": [\n            \"esse ipsum ut\",\n            \"dolor consequat ipsum\"\n          ],\n          \"timestamps\": [\n            49037949,\n            -33273654\n          ],\n          \"values\": [\n            84258118.28066227,\n            32104351.510156453\n          ]\n        },\n        {\n          \"dimensionMap\": {\n            \"reprehenderit_271\": \"deserunt voluptate commodo\",\n            \"ipsum_c_a\": \"esse dolor in consequat\",\n            \"Ut_1\": \"Ut\"\n          },\n          \"dimensions\": [\n            \"ut eu est\",\n            \"deserunt est eu aute in\"\n          ],\n          \"timestamps\": [\n            29465177,\n            93162114\n          ],\n          \"values\": [\n            -64819588.570104346,\n            76497565.60173348\n          ]\n        }\n      ],\n      \"dataPointCountRatio\": 37508300.67107102,\n      \"dimensionCountRatio\": -64951288.161258794,\n      \"metricId\": \"Duis qui ipsum pariatur\",\n      \"appliedOptionalFilters\": [\n        {\n          \"appliedTo\": [\n            \"in est\",\n            \"anim aliqua offi\"\n          ],\n          \"filter\": {\n            \"referenceInvocation\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"targetDimension\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"targetDimensions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"referenceString\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rollup\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"referenceValue\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"operands\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"appliedTo\": [\n            \"sit sint\",\n            \"cillum occaecat ex reprehenderit\"\n          ],\n          \"filter\": {\n            \"referenceInvocation\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"targetDimension\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"targetDimensions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"referenceString\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rollup\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"referenceValue\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"operands\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"warnings\": [\n        \"esse aliqua laboris\",\n        \"aute dolore esse proident\"\n      ]\n    },\n    {\n      \"data\": [\n        {\n          \"dimensionMap\": {\n            \"veniam_08\": \"cillum eu qui\",\n            \"fugiatc\": \"officia cillum aliqua ad\",\n            \"veniam_d\": \"qui occaecat enim irure\"\n          },\n          \"dimensions\": [\n            \"enim\",\n            \"se\"\n          ],\n          \"timestamps\": [\n            -9332861,\n            -29203660\n          ],\n          \"values\": [\n            24930242.369579017,\n            67841462.79103017\n          ]\n        },\n        {\n          \"dimensionMap\": {\n            \"exf1c\": \"reprehenderit minim cillum\",\n            \"sedd1\": \"Duis irure in cupidatat ullamco\",\n            \"dolord7\": \"amet elit non\",\n            \"in6c7\": \"id\"\n          },\n          \"dimensions\": [\n            \"est minim cillum aute laboris\",\n            \"nostrud mollit do et laboris\"\n          ],\n          \"timestamps\": [\n            -66559501,\n            85214374\n          ],\n          \"values\": [\n            -85842246.3094306,\n            48466951.34577495\n          ]\n        }\n      ],\n      \"dataPointCountRatio\": 9530137.843420893,\n      \"dimensionCountRatio\": 3229915.7932541817,\n      \"metricId\": \"aute id nostrud dolore n\",\n      \"appliedOptionalFilters\": [\n        {\n          \"appliedTo\": [\n            \"sunt m\",\n            \"nulla par\"\n          ],\n          \"filter\": {\n            \"referenceInvocation\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"targetDimension\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"targetDimensions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"referenceString\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rollup\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"referenceValue\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"operands\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"appliedTo\": [\n            \"fugiat dolo\",\n            \"Duis culpa aliquip dolore et\"\n          ],\n          \"filter\": {\n            \"referenceInvocation\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"targetDimension\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"targetDimensions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"referenceString\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rollup\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"referenceValue\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"operands\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"warnings\": [\n        \"Duis est dolore\",\n        \"officia nulla dolore consectetur\"\n      ]\n    }\n  ],\n  \"totalCount\": 64472783,\n  \"nextPageKey\": \"laborum\",\n  \"warnings\": [\n    \"dolor eiusmod Ut labore\",\n    \"Excepteur incididunt\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "65c62ca3-fb8f-4a95-8a91-71e02e041281",
                            "name": "Syntax or validation error. From and to parameters, entitySelector or resolution are incorrect individually or in their combined meaning.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "query"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "resolution",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mzSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "d2f114dc-29c0-4522-8562-32ddda5490db",
                            "name": "A metric has not been found.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "query"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "resolution",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mzSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "396b8e1e-d1ad-4d88-892b-a0885941e76d",
                            "name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "query"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "resolution",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mzSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Acceptable",
                            "code": 406,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f2e40fe6-a52d-4b28-bc4a-89140b67eaaf",
                    "name": "Pushes metric data points to Dynatrace",
                    "request": {
                        "name": "Pushes metric data points to Dynatrace",
                        "description": {},
                        "url": {
                            "path": [
                                "metrics",
                                "ingest"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "text/plain; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "<string>"
                        }
                    },
                    "response": [
                        {
                            "id": "e1820eb9-72d3-4792-bedd-6e7525951dd6",
                            "name": "The provided metric data points are accepted and will be processed in the background.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "server.cpu.temperature,cpu.id=0 42"
                                }
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7e9559ff-6877-4ef2-81f0-02980dccb09d",
                            "name": "Some data points are invalid. Valid data points are accepted and will be processed in the background.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "server.cpu.temperature,cpu.id=0 42"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "7757fa71-47ee-493f-9cf3-5c6241342523",
            "name": "network Zones",
            "item": [
                {
                    "id": "de931161-fe46-4cee-b048-106338b59e7a",
                    "name": "Lists all existing network zones",
                    "request": {
                        "name": "Lists all existing network zones",
                        "description": {},
                        "url": {
                            "path": [
                                "networkZones"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "68522ed9-9d0d-41d6-8778-3be48e7b7491",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "networkZones"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"networkZones\": [\n    {\n      \"alternativeZones\": [\n        \"esse dolore Ut\",\n        \"sit ullamco\"\n      ],\n      \"numOfOneAgentsUsing\": -27122829,\n      \"numOfConfiguredOneAgents\": 35547944,\n      \"numOfOneAgentsFromOtherZones\": 7821746,\n      \"numOfConfiguredActiveGates\": 79537743,\n      \"description\": \"anim amet consectetur Ut\",\n      \"id\": \"sed\"\n    },\n    {\n      \"alternativeZones\": [\n        \"dolore\",\n        \"mollit veniam pariatur\"\n      ],\n      \"numOfOneAgentsUsing\": -88332097,\n      \"numOfConfiguredOneAgents\": 8492661,\n      \"numOfOneAgentsFromOtherZones\": 97027510,\n      \"numOfConfiguredActiveGates\": -96043748,\n      \"description\": \"et Excepteur\",\n      \"id\": \"nulla labore sint\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e6874d4e-89a3-4499-836b-043408f39fc4",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "9a103b37-2611-4663-9252-704481b20383",
                            "name": "Gets parameters of the specified network zone",
                            "request": {
                                "name": "Gets parameters of the specified network zone",
                                "description": {},
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required network zone."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "b14d7de7-38a2-4753-bd9f-65c394866a52",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required network zone."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"alternativeZones\": [\n    \"enim\",\n    \"in consectetur commodo qui\"\n  ],\n  \"numOfOneAgentsUsing\": -91256894,\n  \"numOfConfiguredOneAgents\": 38424289,\n  \"numOfOneAgentsFromOtherZones\": 26002236,\n  \"numOfConfiguredActiveGates\": 13800412,\n  \"description\": \"ipsum aliqua\",\n  \"id\": \"consequat cupidatat irure Ut\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "cf65a6db-fd57-4043-80a9-737451f7d39a",
                            "name": "Updates an existing network zone or creates a new one",
                            "request": {
                                "name": "Updates an existing network zone or creates a new one",
                                "description": {
                                    "content": "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "638f3746-e1da-447f-a1c5-d17a2f291564",
                                    "name": "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"id\": \"proident laboris in\",\n  \"name\": \"sunt deserunt in labo\",\n  \"description\": \"laborum dolor\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "261d0e9d-293f-4b5f-b27a-dd3cb3ff7c73",
                                    "name": "Success. The network zone has been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "d1b5618c-d304-418e-9f5d-0b395e10472e",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "06e234a1-e71f-44f7-b947-4caefad975e4",
                            "name": "Deletes the specified network zone",
                            "request": {
                                "name": "Deletes the specified network zone",
                                "description": {
                                    "content": "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the network zone to be deleted."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "*/*"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "6a2b6ca2-5b72-4547-9809-7a14559b0bab",
                                    "name": "Deleted. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "2a103f5f-a709-4e54-93d2-3b980a9071dd",
                                    "name": "Failed. See error message in the response body for details.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "*/*"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "bfa19662-8235-4a3c-950a-d9a2103739d4",
                            "name": "Gets the statistics about hosts using the network zone",
                            "request": {
                                "name": "Gets the statistics about hosts using the network zone",
                                "description": {},
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id",
                                        "hostConnectionStatistics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "filter",
                                            "value": "all",
                                            "description": "Filters the resulting set of hosts: \n\n* `all`: All hosts using the zone. \n* `configuredButNotConnectedOnly`: Hosts from the network zone that use other zones. \n* `connectedAsAlternativeOnly`: Hosts that use the network zone as an alternative. \n* `connectedAsFailoverOnly`: Hosts from other zones that use the zone (not configured as an alternative) even though ActiveGates of higher priority are available. \n* `connectedAsFailoverWithoutOwnActiveGatesOnly`: Hosts from other zones that use the zone (not configured as an alternative) and **no** ActiveGates of higher priority are available. \n\nIf not set, `all` is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required network zone."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "7737ea1a-c82d-45d2-87d1-3a7c344a6bce",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id",
                                                "hostConnectionStatistics"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "filter",
                                                    "value": "all"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required network zone."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"hostsConnectedAsAlternative\": [\n    \"labore ullamco reprehenderit\",\n    \"occaecat reprehenderit Lorem sit\"\n  ],\n  \"hostsConnectedAsFailoverWithoutActiveGates\": [\n    \"eiusmod culpa Excepteur veniam\",\n    \"enim\"\n  ],\n  \"hostsConnectedAsFailover\": [\n    \"velit quis dolore sed\",\n    \"eu\"\n  ],\n  \"hostsConfiguredButNotConnected\": [\n    \"nisi fugiat officia pariatur\",\n    \"ullamco aliquip\"\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "17588fa6-7717-4c2e-9769-e73546033f83",
            "name": "network Zone Settings",
            "item": [
                {
                    "id": "5a5e9ba3-035f-4f69-9787-9f861680f846",
                    "name": "Gets the global configuration of network zones",
                    "request": {
                        "name": "Gets the global configuration of network zones",
                        "description": {},
                        "url": {
                            "path": [
                                "networkZoneSettings"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "8ac006b1-4f03-4d97-b906-0e228e1ccace",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "networkZoneSettings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"networkZonesEnabled\": false\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "5dfe983b-5d41-4cb3-b958-4e511f463c66",
                    "name": "Updates the global configuration of network zones",
                    "request": {
                        "name": "Updates the global configuration of network zones",
                        "description": {},
                        "url": {
                            "path": [
                                "networkZoneSettings"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "0725e5b0-1b19-4728-9342-7ae412f4de10",
                            "name": "Success. The global network zones configuration has been updated. Response doesn't have a body.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "networkZoneSettings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "e5b5dbf2-6c9f-4b88-a594-962dc316115b",
            "name": "tags",
            "item": [
                {
                    "id": "7a784b09-afd9-4c9c-a898-e57e5ec508af",
                    "name": "Gets a list of custom tags applied to the specified entities",
                    "request": {
                        "name": "Gets a list of custom tags applied to the specified entities",
                        "description": {
                            "content": "Automatically applied tags and imported tags are not included.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tags"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "(Required) Specifies the entities where you want to read tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "f21157aa-4540-4f63-84b7-0549fb9cd6a2",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"tags\": {\n    \"empty\": false\n  },\n  \"totalCount\": 93649654\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "5c498f94-b89d-4c7a-bf1c-eae29c432752",
                    "name": "Adds custom tags to the specified entities",
                    "request": {
                        "name": "Adds custom tags to the specified entities",
                        "description": {
                            "content": "All existing tags remain unaffected.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tags"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "(Required) Specifies the entities where you want to update tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "252fafb3-5206-4842-aa4b-df7e4c7d623d",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"matchedEntitiesCount\": 64887172,\n  \"appliedTags\": {\n    \"empty\": false\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a9ae881e-3a95-46a9-ad76-2b7d3a6ac7d9",
                    "name": "Deletes the specified tag from the specified entities",
                    "request": {
                        "name": "Deletes the specified tag from the specified entities",
                        "description": {},
                        "url": {
                            "path": [
                                "tags"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "key",
                                    "value": "<string>",
                                    "description": "(Required) The key of the tag to be deleted. \n\nIf **deleteAllWithKey** is `true`, then all tags with this key are deleted. Otherwise, only tags with exact match of key **and** value are deleted. \n\nFor value-only tags, specify the value here."
                                },
                                {
                                    "disabled": false,
                                    "key": "value",
                                    "value": "<string>",
                                    "description": "The value of the tag to be deleted. The value is ignored if **deleteAllWithKey** is `true`. \n\nFor value-only tags, specify the value in the **key** parameter."
                                },
                                {
                                    "disabled": false,
                                    "key": "deleteAllWithKey",
                                    "value": "<boolean>",
                                    "description": "* If `true`, all tags with the specified key are deleted, regardless of the value. \n* If `false`, only tags with exact match of key **and** value are deleted. \n\nIf not set, `false` is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "(Required) Specifies the entities where you want to delete tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "DELETE",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "dadb7fde-26e1-4b43-9d52-90b316353ede",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "key",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "value",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "deleteAllWithKey",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"matchedEntitiesCount\": 2\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "64a44ecc-716c-4fda-a714-4ed5892d77bf",
            "name": "logs",
            "item": [
                {
                    "id": "d5dbc237-27dc-4007-aecb-195e6dcbcecf",
                    "name": "Pushes log records to Dynatrace | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Pushes log records to Dynatrace | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "Ingested logs are stored in the indexed log storage. \n\nThis endpoint requires an ActiveGate with the **Log Analytics Collector** module enabled. \n\nThe maximum payload size of a single request is **5 MB**. Requests with a greater payload are rejected, and the API returns a 413 response code.\n\nIf the ingested payload is a JSON array, the maximum array size is **5000**. Requests with a greater payload are rejected, and the API returns a 413 response code.\n\n<br />**Log events per minute (SaaS)**: \n\nTrial tenants: 10k, paid one: 100k per minute by default. \n\nIf your log data stream within your cluster exceeds the limit, all log events above the limit are ignored. \n\n<br />**Log events per minute (Managed)**: \n\n10k/minute per cluster by default. \n\nIf your log data stream within your cluster exceeds the limit, all log events above the limit are ignored. \n\nIf you increase resources (RAM) in your nodes, you can increase the limit based on the cluster resources size using an API call or Cluster Management Console (CMC). \n\n<br />Refresh cluster limit using the API call \n\nSee [Update log events per cluster for Log Monitoring](https://dt-url.net/f123yeu). \n\n<br />Refresh cluster limit using Cluster Management Console (CMC) \n\n1. In the CMC, select **Environments** and the environment for which you wish to update the total log events per cluster. \n\n2. On the environment details page, in the **Cluster overload prevention settings** section, select the **Refresh cluster limit**. \n\n**High-cardinality attributes:** \n\nUnique log data attributes (high-cardinality attributes) such as `span_id` and `trace_id` generate unnecessarily excessive facet lists that may impact log viewer performance. Because of this, they aren't listed in log viewer facets. You can still use them in a log viewer advanced search query. \n\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "logs",
                                "ingest"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "<object>",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "67ab33b4-d6f0-4d11-bd8a-30e62c70c582",
                            "name": "Only a part of input events were ingested due to event size limits or JSON parsing issues.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"details\": {\n    \"code\": -90634012,\n    \"message\": \"fugiat se\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "91276afe-0599-434d-98dc-542583b19011",
                            "name": "Success. Response doesn't have a body.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "a21feabb-c106-4ace-b295-21ed56b17fca",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a2c914b8-07c9-448b-b0d4-becd568f1a77",
                            "name": "Failed. You can't add more logs to the storage, because you are out of [Davis Data Units](https://dt-url.net/dduLog) (DDU). Purchase additional DDUs.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Payment Required",
                            "code": 402,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3ced38dc-ffee-45dd-81ca-6ee46cf92bf3",
                            "name": "Failed. The requested resource doesn't exist. This may happen when no ActiveGate is available with the Log Analytics Collector module enabled.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "aa621ebf-d59b-4db2-8962-80fd5afdf541",
                            "name": "Failed. Request payload size is too big. This may happen when the payload byte size exceeds the limit or when the ingested payload is a JSON array with the size exceeding the limit.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Request Entity Too Large",
                            "code": 413,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "362b4269-8dec-4263-b876-5db02f1a9fc6",
                            "name": "Failed. Too Many Requests. This happens when log ingest is disabled.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ba7f891a-14b4-406d-8ee6-75e2dd5642a8",
                            "name": "Failed. The server either does not recognize the request method, or it lacks the ability to fulfil the request. May happen when indexed log storage is not enabled.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "97222953-a9ca-4189-978e-e302d11f9447",
                    "name": "Exports log records | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Exports log records | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "Returns the first *X* records (specified in the **pageSize** query parameter).\n\n Unlike the **search** API, this API does not split the result into slices and has no limit for the total number of records. Log records are sorted by the criteria specified in the **sort** query parameter.\n\n In order to fetch large amount of records (exceeding the **pageSize** value), one should repeat the **export** call with **nextPageKey** param.\n\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "logs",
                                "export"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "1000",
                                    "description": "The number of results per result page."
                                },
                                {
                                    "disabled": false,
                                    "key": "query",
                                    "value": "",
                                    "description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f). \n\nThe query has a limit of 20 relations (logical operators between simple expressions (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`) in simple expressions)."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "-timestamp",
                                    "description": "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first). \n\nWhen millisecond resolution provided by the timestamp is not enough, log records are sorted based on the order in which they appear in the log source (remote process writing to REST API endpoint or remote process from which logs are collected)."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "e1de8421-99f2-4e79-80f4-1e50e058e1af",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "export"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 78416037,\n  \"results\": [\n    {\n      \"additionalColumns\": {\n        \"velit772\": [\n          \"in aute cupidatat dolore commodo\",\n          \"sit culpa aliquip\"\n        ],\n        \"aliqua_d27\": [\n          \"minim ut tempor\",\n          \"consectetur ipsum do reprehenderit\"\n        ]\n      },\n      \"eventType\": \"LOG\",\n      \"timestamp\": -93332387,\n      \"status\": \"ERROR\",\n      \"content\": \"dolore officia nulla sit\"\n    },\n    {\n      \"additionalColumns\": {\n        \"labore_a5c\": [\n          \"ut aute\",\n          \"pariatur\"\n        ],\n        \"doc7a\": [\n          \"et sint cupida\",\n          \"ex Ut quis\"\n        ],\n        \"do_69b\": [\n          \"magna pariatur dolor non\",\n          \"officia elit et pariatur\"\n        ],\n        \"minim_ee7\": [\n          \"enim exercitation labore\",\n          \"anim\"\n        ],\n        \"ex99f\": [\n          \"elit\",\n          \"nostrud sint et dolore\"\n        ]\n      },\n      \"eventType\": \"K8S\",\n      \"timestamp\": 99919487,\n      \"status\": \"ERROR\",\n      \"content\": \"ut commodo laborum\"\n    }\n  ],\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"pageSize\": 83988842\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f4e44781-e91d-43c3-99d0-c4a593cb6149",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "export"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "14568212-f3ee-41bd-b257-2ed3c8c665c3",
                            "name": "Failed. The server either does not recognize the request method, or it lacks the ability to fulfill the request. May happen when Grail log storage is enabled.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "export"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "eec5fea1-5085-425c-952b-cfa4287fd109",
                    "name": "Gets aggregated log records | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets aggregated log records | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "Returns the aggregated number of occurrences of log values divided into time slots. \n\nIt is possible that the timeframe covered by results exceeds the specified timeframe. In that case the request returns fewer time slots than specified in the **timeBuckets** query parameter.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "logs",
                                "aggregate"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "query",
                                    "value": "",
                                    "description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f). \n\nThe query has a limit of 20 relations (logical operators between simple expressions (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`) in simple expressions)."
                                },
                                {
                                    "disabled": false,
                                    "key": "timeBuckets",
                                    "value": "1",
                                    "description": "The number of time slots in the result. \n\nThe query timeframe is divided equally into the specified number of slots. \n\nThe minimum length of a slot is 1 ms. \n\nIf not set, 1 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "maxGroupValues",
                                    "value": "10",
                                    "description": "The maximum number of values in each group. \n\nYou can get up to 100 values per group. \n\nIf not set, 10 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "groupBy",
                                    "value": "<string>",
                                    "description": "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values. \n\nUnique log data attributes (high-cardinality attributes) for example, `span_id` or `trace_id` cannot be used for grouping."
                                },
                                {
                                    "disabled": false,
                                    "key": "groupBy",
                                    "value": "<string>",
                                    "description": "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values. \n\nUnique log data attributes (high-cardinality attributes) for example, `span_id` or `trace_id` cannot be used for grouping."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "363cc628-6011-4bc4-ba36-5198f97fd692",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "aggregate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "timeBuckets",
                                            "value": "1"
                                        },
                                        {
                                            "key": "maxGroupValues",
                                            "value": "10"
                                        },
                                        {
                                            "key": "groupBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "groupBy",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"aggregationResult\": {\n    \"velitba\": {\n      \"officia_c3\": {\n        \"Excepteur_5\": 45807309\n      },\n      \"mollit5\": {\n        \"qui_8b\": 33969291,\n        \"consequat8\": -27945752,\n        \"do_d60\": 10320673\n      }\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "44dbf155-bcdb-40c0-bdd9-94051bd2f964",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "aggregate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "timeBuckets",
                                            "value": "1"
                                        },
                                        {
                                            "key": "maxGroupValues",
                                            "value": "10"
                                        },
                                        {
                                            "key": "groupBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "groupBy",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a0bb6bfc-82b1-45c4-ade1-8ffc50476727",
                    "name": "Reads log records | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Reads log records | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "Returns the first *X* records (specified in the **limit** query parameter). Log records are sorted by the criteria specified in the **sort** query parameter. \n\nIf the query is too large to be processed in a single request, it is divided into slices. In that case the first response contains the **nextSliceKey** cursor for the second slice. Use it in the **nextSliceKey** query parameter to obtain the second slice, which contains **nextSliceKey** cursor for the third slice, and so on. \n\nResults can be distributed unevenly between slices and some slices might be empty.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "logs",
                                "search"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The desired amount of log records. \n\nThe maximal allowed limit is 1000. \n\nIf not set, 1000 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "query",
                                    "value": "",
                                    "description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f). \n\nThe query has a limit of 20 relations (logical operators between simple expressions (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`) in simple expressions)."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "-timestamp",
                                    "description": "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first). \n\nWhen millisecond resolution provided by the timestamp is not enough, log records are sorted based on the order in which they appear in the log source (remote process writing to REST API endpoint or remote process from which logs are collected)."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextSliceKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next slice of results. You can find it in the **nextSliceKey** field of the previous response. \n\nThe first slice is always returned if you don't specify this parameter. \n\nIf this parameter is set, all other query parameters are ignored."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "20ef1dd6-22e2-4f25-8fe3-2362a41bf197",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "search"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        },
                                        {
                                            "key": "nextSliceKey",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"sliceSize\": -37615348,\n  \"nextSliceKey\": \"est\",\n  \"results\": [\n    {\n      \"additionalColumns\": {\n        \"in_4\": [\n          \"labore\",\n          \"tempor\"\n        ]\n      },\n      \"eventType\": \"K8S\",\n      \"timestamp\": 44501549,\n      \"status\": \"NONE\",\n      \"content\": \"dolore in deserunt\"\n    },\n    {\n      \"additionalColumns\": {\n        \"aliqua_3\": [\n          \"mini\",\n          \"tempor ex\"\n        ],\n        \"minimaf\": [\n          \"ipsum Lorem dolore ex\",\n          \"ullamco sed Excepteur\"\n        ]\n      },\n      \"eventType\": \"K8S\",\n      \"timestamp\": -91203990,\n      \"status\": \"WARN\",\n      \"content\": \"magna aute\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2b3b7184-c550-4e18-bd64-b0f19edc742d",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "search"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        },
                                        {
                                            "key": "nextSliceKey",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "3286961b-9e24-43fe-bd8d-96be66772055",
            "name": "Implementation of the OTLP/HTTP protocol for trace ingest.",
            "request": {
                "name": "Implementation of the OTLP/HTTP protocol for trace ingest.",
                "description": {
                    "content": "This endpoint can be targeted by OpenTelemetry exporters. Ingested traces are forwarded to the server.",
                    "type": "text/plain"
                },
                "url": {
                    "path": [
                        "otlp",
                        "v1",
                        "traces"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                },
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/x-protobuf"
                    }
                ],
                "method": "POST",
                "auth": {
                    "type": "apikey",
                    "apikey": [
                        {
                            "key": "key",
                            "value": "Authorization"
                        },
                        {
                            "key": "value",
                            "value": "Api-Token {{DT_TOKEN}}"
                        },
                        {
                            "key": "in",
                            "value": "header"
                        }
                    ]
                },
                "body": {
                    "mode": "raw",
                    "raw": "<byte>,<byte>"
                }
            },
            "response": [
                {
                    "id": "672c1e37-48a4-4601-b7f3-1a8b45af1594",
                    "name": "The request has been received and will be processed.",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "otlp",
                                "v1",
                                "traces"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Api-Token {{DT_TOKEN}}"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "<byte>,<byte>"
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "text/plain"
                        }
                    ],
                    "body": "",
                    "cookie": [],
                    "_postman_previewlanguage": "text"
                },
                {
                    "id": "6025a00c-451c-4df9-93a0-f1ca5c6c00f9",
                    "name": "The request could not be processed. This may happen if the message is malformed.",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "otlp",
                                "v1",
                                "traces"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Api-Token {{DT_TOKEN}}"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "<byte>,<byte>"
                        }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "text/plain"
                        }
                    ],
                    "body": "",
                    "cookie": [],
                    "_postman_previewlanguage": "text"
                },
                {
                    "id": "a6f89a3a-7acc-4d48-8833-70001a183ef8",
                    "name": "The request could not be processed due to an internal server error.",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "otlp",
                                "v1",
                                "traces"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Api-Token {{DT_TOKEN}}"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "<byte>,<byte>"
                        }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "text/plain"
                        }
                    ],
                    "body": "",
                    "cookie": [],
                    "_postman_previewlanguage": "text"
                },
                {
                    "id": "31b8efe2-c880-44ac-8288-879ca7e25671",
                    "name": "The service is currently unavailable. This may happen if the module is paused.",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "otlp",
                                "v1",
                                "traces"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Api-Token {{DT_TOKEN}}"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "<byte>,<byte>"
                        }
                    },
                    "status": "Service Unavailable",
                    "code": 503,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "text/plain"
                        }
                    ],
                    "body": "",
                    "cookie": [],
                    "_postman_previewlanguage": "text"
                }
            ],
            "event": [],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            }
        },
        {
            "id": "b5d99225-4618-4a74-99f7-cf7d5c27810c",
            "name": "active Gate Tokens",
            "item": [
                {
                    "id": "1fe97284-1eed-4f45-9c98-8afe8ed9443c",
                    "name": "Lists all available ActiveGate tokens | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Lists all available ActiveGate tokens | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGateTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of ActiveGate tokens in a single response payload. \n\nThe maximal allowed page size is 3000 and the minimal size is 100. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "4d6261fa-a35a-41f0-af8f-d70e5a9407d0",
                            "name": "Success. The response contains the list of ActiveGate tokens.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 1000,\n  \"pageSize\": 100,\n  \"nextPageKey\": \"AAAAAAAAAAAAAABOAAAAAAAAAAAAAAA6ACQAEAAAABgACgAITFdXQk1BRzYAAAhtZXRhZGF0YQB___-bf___m3iIYxfF7xVQvY72rwblQkcAAwAAAAAAAADHAAAAZA==\",\n  \"activeGateTokens\": {\n    \"name\": \"myToken\",\n    \"owner\": \"john.smith\",\n    \"creationDate\": \"2020-11-22T08:15:30.144Z\",\n    \"expirationDate\": \"2020-11-24T08:15:30.144Z\",\n    \"lastUsedDate\": \"2020-11-23T08:15:30.144Z\",\n    \"seedToken\": \"false\",\n    \"activeGateType\": \"ENVIRONMENT\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fc59a998-e23c-45dc-baf0-e5107fd74854",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "62c9503d-9abc-436e-8dda-9311989543f7",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e487077f-bb84-4b12-9ae3-34c78b43bebb",
                    "name": "Creates a new ActiveGate token | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Creates a new ActiveGate token | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "The newly created token will be owned by the same user who owns the token used for authentication of the call.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGateTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "79b4e514-da61-4a18-af57-2924da4d74be",
                            "name": "Success. The token has been created. The body of the response contains the token secret.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"id\": \"dt0g02.4KWZO5EF\",\n  \"token\": \"dt0g02.4KWZO5EF.XT47R5DRADJIZUFOX4UDNOKTSUSABGLN7XSMJG7UXHRXKNY4WLORH4OF4T75MG7E\",\n  \"expirationDate\": \"2020-11-24T08:15:30.144Z\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4a1d9fba-80ef-446a-8eff-0974ff4097bd",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "907e8672-f1da-4c57-b435-4a6e6f95d6d1",
                    "name": "{active Gate Token Identifier}",
                    "item": [
                        {
                            "id": "9feb6313-938d-48ec-a046-6e82ca880e69",
                            "name": "Gets metadata of an ActiveGate token | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Gets metadata of an ActiveGate token | maturity=EARLY_ADOPTER",
                                "description": {
                                    "content": "The token secret is **not** exposed.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "activeGateTokens",
                                        ":activeGateTokenIdentifier"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "activeGateTokenIdentifier",
                                            "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "eaa04c1f-f5ea-498c-80ba-8f565672a5c1",
                                    "name": "Success. The response contains the metadata of the tokens.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"activeGateType\": \"ENVIRONMENT\",\n  \"creationDate\": \"2020-11-22T08:15:30.144Z\",\n  \"id\": \"dt0g02.4KWZO5EF\",\n  \"name\": \"myToken\",\n  \"owner\": \"john.smith\",\n  \"expirationDate\": \"2020-11-24T08:15:30.144Z\",\n  \"lastUsedDate\": \"2020-11-23T08:15:30.144Z\",\n  \"seedToken\": false\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "508d7348-95e4-44b1-a713-0ab49c1be12e",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "b6e769ba-9445-4c70-bc2b-615abd19aad7",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "33946ee8-db2f-4488-84bf-ea3085403d5e",
                            "name": "Deletes an ActiveGate token | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Deletes an ActiveGate token | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGateTokens",
                                        ":activeGateTokenIdentifier"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "activeGateTokenIdentifier",
                                            "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "3e8d5312-8486-4b59-bc76-c495741acf91",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "4a2ae1c6-5436-427e-abba-d38b45ab4516",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "0ad28062-d215-40f0-9026-b589076a9858",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "8db0ff11-79e2-4fef-a973-b847d9b47bdb",
            "name": "api Tokens",
            "item": [
                {
                    "id": "28403068-b91c-4c56-8781-1c05dc6fb31d",
                    "name": "Lists all available API tokens",
                    "request": {
                        "name": "Lists all available API tokens",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "apiTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of API tokens in a single response payload. \n\nThe maximal allowed page size is 10000 and the minimal allowed page size is 100. \n\nIf not set, 200 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "apiTokenSelector",
                                    "value": "<string>",
                                    "description": "Filters the resulting sets of tokens. Only tokens matching the specified criteria are included into response. \n\nYou can set one or more of the following criteria: \n\n* Owner: `owner(\"value\")`. The user that owns the token. Case-sensitive.\n* Personal access token: `personalAccessToken(false)`. Set to `true` to include only personal access tokens or to `false` to include only API tokens.\n* Token scope: `scope(\"scope1\",\"scope2\")`. If several values are specified, the **OR** logic applies. \n\nTo set multiple criteria, separate them with commas (`,`). Only results matching **all** criteria are included into response."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Specifies the fields to be included in the response.\n\nThe following fields are included by default: \n\n* `id` \n* `name` \n* `enabled` \n* `owner` \n* `creationDate` \n\nTo remove fields from the response, specify them with the minus (`-`) operator as a comma-separated list (for example, `-creationDate,-owner`). \n\nYou can include additional fields: \n\n* `personalAccessToken` \n* `expirationDate` \n* `lastUsedDate` \n* `lastUsedIpAddress` \n* `modifiedDate` \n* `scopes` \n\n* `additionalMetadata` \n\nTo add fields to the response, specify them with the plus (`+`) operator as a comma-separated list (for example, `+expirationDate,+scopes`). You can combine adding and removing of fields (for example, `+scopes,-creationDate`). \n\nAlternatively, you can define the desired set of fields in the response. Specify the required fields as a comma-separated list, without operators (for example, `creationDate,expirationDate,owner`). The ID is always included in the response. \n\nThe **fields** string must be URL-encoded."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "Filters tokens based on the last usage time. \nThe start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "Filters tokens based on the last usage time. \nThe end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "-creationDate",
                                    "description": "The sort order of the token list. \n\nYou can sort by the following properties with a sign prefix for the sort order: \n\n * `name`: token name (`+` a...z or `-` z...a) \n * `lastUsedDate` last used (`+` never used tokens first `-` most recently used tokens first) \n * `creationDate` (`+` oldest tokens first `-` newest tokens first) \n * `expirationDate` (`+` tokens that expire soon first `-` unlimited tokens first) \n * `modifiedDate` last modified (`+` never modified tokens first `-` most recently modified tokens first) \n\nIf no prefix is set, + is used. \n\nIf not set, tokens are sorted by creation date with newest first."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "3510d339-8c43-43eb-aecb-8ad32d67dbde",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "apiTokenSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-creationDate"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -97906581,\n  \"apiTokens\": [\n    {\n      \"lastUsedIpAddress\": \"34.197.2.44\",\n      \"modifiedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"additionalMetadata\": {\n        \"dashboardId\": \"82402bab-7370-4359-924d-88ed13c8919a\"\n      },\n      \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n      \"personalAccessToken\": true,\n      \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n      \"enabled\": true,\n      \"scopes\": [\n        \"metrics.read\",\n        \"metrics.read\"\n      ],\n      \"name\": \"myToken\",\n      \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n      \"owner\": \"john.smith\"\n    },\n    {\n      \"lastUsedIpAddress\": \"34.197.2.44\",\n      \"modifiedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"additionalMetadata\": {\n        \"dashboardId\": \"82402bab-7370-4359-924d-88ed13c8919a\"\n      },\n      \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n      \"personalAccessToken\": true,\n      \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n      \"enabled\": true,\n      \"scopes\": [\n        \"metrics.read\",\n        \"metrics.read\"\n      ],\n      \"name\": \"myToken\",\n      \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n      \"owner\": \"john.smith\"\n    }\n  ],\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"pageSize\": 83624038\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5fdb2ba0-4aef-4c13-880f-44d8e3124b24",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "apiTokenSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-creationDate"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b81e4488-211c-44dd-9d8a-63e74856337a",
                    "name": "Creates a new API token",
                    "request": {
                        "name": "Creates a new API token",
                        "description": {
                            "content": "The newly created token will be owned by the same user who owns the token used for authentication of the call.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "apiTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "aa447f73-53ee-44fa-82d8-ff30677eb619",
                            "name": "Success. The token has been created. The body of the response contains the token secret.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n  \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\",\n  \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b7d9e54e-672c-46f9-b9d7-f93ce3dc40f3",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "33ac969e-49f3-4903-94d9-10e716a50a20",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "7f581424-dedc-4dd1-a32b-a5ecaf5d580c",
                            "name": "Gets API token metadata by token ID",
                            "request": {
                                "name": "Gets API token metadata by token ID",
                                "description": {
                                    "content": "The token secret is **not** exposed.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the token."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "40f2fdac-b081-4d32-86e6-f659fb014b1c",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"lastUsedIpAddress\": \"34.197.2.44\",\n  \"modifiedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"additionalMetadata\": {\n    \"dashboardId\": \"82402bab-7370-4359-924d-88ed13c8919a\"\n  },\n  \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n  \"personalAccessToken\": true,\n  \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n  \"enabled\": true,\n  \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n  ],\n  \"name\": \"myToken\",\n  \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n  \"owner\": \"john.smith\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "4f65d622-0173-4918-8e27-7d340eb9d500",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "f4daf560-6488-4b52-ad3a-e0f3dc88d470",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "53be418f-784e-4522-804f-25387944be10",
                            "name": "Updates an API token",
                            "request": {
                                "name": "Updates an API token",
                                "description": {},
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "527c7a57-4786-437c-bc97-28b3e82c3887",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "fdde11be-4740-4a93-b75c-7a082be8e29e",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "ba4c7d93-e3b4-4411-8cd1-3d159ac88a6f",
                            "name": "Deletes an API token",
                            "request": {
                                "name": "Deletes an API token",
                                "description": {},
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "6b86d1b5-6271-4d7e-a0c5-577d1247b051",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "0896c2a3-9b7d-4a2d-8778-becaf698d18a",
                                    "name": "Failed. You can't delete the token you're using for authentication of the request.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "81f8808c-97b0-427a-a836-b0b5624ab795",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "7e4354e0-c788-47dd-b506-512c08f95b44",
                    "name": "Gets API token metadata by token secret",
                    "request": {
                        "name": "Gets API token metadata by token secret",
                        "description": {},
                        "url": {
                            "path": [
                                "apiTokens",
                                "lookup"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "d8a66926-88dd-43eb-8b9c-d3537c6fb116",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        "lookup"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"lastUsedIpAddress\": \"34.197.2.44\",\n  \"modifiedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"additionalMetadata\": {\n    \"dashboardId\": \"82402bab-7370-4359-924d-88ed13c8919a\"\n  },\n  \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n  \"personalAccessToken\": true,\n  \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n  \"enabled\": true,\n  \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n  ],\n  \"name\": \"myToken\",\n  \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n  \"owner\": \"john.smith\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a979d1e3-d28c-430b-b225-4d50af7aeb0f",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        "lookup"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "d5ba07fb-306a-4913-a7b1-429d25b149d4",
            "name": "auditlogs",
            "item": [
                {
                    "id": "0255def0-6a82-4ccb-b9e6-4c7c7719d846",
                    "name": "Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "auditlogs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of log entries in a single response payload. \n\nThe maximal allowed page size is 5000. \n\nIf not set, 1000 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "filter",
                                    "value": "<string>",
                                    "description": "Filters the audit log. You can use the following criteria: \n* User: `user(\"userIdentification\")`. The `EQUALS` operator applies. \n* Event type: `eventType(\"value\")`. The `EQUALS` operator applies. \n* Category of a logged operation: `category(\"value\")`. The `EQUALS` operator applies. \n* Entity ID: `entityId(\"id\")`. The `CONTAINS` operator applies. \n\nFor each criterion, you can specify multiple alternatives with comma-separated values. In this case, the OR logic applies. For example, `eventType(\"CREATE\",\"UPDATE\")` means eventType can be \"CREATE\" or \"UPDATE\". \n\nYou can specify multiple comma-separated criteria, such as `eventType(\"CREATE\",\"UPDATE\"),category(\"CONFIG\")`. Only results matching **all** criteria are included in response. \n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes: \n* Tilde `~` \n* Quote `\"`"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "-timestamp",
                                    "description": "The sorting of audit log entries: \n* `timestamp`: Oldest first. \n* `-timestamp`: Newest first. \n\nIf not set, the newest first sorting is applied."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "0992ea26-2234-44ae-9633-d644252f5b04",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "auditlogs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 17740696,\n  \"pageSize\": 23276920,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"auditLogs\": [\n    {\n      \"category\": \"MANUAL_TAGGING_SERVICE\",\n      \"environmentId\": \"fugiat id anim\",\n      \"eventType\": \"POST\",\n      \"logId\": \"in ve\",\n      \"success\": false,\n      \"timestamp\": -81521756,\n      \"user\": \"pariatur\",\n      \"userType\": \"REQUEST_ID\",\n      \"entityId\": \"Ut laborum cupidatat Duis minim\",\n      \"userOrigin\": \"Ut sed incididunt aliquip\",\n      \"message\": \"adipisicing tempor ipsum eu cillum\",\n      \"patch\": {}\n    },\n    {\n      \"category\": \"CONFIG\",\n      \"environmentId\": \"fugiat ad aliquip sint occaecat\",\n      \"eventType\": \"LOGIN\",\n      \"logId\": \"enim est fugiat c\",\n      \"success\": false,\n      \"timestamp\": -21612532,\n      \"user\": \"exercitation ex consectetur\",\n      \"userType\": \"PUBLIC_TOKEN_IDENTIFIER\",\n      \"entityId\": \"ea deserunt commodo\",\n      \"userOrigin\": \"sed \",\n      \"message\": \"in sit ad\",\n      \"patch\": {}\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "de677f74-97aa-4c35-bca0-1333000a40d0",
                    "name": "Gets the specified entry of the audit log | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets the specified entry of the audit log | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "auditlogs",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "id",
                                    "description": "(Required) The ID of the required log entry."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "0a4a16e2-797c-44bc-ae66-aa1b645f6be1",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "auditlogs",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required log entry."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"category\": \"TOKEN\",\n  \"environmentId\": \"esse voluptate enim in do\",\n  \"eventType\": \"POST\",\n  \"logId\": \"laboris dolor no\",\n  \"success\": true,\n  \"timestamp\": -27312813,\n  \"user\": \"ipsum in tempor\",\n  \"userType\": \"TOKEN_HASH\",\n  \"entityId\": \"sed ut\",\n  \"userOrigin\": \"Excepteur\",\n  \"message\": \"sint aliquip proident\",\n  \"patch\": {}\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8fc6e170-9461-479b-b430-6a2c58bd1648",
                            "name": "Failed. Invalid ID format.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "auditlogs",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required log entry."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "23a6ec02-5912-4390-9b8e-1831940717c0",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "auditlogs",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required log entry."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "8f7f0986-cb97-4163-bb5c-feba0b0d6cc5",
            "name": "Provides advice for security problems. | maturity=EARLY_ADOPTER",
            "request": {
                "name": "Provides advice for security problems. | maturity=EARLY_ADOPTER",
                "description": {
                    "content": "You can narrow down the output by providing the management zone and pagination. If you specify a management zone, only problems originating from that zone are included to the request.",
                    "type": "text/plain"
                },
                "url": {
                    "path": [
                        "davis",
                        "securityAdvices"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [
                        {
                            "disabled": false,
                            "key": "managementZoneFilter",
                            "value": "<string>",
                            "description": "To specify management zones, use one of the options listed below. For each option you can specify multiple comma-separated values. If several values are specified, the **OR** logic applies. All values are case-sensitive and must be quoted. \n\n* Management zone ID: ids(\"mzId-1\", \"mzId-2\"). \n* Management zone names: names(\"mz-1\", \"mz-2\"). \n\nYou can specify several comma-separated criteria (for example, `names(\"myMz\"),ids(\"9130632296508575249\")`)."
                        },
                        {
                            "disabled": false,
                            "key": "nextPageKey",
                            "value": "<string>",
                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                        },
                        {
                            "disabled": false,
                            "key": "pageSize",
                            "value": "<long>",
                            "description": "The amount of security advices in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 5 is used."
                        }
                    ],
                    "variable": []
                },
                "header": [
                    {
                        "key": "Accept",
                        "value": "application/json; charset=utf-8"
                    }
                ],
                "method": "GET",
                "auth": {
                    "type": "apikey",
                    "apikey": [
                        {
                            "key": "key",
                            "value": "Authorization"
                        },
                        {
                            "key": "value",
                            "value": "Api-Token {{DT_TOKEN}}"
                        },
                        {
                            "key": "in",
                            "value": "header"
                        }
                    ]
                }
            },
            "response": [
                {
                    "id": "0efb82b5-347e-41c2-aeda-30606b215436",
                    "name": "Success",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "davis",
                                "securityAdvices"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "managementZoneFilter",
                                    "value": "<string>"
                                },
                                {
                                    "key": "nextPageKey",
                                    "value": "<string>"
                                },
                                {
                                    "key": "pageSize",
                                    "value": "<long>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Api-Token {{DT_TOKEN}}"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        }
                    ],
                    "body": "{\n  \"totalCount\": 20121898,\n  \"pageSize\": -5864585,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"advices\": [\n    {\n      \"name\": \"pariatur est\",\n      \"vulnerableComponent\": \"anim sit cillum\",\n      \"technology\": \"DOTNET\",\n      \"adviceType\": \"UPGRADE\",\n      \"critical\": [\n        \"irure incididunt pariatur\",\n        \"c\"\n      ],\n      \"high\": [\n        \"Ut \",\n        \"officia\"\n      ],\n      \"medium\": [\n        \"ea\",\n        \"fugiat l\"\n      ],\n      \"low\": [\n        \"Duis Excepteur\",\n        \"id\"\n      ],\n      \"none\": [\n        \"amet do ve\",\n        \"magna labore sint minim\"\n      ]\n    },\n    {\n      \"name\": \"proident ips\",\n      \"vulnerableComponent\": \"labore culpa magna\",\n      \"technology\": \"PHP\",\n      \"adviceType\": \"UPGRADE\",\n      \"critical\": [\n        \"ut mollit nulla\",\n        \"mollit adipisicing dolor occaecat\"\n      ],\n      \"high\": [\n        \"reprehenderit Ut\",\n        \"Lorem\"\n      ],\n      \"medium\": [\n        \"ex est in id\",\n        \"velit Excepteur incididunt\"\n      ],\n      \"low\": [\n        \"exercitation\",\n        \"dolor ipsum\"\n      ],\n      \"none\": [\n        \"eu cillum\",\n        \"ea aute in\"\n      ]\n    }\n  ]\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                }
            ],
            "event": [],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            }
        },
        {
            "id": "ac3e3677-e702-435d-826c-2af0559790e5",
            "name": "security Problems",
            "item": [
                {
                    "id": "b32decab-d84c-4104-a744-7804d8d1378d",
                    "name": "Lists all security problems | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Lists all security problems | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "securityProblems"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of security problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "securityProblemSelector",
                                    "value": "<string>",
                                    "description": "Defines the scope of the query. Only security problems matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Status: `status(\"value\")`. Find the possible values in the description of the **status** field of the response. If not set, all security problems are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Risk level: `riskLevel(\"value\")`. The Davis risk level. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum risk score: `minRiskScore(\"5.5\")`. The Davis minimum risk score. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum risk score: `maxRiskScore(\"5.5\")`. The Davis maximum risk score. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* Base risk level: `baseRiskLevel(\"value\")`. The Base risk level from the CVSS. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum base risk score: `minBaseRiskScore(\"5.5\")`. The minimum base risk score from the CVSS. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum base risk score: `maxBaseRiskScore(\"5.5\")`. The maximum base risk score from the CVSS. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* External vulnerability ID contains: `externalVulnerabilityIdContains(\"id-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* External vulnerability ID: `externalVulnerabilityId(\"id-1\",\"id-2\")`. \n* CVE ID: `cveId(\"id\")`.\n* Risk assessment `riskAssessment(\"value-1\",\"value-2\")` Possible values are `EXPOSED`, `SENSITIVE`, `EXPLOIT`, `VULNERABLE_FUNCTION_IN_USE` and `ACCURACY_REDUCED`.\n* Related host ID: `relatedHostIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related host name: `relatedHostNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related host name contains: `relatedHostNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes cluster ID: `relatedKubernetesClusterIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes cluster name: `relatedKubernetesClusterNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes cluster name contains: `relatedKubernetesClusterNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes workload ID: `relatedKubernetesWorkloadIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes workload name: `relatedKubernetesWorkloadNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes workload name contains: `relatedKubernetesWorkloadNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Management zone ID: `managementZoneIds(\"mzId-1\",\"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\",\"name-2\")`. Values are case-sensitive.\n* Affected process group ID: `affectedPgIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Affected process group name: `affectedPgNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Affected process group name contains: `affectedPgNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Vulnerable component ID: `vulnerableComponentIds(\"componentId-1\", \"componentId-2\")`. Specify component IDs here.\n* Vulnerable component name: `vulnerableComponentNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Vulnerable component name contains: `vulnerableComponentNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Host tags: `hostTags(\"hostTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Process group tags: `pgTags(\"pgTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Process group instance tags: `pgiTags(\"pgiTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Tags: `tags(\"tag-1\")`. The `CONTAINS` operator is used. This selector picks hosts, process groups, and process group instances at the same time. Maximum value length is 48 characters.\n* Display ID: `displayIds(\"S-1234\",\"S-5678\")`. The `EQUALS` operator is used.\n* Technology: `technology(\"technology-1\",\"technology-2\")`. Find the possible values in the description of the **technology** field of the response. The `EQUALS` operator is used.\n* Vulnerability type: `vulnerabilityType(\"type-1\",\"type-2\")`. Possible values are `THIRD_PARTY`, `CODE_LEVEL`, `RUNTIME`.\n\nRisk score and risk category are mutually exclusive (cannot be used at the same time).\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "<string>",
                                    "description": "Specifies one or more fields for sorting the security problem list. Multiple fields can be concatenated using a comma (`,`) as a separator (e.g. `+status,-timestamp`).\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n* `status`: The security problem status (`+` open first or `-` resolved first) \n* `muted`: The security problem mute state (`+` unmuted first or `-` muted first) \n* `technology`: The security problem technology \n* `firstSeenTimestamp`: The timestamp of the first occurrence of the security problem (`+` new problems first or `-` old problems first) \n* `lastUpdatedTimestamp`: The timestamp of the last update of the security problem (`+` recently updated problems first or `-`  earlier updated problems first)\n* `securityProblemId`: The auto-generated ID of the security problem (`+` lower number first or `-` higher number first) \n* `externalVulnerabilityId`: The ID of the external vulnerability (`+` lower number first or `-` higher number first) \n* `displayId`: The display ID (`+` lower number first or `-` higher number first) \n* `riskAssessment.riskScore`: The Davis security score (`+` lower score first or `-` higher score first) \n* `riskAssessment.riskLevel`: The Davis security level (`+` lower level first or `-` higher level first) \n* `riskAssessment.exposure`: Whether the problem is exposed to the internet \n* `riskAssessment.dataAssets`: Whether data assets are affected \n* `riskAssessment.vulnerableFunctionUsage`: Whether vulnerable functions are used \n* `riskAssessment.assessmentAccuracy`: The assessments accuracy (`+` less accuracy first or `-` more accuracy first) \n\nIf no prefix is set, `+` is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "A list of additional security problem properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "b789ddbc-1677-4466-8d4b-5ceb0bda48f4",
                            "name": "Success. The response contains the list of security problems.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "securityProblems"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "securityProblemSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 28638219,\n  \"pageSize\": 4052464,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"securityProblems\": [\n    {\n      \"securityProblemId\": \"officia pariatur Duis\",\n      \"displayId\": \"qui dolor\",\n      \"status\": \"OPEN\",\n      \"muted\": true,\n      \"externalVulnerabilityId\": \"c\",\n      \"vulnerabilityType\": \"THIRD_PARTY\",\n      \"title\": \"non adipisicing Ut ea\",\n      \"packageName\": \"nisi aliquip\",\n      \"url\": \"ut culpa sit\",\n      \"technology\": \"PHP\",\n      \"firstSeenTimestamp\": -53760516,\n      \"lastUpdatedTimestamp\": 24216142,\n      \"riskAssessment\": {\n        \"riskLevel\": \"NONE\",\n        \"riskScore\": 93204290.55791318,\n        \"riskVector\": \"veniam\",\n        \"baseRiskLevel\": \"CRITICAL\",\n        \"baseRiskScore\": 36603497.21695098,\n        \"baseRiskVector\": \"mollit in veniam\",\n        \"exposure\": \"NOT_AVAILABLE\",\n        \"dataAssets\": \"NOT_AVAILABLE\",\n        \"publicExploit\": \"NOT_AVAILABLE\",\n        \"vulnerableFunctionUsage\": \"NOT_AVAILABLE\",\n        \"assessmentAccuracy\": \"NOT_AVAILABLE\"\n      },\n      \"managementZones\": [\n        {\n          \"name\": \"nulla cupidatat eiusmod\",\n          \"id\": \"officia dolor id\"\n        },\n        {\n          \"name\": \"nostrud officia eiusmod\",\n          \"id\": \"incididunt ex\"\n        }\n      ],\n      \"cveIds\": [\n        \"nisi des\",\n        \"cillum in\"\n      ]\n    },\n    {\n      \"securityProblemId\": \"pariatur ex\",\n      \"displayId\": \"magna adipisicing\",\n      \"status\": \"RESOLVED\",\n      \"muted\": true,\n      \"externalVulnerabilityId\": \"deserunt enim do\",\n      \"vulnerabilityType\": \"CODE_LEVEL\",\n      \"title\": \"est do exercita\",\n      \"packageName\": \"pariatur Duis\",\n      \"url\": \"occaecat culpa\",\n      \"technology\": \"NODE_JS\",\n      \"firstSeenTimestamp\": -37817993,\n      \"lastUpdatedTimestamp\": 13507004,\n      \"riskAssessment\": {\n        \"riskLevel\": \"MEDIUM\",\n        \"riskScore\": 94297857.21025148,\n        \"riskVector\": \"dolor consectetur aliquip aute esse\",\n        \"baseRiskLevel\": \"HIGH\",\n        \"baseRiskScore\": -63601006.50930169,\n        \"baseRiskVector\": \"Excepteur adipisicing\",\n        \"exposure\": \"NOT_DETECTED\",\n        \"dataAssets\": \"NOT_AVAILABLE\",\n        \"publicExploit\": \"NOT_AVAILABLE\",\n        \"vulnerableFunctionUsage\": \"IN_USE\",\n        \"assessmentAccuracy\": \"NOT_AVAILABLE\"\n      },\n      \"managementZones\": [\n        {\n          \"name\": \"nisi ut voluptate\",\n          \"id\": \"nostrud officia\"\n        },\n        {\n          \"name\": \"commodo minim pariatur cupidatat dolore\",\n          \"id\": \"amet ut in mollit\"\n        }\n      ],\n      \"cveIds\": [\n        \"veniam minim non exercitation\",\n        \"dolor ipsum irure eiusmod\"\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "33fc2c66-6501-42ad-a42a-9b1618d66c8c",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "0b27b8c5-f0c2-4e54-a659-335da2c80cb4",
                            "name": "Gets parameters of a security problem | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Gets parameters of a security problem | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "fields",
                                            "value": "<string>",
                                            "description": "A list of additional security problem properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n* `description`: The description of the vulnerability.\n* `events`: The security problem's last 10 events within the last 365 days, sorted from newest to oldest.\n* `vulnerableComponents`: A list of vulnerable components of the security problem. \n* `affectedEntities`: A list of affected entities of the security problem. \n* `exposedEntities`: A list of exposed entities of the security problem. \n* `reachableDataAssets`: A list of data assets reachable by affected entities of the security problem. \n* `relatedEntities`: A list of related entities of the security problem. \n* `relatedContainerImages`: A list of related container images of the security problem. \n* `relatedAttacks`: A list of attacks detected on the exposed security problem. \n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "bdd780c8-a521-4cf2-b206-a9288e63a8ee",
                                    "name": "Success. The response contains parameters of the security problem.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "fields",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"securityProblemId\": \"in et sunt consequat\",\n  \"displayId\": \"sed deserunt Ut in\",\n  \"status\": \"OPEN\",\n  \"muted\": false,\n  \"externalVulnerabilityId\": \"amet dolore do\",\n  \"vulnerabilityType\": \"CODE_LEVEL\",\n  \"title\": \"aliqua cu\",\n  \"packageName\": \"laborum Ut adipisicing\",\n  \"url\": \"est amet sed\",\n  \"description\": \"et eiusmod adipisicing esse Lorem\",\n  \"technology\": \"NODE_JS\",\n  \"firstSeenTimestamp\": 67681282,\n  \"lastUpdatedTimestamp\": 17157063,\n  \"riskAssessment\": {\n    \"riskLevel\": \"HIGH\",\n    \"riskScore\": -76553787.60060328,\n    \"riskVector\": \"Lorem Excepteur dolore\",\n    \"baseRiskLevel\": \"HIGH\",\n    \"baseRiskScore\": -10175804.804754168,\n    \"baseRiskVector\": \"aliqua eu officia ex\",\n    \"exposure\": \"NOT_AVAILABLE\",\n    \"dataAssets\": \"NOT_DETECTED\",\n    \"publicExploit\": \"AVAILABLE\",\n    \"vulnerableFunctionUsage\": \"NOT_IN_USE\",\n    \"assessmentAccuracy\": \"NOT_AVAILABLE\"\n  },\n  \"managementZones\": [\n    {\n      \"name\": \"ea in in aliqua labore\",\n      \"id\": \"ex ullamco fugiat\"\n    },\n    {\n      \"name\": \"officia veniam\",\n      \"id\": \"fugiat ex Lorem\"\n    }\n  ],\n  \"cveIds\": [\n    \"ea Lorem qui esse\",\n    \"incididunt magna\"\n  ],\n  \"events\": [\n    {\n      \"timestamp\": 77053922,\n      \"reason\": \"SECURITY_PROBLEM_CREATED\",\n      \"riskAssessmentSnapshot\": {\n        \"numberOfAffectedEntities\": -56660686,\n        \"numberOfReachableDataAssets\": 21338484,\n        \"publicExploit\": \"NOT_AVAILABLE\",\n        \"exposure\": \"NOT_DETECTED\",\n        \"vulnerableFunctionUsage\": \"NOT_AVAILABLE\"\n      },\n      \"muteState\": {\n        \"user\": \"velit dolore\",\n        \"reason\": \"AFFECTED\",\n        \"comment\": \"et occaecat\"\n      }\n    },\n    {\n      \"timestamp\": 53292006,\n      \"reason\": \"SECURITY_PROBLEM_REOPENED\",\n      \"riskAssessmentSnapshot\": {\n        \"numberOfAffectedEntities\": 83811157,\n        \"numberOfReachableDataAssets\": -33930829,\n        \"publicExploit\": \"NOT_AVAILABLE\",\n        \"exposure\": \"PUBLIC_NETWORK\",\n        \"vulnerableFunctionUsage\": \"NOT_IN_USE\"\n      },\n      \"muteState\": {\n        \"user\": \"voluptate dolor laborum id\",\n        \"reason\": \"FALSE_POSITIVE\",\n        \"comment\": \"ullamco qui nostr\"\n      }\n    }\n  ],\n  \"vulnerableComponents\": [\n    {\n      \"id\": \"eu ea fugiat consequat\",\n      \"displayName\": \"dolore consequat in aliqua\",\n      \"fileName\": \"officia ipsum non laboris deserunt\",\n      \"numberOfAffectedEntities\": 3922011,\n      \"affectedEntities\": [\n        \"veniam esse ad nulla labore\",\n        \"enim incididunt elit\"\n      ]\n    },\n    {\n      \"id\": \"eu tempor velit irure\",\n      \"displayName\": \"tempor do\",\n      \"fileName\": \"voluptate dolor Excepteur laborum\",\n      \"numberOfAffectedEntities\": 54791735,\n      \"affectedEntities\": [\n        \"nostrud nisi aliquip aute incididunt\",\n        \"nisi et aute irure\"\n      ]\n    }\n  ],\n  \"affectedEntities\": [\n    \"in Lorem enim\",\n    \"aliqua Excepteur\"\n  ],\n  \"exposedEntities\": [\n    \"commodo quis et ex de\",\n    \"qui l\"\n  ],\n  \"reachableDataAssets\": [\n    \"qui c\",\n    \"anim\"\n  ],\n  \"relatedEntities\": {\n    \"applications\": [\n      {\n        \"id\": \"Excepteur proiden\",\n        \"numberOfAffectedEntities\": 84262805,\n        \"affectedEntities\": [\n          \"sit cillum cupidatat\",\n          \"Lorem mollit magn\"\n        ]\n      },\n      {\n        \"id\": \"pariatur dolor mollit ea\",\n        \"numberOfAffectedEntities\": 92920240,\n        \"affectedEntities\": [\n          \"in do ex anim\",\n          \"eiusmod do cons\"\n        ]\n      }\n    ],\n    \"services\": [\n      {\n        \"id\": \"amet minim\",\n        \"numberOfAffectedEntities\": -65476464,\n        \"affectedEntities\": [\n          \"in laboris cillu\",\n          \"laborum nostrud aliquip non\"\n        ],\n        \"exposure\": \"PUBLIC_NETWORK\"\n      },\n      {\n        \"id\": \"sunt ullamco dolor\",\n        \"numberOfAffectedEntities\": 3887631,\n        \"affectedEntities\": [\n          \"incididunt\",\n          \"sunt dolor\"\n        ],\n        \"exposure\": \"PUBLIC_NETWORK\"\n      }\n    ],\n    \"hosts\": [\n      {\n        \"id\": \"et ipsum eu occaecat voluptate\",\n        \"numberOfAffectedEntities\": -80258441,\n        \"affectedEntities\": [\n          \"minim Lorem ut\",\n          \"id ir\"\n        ]\n      },\n      {\n        \"id\": \"ut ut id Duis cupidatat\",\n        \"numberOfAffectedEntities\": 19909478,\n        \"affectedEntities\": [\n          \"et amet minim\",\n          \"amet Lorem dolore\"\n        ]\n      }\n    ],\n    \"databases\": [\n      \"nost\",\n      \"do culpa\"\n    ],\n    \"kubernetesWorkloads\": [\n      {\n        \"id\": \"aliqua in irure aliquip laborum\",\n        \"numberOfAffectedEntities\": -693190,\n        \"affectedEntities\": [\n          \"id aliquip est\",\n          \"Excepteur velit veniam ad\"\n        ]\n      },\n      {\n        \"id\": \"Duis non do nostrud\",\n        \"numberOfAffectedEntities\": -63169664,\n        \"affectedEntities\": [\n          \"in minim laboris\",\n          \"tempor dolor Lorem id nostrud\"\n        ]\n      }\n    ],\n    \"kubernetesClusters\": [\n      {\n        \"id\": \"enim Lorem\",\n        \"numberOfAffectedEntities\": 52358971,\n        \"affectedEntities\": [\n          \"laboris amet dolor officia\",\n          \"qui sunt laboris nulla dolor\"\n        ]\n      },\n      {\n        \"id\": \"ea quis\",\n        \"numberOfAffectedEntities\": -56930776,\n        \"affectedEntities\": [\n          \"commodo voluptate mollit\",\n          \"Duis dolor fugiat tempor\"\n        ]\n      }\n    ]\n  },\n  \"relatedContainerImages\": [\n    {\n      \"containerImages\": [\n        {\n          \"imageId\": \"aute fugiat\",\n          \"imageName\": \"aliquip eu\",\n          \"numberOfAffectedEntities\": 83245521,\n          \"affectedEntities\": [\n            \"voluptate dolore Excepteur laborum magna\",\n            \"ea sit dolore pariatur\"\n          ]\n        },\n        {\n          \"imageId\": \"aute\",\n          \"imageName\": \"cillum proident\",\n          \"numberOfAffectedEntities\": 2039695,\n          \"affectedEntities\": [\n            \"ut proident\",\n            \"Lorem officia adipisicing\"\n          ]\n        }\n      ]\n    },\n    {\n      \"containerImages\": [\n        {\n          \"imageId\": \"fugiat mollit\",\n          \"imageName\": \"aliquip dolore nulla\",\n          \"numberOfAffectedEntities\": -10373371,\n          \"affectedEntities\": [\n            \"cillum et sint\",\n            \"irure tempor sit mollit\"\n          ]\n        },\n        {\n          \"imageId\": \"adipisicing veniam\",\n          \"imageName\": \"culpa commodo est Duis consectetur\",\n          \"numberOfAffectedEntities\": -54337789,\n          \"affectedEntities\": [\n            \"id sed\",\n            \"laboris veniam\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"relatedAttacks\": {\n    \"attacks\": [\n      \"aliquip in laborum consequat\",\n      \"id Ut Lorem cillum\"\n    ]\n  },\n  \"muteStateChangeInProgress\": false\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "ada1ed91-8a9b-4925-b198-babbf46b3b4c",
                            "name": "remediation Items",
                            "item": [
                                {
                                    "id": "637edf38-dfab-4629-bdd2-a793ffe892ad",
                                    "name": "Lists remediation items of a third-party security problem | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Lists remediation items of a third-party security problem | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "remediationItems"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "remediationItemSelector",
                                                    "value": "<string>",
                                                    "description": "Defines the scope of the query. Only remediable entities matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Vulnerability state: `vulnerabilityState(\"value\")`. Find the possible values in the description of the **vulnerabilityState** field of the response. If not set, all entities are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Reachable data asset assessment: `assessment.dataAssets(\"value\")` Possible values are `REACHABLE`, and `NOT_DETECTED`.\n* Network exposure assessment: `assessment.exposure(\"value\")` Possible values are `PUBLIC_NETWORK`, and `NOT_DETECTED`.\n* Vulnerable function usage assessment: `assessment.vulnerableFunctionUsage(\"value\")` Possible values are `IN_USE`, and `NOT_IN_USE`.\n* Vulnerable function in use contains: `assessment.vulnerableFunctionInUseContains(\"value\")`. Possible values are `class::function`, `class::` and `function`. The `CONTAINS` operator is used. Only vulnerable functions in use are considered.\n* Assessment accuracy: `assessment.accuracy(\"value\")` Possible values are `FULL` and `REDUCED`.\n* Entity name contains: `entityNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required third-party security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "135380af-ac67-42de-9e1f-7d744992a310",
                                            "name": "Success. The response contains the list of remediation items of a problem.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "securityProblems",
                                                        ":id",
                                                        "remediationItems"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "remediationItemSelector",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "id",
                                                            "description": "(Required) The ID of the required third-party security problem."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"remediationItems\": [\n    {\n      \"id\": \"officia adipisicing incididunt\",\n      \"entityIds\": [\n        \"ut anim\",\n        \"fugiat magna\"\n      ],\n      \"name\": \"amet irure mollit quis\",\n      \"firstAffectedTimestamp\": 13104901,\n      \"assessment\": {\n        \"exposure\": \"PUBLIC_NETWORK\",\n        \"dataAssets\": \"NOT_AVAILABLE\",\n        \"numberOfDataAssets\": 23094427,\n        \"vulnerableFunctionUsage\": \"NOT_IN_USE\",\n        \"vulnerableFunctionsInUse\": [\n          {\n            \"className\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"filePath\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"functionName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"vulnerableFunctionsNotInUse\": [\n          {\n            \"className\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"filePath\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"functionName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"vulnerableFunctionsNotAvailable\": [\n          {\n            \"className\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"filePath\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"functionName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"resolvedTimestamp\": 83015386,\n      \"vulnerabilityState\": \"VULNERABLE\",\n      \"muteState\": {\n        \"muted\": true,\n        \"user\": \"et ut ullamco\",\n        \"lastUpdatedTimestamp\": -54827468,\n        \"reason\": \"INITIAL_STATE\",\n        \"comment\": \"in ea\"\n      },\n      \"vulnerableComponents\": [\n        {\n          \"id\": \"labore\",\n          \"displayName\": \"esse proident Duis fugiat\",\n          \"fileName\": \"dolore nulla\",\n          \"numberOfAffectedEntities\": -27005827,\n          \"affectedEntities\": [\n            \"anim minim\",\n            \"enim dolor ullamco aute\"\n          ]\n        },\n        {\n          \"id\": \"est aute\",\n          \"displayName\": \"elit proident\",\n          \"fileName\": \"cupidatat\",\n          \"numberOfAffectedEntities\": 25304460,\n          \"affectedEntities\": [\n            \"minim esse an\",\n            \"id enim exercitation\"\n          ]\n        }\n      ],\n      \"remediationProgress\": {\n        \"affectedEntities\": [\n          \"deserunt co\",\n          \"nisi quis Duis cillum commodo\"\n        ],\n        \"unaffectedEntities\": [\n          \"irure tempor ea\",\n          \"ut\"\n        ]\n      }\n    },\n    {\n      \"id\": \"aute adipisicing\",\n      \"entityIds\": [\n        \"culpa aute elit\",\n        \"id aliqua\"\n      ],\n      \"name\": \"consectetur eiusmod cillum dolor\",\n      \"firstAffectedTimestamp\": -96000721,\n      \"assessment\": {\n        \"exposure\": \"PUBLIC_NETWORK\",\n        \"dataAssets\": \"NOT_DETECTED\",\n        \"numberOfDataAssets\": 47846532,\n        \"vulnerableFunctionUsage\": \"IN_USE\",\n        \"vulnerableFunctionsInUse\": [\n          {\n            \"className\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"filePath\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"functionName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"vulnerableFunctionsNotInUse\": [\n          {\n            \"className\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"filePath\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"functionName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"vulnerableFunctionsNotAvailable\": [\n          {\n            \"className\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"filePath\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"functionName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"resolvedTimestamp\": 8676405,\n      \"vulnerabilityState\": \"RESOLVED\",\n      \"muteState\": {\n        \"muted\": false,\n        \"user\": \"nostrud quis dolor\",\n        \"lastUpdatedTimestamp\": 47387844,\n        \"reason\": \"CONFIGURATION_NOT_AFFECTED\",\n        \"comment\": \"pariatur\"\n      },\n      \"vulnerableComponents\": [\n        {\n          \"id\": \"i\",\n          \"displayName\": \"incididunt Duis commodo\",\n          \"fileName\": \"occaecat ut\",\n          \"numberOfAffectedEntities\": -39240201,\n          \"affectedEntities\": [\n            \"nisi Excepteu\",\n            \"nisi incididunt occaecat\"\n          ]\n        },\n        {\n          \"id\": \"labo\",\n          \"displayName\": \"incididunt ipsum sit exercitation reprehende\",\n          \"fileName\": \"laboris proident dolore \",\n          \"numberOfAffectedEntities\": -24075782,\n          \"affectedEntities\": [\n            \"Lorem minim officia\",\n            \"ea minim\"\n          ]\n        }\n      ],\n      \"remediationProgress\": {\n        \"affectedEntities\": [\n          \"nostrud\",\n          \"nulla Lorem\"\n        ],\n        \"unaffectedEntities\": [\n          \"amet Ut cupidatat\",\n          \"laboris dolore culpa irure\"\n        ]\n      }\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "c83a4626-3453-4f46-a684-c231705c20f6",
                                    "name": "Sets the mute state of a remediation item | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Sets the mute state of a remediation item | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "remediationItems",
                                                ":itemId",
                                                "muteState"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required third-party security problem."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "itemId",
                                                    "description": "(Required) The ID of the remediation item."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "b4d8c925-99d4-4fe8-8163-5593a9cb7da3",
                                            "name": "Success. The requested mute state has been applied to the remediation item.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "securityProblems",
                                                        ":id",
                                                        "remediationItems",
                                                        ":itemId",
                                                        "muteState"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "id",
                                                            "description": "(Required) The ID of the required third-party security problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "itemId",
                                                            "description": "(Required) The ID of the remediation item."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "a94d3f68-f548-4c46-8a97-fb421f3dd6e9",
                                            "name": "Not executed. The remediation item was previously put into the requested mute state by the same user with the same reason and comment.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "securityProblems",
                                                        ":id",
                                                        "remediationItems",
                                                        ":itemId",
                                                        "muteState"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "id",
                                                            "description": "(Required) The ID of the required third-party security problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "itemId",
                                                            "description": "(Required) The ID of the remediation item."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "ecea442e-788b-4ae5-ae63-628a481f36d1",
                            "name": "Lists all vulnerable functions and their usage for a third-party security problem | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Lists all vulnerable functions and their usage for a third-party security problem | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id",
                                        "vulnerableFunctions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "vulnerableFunctionsSelector",
                                            "value": "<string>",
                                            "description": "Defines the scope of the query. Only vulnerable functions matching the specified criteria are included in the response.\n\nYou can add the following criteria. Values are *not* case sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Management zone ID: `managementZoneIds(\"mzId-1\",\"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\",\"name-2\")`. Values are case sensitive.\n* Process group ID: `processGroupIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Process group name: `processGroupNames(\"name-1\", \"name-2\")`. Values are case sensitive.\n* Process group name contains: `processGroupNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
                                        },
                                        {
                                            "disabled": false,
                                            "key": "groupBy",
                                            "value": "<string>",
                                            "description": "Defines additional grouping types in which vulnerable functions should be displayed.\n\nYou can add one of the following grouping types.\n\n* Process group: `PROCESS_GROUP`"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required third-party security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "15018fa3-3fcf-4ff7-ac90-98d9a4772cc3",
                                    "name": "Success. The response contains the list of vulnerable functions.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "vulnerableFunctions"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "vulnerableFunctionsSelector",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "groupBy",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required third-party security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"vulnerableFunctions\": [\n    {\n      \"function\": {\n        \"className\": \"adipisicing aliqua cillum ipsum occaecat\",\n        \"filePath\": \"non aliquip ex\",\n        \"functionName\": \"eiusmod ad ut\"\n      },\n      \"usage\": \"NOT_IN_USE\",\n      \"processGroupsInUse\": [\n        \"nostrud non aute ex Excepteur\",\n        \"ut\"\n      ],\n      \"processGroupsNotInUse\": [\n        \"magna dolor consectetur\",\n        \"Duis fugiat\"\n      ],\n      \"processGroupsNotAvailable\": [\n        \"ipsum sed reprehenderit irure est\",\n        \"qui\"\n      ]\n    },\n    {\n      \"function\": {\n        \"className\": \"incididunt dolore non labo\",\n        \"filePath\": \"in\",\n        \"functionName\": \"sit id in minim\"\n      },\n      \"usage\": \"IN_USE\",\n      \"processGroupsInUse\": [\n        \"et dolore qui consequat\",\n        \"reprehenderit\"\n      ],\n      \"processGroupsNotInUse\": [\n        \"ad Lorem\",\n        \"cupidatat in velit\"\n      ],\n      \"processGroupsNotAvailable\": [\n        \"est Excepteur sed reprehenderit in\",\n        \"anim cillum dolor id\"\n      ]\n    }\n  ],\n  \"vulnerableFunctionsByProcessGroup\": [\n    {\n      \"processGroup\": \"dolore ut et\",\n      \"functionsInUse\": [\n        {\n          \"className\": \"nulla proident esse eiusmo\",\n          \"filePath\": \"consequat\",\n          \"functionName\": \"tempor Lorem\"\n        },\n        {\n          \"className\": \"id voluptate pariatur ex\",\n          \"filePath\": \"et irure sunt\",\n          \"functionName\": \"Duis eiusmod\"\n        }\n      ],\n      \"functionsNotInUse\": [\n        {\n          \"className\": \"eu Lorem\",\n          \"filePath\": \"aliquip tempor sed\",\n          \"functionName\": \"ea tempor Ut voluptate\"\n        },\n        {\n          \"className\": \"dolore dolore aliqua\",\n          \"filePath\": \"laborum nisi et\",\n          \"functionName\": \"do aliqua\"\n        }\n      ],\n      \"functionsNotAvailable\": [\n        {\n          \"className\": \"velit officia\",\n          \"filePath\": \"consectetur\",\n          \"functionName\": \"in ullamco in ut\"\n        },\n        {\n          \"className\": \"nostrud enim aliquip sunt consequat\",\n          \"filePath\": \"Lorem esse\",\n          \"functionName\": \"aliqua irure elit sint\"\n        }\n      ]\n    },\n    {\n      \"processGroup\": \"ut ipsum\",\n      \"functionsInUse\": [\n        {\n          \"className\": \"reprehenderit min\",\n          \"filePath\": \"labore\",\n          \"functionName\": \"elit enim \"\n        },\n        {\n          \"className\": \"laboris\",\n          \"filePath\": \"sunt ex est Ut\",\n          \"functionName\": \"quis laboris mollit in sunt\"\n        }\n      ],\n      \"functionsNotInUse\": [\n        {\n          \"className\": \"sed consectetur\",\n          \"filePath\": \"laborum ullamco deserunt\",\n          \"functionName\": \"sit aliqua cupidatat veniam\"\n        },\n        {\n          \"className\": \"sit ullamco irure occaecat\",\n          \"filePath\": \"commodo magna sint Lorem\",\n          \"functionName\": \"nulla in magna eiusmod\"\n        }\n      ],\n      \"functionsNotAvailable\": [\n        {\n          \"className\": \"aliqua nulla Lor\",\n          \"filePath\": \"laboris commodo qui minim veniam\",\n          \"functionName\": \"reprehenderit fugiat laborum\"\n        },\n        {\n          \"className\": \"irure Excepteur velit aliqua\",\n          \"filePath\": \"qui magna adipisicing\",\n          \"functionName\": \"\"\n        }\n      ]\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "8387ae64-47a4-45a0-84eb-0c9b42ef6fe0",
                            "name": "Mutes a security problem | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Mutes a security problem | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id",
                                        "mute"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "23371c39-7450-4743-beab-4e2bfa8e6a73",
                                    "name": "Success. The security problem has been muted.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "mute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "65f08807-64a8-4c49-8ee8-d37580bba28e",
                                    "name": "Not executed. The security problem is already muted.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "mute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "b645e462-163e-4d64-9af4-8740003f4ef3",
                            "name": "Un-mutes a security problem | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Un-mutes a security problem | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id",
                                        "unmute"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "17558b3d-456c-471f-94f3-82032a0deb76",
                                    "name": "Success. The security problem has been un-muted.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "unmute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "963d36f2-4572-45a4-9a40-45fb0fd93506",
                                    "name": "Not executed. The security problem is already un-muted.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "unmute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "43f27362-7729-4b28-9a7f-7881fa4777f4",
            "name": "extensions",
            "item": [
                {
                    "id": "f9db5d73-726d-4ed1-9d06-34d974c6ecf1",
                    "name": "Lists all the extensions 2.0 available in your environment",
                    "request": {
                        "name": "Lists all the extensions 2.0 available in your environment",
                        "description": {},
                        "url": {
                            "path": [
                                "extensions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "name",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of extensions 2.0 by name. You can specify a partial name. In that case, the CONTAINS operator is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "632ea78e-c639-4460-be20-2d9806a37a67",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "name",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 1082898,\n  \"extensions\": [\n    {\n      \"extensionName\": \"est voluptate aute\",\n      \"version\": \"1.2.3\"\n    },\n    {\n      \"extensionName\": \"esse exercitation minim sint\",\n      \"version\": \"1.2.3\"\n    }\n  ],\n  \"pageSize\": -82035685,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "378853f2-095b-44bf-863e-ce5a3e26abd7",
                    "name": "Uploads or verifies a new extension 2.0",
                    "request": {
                        "name": "Uploads or verifies a new extension 2.0",
                        "description": {},
                        "url": {
                            "path": [
                                "extensions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "validateOnly",
                                    "value": "false",
                                    "description": "Only run validation but do not persist the extension even if validation was successful."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "file",
                                    "type": "file",
                                    "description": "(Required) Extension 2.0 zip file to upload."
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "d1c9f2a1-1ca2-4b9e-9425-0ff5a3eb9d87",
                            "name": "The extension is valid",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "validateOnly",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) Extension 2.0 zip file to upload.",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<binary>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"extensionName\": \"aliquip ad reprehenderit\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"nostrud velit commodo dolore magna\"\n  },\n  \"dataSources\": [\n    \"adipisicing eu\",\n    \"consectetur exercitation\"\n  ],\n  \"variables\": [\n    \"est elit laboris magna pariatur\",\n    \"quis nulla nisi dolor\"\n  ],\n  \"featureSets\": [\n    \"Duis enim qui Excepteur\",\n    \"veniam in nostrud\"\n  ],\n  \"featureSetsDetails\": {\n    \"in_3f\": {\n      \"metrics\": [\n        {\n          \"key\": \"magna Lorem deserunt ullamco\",\n          \"metadata\": {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"key\": \"aliqua c\",\n          \"metadata\": {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"Duis deserunt\",\n  \"fileHash\": \"tempor non occaecat\",\n  \"assetsInfo\": [\n    {\n      \"assetType\": \"enim ut tempor\",\n      \"count\": -54066685\n    },\n    {\n      \"assetType\": \"sint veniam deserunt pariatur\",\n      \"count\": -88420542\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "793168ba-effa-4eb3-aadf-2e502fba2414",
                            "name": "Success. The extension 2.0 has been uploaded.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "validateOnly",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) Extension 2.0 zip file to upload.",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<binary>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"extensionName\": \"Lorem id in consectetur ipsum\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"laboris\"\n  },\n  \"dataSources\": [\n    \"dolore dolor veniam ipsum\",\n    \"sed quis Excepteur\"\n  ],\n  \"variables\": [\n    \"Duis reprehenderit sint ea\",\n    \"dolore laboris enim cillum\"\n  ],\n  \"featureSets\": [\n    \"laboris mollit deserunt et id\",\n    \"nostrud nulla voluptate aliquip consequat\"\n  ],\n  \"featureSetsDetails\": {\n    \"cupidatat_d\": {\n      \"metrics\": [\n        {\n          \"key\": \"quis consequat dolore occaecat Ut\",\n          \"metadata\": {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"key\": \"quis voluptate\",\n          \"metadata\": {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    },\n    \"aliquip7\": {\n      \"metrics\": [\n        {\n          \"key\": \"pariatur\",\n          \"metadata\": {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"key\": \"exercitation\",\n          \"metadata\": {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"deserunt dolor aliqua veniam\",\n  \"fileHash\": \"proident in\",\n  \"assetsInfo\": [\n    {\n      \"assetType\": \"eiusmod culpa\",\n      \"count\": 74085934\n    },\n    {\n      \"assetType\": \"est do\",\n      \"count\": -52875330\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fe6fc5ac-b7d8-44cb-8c4f-2df40e226104",
                            "name": "Failed. The input file is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "validateOnly",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) Extension 2.0 zip file to upload.",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<binary>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "21ab966b-1aa4-4afc-8e36-4698ba48cb9a",
                            "name": "Upload not possible yet, please try again in a few seconds.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "validateOnly",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) Extension 2.0 zip file to upload.",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<binary>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "2e98ada1-44bd-43ca-82f0-fcacd16f6a9d",
                    "name": "{extension Name}",
                    "item": [
                        {
                            "id": "22a1bd5f-c53c-4300-9b20-162750909d8c",
                            "name": "Lists all versions of the extension 2.0",
                            "request": {
                                "name": "Lists all versions of the extension 2.0",
                                "description": {},
                                "url": {
                                    "path": [
                                        "extensions",
                                        ":extensionName"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "nextPageKey",
                                            "value": "<string>",
                                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                        },
                                        {
                                            "disabled": false,
                                            "key": "pageSize",
                                            "value": "<long>",
                                            "description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionName",
                                            "description": "(Required) The name of the requested extension 2.0."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "706dda76-b843-4487-92f4-b233a848ea39",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"totalCount\": 98532847,\n  \"extensions\": [\n    {\n      \"extensionName\": \"Duis id sit et\",\n      \"version\": \"1.2.3\"\n    },\n    {\n      \"extensionName\": \"eu aliqua deserunt\",\n      \"version\": \"1.2.3\"\n    }\n  ],\n  \"pageSize\": -97426311,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "34098a45-8563-4620-848b-f894fe84aaa2",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "66ea96ba-65a2-4584-9eae-33bb26f2522d",
                            "name": "environment Configuration",
                            "item": [
                                {
                                    "id": "3be023b9-b489-46da-a16f-5db1fc475c8c",
                                    "name": "Gets the active environment configuration version of the specified extension 2.0",
                                    "request": {
                                        "name": "Gets the active environment configuration version of the specified extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "13ad1632-9dc6-4c40-b441-30acb6c5f54a",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"version\": \"1.2.3\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "67dbfee0-b113-45ba-91c8-25eff57f09b3",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "5057534f-be50-4a9b-b0ed-5c0d9d24a044",
                                    "name": "Updates the active environment configuration version of the extension 2.0",
                                    "request": {
                                        "name": "Updates the active environment configuration version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "6325219c-9425-4e26-919b-946859ba4aab",
                                            "name": "Success. Environment configuration updated.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"version\": \"1.2.3\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "b11f96e8-464f-41ab-8338-608a99fd9a80",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "1d9405b7-dbb7-4250-9574-4d522ae96710",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "cabc28ac-c82f-4bb8-b067-5d1b5b25d2e3",
                                    "name": "Activates the environment configuration from the specified version of the extension 2.0",
                                    "request": {
                                        "name": "Activates the environment configuration from the specified version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "57dd68ed-bb57-4505-b0b6-90cd094458e2",
                                            "name": "Success. Environment configuration created.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"version\": \"1.2.3\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "768f6142-b9fa-4315-a8f9-3ad7e10e986e",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "d785a1a8-c2d9-456a-8787-af6d829b37a3",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "a6a30b15-a83b-4a72-a461-bba73b704288",
                                    "name": "Deactivates the environment configuration of the specified extension 2.0",
                                    "request": {
                                        "name": "Deactivates the environment configuration of the specified extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "11298bcc-0731-4f36-8967-a94b1a2c3b8e",
                                            "name": "Success. Environment configuration deactivated.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"version\": \"1.2.3\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "3f42726f-7e8b-465e-b188-eaba8374e77d",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "943834c8-0e54-43da-8384-62c2114d16cf",
                                    "name": "List of the latest extension environment configuration events",
                                    "request": {
                                        "name": "List of the latest extension environment configuration events",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration",
                                                "events"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "from",
                                                    "value": "<string>",
                                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "to",
                                                    "value": "<string>",
                                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "content",
                                                    "value": "<string>",
                                                    "description": "Content of the event"
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "status",
                                                    "value": "<string>",
                                                    "description": "Status of the event"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "0f6058c6-dc68-4788-9ff5-bee426ae9cf7",
                                            "name": "List of the latest extension environment configuration events",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration",
                                                        "events"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "content",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "status",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"extensionEvents\": [\n    {\n      \"timestamp\": \"cupidatat fugiat reprehenderit dolor laboris\",\n      \"severity\": \"aute eiusmod anim officia labore\",\n      \"content\": \"reprehenderit et\",\n      \"dt.entity.host\": \"in aute\",\n      \"dt.active_gate.id\": \"ut veniam Excepteur\",\n      \"dt.extension.ds\": \"ullamco reprehenderit sint Excepteur\",\n      \"status\": \"ERROR\"\n    },\n    {\n      \"timestamp\": \"in ad exercitation\",\n      \"severity\": \"consectetur culpa\",\n      \"content\": \"aute cupidatat\",\n      \"dt.entity.host\": \"dolor\",\n      \"dt.active_gate.id\": \"enim\",\n      \"dt.extension.ds\": \"deserunt esse sint\",\n      \"status\": \"INFO\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "854db251-0d15-4197-8744-03ce4b1ce2ed",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration",
                                                        "events"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "content",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "status",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "cd36ccbf-748e-4d7b-81f0-b0241709dc59",
                            "name": "monitoring Configurations",
                            "item": [
                                {
                                    "id": "4b28fbb5-6772-4903-bbcc-31ca8ac75b67",
                                    "name": "Lists all the monitoring configurations of the specified extension 2.0",
                                    "request": {
                                        "name": "Lists all the monitoring configurations of the specified extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "monitoringConfigurations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "nextPageKey",
                                                    "value": "<string>",
                                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "pageSize",
                                                    "value": "<long>",
                                                    "description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "version",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of configurations by extension 2.0 version."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "active",
                                                    "value": "<boolean>",
                                                    "description": "Filters the resulting set of configurations by the active state."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "f4b330d1-aa6e-496e-8b56-813f3020bfc5",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "nextPageKey",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "pageSize",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "version",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "active",
                                                            "value": "<boolean>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"totalCount\": -81230804,\n  \"items\": [\n    {\n      \"objectId\": \"adi\",\n      \"scope\": \"est mollit deserunt aliqua\",\n      \"value\": \"eiusmod\"\n    },\n    {\n      \"objectId\": \"do\",\n      \"scope\": \"adipisicing et quis Ut\",\n      \"value\": \"elit id et fugiat\"\n    }\n  ],\n  \"pageSize\": 12268622,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "95a56130-1597-4e12-bb6e-6ff4b53ba34e",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "nextPageKey",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "pageSize",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "version",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "active",
                                                            "value": "<boolean>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "72840e71-b64e-4f4e-b3f6-1f76c5f3bb96",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "nextPageKey",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "pageSize",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "version",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "active",
                                                            "value": "<boolean>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "9f93b780-aad5-40ed-af16-8f77293a7182",
                                    "name": "Creates new monitoring configuration for the specified extension 2.0",
                                    "request": {
                                        "name": "Creates new monitoring configuration for the specified extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "monitoringConfigurations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "b2f5b3cc-9a24-40fd-b40b-98da12027063",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object],[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "[\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -6361515\n  },\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": 28626552\n  }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "d08b5a98-64ec-4c29-a2a7-489702c2d3ee",
                                            "name": "Multi-Status, if not all requests resulted in the same status",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object],[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Multi-Status (WebDAV) (RFC 4918)",
                                            "code": 207,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "[\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -6361515\n  },\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": 28626552\n  }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "f4cd2603-b99f-48e4-a7de-27b5768f76cc",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object],[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "3d7702e8-cb07-4b51-b97a-6d03387f4789",
                                    "name": "{configuration Id}",
                                    "item": [
                                        {
                                            "id": "eaedf678-acea-41ea-9f26-30d9ed3abe28",
                                            "name": "Gets the details of the specified monitoring configuration",
                                            "request": {
                                                "name": "Gets the details of the specified monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "5790e4c6-52d3-4d97-9c06-09212c25170e",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"objectId\": \"sit\",\n  \"scope\": \"ad\",\n  \"value\": \"dolore aliquip nisi\"\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "830ca4e3-bb15-43ee-a1ea-9d163ecb4aca",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "2b2f0270-ad91-48e6-a163-04728dd9ff98",
                                            "name": "Updates the specified monitoring configuration",
                                            "request": {
                                                "name": "Updates the specified monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json; charset=utf-8"
                                                    },
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                },
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "7368782c-9ccf-43df-91a1-4e501b0de8a6",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "[object Object]",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 20887942\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "010c2f0b-d803-4d59-9ba0-98281619c98c",
                                                    "name": "Failed. The input is invalid.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "[object Object]",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "1e9ec4df-e634-44a8-9235-c17dba8e702a",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "[object Object]",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "e90c355f-f9d6-471f-83c1-db8d57ed4914",
                                            "name": "Deletes the specified monitoring configuration",
                                            "request": {
                                                "name": "Deletes the specified monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "e8ecb19c-3edc-495f-b4e5-638adf5a6023",
                                                    "name": "Success. Response doesn't have a body.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                },
                                                {
                                                    "id": "06de8526-d8b7-45f0-9915-1d25f70d0620",
                                                    "name": "Failed. The input is invalid.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "6925bb57-4329-437d-9c5b-01e4b67da6e3",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "f1657a44-042d-4151-9d59-b2a60a32627e",
                                            "name": "Gets the list of the events linked to specific monitoring configuration",
                                            "request": {
                                                "name": "Gets the list of the events linked to specific monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId",
                                                        "events"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "disabled": false,
                                                            "key": "from",
                                                            "value": "<string>",
                                                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "to",
                                                            "value": "<string>",
                                                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "dt.entity.host",
                                                            "value": "<string>",
                                                            "description": "Host that uses this monitoring configuration.\n\nExample: `HOST-ABCDEF0123456789`"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "dt.active_gate.id",
                                                            "value": "<string>",
                                                            "description": "Hexadecimal ID of Active Gate that uses this monitoring configuration.\n\nExample: `0x1a2b3c4d`"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "dt.extension.ds",
                                                            "value": "<string>",
                                                            "description": "Data source that uses this monitoring configuration.\n\nExample: `snmp`"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "content",
                                                            "value": "<string>",
                                                            "description": "Content of the event"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "status",
                                                            "value": "<string>",
                                                            "description": "Status of the event"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "5ec8605f-db2a-4e22-9bd4-33d2c42f2077",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId",
                                                                "events"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "from",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "to",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.entity.host",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.active_gate.id",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.extension.ds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "content",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "status",
                                                                    "value": "<string>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"extensionEvents\": [\n    {\n      \"timestamp\": \"eu aliqua in enim\",\n      \"severity\": \"sit do veniam\",\n      \"content\": \"elit voluptate ipsum\",\n      \"dt.entity.host\": \"incididunt laboris sed\",\n      \"dt.active_gate.id\": \"magna cillum consequat sunt id\",\n      \"dt.extension.ds\": \"dolore ex labore ipsum\",\n      \"status\": \"ERROR\"\n    },\n    {\n      \"timestamp\": \"culpa tempor\",\n      \"severity\": \"ex incididunt laboris culpa\",\n      \"content\": \"ex cillum esse\",\n      \"dt.entity.host\": \"eiusmod sit in incididunt\",\n      \"dt.active_gate.id\": \"qui exercitation\",\n      \"dt.extension.ds\": \"ut ea minim sint\",\n      \"status\": \"NONE\"\n    }\n  ]\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "5bd0558f-d469-4374-bea9-611168995f25",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId",
                                                                "events"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "from",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "to",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.entity.host",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.active_gate.id",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.extension.ds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "content",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "status",
                                                                    "value": "<string>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "9343e067-c361-427a-b6c4-a847e9a8f4e3",
                                            "name": "Gets the most recent status of the execution of given monitoring configuration",
                                            "request": {
                                                "name": "Gets the most recent status of the execution of given monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId",
                                                        "status"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "161a14cd-cc33-44de-9d87-6a62faec06ce",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId",
                                                                "status"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"timestamp\": -62085153,\n  \"status\": \"OK\"\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "985b1990-5cbb-453b-b776-140e753e0d82",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId",
                                                                "status"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "27dde873-26dc-4146-beb0-f07e2d5c2a20",
                            "name": "{extension Version}",
                            "item": [
                                {
                                    "id": "1678e8fd-2807-4c46-9e7d-69ec073f1484",
                                    "name": "Gets details of the specified version of the extension 2.0",
                                    "request": {
                                        "name": "Gets details of the specified version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                ":extensionVersion"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionVersion",
                                                    "description": "(Required) The version of the requested extension 2.0"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "762c18cf-1ac2-4215-bb0d-e8e9cb078227",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "veniam"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"extensionName\": \"adipisicing dolor mollit\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"laborum enim tempor\"\n  },\n  \"dataSources\": [\n    \"eu aute\",\n    \"non labore\"\n  ],\n  \"variables\": [\n    \"aliqua aute\",\n    \"Lorem nulla\"\n  ],\n  \"featureSets\": [\n    \"irure adipisicing laboris ea sint\",\n    \"dolor officia\"\n  ],\n  \"featureSetsDetails\": {\n    \"commodo28\": {\n      \"metrics\": [\n        {\n          \"key\": \"proident incididunt Duis in\",\n          \"metadata\": {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"key\": \"aute Lorem nostrud ut\",\n          \"metadata\": {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"Duis Lorem nisi laboris\",\n  \"fileHash\": \"deserunt \"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "4ddfcf61-f110-43be-9496-edc15fec0e0f",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "veniam"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "9d6aa6e1-e5a1-4806-a30d-307bef34f478",
                                            "name": "Not acceptable",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "veniam"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Acceptable",
                                            "code": 406,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "b84e3832-419f-4c6e-a562-1955dc0e1d7a",
                                    "name": "Deletes the specified version of the extension 2.0",
                                    "request": {
                                        "name": "Deletes the specified version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                ":extensionVersion"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionVersion",
                                                    "description": "(Required) The version of the requested extension 2.0"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "4a058c97-6d51-43d3-9836-5355dd8e07f1",
                                            "name": "Success. The extension 2.0 version has been deleted.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"extensionName\": \"eu elit\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"Lorem eiusmod\"\n  },\n  \"dataSources\": [\n    \"nostrud con\",\n    \"dolore amet minim et ullamco\"\n  ],\n  \"variables\": [\n    \"consequat velit\",\n    \"fugiat tempor ipsum dolor irure\"\n  ],\n  \"featureSets\": [\n    \"proident occaecat\",\n    \"laboris esse\"\n  ],\n  \"featureSetsDetails\": {\n    \"dolor075\": {\n      \"metrics\": [\n        {\n          \"key\": \"commodo voluptate elit\",\n          \"metadata\": {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"key\": \"ullamco dolore r\",\n          \"metadata\": {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    },\n    \"autee\": {\n      \"metrics\": [\n        {\n          \"key\": \"dolore ad nost\",\n          \"metadata\": {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"key\": \"sed ullamco\",\n          \"metadata\": {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"in nulla\",\n  \"fileHash\": \"laboris mollit \"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "ca91d5f5-6e1c-4c6a-ad49-4ed2293f7c1f",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "f8b2bd29-96b8-4b9b-a327-f68c4663111c",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "ba4e5616-86f2-4377-b72c-36e4170253f6",
                                    "name": "Gets the configuration schema of the specified version of the extension 2.0",
                                    "request": {
                                        "name": "Gets the configuration schema of the specified version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                ":extensionVersion",
                                                "schema"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionVersion",
                                                    "description": "(Required) The version of the requested extension 2.0"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "ca9c9182-7580-464f-99fb-32615bc5ed58",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion",
                                                        "schema"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "null",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "bd87e68e-5353-4b71-9996-c6721da06935",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion",
                                                        "schema"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "ee6f88a9-f407-46b7-af09-32f7718bbdad",
                    "name": "schemas",
                    "item": [
                        {
                            "id": "32bfaad8-d62e-43fb-a922-8847acd08c37",
                            "name": "Lists all the extension 2.0 schemas versions available in your environment",
                            "request": {
                                "name": "Lists all the extension 2.0 schemas versions available in your environment",
                                "description": {},
                                "url": {
                                    "path": [
                                        "extensions",
                                        "schemas"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "474aa216-f63f-434c-9cf0-bf66e6023b3d",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "extensions",
                                                "schemas"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"versions\": [\n    \"1.2.3\",\n    \"1.2.3\"\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "87709a8f-fc6d-4e93-abcf-b23d8fcc7afc",
                            "name": "{schema Version}",
                            "item": [
                                {
                                    "id": "da6085e8-6613-401c-b9ea-7a3c62fd6b08",
                                    "name": "Lists all the files available for the specified extension 2.0 schema version",
                                    "request": {
                                        "name": "Lists all the files available for the specified extension 2.0 schema version",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                "schemas",
                                                ":schemaVersion"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaVersion",
                                                    "description": "(Required) The version of the schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "9c164ca6-f3f7-4a11-b372-21142c38445c",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "veniam"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"files\": [\n    \"ex id in ad\",\n    \"cillum Lorem non minim\"\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "d6eb106a-6da9-4543-8146-54c42bd31d5d",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "veniam"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "ea229e09-ec6c-44d2-aa79-31d66502ff78",
                                            "name": "Not acceptable",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "veniam"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Acceptable",
                                            "code": 406,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "3b91602c-7e65-4470-8815-66ed27c1ffb2",
                                    "name": "Gets the extension 2.0 schema file in the specified version",
                                    "request": {
                                        "name": "Gets the extension 2.0 schema file in the specified version",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                "schemas",
                                                ":schemaVersion",
                                                ":fileName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaVersion",
                                                    "description": "(Required) The version of the schema."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "fileName",
                                                    "description": "(Required) The name of the schema file."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "5ea27999-25cd-4b96-bb2e-47c43ef35f5e",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion",
                                                        ":fileName"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "fileName",
                                                            "description": "(Required) The name of the schema file."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "\"<object>\"",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "c9d9013b-320b-41f0-a91d-cbb2e4aec9ff",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion",
                                                        ":fileName"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "fileName",
                                                            "description": "(Required) The name of the schema file."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "c601ad9b-f944-4661-8b17-a1b5e2b8e6ce",
            "name": "problems",
            "item": [
                {
                    "id": "df524250-39dc-4d5a-8e2b-3c55b9ab8772",
                    "name": "Lists problems observed within the specified timeframe",
                    "request": {
                        "name": "Lists problems observed within the specified timeframe",
                        "description": {},
                        "url": {
                            "path": [
                                "problems"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).\n\n The field is valid only for the current page of results. You must set it for each page you're requesting."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "problemSelector",
                                    "value": "<string>",
                                    "description": "Defines the scope of the query. Only problems matching the specified criteria are included into response. \n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies. All values must be quoted. \n* Status: `status(\"open\")` or `status(\"closed\")`. You can specify only one status. \n* Severity level: `severityLevel(\"level-1\",\"level-2\")`. Find the possible values in the description of the **severityLevel** field of the response.\n* Impact level: `impactLevel(\"level-11\",\"level-2\")` Find the possible values in the description of the **impactLevel** field of the response.\n* Root cause entity: `rootCauseEntity(\"id-1\", \"id-2\")`. \n* Management zone ID: `managementZoneIds(\"mZId-1\", \"mzId-2\")`. \n* Management zone name: `managementZones(\"value-1\",\"value-2\")`. \n* Impacted entities: `impactedEntities(\"id-1\", \"id-2\")`. \n* Affected entities: `affectedEntities(\"id-1\", \"id-2\")`. \n* Type of affected entities: `affectedEntityTypes(\"value-1\",\"value-2\")`. \n* Problem ID: `problemId(\"id-1\", \"id-2\")`. \n* Alerting profile ID: `problemFilterIds(\"id-1\", \"id-2\")`. \n* Alerting profile name (contains, case-insensitive): `problemFilterNames(\"value-1\",\"value-2\")`. \n* Alerting profile name (exact match, case-insensitive): `problemFilterNames.equals(\"value-1\",\"value-2\")`. \n* Entity tags: `entityTags(\"[context]key:value\",\"key:value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value tag`. All tag values are case-sensitive.\n* Display ID of the problem: `displayId(\"id-1\", \"id-2\")`. \n* Under maintenance: `underMaintenance(true|false)`. Shows (true) or hides (false) all problems created during maintenance mode.\n* Text search: `text(\"value\")`. Text search on the following fields: problem title, event titles, displayId and the id of affected and impacted entities. The text search is case insensitive, partial matching and based on a relevance score. Therefore the `relevance` sort option should be used to get the most relevant problems first. The special characters `~` and `\"` need to be escaped using a `~` (e.g. double quote search `text(\"~\"\")`). The search value is limited to 30 characters.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\nThe maximum number of entities that may be selected is limited to 10000.\n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "<string>",
                                    "description": "Specifies a set of comma-separated (`,`) fields for sorting in the problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n * `status`: problem status (`+` open problems first or `-` closed problems first)\n * `startTime`: problem start time (`+` old problems first or `-` new problems first) \n * `relevance`: problem relevance (`+` least relevant problems first or `-` most relevant problems first) - can be used only in combination with text search \n\nIf no prefix is set, `+` is used. \n\nYou can specify several levels of sorting. For example, `+status,-startTime` sorts problems by status, open problems first. Within the status, problems are sorted by start time, oldest first."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "a472a85e-a089-4f3d-aa0e-4175358c9b34",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "problems"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "problemSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"problems\": [\n    {\n      \"affectedEntities\": [\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"deserunt esse consequat dolor\"\n        },\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"anim labore\"\n        }\n      ],\n      \"displayId\": \"sit reprehenderit dolor non\",\n      \"endTime\": -20830148,\n      \"impactLevel\": \"SERVICES\",\n      \"impactedEntities\": [\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"minim\"\n        },\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"ad irure\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"name\": \"ut qui adipisicing Ut\",\n          \"id\": \"Duis exercitation qui\"\n        },\n        {\n          \"name\": \"et co\",\n          \"id\": \"irure mollit dolor aute\"\n        }\n      ],\n      \"problemFilters\": [\n        {\n          \"id\": \"dolor tempor mollit in\",\n          \"name\": \"amet aliqua\"\n        },\n        {\n          \"id\": \"in ea velit tempor\",\n          \"name\": \"anim sint\"\n        }\n      ],\n      \"problemId\": \"dolor aute\",\n      \"severityLevel\": \"RESOURCE_CONTENTION\",\n      \"startTime\": 46729984,\n      \"status\": \"CLOSED\",\n      \"title\": \"qui\",\n      \"recentComments\": {\n        \"comments\": [\n          {\n            \"createdAtTimestamp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"authorName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"context\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"content\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"createdAtTimestamp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"authorName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"context\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"content\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"totalCount\": 50733245,\n        \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n        \"pageSize\": -86099721\n      },\n      \"impactAnalysis\": {\n        \"impacts\": [\n          {\n            \"estimatedAffectedUsers\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactedEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"estimatedAffectedUsers\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactedEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"rootCauseEntity\": {\n        \"entityId\": {\n          \"id\": \"Duis reprehenderit\",\n          \"type\": \"velit in sint\"\n        },\n        \"name\": \"non ex cupidatat in Excepteur\"\n      },\n      \"linkedProblemInfo\": {\n        \"displayId\": \"consequat magna ex enim ut\",\n        \"problemId\": \"amet incididu\"\n      },\n      \"evidenceDetails\": {\n        \"details\": [\n          {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"entity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"evidenceType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rootCauseRelevant\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"startTime\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"groupingEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"entity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"evidenceType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rootCauseRelevant\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"startTime\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"groupingEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"totalCount\": 36437465\n      },\n      \"entityTags\": [\n        {\n          \"stringRepresentation\": \"ipsum Duis ex consectet\",\n          \"value\": \"in culpa nulla incididunt\",\n          \"key\": \"Ut dolore\",\n          \"context\": \"Duis eiusmod\"\n        },\n        {\n          \"stringRepresentation\": \"nulla eiusmod ex Duis\",\n          \"value\": \"ad elit eu dolor laborum\",\n          \"key\": \"veniam deserunt exercitation\",\n          \"context\": \"nostrud\"\n        }\n      ]\n    },\n    {\n      \"affectedEntities\": [\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"tempor enim sed\"\n        },\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"adipisicing velit\"\n        }\n      ],\n      \"displayId\": \"officia\",\n      \"endTime\": -39579580,\n      \"impactLevel\": \"SERVICES\",\n      \"impactedEntities\": [\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"nisi amet dolore nostrud\"\n        },\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"adipisicing\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"name\": \"qui Duis tempor\",\n          \"id\": \"cillum\"\n        },\n        {\n          \"name\": \"sed\",\n          \"id\": \"ex aliquip\"\n        }\n      ],\n      \"problemFilters\": [\n        {\n          \"id\": \"cillum esse magna\",\n          \"name\": \"tempor sed\"\n        },\n        {\n          \"id\": \"esse ea\",\n          \"name\": \"Duis sint Ut\"\n        }\n      ],\n      \"problemId\": \"deserunt officia aliquip\",\n      \"severityLevel\": \"PERFORMANCE\",\n      \"startTime\": -62788399,\n      \"status\": \"OPEN\",\n      \"title\": \"pariatur velit officia\",\n      \"recentComments\": {\n        \"comments\": [\n          {\n            \"createdAtTimestamp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"authorName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"context\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"content\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"createdAtTimestamp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"authorName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"context\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"content\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"totalCount\": 83225509,\n        \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n        \"pageSize\": -68616837\n      },\n      \"impactAnalysis\": {\n        \"impacts\": [\n          {\n            \"estimatedAffectedUsers\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactedEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"estimatedAffectedUsers\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactedEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"rootCauseEntity\": {\n        \"entityId\": {\n          \"id\": \"nulla minim\",\n          \"type\": \"magna consectetur id oc\"\n        },\n        \"name\": \"sint\"\n      },\n      \"linkedProblemInfo\": {\n        \"displayId\": \"sunt do magna incididunt dolore\",\n        \"problemId\": \"dolore est ex aliqua in\"\n      },\n      \"evidenceDetails\": {\n        \"details\": [\n          {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"entity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"evidenceType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rootCauseRelevant\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"startTime\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"groupingEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"entity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"evidenceType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rootCauseRelevant\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"startTime\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"groupingEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"totalCount\": -8983821\n      },\n      \"entityTags\": [\n        {\n          \"stringRepresentation\": \"magna ex eiusmod nulla consequat\",\n          \"value\": \"magna velit ipsum\",\n          \"key\": \"consectetur et in commodo\",\n          \"context\": \"cupidatat ea c\"\n        },\n        {\n          \"stringRepresentation\": \"ex\",\n          \"value\": \"reprehenderit eiusmod cillum ad\",\n          \"key\": \"dolore est\",\n          \"context\": \"ea \"\n        }\n      ]\n    }\n  ],\n  \"totalCount\": -12927319,\n  \"pageSize\": -22756327,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"warnings\": [\n    \"dolore\",\n    \"tempor ut do\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "024043ba-4941-4bb6-a9ce-21837679b981",
                    "name": "{problem Id}",
                    "item": [
                        {
                            "id": "322982c6-f1a2-4f03-8316-0b40d692d5af",
                            "name": "Gets the properties of the specified problem",
                            "request": {
                                "name": "Gets the properties of the specified problem",
                                "description": {},
                                "url": {
                                    "path": [
                                        "problems",
                                        ":problemId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "fields",
                                            "value": "<string>",
                                            "description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`)."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "problemId",
                                            "description": "(Required) The ID of the required problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "f04ed422-c99b-49fe-a381-3ae78044768f",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "fields",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"affectedEntities\": [\n    {\n      \"entityId\": {\n        \"id\": \"in nisi dolore\",\n        \"type\": \"est i\"\n      },\n      \"name\": \"sint consequat\"\n    },\n    {\n      \"entityId\": {\n        \"id\": \"non sint\",\n        \"type\": \"ex dolore\"\n      },\n      \"name\": \"proident dolore\"\n    }\n  ],\n  \"displayId\": \"enim commodo ut\",\n  \"endTime\": 68945170,\n  \"impactLevel\": \"SERVICES\",\n  \"impactedEntities\": [\n    {\n      \"entityId\": {\n        \"id\": \"in culpa cillum quis in\",\n        \"type\": \"ipsum eu id Excepteur\"\n      },\n      \"name\": \"eiusmod\"\n    },\n    {\n      \"entityId\": {\n        \"id\": \"enim conseq\",\n        \"type\": \"enim quis aute\"\n      },\n      \"name\": \"ut reprehenderit Lorem aute\"\n    }\n  ],\n  \"managementZones\": [\n    {\n      \"name\": \"deserunt esse sunt aute\",\n      \"id\": \"in culpa nisi\"\n    },\n    {\n      \"name\": \"fugiat sed in magna\",\n      \"id\": \"sit do elit aliquip\"\n    }\n  ],\n  \"problemFilters\": [\n    {\n      \"id\": \"in ad\",\n      \"name\": \"Excepteur enim\"\n    },\n    {\n      \"id\": \"do\",\n      \"name\": \"ullamco dolor aliquip sunt\"\n    }\n  ],\n  \"problemId\": \"dolor eiusmod irure deserunt\",\n  \"severityLevel\": \"PERFORMANCE\",\n  \"startTime\": 57823638,\n  \"status\": \"CLOSED\",\n  \"title\": \"cillum laboris nisi\",\n  \"recentComments\": {\n    \"comments\": [\n      {\n        \"createdAtTimestamp\": 51018555,\n        \"authorName\": \"nostrud eiusmod Ut aliqua voluptate\",\n        \"context\": \"ad ea in\",\n        \"id\": \"elit sunt culpa ex\",\n        \"content\": \"sit\"\n      },\n      {\n        \"createdAtTimestamp\": -67778018,\n        \"authorName\": \"dolore\",\n        \"context\": \"nostrud enim\",\n        \"id\": \"aliquip\",\n        \"content\": \"irure laboris eu enim\"\n      }\n    ],\n    \"totalCount\": 42323337,\n    \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n    \"pageSize\": -21183540\n  },\n  \"impactAnalysis\": {\n    \"impacts\": [\n      {\n        \"estimatedAffectedUsers\": 69372069,\n        \"impactType\": \"APPLICATION\",\n        \"impactedEntity\": {\n          \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"esse id dolor eu\"\n        }\n      },\n      {\n        \"estimatedAffectedUsers\": 9365468,\n        \"impactType\": \"APPLICATION\",\n        \"impactedEntity\": {\n          \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"sit occaecat irure fugiat in\"\n        }\n      }\n    ]\n  },\n  \"rootCauseEntity\": {\n    \"entityId\": {\n      \"id\": \"consectetur i\",\n      \"type\": \"culpa \"\n    },\n    \"name\": \"dolore\"\n  },\n  \"linkedProblemInfo\": {\n    \"displayId\": \"sed ea dolore fugiat\",\n    \"problemId\": \"labore dolore\"\n  },\n  \"evidenceDetails\": {\n    \"details\": [\n      {\n        \"displayName\": \"eu dolor\",\n        \"entity\": {\n          \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"nulla reprehenderit fugiat\"\n        },\n        \"evidenceType\": \"MAINTENANCE_WINDOW\",\n        \"rootCauseRelevant\": false,\n        \"startTime\": 18053721,\n        \"groupingEntity\": {\n          \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"laborum quis\"\n        }\n      },\n      {\n        \"displayName\": \"consectetur nostrud\",\n        \"entity\": {\n          \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"culpa\"\n        },\n        \"evidenceType\": \"EVENT\",\n        \"rootCauseRelevant\": true,\n        \"startTime\": 24183926,\n        \"groupingEntity\": {\n          \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"aliqua labore culpa est\"\n        }\n      }\n    ],\n    \"totalCount\": -75022807\n  },\n  \"entityTags\": [\n    {\n      \"stringRepresentation\": \"cupidatat Duis ipsum\",\n      \"value\": \"dolore\",\n      \"key\": \"deserunt eiusmod do elit\",\n      \"context\": \"voluptate dolor Excepteur minim\"\n    },\n    {\n      \"stringRepresentation\": \"dolore cillum\",\n      \"value\": \"aliquip\",\n      \"key\": \"nisi nulla\",\n      \"context\": \"qui\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "320bd13f-442d-4b5e-9c5f-6f697caa27ce",
                            "name": "Closes the specified problem and adds a closing comment on it",
                            "request": {
                                "name": "Closes the specified problem and adds a closing comment on it",
                                "description": {},
                                "url": {
                                    "path": [
                                        "problems",
                                        ":problemId",
                                        "close"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "problemId",
                                            "description": "(Required) The ID of the required problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "5f8d7f44-d3b3-4c35-aa91-ce9af1e5848b",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId",
                                                "close"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"closeTimestamp\": -59688666,\n  \"closing\": false,\n  \"problemId\": \"do laborum sint consequat\",\n  \"comment\": {\n    \"createdAtTimestamp\": 44415755,\n    \"authorName\": \"qui magna culpa\",\n    \"context\": \"non dolore\",\n    \"id\": \"ex reprehenderit enim eu est\",\n    \"content\": \"tempor culpa\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "60129eca-c180-4033-9243-2cf4a6fabc8f",
                                    "name": "The problem is closed already the request hasn't been executed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId",
                                                "close"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "b3448336-775f-40f1-883e-eadb368d7d2a",
                            "name": "comments",
                            "item": [
                                {
                                    "id": "c88f87b5-1888-4935-a47f-86535c94c1db",
                                    "name": "Gets all comments on the specified problem",
                                    "request": {
                                        "name": "Gets all comments on the specified problem",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId",
                                                "comments"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "nextPageKey",
                                                    "value": "<string>",
                                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "pageSize",
                                                    "value": "<long>",
                                                    "description": "The amount of comments in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 10 is used."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "4873f85d-1895-4a11-917c-48e94423282d",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "nextPageKey",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "pageSize",
                                                            "value": "<long>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"comments\": [\n    {\n      \"createdAtTimestamp\": -14510055,\n      \"authorName\": \"ut Duis mollit\",\n      \"context\": \"aliqua quis qui laborum mollit\",\n      \"id\": \"enim in\",\n      \"content\": \"est labore commodo\"\n    },\n    {\n      \"createdAtTimestamp\": -97999951,\n      \"authorName\": \"veniam laboris\",\n      \"context\": \"eu velit\",\n      \"id\": \"dolore aliqua\",\n      \"content\": \"nisi\"\n    }\n  ],\n  \"totalCount\": 39059392,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"pageSize\": -65669633\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "e4058e69-d1e1-4702-999b-13ccc501c3ed",
                                    "name": "Adds a new comment on the specified problem",
                                    "request": {
                                        "name": "Adds a new comment on the specified problem",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId",
                                                "comments"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "0b50ffad-01b5-467e-bef8-04bfe7746c53",
                                            "name": "Success. The comment has been added.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Created",
                                            "code": 201,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "37a78ebb-4a5c-4287-93f4-584ed9ad10bd",
                                    "name": "{comment Id}",
                                    "item": [
                                        {
                                            "id": "f382c036-11c1-4a23-ba60-ebe402db56b3",
                                            "name": "Gets the specified comment on a problem",
                                            "request": {
                                                "name": "Gets the specified comment on a problem",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments",
                                                        ":commentId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "commentId",
                                                            "description": "(Required) The ID of the required comment."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "1c2cf93a-05f2-4bb2-84e9-91b9beba4f22",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "problems",
                                                                ":problemId",
                                                                "comments",
                                                                ":commentId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "problemId",
                                                                    "description": "(Required) The ID of the required problem."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "commentId",
                                                                    "description": "(Required) The ID of the required comment."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"createdAtTimestamp\": 92443280,\n  \"authorName\": \"labore anim sint dolore\",\n  \"context\": \"exercitation laboris\",\n  \"id\": \"cillum ut quis aliquip\",\n  \"content\": \"et non enim\"\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "9c86af22-61f8-476b-9462-808a7fb10c52",
                                            "name": "Updates the specified comment on a problem",
                                            "request": {
                                                "name": "Updates the specified comment on a problem",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments",
                                                        ":commentId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "commentId",
                                                            "description": "(Required) The ID of the required comment."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                },
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "674a739c-b142-4d63-a7be-e6e05c3497ea",
                                                    "name": "Success. The comment has been updated.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "problems",
                                                                ":problemId",
                                                                "comments",
                                                                ":commentId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "problemId",
                                                                    "description": "(Required) The ID of the required problem."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "commentId",
                                                                    "description": "(Required) The ID of the required comment."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "[object Object]",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "b4d79b51-870d-4cc8-8424-594f2967e903",
                                            "name": "Deletes the specified comment from a problem",
                                            "request": {
                                                "name": "Deletes the specified comment from a problem",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments",
                                                        ":commentId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "commentId",
                                                            "description": "(Required) The ID of the required comment."
                                                        }
                                                    ]
                                                },
                                                "method": "DELETE",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "8c5a41fc-9281-4f3e-b2e9-69165b94f820",
                                                    "name": "Success. The comment has been deleted.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "problems",
                                                                ":problemId",
                                                                "comments",
                                                                ":commentId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "problemId",
                                                                    "description": "(Required) The ID of the required problem."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "commentId",
                                                                    "description": "(Required) The ID of the required comment."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "5b99c230-fbe5-47d8-8ed7-5fe2ffeb7499",
            "name": "hub/capabilities/{extension FQN}",
            "item": [
                {
                    "id": "b2b84606-9041-4f38-bb98-1b7de55e511b",
                    "name": "Create/Replace metadata for an extension that does not have Dynatrace distributed metadata. | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Create/Replace metadata for an extension that does not have Dynatrace distributed metadata. | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "hub",
                                "capabilities",
                                ":extensionFQN",
                                "metadata"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "extensionFQN",
                                    "description": "(Required) "
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "logo",
                                    "type": "file",
                                    "description": "Logo of the extension"
                                },
                                {
                                    "key": "name",
                                    "value": "<string>",
                                    "type": "text",
                                    "description": ""
                                },
                                {
                                    "key": "description",
                                    "value": "<string>",
                                    "type": "text",
                                    "description": ""
                                },
                                {
                                    "key": "fileType",
                                    "value": "<string>",
                                    "type": "text",
                                    "description": ""
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "6aadfb0d-b489-492d-b34f-559604648991",
                            "name": "Extension metadata uploaded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "capabilities",
                                        ":extensionFQN",
                                        "metadata"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionFQN",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "Logo of the extension",
                                                "type": "text/plain"
                                            },
                                            "key": "logo",
                                            "value": "<binary>",
                                            "type": "text"
                                        },
                                        {
                                            "description": {
                                                "content": "",
                                                "type": "text/plain"
                                            },
                                            "key": "name",
                                            "value": "<string>",
                                            "type": "text"
                                        },
                                        {
                                            "description": {
                                                "content": "",
                                                "type": "text/plain"
                                            },
                                            "key": "description",
                                            "value": "<string>",
                                            "type": "text"
                                        },
                                        {
                                            "description": {
                                                "content": "",
                                                "type": "text/plain"
                                            },
                                            "key": "fileType",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d60cb760-a16c-4da1-858a-36e0344e5f78",
                    "name": "Sets or updates the release notes of the specified extension release | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Sets or updates the release notes of the specified extension release | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "hub",
                                "capabilities",
                                ":extensionFQN",
                                "releases",
                                ":extensionVersion",
                                "releaseNotes"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "extensionFQN",
                                    "description": "(Required) Fully qualified name of the extension"
                                },
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "extensionVersion",
                                    "description": "(Required) Version of the extension release"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "bccc75ac-1058-4484-9d74-be9f1b178a3e",
                            "name": "Extension release notes updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "capabilities",
                                        ":extensionFQN",
                                        "releases",
                                        ":extensionVersion",
                                        "releaseNotes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionFQN",
                                            "description": "(Required) Fully qualified name of the extension"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionVersion",
                                            "description": "(Required) Version of the extension release"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "179edb60-0408-4d0b-87ea-00ddfcb788b6",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "capabilities",
                                        ":extensionFQN",
                                        "releases",
                                        ":extensionVersion",
                                        "releaseNotes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionFQN",
                                            "description": "(Required) Fully qualified name of the extension"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionVersion",
                                            "description": "(Required) Version of the extension release"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8a7bce1a-a9ed-4d32-afe5-8e7644dee6a7",
                            "name": "Not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "capabilities",
                                        ":extensionFQN",
                                        "releases",
                                        ":extensionVersion",
                                        "releaseNotes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionFQN",
                                            "description": "(Required) Fully qualified name of the extension"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionVersion",
                                            "description": "(Required) Version of the extension release"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4ae19f9a-2979-437e-be25-b5ac25848540",
                            "name": "Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "capabilities",
                                        ":extensionFQN",
                                        "releases",
                                        ":extensionVersion",
                                        "releaseNotes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionFQN",
                                            "description": "(Required) Fully qualified name of the extension"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionVersion",
                                            "description": "(Required) Version of the extension release"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "5e2acbc4-86d2-479f-95c6-5597bfab3f52",
            "name": "Returns all releases",
            "request": {
                "name": "Returns all releases",
                "description": {},
                "url": {
                    "path": [
                        "releases"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [
                        {
                            "disabled": false,
                            "key": "from",
                            "value": "<string>",
                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                        },
                        {
                            "disabled": false,
                            "key": "to",
                            "value": "<string>",
                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                        },
                        {
                            "disabled": false,
                            "key": "nextPageKey",
                            "value": "<string>",
                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                        },
                        {
                            "disabled": false,
                            "key": "pageSize",
                            "value": "<long>",
                            "description": "The amount of Releases in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
                        },
                        {
                            "disabled": false,
                            "key": "demo",
                            "value": "false",
                            "description": "Get your Releases (`false`) or a set of demo Releases (`true`)."
                        },
                        {
                            "disabled": false,
                            "key": "releasesSelector",
                            "value": "",
                            "description": "Defines the scope of the query. Only Releases matching the provided criteria are included in the response.\n\nYou can add one or several of the criteria listed below.\n* Management zone: type(PROCESS_GROUP_INSTANCE),mzName(\"ManagementZone-A\"). Filters for all releases in the given management zone. The filter is case-sensitive.\n* Monitoring state: monitoringState(\"Active\") or monitoringState(\"Inactive\"). You can specify only one monitoring state. \n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Security vulnerability: affectedBySecurityProblem(\"Detected\") or affectedBySecurityProblem(\"Not detected\"). You can specify only one security vulnerability state.\n* Name: entityName(\"name\"). Filters for all releases that contain the given value in their name. The filter is case-insensitive.\n* Entity ID: entityId(\"id\").\n* Product: releasesProduct(\"product\"). Filters for all releases that contain the given value in their product. The filter is case-insensitive.\n* Stage: releasesStage(\"stage\"). Filters for all releases that contain the given value in their stage. The filter is case-insensitive.\n* Version: releasesVersion(\"version\"). Filters for all releases that contain the given value in their version. The filter is case-insensitive.\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/releases?releasesSelector=name(\"Server\"),monitoringState(\"Active\"),healthState(\"HEALTHY\"),releasesVersion(\"1.0.7\").\n\nThe special characters ~ and \" need to be escaped using a ~ (e.g. double quote search entityName(\"~\"\")."
                        },
                        {
                            "disabled": false,
                            "key": "sort",
                            "value": "name",
                            "description": "Specifies the field that is used for sorting the releases list.\nThe field has a sign prefix (+/-) which corresponds to the sorting order ('+' for ascending and '-' for descending). If no sign prefix is set, then the default ascending sorting order will be applied. You can sort by the following properties:\n* 'product': Product name\n* 'name': Release name\n* 'stage': Stage name\n* 'version': Version\n* 'instances': Instances\n* 'traffic': Traffic\n\nIf not set, the ascending order sorting for name is applied."
                        }
                    ],
                    "variable": []
                },
                "header": [
                    {
                        "key": "Accept",
                        "value": "application/json; charset=utf-8"
                    }
                ],
                "method": "GET",
                "auth": {
                    "type": "apikey",
                    "apikey": [
                        {
                            "key": "key",
                            "value": "Authorization"
                        },
                        {
                            "key": "value",
                            "value": "Api-Token {{DT_TOKEN}}"
                        },
                        {
                            "key": "in",
                            "value": "header"
                        }
                    ]
                }
            },
            "response": [
                {
                    "id": "909c7888-e733-4105-ad8b-0fc5aeece787",
                    "name": "Success",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "releases"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "from",
                                    "value": "<string>"
                                },
                                {
                                    "key": "to",
                                    "value": "<string>"
                                },
                                {
                                    "key": "nextPageKey",
                                    "value": "<string>"
                                },
                                {
                                    "key": "pageSize",
                                    "value": "<long>"
                                },
                                {
                                    "key": "demo",
                                    "value": "false"
                                },
                                {
                                    "key": "releasesSelector",
                                    "value": ""
                                },
                                {
                                    "key": "sort",
                                    "value": "name"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Api-Token {{DT_TOKEN}}"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        }
                    ],
                    "body": "{\n  \"totalCount\": 79556373,\n  \"releases\": [\n    {\n      \"securityVulnerabilitiesEnabled\": true,\n      \"releaseEntityId\": \"PROCESS_GROUP-DFDBAC9CBF104253\",\n      \"securityVulnerabilitiesCount\": 4,\n      \"affectedByProblems\": true,\n      \"product\": \"Sockshop\",\n      \"affectedBySecurityVulnerabilities\": true,\n      \"throughput\": 923234,\n      \"softwareTechs\": [\n        {\n          \"technology\": \"JAVA\",\n          \"edition\": \"OpenJDK\",\n          \"version\": \"1.8.0_242\",\n          \"verbatimType\": \"Java\"\n        }\n      ],\n      \"instances\": [\n        {\n          \"securityVulnerabilities\": [\n            \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n          ],\n          \"buildVersion\": \"223005\",\n          \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n          \"problems\": [\n            \"573177299181554914_1616573184015V2\"\n          ]\n        },\n        {\n          \"securityVulnerabilities\": [\n            \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n          ],\n          \"buildVersion\": \"223005\",\n          \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n          \"problems\": [\n            \"573177299181554914_1616573184015V2\"\n          ]\n        }\n      ],\n      \"running\": true,\n      \"version\": \"1.195.34.12341232423-012342\",\n      \"problemCount\": 4,\n      \"stage\": \"staging\",\n      \"name\": \"cluster\"\n    },\n    {\n      \"securityVulnerabilitiesEnabled\": true,\n      \"releaseEntityId\": \"PROCESS_GROUP-DFDBAC9CBF104253\",\n      \"securityVulnerabilitiesCount\": 4,\n      \"affectedByProblems\": true,\n      \"product\": \"Sockshop\",\n      \"affectedBySecurityVulnerabilities\": true,\n      \"throughput\": 923234,\n      \"softwareTechs\": [\n        {\n          \"technology\": \"JAVA\",\n          \"edition\": \"OpenJDK\",\n          \"version\": \"1.8.0_242\",\n          \"verbatimType\": \"Java\"\n        }\n      ],\n      \"instances\": [\n        {\n          \"securityVulnerabilities\": [\n            \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n          ],\n          \"buildVersion\": \"223005\",\n          \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n          \"problems\": [\n            \"573177299181554914_1616573184015V2\"\n          ]\n        },\n        {\n          \"securityVulnerabilities\": [\n            \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n          ],\n          \"buildVersion\": \"223005\",\n          \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n          \"problems\": [\n            \"573177299181554914_1616573184015V2\"\n          ]\n        }\n      ],\n      \"running\": true,\n      \"version\": \"1.195.34.12341232423-012342\",\n      \"problemCount\": 4,\n      \"stage\": \"staging\",\n      \"name\": \"cluster\"\n    }\n  ],\n  \"releasesWithProblems\": 50500345,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"pageSize\": -92633788\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                },
                {
                    "id": "8048fec6-74c9-4fd4-940e-193c1b7d31cd",
                    "name": "Failed. The input is invalid.",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "releases"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "from",
                                    "value": "<string>"
                                },
                                {
                                    "key": "to",
                                    "value": "<string>"
                                },
                                {
                                    "key": "nextPageKey",
                                    "value": "<string>"
                                },
                                {
                                    "key": "pageSize",
                                    "value": "<long>"
                                },
                                {
                                    "key": "demo",
                                    "value": "false"
                                },
                                {
                                    "key": "releasesSelector",
                                    "value": ""
                                },
                                {
                                    "key": "sort",
                                    "value": "name"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Api-Token {{DT_TOKEN}}"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        }
                    ],
                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                }
            ],
            "event": [],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            }
        },
        {
            "id": "565668e1-06cd-47db-9996-850162e1cd24",
            "name": "rum",
            "item": [
                {
                    "id": "4aee4287-d38a-444d-a4dc-f65e6404145b",
                    "name": "cities/{country Code}",
                    "item": [
                        {
                            "id": "d433df14-2e84-487f-8664-dc9a426f2530",
                            "name": "Lists all the regions and their cities, for a given country code.",
                            "request": {
                                "name": "Lists all the regions and their cities, for a given country code.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "rum",
                                        "cities",
                                        ":countryCode"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "countryCode",
                                            "description": "(Required) Specify the country code to query."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "971d1dfc-9062-4303-b1ec-a813b48a2d88",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "cities",
                                                ":countryCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) Specify the country code to query."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"CountryName\": \"France\",\n  \"CountryCode\": \"FR\",\n  \"regionCount\": 13,\n  \"regions\": [\n    {\n      \"name\": \"Auvergne-Rhone-Alpes\",\n      \"code\": \"ARA\",\n      \"cities\": [\n        {\n          \"name\": \"Abondance\",\n          \"latitude\": 46.2806,\n          \"longitude\": 6.7217\n        },\n        {\n          \"name\": \"Abrest\",\n          \"latitude\": 46.1008,\n          \"longitude\": 3.4463\n        }\n      ]\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "e023a10b-4593-498e-a339-91b981ecd46c",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "cities",
                                                ":countryCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) Specify the country code to query."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "a378b060-a583-4b7a-821d-2d832664c1e0",
                            "name": "Lists all the cities, for a given region of a country code.",
                            "request": {
                                "name": "Lists all the cities, for a given region of a country code.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "rum",
                                        "cities",
                                        ":countryCode",
                                        ":regionCode"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "countryCode",
                                            "description": "(Required) Specify the country code to query."
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "regionCode",
                                            "description": "(Required) Specify the region code to query."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "2d0a265b-600c-4895-9c78-97cb3645884c",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "cities",
                                                ":countryCode",
                                                ":regionCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) Specify the country code to query."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "regionCode",
                                                    "description": "(Required) Specify the region code to query."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"countryName\": \"occaecat et nulla\",\n  \"countryCode\": \"ipsum sunt\",\n  \"regionCount\": 62162295,\n  \"regions\": [\n    {\n      \"name\": \"Burgenland\",\n      \"code\": \"01\"\n    },\n    {\n      \"name\": \"Burgenland\",\n      \"code\": \"01\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "62ecf705-26ed-4a8f-a041-67b53b575127",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "cities",
                                                ":countryCode",
                                                ":regionCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) Specify the country code to query."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "regionCode",
                                                    "description": "(Required) Specify the region code to query."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "b635bbc7-f0c9-41f7-bb70-a34e8d3a094e",
                    "name": "Lists all the countries",
                    "request": {
                        "name": "Lists all the countries",
                        "description": {},
                        "url": {
                            "path": [
                                "rum",
                                "countries"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "324232c2-4e82-4fcc-93d2-9a5ee389d25a",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "rum",
                                        "countries"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"countryCount\": 252,\n  \"countries\": [\n    {\n      \"name\": \"France\",\n      \"code\": \"FR\"\n    },\n    {\n      \"name\": \"Belgium\",\n      \"code\": \"BE\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "6c4a72b8-5869-468d-855f-310ccd63531d",
                    "name": "regions",
                    "item": [
                        {
                            "id": "e14b7ad8-a158-431f-a9d2-2939a63a14be",
                            "name": "Lists all the countries and their regions",
                            "request": {
                                "name": "Lists all the countries and their regions",
                                "description": {},
                                "url": {
                                    "path": [
                                        "rum",
                                        "regions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "70de8a0a-7f03-4db0-8086-ab011c65dca3",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "regions"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"countryCount\": 252,\n  \"countries\": [\n    {\n      \"name\": \"France\",\n      \"code\": \"FR\",\n      \"regionCount\": 13,\n      \"regions\": [\n        {\n          \"name\": \"Auvergne-Rhone-Alpes\",\n          \"code\": \"ARA\"\n        },\n        {\n          \"name\": \"Bourgogne-Franche-Comte\",\n          \"code\": \"BFC\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Belgium\",\n      \"code\": \"BE\",\n      \"regionCount\": 11,\n      \"regions\": [\n        {\n          \"name\": \"Antwerp Province\",\n          \"code\": \"01\"\n        },\n        {\n          \"name\": \"Brussels Captial\",\n          \"code\": \"11\"\n        }\n      ]\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "ba33bbfa-303c-41e5-acdb-1f939abedb75",
                            "name": "Lists all regions for a given country code",
                            "request": {
                                "name": "Lists all regions for a given country code",
                                "description": {},
                                "url": {
                                    "path": [
                                        "rum",
                                        "regions",
                                        ":countryCode"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "countryCode",
                                            "description": "(Required) Specify the country code to query."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "77062540-3481-4e39-b792-f08aef60743b",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "regions",
                                                ":countryCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) Specify the country code to query."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"countryName\": \"France\",\n  \"countryCode\": \"FR\",\n  \"regionCount\": 13,\n  \"regions\": [\n    {\n      \"name\": \"Auvergne-Rhone-Alpes\",\n      \"code\": \"ARA\"\n    },\n    {\n      \"name\": \"Bourgogne-Franche-Comte\",\n      \"code\": \"BFC\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "a508ae4f-d4d7-425c-a913-5b0ed2cec0f3",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "regions",
                                                ":countryCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) Specify the country code to query."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "bff57a2d-11dd-4245-92e6-28b29cba7a44",
            "name": "settings",
            "item": [
                {
                    "id": "8854f1b5-7e9e-4998-a3c3-6fa6d85d0389",
                    "name": "objects",
                    "item": [
                        {
                            "id": "6e166578-d8aa-47f0-a844-a54e75049dd3",
                            "name": "Lists persisted settings objects",
                            "request": {
                                "name": "Lists persisted settings objects",
                                "description": {
                                    "content": "Lists persisted settings objects for selected schemas at selected scopes (or entities).\n\nIf nothing is persisted, no items will be returned.\n\nTo query the effective values (including schema defaults) please see [/settings/effectiveValues](#/Settings%20-%20Objects/getEffectiveSettingsValues).",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "settings",
                                        "objects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "schemaIds",
                                            "value": "<string>",
                                            "description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nTo load the first page, when the **nextPageKey** is not set, either this parameter or **scopes** is required. \n\nTo load all objects belonging to the given schema IDs leave the **scopes** parameter empty."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "scopes",
                                            "value": "<string>",
                                            "description": "A list of comma-separated scopes, that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scopes. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, either this parameter or **schemaIds** is required. \n\nTo load all objects belonging to the given scopes leave the **schemaIds** parameter empty."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "fields",
                                            "value": "objectId,value",
                                            "description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `objectId,value`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "nextPageKey",
                                            "value": "<string>",
                                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                        },
                                        {
                                            "disabled": false,
                                            "key": "pageSize",
                                            "value": "<long>",
                                            "description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "b6718a2c-ff84-4e41-81c7-0104eebb2934",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "scopes",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fields",
                                                    "value": "objectId,value"
                                                },
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"items\": [\n    {\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"schemaVersion\": \"1.0.0\",\n      \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"externalId\": \"incididunt\",\n      \"author\": \"john.doe@example.com\",\n      \"modified\": -78225696,\n      \"scope\": \"HOST-D3A3C5A146830A79\",\n      \"summary\": \"ut adipisicing veniam\",\n      \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"created\": 33651800,\n      \"value\": {\n        \"autoMonitoring\": true\n      }\n    },\n    {\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"schemaVersion\": \"1.0.0\",\n      \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"externalId\": \"anim esse fugiat\",\n      \"author\": \"john.doe@example.com\",\n      \"modified\": 4265632,\n      \"scope\": \"HOST-D3A3C5A146830A79\",\n      \"summary\": \"adipisicing dolor\",\n      \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"created\": -19659741,\n      \"value\": {\n        \"autoMonitoring\": true\n      }\n    }\n  ],\n  \"pageSize\": -94102990,\n  \"totalCount\": -30582191,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "c24a0da3-fd00-4c5c-8aee-d8e02b47940b",
                                    "name": "Failed. Forbidden.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "scopes",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fields",
                                                    "value": "objectId,value"
                                                },
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "3f237066-7199-4b05-bd80-61b98a32fcc0",
                                    "name": "Failed. The specified schema or scope is not found.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "scopes",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fields",
                                                    "value": "objectId,value"
                                                },
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "ed172b0d-62d7-4fa2-9c02-e2cabdfd0179",
                            "name": "Creates a new settings object",
                            "request": {
                                "name": "Creates a new settings object",
                                "description": {
                                    "content": "You can upload several objects at once. In that case each object returns its own response code. Check the response body for details.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "settings",
                                        "objects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "validateOnly",
                                            "value": "false",
                                            "description": "If `true`, the request runs only validation of the submitted settings objects, without saving them."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "1ea64333-7519-44d8-8a6b-d08159732405",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": -66495125,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"eu reprehenderit\",\n          \"message\": \"Duis eu velit\",\n          \"path\": \"proide\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"tempor id dolore nisi nulla\",\n          \"message\": \"consequat minim in in do\",\n          \"path\": \"Duis nostrud anim\"\n        }\n      ],\n      \"code\": 19524313,\n      \"message\": \"ea\"\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  },\n  {\n    \"code\": -24643955,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"ut do\",\n          \"message\": \"ex incididunt\",\n          \"path\": \"officia consectetur in veli\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"proident quis tempor do\",\n          \"message\": \"eu voluptate\",\n          \"path\": \"qui commodo aliqua ut\"\n        }\n      ],\n      \"code\": 56817484,\n      \"message\": \"temp\"\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "c99fd789-df8d-4d7c-a9d8-c75f59b8bd1d",
                                    "name": "Multi-status: different objects in the payload resulted in different statuses.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Multi-Status (WebDAV) (RFC 4918)",
                                    "code": 207,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": -66495125,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"eu reprehenderit\",\n          \"message\": \"Duis eu velit\",\n          \"path\": \"proide\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"tempor id dolore nisi nulla\",\n          \"message\": \"consequat minim in in do\",\n          \"path\": \"Duis nostrud anim\"\n        }\n      ],\n      \"code\": 19524313,\n      \"message\": \"ea\"\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  },\n  {\n    \"code\": -24643955,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"ut do\",\n          \"message\": \"ex incididunt\",\n          \"path\": \"officia consectetur in veli\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"proident quis tempor do\",\n          \"message\": \"eu voluptate\",\n          \"path\": \"qui commodo aliqua ut\"\n        }\n      ],\n      \"code\": 56817484,\n      \"message\": \"temp\"\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "92393bd4-4bee-4d59-8e2f-b18b13b9010e",
                                    "name": "Failed. Schema validation failed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": -66495125,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"eu reprehenderit\",\n          \"message\": \"Duis eu velit\",\n          \"path\": \"proide\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"tempor id dolore nisi nulla\",\n          \"message\": \"consequat minim in in do\",\n          \"path\": \"Duis nostrud anim\"\n        }\n      ],\n      \"code\": 19524313,\n      \"message\": \"ea\"\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  },\n  {\n    \"code\": -24643955,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"ut do\",\n          \"message\": \"ex incididunt\",\n          \"path\": \"officia consectetur in veli\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"proident quis tempor do\",\n          \"message\": \"eu voluptate\",\n          \"path\": \"qui commodo aliqua ut\"\n        }\n      ],\n      \"code\": 56817484,\n      \"message\": \"temp\"\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "8aa9df4b-8e4a-4b1d-b899-bb46e5c4da99",
                                    "name": "Failed. Forbidden.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "60f5d46b-36ef-4f01-bac0-de0aab61c75e",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": -66495125,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"eu reprehenderit\",\n          \"message\": \"Duis eu velit\",\n          \"path\": \"proide\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"tempor id dolore nisi nulla\",\n          \"message\": \"consequat minim in in do\",\n          \"path\": \"Duis nostrud anim\"\n        }\n      ],\n      \"code\": 19524313,\n      \"message\": \"ea\"\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  },\n  {\n    \"code\": -24643955,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"ut do\",\n          \"message\": \"ex incididunt\",\n          \"path\": \"officia consectetur in veli\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"proident quis tempor do\",\n          \"message\": \"eu voluptate\",\n          \"path\": \"qui commodo aliqua ut\"\n        }\n      ],\n      \"code\": 56817484,\n      \"message\": \"temp\"\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "c4397470-891e-4432-9045-f0c2f20f541a",
                                    "name": "Failed. Conflicting resource.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": -66495125,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"eu reprehenderit\",\n          \"message\": \"Duis eu velit\",\n          \"path\": \"proide\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"tempor id dolore nisi nulla\",\n          \"message\": \"consequat minim in in do\",\n          \"path\": \"Duis nostrud anim\"\n        }\n      ],\n      \"code\": 19524313,\n      \"message\": \"ea\"\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  },\n  {\n    \"code\": -24643955,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"ut do\",\n          \"message\": \"ex incididunt\",\n          \"path\": \"officia consectetur in veli\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"proident quis tempor do\",\n          \"message\": \"eu voluptate\",\n          \"path\": \"qui commodo aliqua ut\"\n        }\n      ],\n      \"code\": 56817484,\n      \"message\": \"temp\"\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "a3535b56-4e7d-4072-a69a-adcf6f1ac7de",
                            "name": "{object Id}",
                            "item": [
                                {
                                    "id": "90aab525-a210-4062-a594-2073a0982149",
                                    "name": "Gets the specified settings object",
                                    "request": {
                                        "name": "Gets the specified settings object",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects",
                                                ":objectId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "objectId",
                                                    "description": "(Required) The ID of the required settings object."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "fab3972c-cce7-4f76-995c-4b9ffe83e598",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"externalId\": \"laborum aliquip culp\",\n  \"author\": \"john.doe@example.com\",\n  \"modified\": 92786606,\n  \"scope\": \"HOST-D3A3C5A146830A79\",\n  \"summary\": \"aliqua culpa Excepteur\",\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"created\": -3281156,\n  \"value\": {\n    \"autoMonitoring\": true\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "7439b8a7-5fa1-444b-8071-8d92a74e61c1",
                                            "name": "Failed. Forbidden.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "35ab4bb9-35bf-469e-84db-9fbd42ebf59a",
                                            "name": "No object available for the given objectId",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "89c43999-c46c-49b6-a750-4c5e3e9d7185",
                                    "name": "Updates an existing settings object",
                                    "request": {
                                        "name": "Updates an existing settings object",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects",
                                                ":objectId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "objectId",
                                                    "description": "(Required) The ID of the required settings object."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "f630aff7-b2fc-4c03-a993-3b38c74bab85",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -23658385,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"quis ullamco irure\",\n        \"message\": \"dolore enim in\",\n        \"path\": \"culpa sunt Ut dolore\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"dolore\",\n        \"message\": \"in laboris\",\n        \"path\": \"officia aliqua dolor\"\n      }\n    ],\n    \"code\": 25858637,\n    \"message\": \"occaecat anim ex aute do\"\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "66431553-c180-485e-a6d1-cf4cfe3dce40",
                                            "name": "Failed. Schema validation failed.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -23658385,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"quis ullamco irure\",\n        \"message\": \"dolore enim in\",\n        \"path\": \"culpa sunt Ut dolore\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"dolore\",\n        \"message\": \"in laboris\",\n        \"path\": \"officia aliqua dolor\"\n      }\n    ],\n    \"code\": 25858637,\n    \"message\": \"occaecat anim ex aute do\"\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "59d8c58f-b4c7-4543-bf0e-70b83bfdce1b",
                                            "name": "Failed. Forbidden.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "aec3cfa2-03ac-4cb4-8755-fc5f280ecb82",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -23658385,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"quis ullamco irure\",\n        \"message\": \"dolore enim in\",\n        \"path\": \"culpa sunt Ut dolore\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"dolore\",\n        \"message\": \"in laboris\",\n        \"path\": \"officia aliqua dolor\"\n      }\n    ],\n    \"code\": 25858637,\n    \"message\": \"occaecat anim ex aute do\"\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "c1f099e7-9927-4006-b399-cf1e43e0a9dd",
                                            "name": "Failed. Conflicting resource.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -23658385,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"quis ullamco irure\",\n        \"message\": \"dolore enim in\",\n        \"path\": \"culpa sunt Ut dolore\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"dolore\",\n        \"message\": \"in laboris\",\n        \"path\": \"officia aliqua dolor\"\n      }\n    ],\n    \"code\": 25858637,\n    \"message\": \"occaecat anim ex aute do\"\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "93624eda-b598-427b-b553-79c98840094c",
                                    "name": "Deletes the specified settings object",
                                    "request": {
                                        "name": "Deletes the specified settings object",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects",
                                                ":objectId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "updateToken",
                                                    "value": "<string>",
                                                    "description": "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "objectId",
                                                    "description": "(Required) The ID of the required settings object."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "5dc70445-690b-4621-8d73-0ba2b0d8b39e",
                                            "name": "Success. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "d7d9cf2f-28f3-44e2-8dfa-5261310a24e9",
                                            "name": "Failed. Schema validation failed.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -23658385,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"quis ullamco irure\",\n        \"message\": \"dolore enim in\",\n        \"path\": \"culpa sunt Ut dolore\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"dolore\",\n        \"message\": \"in laboris\",\n        \"path\": \"officia aliqua dolor\"\n      }\n    ],\n    \"code\": 25858637,\n    \"message\": \"occaecat anim ex aute do\"\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "b5235e1b-19d1-4ce3-841b-b289ba445cef",
                                            "name": "Failed. Forbidden.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "bbb5f043-f499-4d42-b1aa-b2530f4b406c",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -23658385,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"quis ullamco irure\",\n        \"message\": \"dolore enim in\",\n        \"path\": \"culpa sunt Ut dolore\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"dolore\",\n        \"message\": \"in laboris\",\n        \"path\": \"officia aliqua dolor\"\n      }\n    ],\n    \"code\": 25858637,\n    \"message\": \"occaecat anim ex aute do\"\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "a14722db-4ea5-42bf-a0c4-994c5979fd25",
                                            "name": "Failed. Conflicting resource.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -23658385,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"quis ullamco irure\",\n        \"message\": \"dolore enim in\",\n        \"path\": \"culpa sunt Ut dolore\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"dolore\",\n        \"message\": \"in laboris\",\n        \"path\": \"officia aliqua dolor\"\n      }\n    ],\n    \"code\": 25858637,\n    \"message\": \"occaecat anim ex aute do\"\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "8f195fb2-ab76-489c-b0f2-2168b3169ae3",
                    "name": "Lists effective settings values",
                    "request": {
                        "name": "Lists effective settings values",
                        "description": {
                            "content": "Lists effective settings values for selected schemas at a selected scope (or entity). This operation evaluates the hierarchy of persisted objects (see [/settings/objects](#/Settings%20-%20Objects/getSettingsObjects))\n\nIt will always return a result for a schema/scope combination, even if the schema would not be relevant to the given scope/entity.\n\nIf no object along the hierarchy is persisted, the default value as defined in the schema will be returned.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "settings",
                                "effectiveValues"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "schemaIds",
                                    "value": "<string>",
                                    "description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nOnly considered on load of the first page, when the **nextPageKey** is not set."
                                },
                                {
                                    "disabled": false,
                                    "key": "scope",
                                    "value": "<string>",
                                    "description": "The scope that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scope. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "origin,value",
                                    "description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `origin,value`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2c977429-5be8-45cd-9fac-9083926577c3",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "settings",
                                        "effectiveValues"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "schemaIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "origin,value"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"items\": [\n    {\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"schemaVersion\": \"1.0.0\",\n      \"externalId\": \"consectetur ut exercitation veniam\",\n      \"author\": \"john.doe@example.com\",\n      \"modified\": 15299937,\n      \"summary\": \"ex in culpa minim\",\n      \"origin\": \"HOST-D3A3C5A146830A79\",\n      \"created\": -10517721,\n      \"value\": {\n        \"autoMonitoring\": true\n      }\n    },\n    {\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"schemaVersion\": \"1.0.0\",\n      \"externalId\": \"non pariatur\",\n      \"author\": \"john.doe@example.com\",\n      \"modified\": 41007496,\n      \"summary\": \"est consectetur enim sint in\",\n      \"origin\": \"HOST-D3A3C5A146830A79\",\n      \"created\": -76364875,\n      \"value\": {\n        \"autoMonitoring\": true\n      }\n    }\n  ],\n  \"pageSize\": -2906821,\n  \"totalCount\": 37389523,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "41e2e3b9-82b6-4d73-9d2d-8e3a28c83a67",
                            "name": "Failed. The specified schema or scope is not found.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "settings",
                                        "effectiveValues"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "schemaIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "origin,value"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "fc51a29c-2148-47e0-904f-2dc52a93a754",
                    "name": "schemas",
                    "item": [
                        {
                            "id": "86932038-5854-412c-b25b-87c1d9582c46",
                            "name": "Lists available settings schemas",
                            "request": {
                                "name": "Lists available settings schemas",
                                "description": {},
                                "url": {
                                    "path": [
                                        "settings",
                                        "schemas"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "98a2a561-35a4-44d8-ac53-a71a63af0a04",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"items\": [\n    {\n      \"displayName\": \"Built-in container monitoring rules\",\n      \"latestSchemaVersion\": \"1.4.2\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\"\n    },\n    {\n      \"displayName\": \"Built-in container monitoring rules\",\n      \"latestSchemaVersion\": \"1.4.2\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\"\n    }\n  ],\n  \"totalCount\": 1\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "3c6b3fa0-6c8c-4ad3-bc01-df908c292057",
                            "name": "Gets parameters of the specified settings schema",
                            "request": {
                                "name": "Gets parameters of the specified settings schema",
                                "description": {},
                                "url": {
                                    "path": [
                                        "settings",
                                        "schemas",
                                        ":schemaId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "schemaVersion",
                                            "value": "<string>",
                                            "description": "The version of the required schema. \n\n If not set, the most recent version is returned."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "schemaId",
                                            "description": "(Required) The ID of the required schema."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "8f320099-92ad-479c-8f24-dad994ebd436",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas",
                                                ":schemaId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaVersion",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaId",
                                                    "description": "(Required) The ID of the required schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "null",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "9f09113e-63b2-44c8-82b4-461cf3dec60e",
                                    "name": "Failed. Forbidden.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas",
                                                ":schemaId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaVersion",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaId",
                                                    "description": "(Required) The ID of the required schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "2ab81b04-3054-4a48-a9b1-dff9e4b5e81b",
                                    "name": "Failed. The specified schema doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas",
                                                ":schemaId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaVersion",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaId",
                                                    "description": "(Required) The ID of the required schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "425e72ef-8b1b-4175-9684-34cebe5352bd",
            "name": "slo",
            "item": [
                {
                    "id": "765d1baf-7a28-46d9-b069-cebb697e3dd2",
                    "name": "Lists all available SLOs along with calculated values",
                    "request": {
                        "name": "Lists all available SLOs along with calculated values",
                        "description": {
                            "content": "By default the values are calculated for the SLO's own timeframe. You can use a custom timeframe: \n\n1. Set the **timeFrame** parameter to `GTF`. \n2. Provide the timeframe in **from** and **to** parameters.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "slo"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of SLOs in a single response payload. \n\nThe maximal allowed page size is 10000. \n\nIf not set, 10 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "sloSelector",
                                    "value": "",
                                    "description": "The scope of the query. Only SLOs matching the provided criteria are included in the response. \n\nYou can add one or several of the criteria listed below.\n* ID: id(\"id\"). Filters for an SLO with the given ID.\n* Name: name(\"name\"). Filters for an SLO with the given name. The filter is case-sensitive.\n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Text: text(\"value\"). Filters for all SLOs that contain the given value in their name or description. The filter is case-insensitive.\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/slo?sloSelector=name(\"Service Availability\"), .../api/v2/slo?sloSelector=id(\"id\"), .../api/v2/slo?sloSelector=text(\"Description\"),healthState(\"HEALTHY\").\n\nThe special characters ~ and \" need to be escaped using a ~ (e.g. double quote search text(\"~\"\")."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "name",
                                    "description": "The sorting of SLO entries: \n* `name`: Names in ascending order. \n* `-name`: Names in descending order. \n\nIf not set, the ascending order is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "timeFrame",
                                    "value": "CURRENT",
                                    "description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "demo",
                                    "value": "false",
                                    "description": "Get your SLOs (`false`) or a set of demo SLOs (`true`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "evaluate",
                                    "value": "false",
                                    "description": "Get your SLOs without them being evaluated (`false`) or with evaluations (`true`) with maximum `pageSize` of 25."
                                },
                                {
                                    "disabled": false,
                                    "key": "enabledSlos",
                                    "value": "true",
                                    "description": "Get your enabled SLOs (`true`), disabled ones (`false`) or both enabled and disabled ones (`all`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "showGlobalSlos",
                                    "value": "true",
                                    "description": "Get your global SLOs (`true`) regardless of the selected filter or filter them out (`false`)."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "96280cf1-d8a4-438d-adcc-99c0c8d9af3a",
                            "name": "Success. The response contains the parameters and calculated values of the requested SLO.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sloSelector",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "name"
                                        },
                                        {
                                            "key": "timeFrame",
                                            "value": "CURRENT"
                                        },
                                        {
                                            "key": "demo",
                                            "value": "false"
                                        },
                                        {
                                            "key": "evaluate",
                                            "value": "false"
                                        },
                                        {
                                            "key": "enabledSlos",
                                            "value": "true"
                                        },
                                        {
                                            "key": "showGlobalSlos",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -4943211,\n  \"slo\": [\n    {\n      \"problemFilters\": [\n        \"[type(\\\"SERVICE\\\")]\"\n      ],\n      \"errorBudget\": 1.25,\n      \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n      \"useRateMetric\": true,\n      \"metricRate\": \"builtin:service.successes.server.rate\",\n      \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n      \"metricDenominator\": \"builtin:service.requestCount.server\",\n      \"evaluationType\": \"AGGREGATE\",\n      \"errorBudgetBurnRate\": {\n        \"burnRateType\": \"SLOW\",\n        \"burnRateValue\": 1.25,\n        \"burnRateVisualizationEnabled\": true,\n        \"fastBurnThreshold\": 1.5,\n        \"sloValue\": 95,\n        \"estimatedTimeToConsumeErrorBudget\": 24\n      },\n      \"evaluatedPercentage\": 96.25,\n      \"burnRateMetricKey\": \"func:slo.errorBudgetBurnRate.payment_service_availability\",\n      \"numeratorValue\": 80,\n      \"denominatorValue\": 90,\n      \"relatedOpenProblems\": 13916390,\n      \"relatedTotalProblems\": -66907616,\n      \"hasAccess\": true,\n      \"metricKey\": \"func:slo.payment_service_availability\",\n      \"timeframe\": \"-1d\",\n      \"filter\": \"type(\\\"SERVICE\\\")\",\n      \"description\": \"Rate of successful payments per week\",\n      \"enabled\": true,\n      \"status\": \"WARNING\",\n      \"error\": \"NONE\",\n      \"warning\": 97.5,\n      \"name\": \"Payment service availability\",\n      \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n      \"target\": 95\n    },\n    {\n      \"problemFilters\": [\n        \"[type(\\\"SERVICE\\\")]\"\n      ],\n      \"errorBudget\": 1.25,\n      \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n      \"useRateMetric\": true,\n      \"metricRate\": \"builtin:service.successes.server.rate\",\n      \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n      \"metricDenominator\": \"builtin:service.requestCount.server\",\n      \"evaluationType\": \"AGGREGATE\",\n      \"errorBudgetBurnRate\": {\n        \"burnRateType\": \"SLOW\",\n        \"burnRateValue\": 1.25,\n        \"burnRateVisualizationEnabled\": true,\n        \"fastBurnThreshold\": 1.5,\n        \"sloValue\": 95,\n        \"estimatedTimeToConsumeErrorBudget\": 24\n      },\n      \"evaluatedPercentage\": 96.25,\n      \"burnRateMetricKey\": \"func:slo.errorBudgetBurnRate.payment_service_availability\",\n      \"numeratorValue\": 80,\n      \"denominatorValue\": 90,\n      \"relatedOpenProblems\": -54919171,\n      \"relatedTotalProblems\": 99406944,\n      \"hasAccess\": true,\n      \"metricKey\": \"func:slo.payment_service_availability\",\n      \"timeframe\": \"-1d\",\n      \"filter\": \"type(\\\"SERVICE\\\")\",\n      \"description\": \"Rate of successful payments per week\",\n      \"enabled\": true,\n      \"status\": \"WARNING\",\n      \"error\": \"NONE\",\n      \"warning\": 97.5,\n      \"name\": \"Payment service availability\",\n      \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n      \"target\": 95\n    }\n  ],\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"pageSize\": 74138002\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5c7e638f-a5e5-40e8-b8d3-cd5a971db894",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sloSelector",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "name"
                                        },
                                        {
                                            "key": "timeFrame",
                                            "value": "CURRENT"
                                        },
                                        {
                                            "key": "demo",
                                            "value": "false"
                                        },
                                        {
                                            "key": "evaluate",
                                            "value": "false"
                                        },
                                        {
                                            "key": "enabledSlos",
                                            "value": "true"
                                        },
                                        {
                                            "key": "showGlobalSlos",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e4b7dc8b-7448-40c1-8284-a7994a4fdc0f",
                    "name": "Creates a new SLO",
                    "request": {
                        "name": "Creates a new SLO",
                        "description": {},
                        "url": {
                            "path": [
                                "slo"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "c952d3d3-a632-4a17-8f4c-824e748a8b29",
                            "name": "Success. The new SLO has been created. Response doesn't have a body. The **location** response header contains the ID of the new SLO.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "disabled": false,
                                    "description": "The location of the new resource created by this request.",
                                    "key": "location",
                                    "value": ""
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "0317bcd4-8429-4c6e-8435-ff4e4ebad209",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "afe78dbf-b7e1-4b68-85cb-035cda220d18",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ebcd0a4b-e27d-4c4c-938f-f73e8b8f85cd",
                            "name": "Failed. Conflicting resource.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b6d7e651-5394-413c-a96b-936c0df9d44f",
                            "name": "Internal server error.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b6a56f26-6a7b-4b26-b024-59ec0047ad43",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "94dbf0e8-b757-4a8a-9920-466b5bf82c69",
                            "name": "Gets parameters and calculated values of a specific SLO",
                            "request": {
                                "name": "Gets parameters and calculated values of a specific SLO",
                                "description": {
                                    "content": "If **from** and **to** parameters are provided, the SLO is calculated for that timeframe; otherwise the SLO's own timeframe is used.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "slo",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "to",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "timeFrame",
                                            "value": "CURRENT",
                                            "description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<uuid>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required SLO."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "beea42fc-bc04-4018-be17-d3257a5c6cda",
                                    "name": "Success. The response contains the parameters and calculated values of the requested SLO.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"problemFilters\": [\n    \"[type(\\\"SERVICE\\\")]\"\n  ],\n  \"errorBudget\": 1.25,\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"errorBudgetBurnRate\": {\n    \"burnRateType\": \"SLOW\",\n    \"burnRateValue\": 1.25,\n    \"burnRateVisualizationEnabled\": true,\n    \"fastBurnThreshold\": 1.5,\n    \"sloValue\": 95,\n    \"estimatedTimeToConsumeErrorBudget\": 24\n  },\n  \"evaluatedPercentage\": 96.25,\n  \"burnRateMetricKey\": \"func:slo.errorBudgetBurnRate.payment_service_availability\",\n  \"numeratorValue\": 80,\n  \"denominatorValue\": 90,\n  \"relatedOpenProblems\": -27843452,\n  \"relatedTotalProblems\": 43399891,\n  \"hasAccess\": true,\n  \"metricKey\": \"func:slo.payment_service_availability\",\n  \"timeframe\": \"-1d\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"description\": \"Rate of successful payments per week\",\n  \"enabled\": true,\n  \"status\": \"WARNING\",\n  \"error\": \"NONE\",\n  \"warning\": 97.5,\n  \"name\": \"Payment service availability\",\n  \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n  \"target\": 95\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "2702ebb6-5b99-4efe-9caa-7c79e4254012",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "dc1660e1-801e-442a-b7f2-6cc780ca08e2",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "b0e333a0-a6dc-4107-8be5-655ef6ef183a",
                            "name": "Updates an existing SLO",
                            "request": {
                                "name": "Updates an existing SLO",
                                "description": {},
                                "url": {
                                    "path": [
                                        "slo",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<uuid>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required SLO."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "db18d834-85da-4798-8367-f03cbead7491",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "5f296236-6570-4f42-9c76-49b854103c4a",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "22f540c7-2724-448d-9977-a858be9e02ee",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "16139add-db3d-4240-bfc8-68f947383d26",
                                    "name": "Internal server error.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "4b80ef6f-c20e-440a-9966-e95936cd31ef",
                            "name": "Deletes an SLO",
                            "request": {
                                "name": "Deletes an SLO",
                                "description": {},
                                "url": {
                                    "path": [
                                        "slo",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<uuid>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required SLO."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "937c804f-3627-453b-a28a-cd3e56c51254",
                                    "name": "Success. The SLO has been deleted. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "07f76533-5d41-4182-b97a-2d27107e3d95",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "16b228d9-59da-46af-bcd4-1f04235b0c48",
                                    "name": "Failed. Conflicting resource.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "639c461c-350b-4286-b20d-84ccb44922b6",
                                    "name": "Internal server error.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "0f983c87-5de2-421c-9b9b-3e1beb79fc2f",
                            "name": "Creates an alert of the provided alert type for an SLO",
                            "request": {
                                "name": "Creates an alert of the provided alert type for an SLO",
                                "description": {},
                                "url": {
                                    "path": [
                                        "slo",
                                        ":id",
                                        "alert"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "to",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "timeFrame",
                                            "value": "CURRENT",
                                            "description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<uuid>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required SLO."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "8c326278-9a31-4c71-970f-d3e40419351a",
                                    "name": "Success. The new alert has been created. Response doesn't have a body. The **location** response header contains the ID of the new alert.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "disabled": false,
                                            "description": "The location of the new resource created by this request.",
                                            "key": "location",
                                            "value": ""
                                        },
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "1f2249cb-a538-4e35-a10e-64c72d866c19",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "7649395d-0849-4b78-88d6-03acaf77addc",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "71beba6c-e846-4e5a-a95d-20223fc5201b",
                                    "name": "Precondition for creating an SLO alert not fulfilled. The SLO func metric cannot be created or is not created by the SLO.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Precondition Failed",
                                    "code": 412,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "e0a85f1a-eb2a-4d4e-89ce-248e85cdab3b",
                                    "name": "Internal server error.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "1c12105c-6621-4989-bf58-eda852882ba8",
            "name": "synthetic",
            "item": [
                {
                    "id": "7e30be36-9d14-4aeb-95de-77934033607e",
                    "name": "config",
                    "item": [
                        {
                            "id": "f31214d6-e3ed-45c8-a7a1-d6b6be4b588d",
                            "name": "Gets set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Gets set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "config"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "bcc2d9ec-9a24-41e5-aebb-de93d73d6d26",
                                    "name": "Success. The response contains synthetic related parameters defined for whole tenant.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "config"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"bmMonitorTimeout\": 1460691,\n  \"bmStepTimeout\": 173081\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "20b93a48-e0a6-4501-b975-8d1d50324dd0",
                            "name": "Updates set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Updates set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "config"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "859fbb67-f978-41c5-97f4-467950b9f7ef",
                                    "name": "Success. The set of synthetic related parameters has been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "config"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"bmMonitorTimeout\": \"<long>\",\n  \"bmStepTimeout\": \"<long>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "a120579e-08af-489c-a271-905da5dae041",
                    "name": "Gets detailed information about the last execution of the specified HTTP monitor | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets detailed information about the last execution of the specified HTTP monitor | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "synthetic",
                                "execution",
                                ":monitorId",
                                ":resultType"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "locationId",
                                    "value": "<string>",
                                    "description": "Filters the results to those executed by specified Synthetic location. Specify the ID of the location."
                                }
                            ],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "monitorId",
                                    "description": "(Required) Identifier of the HTTP monitor for which last execution result is returned."
                                },
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "resultType",
                                    "description": "(Required) Defines the result type of the last HTTP monitor's execution."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "8e93b653-2e4a-4f25-87db-8c447c11733d",
                            "name": "Success. The response contains detailed data.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "execution",
                                        ":monitorId",
                                        ":resultType"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "locationId",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "monitorId",
                                            "description": "(Required) Identifier of the HTTP monitor for which last execution result is returned."
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "resultType",
                                            "description": "(Required) Defines the result type of the last HTTP monitor's execution."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"monitorId\": \"enim exercitation\",\n  \"locationsExecutionResults\": [\n    {\n      \"locationId\": \"aute sit dolore laboris\",\n      \"executionId\": \"amet\",\n      \"requestResults\": [\n        {\n          \"monitorType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"requestId\": \"nulla est off\",\n          \"requestName\": \"dolor in laborum\",\n          \"sequenceNumber\": 41553171,\n          \"startTimestamp\": 12840662,\n          \"engineId\": 86439843,\n          \"publicLocation\": false,\n          \"url\": \"tempor officia incididunt dolore voluptate\",\n          \"method\": \"non\",\n          \"requestBody\": \"non aliqua Lorem\",\n          \"requestHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"responseStatusCode\": 16008528,\n          \"responseBody\": \"irure mollit non sint laboris\",\n          \"responseSize\": -89773045,\n          \"responseBodySizeLimitExceeded\": true,\n          \"responseHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"resolvedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"healthStatusCode\": 33988572,\n          \"healthStatus\": \"proident cillum elit laborum\",\n          \"responseMessage\": \"magna ea ut\",\n          \"peerCertificateExpiryDate\": 38924253,\n          \"peerCertificateDetails\": \"eiusmod amet veniam\",\n          \"totalTime\": -97303875,\n          \"hostNameResolutionTime\": -22409830,\n          \"tcpConnectTime\": -45190226,\n          \"tlsHandshakeTime\": -87585643,\n          \"timeToFirstByte\": 12644900,\n          \"redirectionTime\": -14509310,\n          \"waitingTime\": 83726927,\n          \"redirectsCount\": -93945628,\n          \"failureMessage\": \"consequat et Duis\"\n        },\n        {\n          \"monitorType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"requestId\": \"labore ut\",\n          \"requestName\": \"deserunt qui tempor nisi\",\n          \"sequenceNumber\": 85753901,\n          \"startTimestamp\": 27117820,\n          \"engineId\": 83807047,\n          \"publicLocation\": true,\n          \"url\": \"mollit sunt\",\n          \"method\": \"exercitation proident reprehenderit aliquip\",\n          \"requestBody\": \"elit minim aliqua\",\n          \"requestHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"responseStatusCode\": 54109897,\n          \"responseBody\": \"reprehenderit\",\n          \"responseSize\": 87014003,\n          \"responseBodySizeLimitExceeded\": false,\n          \"responseHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"resolvedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"healthStatusCode\": -30454416,\n          \"healthStatus\": \"occaecat irure dolore incididunt\",\n          \"responseMessage\": \"ut sunt anim do\",\n          \"peerCertificateExpiryDate\": 98817483,\n          \"peerCertificateDetails\": \"et Ut ullamco incididunt ea\",\n          \"totalTime\": -80017687,\n          \"hostNameResolutionTime\": -89492711,\n          \"tcpConnectTime\": -6897346,\n          \"tlsHandshakeTime\": -81968941,\n          \"timeToFirstByte\": -32835470,\n          \"redirectionTime\": -94467567,\n          \"waitingTime\": 18984449,\n          \"redirectsCount\": 79346099,\n          \"failureMessage\": \"adipisicing sunt anim laboris\"\n        }\n      ]\n    },\n    {\n      \"locationId\": \"reprehenderit irure ad\",\n      \"executionId\": \"est ipsum\",\n      \"requestResults\": [\n        {\n          \"monitorType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"requestId\": \"irure dolor Duis sed\",\n          \"requestName\": \"anim mollit\",\n          \"sequenceNumber\": -92271961,\n          \"startTimestamp\": -84736372,\n          \"engineId\": 16093721,\n          \"publicLocation\": true,\n          \"url\": \"id sed\",\n          \"method\": \"sunt sed minim\",\n          \"requestBody\": \"ut sed\",\n          \"requestHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"responseStatusCode\": -50064446,\n          \"responseBody\": \"deserunt e\",\n          \"responseSize\": -40646517,\n          \"responseBodySizeLimitExceeded\": false,\n          \"responseHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"resolvedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"healthStatusCode\": -51418781,\n          \"healthStatus\": \"cillum Lorem voluptate sed\",\n          \"responseMessage\": \"veniam ipsum\",\n          \"peerCertificateExpiryDate\": -74202430,\n          \"peerCertificateDetails\": \"ea ullamco\",\n          \"totalTime\": -88592283,\n          \"hostNameResolutionTime\": 8706477,\n          \"tcpConnectTime\": -2791111,\n          \"tlsHandshakeTime\": 99840023,\n          \"timeToFirstByte\": -99676956,\n          \"redirectionTime\": -65267373,\n          \"waitingTime\": -46763111,\n          \"redirectsCount\": 93651264,\n          \"failureMessage\": \"mollit et Duis sit\"\n        },\n        {\n          \"monitorType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"requestId\": \"velit est quis pariatur\",\n          \"requestName\": \"esse magna minim nostrud\",\n          \"sequenceNumber\": -2465375,\n          \"startTimestamp\": 23209081,\n          \"engineId\": 23402410,\n          \"publicLocation\": false,\n          \"url\": \"mollit ut commodo tempor\",\n          \"method\": \"no\",\n          \"requestBody\": \"cillum dolore\",\n          \"requestHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"responseStatusCode\": -76869908,\n          \"responseBody\": \"elit ipsum anim\",\n          \"responseSize\": 72977113,\n          \"responseBodySizeLimitExceeded\": true,\n          \"responseHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"resolvedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"healthStatusCode\": 71306156,\n          \"healthStatus\": \"laborum irure commodo\",\n          \"responseMessage\": \"nostrud ex do\",\n          \"peerCertificateExpiryDate\": 21955827,\n          \"peerCertificateDetails\": \"dolore in deserunt velit\",\n          \"totalTime\": 35612138,\n          \"hostNameResolutionTime\": -28221878,\n          \"tcpConnectTime\": -98322495,\n          \"tlsHandshakeTime\": 85631812,\n          \"timeToFirstByte\": -46417369,\n          \"redirectionTime\": 42539160,\n          \"waitingTime\": -40867963,\n          \"redirectsCount\": 44508141,\n          \"failureMessage\": \"cupidatat in deserunt magna\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c1c2ede7-2a62-40c1-b945-cfa351a41c1b",
                    "name": "locations",
                    "item": [
                        {
                            "id": "2ebedc16-a763-42a0-b28f-7d27a0df25df",
                            "name": "Lists all synthetic locations (both public and private) available for your environment",
                            "request": {
                                "name": "Lists all synthetic locations (both public and private) available for your environment",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "locations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "cloudPlatform",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of locations to those which are hosted on a specific cloud platform."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "type",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of locations to those of a specific type."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "ce20acc7-bd99-4ce4-9fa7-a6427d066aac",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "cloudPlatform",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"locations\": [\n    {\n      \"name\": \"Gdansk\",\n      \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n      \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n      \"type\": \"PUBLIC\",\n      \"cloudPlatform\": \"AMAZON_EC2\",\n      \"ips\": [\n        \"134.189.153.97\",\n        \"134.189.153.98\"\n      ],\n      \"stage\": \"GA\",\n      \"status\": \"ENABLED\",\n      \"capabilities\": [\n        \"BROWSER\",\n        \"HTTP\"\n      ]\n    },\n    {\n      \"name\": \"My private location\",\n      \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n      \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n      \"type\": \"PRIVATE\",\n      \"status\": \"ENABLED\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "6ccbb905-f4a4-4b69-9298-9f5547744797",
                            "name": "Creates a new private synthetic location",
                            "request": {
                                "name": "Creates a new private synthetic location",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "locations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "917ffcb7-7393-4172-a49e-047f4434a4cb",
                                    "name": "Success. The private location has been created. The response contains the ID of the new location.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"entityId\": \"sed\",\n  \"geoLocationId\": \"sit sint aute\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "9f22d7b0-fc8d-4eb5-82fc-168e3a9dd24d",
                            "name": "{location Id}",
                            "item": [
                                {
                                    "id": "4b2a3493-c0aa-42dc-9089-849fa8d9f935",
                                    "name": "Gets properties of the specified location",
                                    "request": {
                                        "name": "Gets properties of the specified location",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                ":locationId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "locationId",
                                                    "description": "(Required) The Dynatrace entity ID of the required location."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "445f73b4-8cb2-4f11-8ece-c02752d9b39b",
                                            "name": "Success. The response contains parameters of the synthetic location.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        ":locationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "locationId",
                                                            "description": "(Required) The Dynatrace entity ID of the required location."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"entityId\": \"<string>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"regionCode\": \"<string>\",\n  \"city\": \"<string>\",\n  \"status\": \"<string>\",\n  \"geoLocationId\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "1c7b1498-ebd8-46fb-a096-02217c35c8df",
                                    "name": "Updates the specified synthetic location",
                                    "request": {
                                        "name": "Updates the specified synthetic location",
                                        "description": {
                                            "content": "For public locations you can only change the location status.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                ":locationId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "locationId",
                                                    "description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "11708c2d-a05e-466a-bd63-760a209f867f",
                                            "name": "Success. The location has been updated. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        ":locationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "locationId",
                                                            "description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "2bf8729c-43da-4443-bebb-5ca28cc15843",
                                    "name": "Deletes the specified private synthetic location",
                                    "request": {
                                        "name": "Deletes the specified private synthetic location",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                ":locationId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "locationId",
                                                    "description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
                                                }
                                            ]
                                        },
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "cf3f8ccf-8509-4084-842a-d2a5f5f58d3f",
                                            "name": "Success. The location has been deleted. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        ":locationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "locationId",
                                                            "description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "3fd3c301-3d4c-44da-8b13-463982ee85ca",
                            "name": "status",
                            "item": [
                                {
                                    "id": "ce7de5ed-031b-452e-95cc-8badeb3684e4",
                                    "name": "Checks the status of public synthetic locations",
                                    "request": {
                                        "name": "Checks the status of public synthetic locations",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                "status"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "147d9acb-b01d-4163-8463-b113d16d906f",
                                            "name": "Success. The response contains the public locations status.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        "status"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": []
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"publicLocationsEnabled\": false\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "9f6080c9-817d-4393-b517-209c2c49a844",
                                    "name": "Changes the status of public synthetic locations",
                                    "request": {
                                        "name": "Changes the status of public synthetic locations",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                "status"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "f78d1983-6bf2-4e61-a8d3-6dd5c13c73c9",
                                            "name": "Success. Locations status has been updated.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        "status"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": []
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "3ca5dfc7-3708-43cd-8013-61e457728f11",
                                            "name": "Conflict. Public locations couldn't be disabled because there are monitors assigned to them.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        "status"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": []
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "54e6a8df-9204-434d-a2ee-b08f624f50bb",
                    "name": "nodes",
                    "item": [
                        {
                            "id": "48e28160-ab1a-41d1-a48a-80fba76958b1",
                            "name": "Lists all synthetic nodes available in your environment",
                            "request": {
                                "name": "Lists all synthetic nodes available in your environment",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "nodes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "c0f3176e-8a57-4fb4-8d58-8ad18fcc1cb0",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "nodes"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"nodes\": [\n    {\n      \"activeGateVersion\": \"ea occaecat do enim\",\n      \"autoUpdateEnabled\": true,\n      \"browserMonitorsEnabled\": true,\n      \"entityId\": \"in veniam\",\n      \"healthCheckStatus\": \"tempor quis incididunt mollit\",\n      \"hostname\": \"aliquip consectetur consequat\",\n      \"ips\": [\n        \"dolor enim ea\",\n        \"culpa officia nostrud\"\n      ],\n      \"oneAgentRoutingEnabled \": false,\n      \"operatingSystem\": \"a\",\n      \"playerVersion\": \"est Duis\",\n      \"status\": \"officia aliqua\",\n      \"version\": \"est aute reprehenderit\"\n    },\n    {\n      \"activeGateVersion\": \"occaecat aute commodo dolore\",\n      \"autoUpdateEnabled\": true,\n      \"browserMonitorsEnabled\": true,\n      \"entityId\": \"Duis enim et sit dolore\",\n      \"healthCheckStatus\": \"ex \",\n      \"hostname\": \"nostrud\",\n      \"ips\": [\n        \"consectetur est\",\n        \"qui ut deserunt aute id\"\n      ],\n      \"oneAgentRoutingEnabled \": false,\n      \"operatingSystem\": \"nisi amet\",\n      \"playerVersion\": \"qui anim sint enim\",\n      \"status\": \"culpa\",\n      \"version\": \"conse\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "a7e566bc-7130-4c14-8d9c-0f1977bb190e",
                            "name": "Lists properties of the specified synthetic node",
                            "request": {
                                "name": "Lists properties of the specified synthetic node",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "nodes",
                                        ":nodeId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "nodeId",
                                            "description": "(Required) The ID of the required synthetic node."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "9fc8afeb-23fb-4f05-9a91-ede6b48eef32",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "nodes",
                                                ":nodeId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "nodeId",
                                                    "description": "(Required) The ID of the required synthetic node."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"activeGateVersion\": \"aliquip\",\n  \"autoUpdateEnabled\": false,\n  \"browserMonitorsEnabled\": false,\n  \"browserType\": \"voluptate e\",\n  \"browserVersion\": \"reprehenderit\",\n  \"entityId\": \"anim laboris culpa enim\",\n  \"healthCheckStatus\": \"est aliqua consectetur sunt cupidatat\",\n  \"hostname\": \"aliqua\",\n  \"ips\": [\n    \"fugiat incididunt consectetur\",\n    \"nostrud culpa eiusmod Excepteur\"\n  ],\n  \"oneAgentRoutingEnabled \": true,\n  \"operatingSystem\": \"proident aute officia non\",\n  \"playerVersion\": \"in \",\n  \"status\": \"sunt qui aliquip\",\n  \"version\": \"ut\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "aeab6354-8ae9-4399-bc62-4500e53ed24b",
                    "name": "executions",
                    "item": [
                        {
                            "id": "8a86e189-aac4-4b97-8488-7a00e13e131e",
                            "name": "Gets the list of all on-demand executions of synthetic monitors | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Gets the list of all on-demand executions of synthetic monitors | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "executions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "executionStage",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of executions by their stage."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "schedulingFrom",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe for scheduling timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "schedulingTo",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe for scheduling timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "executionFrom",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe for execution timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "executionTo",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe for execution timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "dataDeliveryFrom",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe for data delivering timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "dataDeliveryTo",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe for data delivering timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "batchId",
                                            "value": "<long>",
                                            "description": "Filters the resulting set of the executions by batch. Specify the ID of the batch."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "monitorId",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of the executions by monitor synthetic monitor. Specify the ID of the monitor."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "locationId",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of the executions by Synthetic location. Specify the ID of the location."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "userId",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of executions by scheduled user."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "10900052-cd83-409e-9556-4b8e9abbe339",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "executionStage",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "schedulingFrom",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "schedulingTo",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "executionFrom",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "executionTo",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "dataDeliveryFrom",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "dataDeliveryTo",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "batchId",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "monitorId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "locationId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "userId",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"executions\": [\n    {\n      \"batchId\": \"ut sint pariatur\",\n      \"dataDeliveryTimestamp\": 31185714,\n      \"executionId\": \"aute in\",\n      \"executionStage\": \"TIMED_OUT\",\n      \"executionTimestamp\": -42781639,\n      \"locationId\": \"\",\n      \"monitorId\": \"et quis ut\",\n      \"schedulingTimestamp\": -72131117,\n      \"userId\": \"\",\n      \"simpleResults\": {\n        \"status\": \"ex\",\n        \"failureMessage\": \"in minim\",\n        \"errorCode\": \"tempor incididunt velit\",\n        \"responseStatusCode\": 90662955,\n        \"executedSteps\": 28291032,\n        \"engineId\": -39549714,\n        \"publicLocation\": true,\n        \"responseSize\": -35478384,\n        \"responseBodySizeLimitExceeded\": false,\n        \"peerCertificateExpiryDate\": -93015890,\n        \"totalTime\": 77461367,\n        \"hostNameResolutionTime\": -99659313,\n        \"tcpConnectTime\": 75675681,\n        \"tlsHandshakeTime\": 20186884,\n        \"timeToFirstByte\": -7302764,\n        \"redirectionTime\": 74632928,\n        \"redirectsCount\": 53768425,\n        \"httperror\": true,\n        \"chromeError\": false,\n        \"startTimestamp\": 11744767\n      },\n      \"fullResults\": {\n        \"status\": \"non anim\",\n        \"failureMessage\": \"irure amet dolor\",\n        \"errorCode\": \"Excepteu\",\n        \"executionStepCount\": -19574827,\n        \"executionSteps\": [\n          {\n            \"monitorType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"monitorType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"batchId\": \"exercitation nulla\",\n      \"dataDeliveryTimestamp\": -22309936,\n      \"executionId\": \"officia cillum adipisicing elit\",\n      \"executionStage\": \"EXECUTED\",\n      \"executionTimestamp\": -4275052,\n      \"locationId\": \"eu proident ex\",\n      \"monitorId\": \"Duis Excepteur voluptate tempor sint\",\n      \"schedulingTimestamp\": 49599282,\n      \"userId\": \"Excepteur elit\",\n      \"simpleResults\": {\n        \"status\": \"quis Duis\",\n        \"failureMessage\": \"incididunt exercitation eu cupidatat\",\n        \"errorCode\": \"velit tempor dolor elit ut\",\n        \"responseStatusCode\": 24622510,\n        \"executedSteps\": 25381927,\n        \"engineId\": 41878364,\n        \"publicLocation\": false,\n        \"responseSize\": -80773704,\n        \"responseBodySizeLimitExceeded\": false,\n        \"peerCertificateExpiryDate\": 61980219,\n        \"totalTime\": 30173966,\n        \"hostNameResolutionTime\": -79292264,\n        \"tcpConnectTime\": -38855986,\n        \"tlsHandshakeTime\": 69634130,\n        \"timeToFirstByte\": 94749660,\n        \"redirectionTime\": 96577767,\n        \"redirectsCount\": -54284047,\n        \"httperror\": true,\n        \"chromeError\": false,\n        \"startTimestamp\": -99414513\n      },\n      \"fullResults\": {\n        \"status\": \"esse sunt velit in\",\n        \"failureMessage\": \"dolore ut deserunt commodo sed\",\n        \"errorCode\": \"occaecat pariatur dolore\",\n        \"executionStepCount\": 26679710,\n        \"executionSteps\": [\n          {\n            \"monitorType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"monitorType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "6b200ad4-f77e-4bc5-acb7-528f9d556f85",
                            "name": "batch",
                            "item": [
                                {
                                    "id": "a017f1dd-94bb-4309-aba9-0f8967b47c70",
                                    "name": "Triggers on-demand executions for synthetic monitors | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Triggers on-demand executions for synthetic monitors | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions",
                                                "batch"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "5ac6d3ec-383b-4815-aa57-d823566d6ebf",
                                            "name": "Success. The monitor's execution response details",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "executions",
                                                        "batch"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": []
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Created",
                                            "code": 201,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"batchId\": \"ex deserunt\",\n  \"triggeredCount\": 35805173,\n  \"triggeringProblemsCount\": 51357342,\n  \"triggeringProblemsDetails\": [\n    {\n      \"cause\": \"ad sit consectetur laborum\",\n      \"entityId\": \"officia Duis adipisicing ullamco\",\n      \"locationId\": \"esse officia\"\n    },\n    {\n      \"cause\": \"tempor adipisicing deserunt dolor\",\n      \"entityId\": \"esse voluptate ipsum laboris\",\n      \"locationId\": \"incididunt\"\n    }\n  ],\n  \"triggered\": [\n    {\n      \"executions\": [\n        {\n          \"executionId\": \"ullamco ut sint\",\n          \"locationId\": \"sit\"\n        },\n        {\n          \"executionId\": \"minim et in\",\n          \"locationId\": \"velit dolore in\"\n        }\n      ],\n      \"monitorId\": \"nostrud esse\"\n    },\n    {\n      \"executions\": [\n        {\n          \"executionId\": \"adipisicing volupta\",\n          \"locationId\": \"anim deserunt\"\n        },\n        {\n          \"executionId\": \"Lorem Excepteur cillum\",\n          \"locationId\": \"velit ut adipisicing sunt\"\n        }\n      ],\n      \"monitorId\": \"et veniam Lorem\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "30cc1415-bdc9-4055-925a-43b863753316",
                                    "name": "Gets summary information and the list of failed executions for the given batch ID | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Gets summary information and the list of failed executions for the given batch ID | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions",
                                                "batch",
                                                ":batchId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<long>",
                                                    "key": "batchId",
                                                    "description": "(Required) The batch identifier of the executions."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "968c47a6-e4eb-4dc4-a75d-92dec152f984",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "executions",
                                                        "batch",
                                                        ":batchId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<long>",
                                                            "key": "batchId",
                                                            "description": "(Required) The batch identifier of the executions."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"batchId\": -30578461,\n  \"batchStatus\": \"FAILED_TO_EXECUTE\",\n  \"executedCount\": -16499036,\n  \"failedCount\": -161752,\n  \"failedToExecuteCount\": 35699093,\n  \"triggeredCount\": 73754048,\n  \"userId\": \"adipisicing sit in ullamco\",\n  \"failedExecutions\": [\n    {\n      \"errorCode\": \"c\",\n      \"executionId\": \"deserunt reprehenderit\",\n      \"locationId\": \"laboris magna cupidatat\",\n      \"monitorId\": \"aute non dolore amet\",\n      \"executionStage\": \"DATA_RETRIEVED\",\n      \"failureMessage\": \"quis\",\n      \"executionTimestamp\": 52271170\n    },\n    {\n      \"errorCode\": \"laboris anim Excepteur\",\n      \"executionId\": \"anim laboris\",\n      \"locationId\": \"exercitation adipisicing ut aute\",\n      \"monitorId\": \"deserunt\",\n      \"executionStage\": \"DATA_RETRIEVED\",\n      \"failureMessage\": \"minim velit sint sunt culpa\",\n      \"executionTimestamp\": -49174488\n    }\n  ],\n  \"failedToExecute\": [\n    {\n      \"errorCode\": \"ex aliqua dolor\",\n      \"executionId\": \"enim et voluptate tempor\",\n      \"locationId\": \"aliquip ea\",\n      \"monitorId\": \"esse Ut\",\n      \"executionStage\": \"EXECUTED\",\n      \"failureMessage\": \"nostrud\",\n      \"executionTimestamp\": 154131\n    },\n    {\n      \"errorCode\": \"amet fugiat dolor nostrud\",\n      \"executionId\": \"elit enim ipsum adipisicing labore\",\n      \"locationId\": \"aliqua incididunt in\",\n      \"monitorId\": \"exercitation reprehenderit\",\n      \"executionStage\": \"EXECUTED\",\n      \"failureMessage\": \"pariatur magna\",\n      \"executionTimestamp\": 1972696\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "6ef8b631-3985-46ca-861b-f1ff8de29915",
                            "name": "{execution Id}",
                            "item": [
                                {
                                    "id": "62113997-6c87-4651-86d7-36daeb68210e",
                                    "name": "Gets basic results of the specified on-demand execution | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Gets basic results of the specified on-demand execution | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions",
                                                ":executionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<long>",
                                                    "key": "executionId",
                                                    "description": "(Required) The identifier of the on-demand execution."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "6b81ce74-7517-404f-ae57-1b5ba24c4868",
                                            "name": "Success. The response contains basic information about the on-demand execution.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "executions",
                                                        ":executionId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<long>",
                                                            "key": "executionId",
                                                            "description": "(Required) The identifier of the on-demand execution."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"batchId\": \"dolor\",\n  \"dataDeliveryTimestamp\": 95597906,\n  \"executionId\": \"ea sunt cillum minim\",\n  \"executionStage\": \"TRIGGERED\",\n  \"executionTimestamp\": 6121291,\n  \"locationId\": \"minim ut mollit consequat\",\n  \"monitorId\": \"consectetur deserunt\",\n  \"schedulingTimestamp\": -54041339,\n  \"userId\": \"et eiusmod nulla\",\n  \"simpleResults\": {\n    \"status\": \"proident\",\n    \"failureMessage\": \"laboris sit voluptate\",\n    \"errorCode\": \"eiusmod sed \",\n    \"responseStatusCode\": 90316504,\n    \"executedSteps\": 37587066,\n    \"engineId\": -94149160,\n    \"publicLocation\": true,\n    \"responseSize\": 13166339,\n    \"responseBodySizeLimitExceeded\": false,\n    \"peerCertificateExpiryDate\": 37899094,\n    \"totalTime\": 60674710,\n    \"hostNameResolutionTime\": -71000946,\n    \"tcpConnectTime\": 45954036,\n    \"tlsHandshakeTime\": 31310617,\n    \"timeToFirstByte\": 48697836,\n    \"redirectionTime\": -97300641,\n    \"redirectsCount\": -53034314,\n    \"httperror\": true,\n    \"chromeError\": false,\n    \"startTimestamp\": 43910473\n  },\n  \"fullResults\": {\n    \"status\": \"Lorem Ut nulla proident\",\n    \"failureMessage\": \"culpa enim\",\n    \"errorCode\": \"veniam velit nisi Lorem consequat\",\n    \"executionStepCount\": 31680156,\n    \"executionSteps\": [\n      {\n        \"monitorType\": \"HTTP\"\n      },\n      {\n        \"monitorType\": \"HTTP\"\n      }\n    ]\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "5a378fdf-4fe0-4e38-b7a4-9a819c19e8cf",
                                    "name": "Gets detailed results of the specified on-demand execution | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Gets detailed results of the specified on-demand execution | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions",
                                                ":executionId",
                                                "fullReport"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<long>",
                                                    "key": "executionId",
                                                    "description": "(Required) The identifier of the on-demand execution."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "e93f27a0-f8b8-4226-9d5d-74d5f9af5f54",
                                            "name": "Success. The response contains detailed information about the on-demand execution.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "executions",
                                                        ":executionId",
                                                        "fullReport"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<long>",
                                                            "key": "executionId",
                                                            "description": "(Required) The identifier of the on-demand execution."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"batchId\": \"dolor\",\n  \"dataDeliveryTimestamp\": 95597906,\n  \"executionId\": \"ea sunt cillum minim\",\n  \"executionStage\": \"TRIGGERED\",\n  \"executionTimestamp\": 6121291,\n  \"locationId\": \"minim ut mollit consequat\",\n  \"monitorId\": \"consectetur deserunt\",\n  \"schedulingTimestamp\": -54041339,\n  \"userId\": \"et eiusmod nulla\",\n  \"simpleResults\": {\n    \"status\": \"proident\",\n    \"failureMessage\": \"laboris sit voluptate\",\n    \"errorCode\": \"eiusmod sed \",\n    \"responseStatusCode\": 90316504,\n    \"executedSteps\": 37587066,\n    \"engineId\": -94149160,\n    \"publicLocation\": true,\n    \"responseSize\": 13166339,\n    \"responseBodySizeLimitExceeded\": false,\n    \"peerCertificateExpiryDate\": 37899094,\n    \"totalTime\": 60674710,\n    \"hostNameResolutionTime\": -71000946,\n    \"tcpConnectTime\": 45954036,\n    \"tlsHandshakeTime\": 31310617,\n    \"timeToFirstByte\": 48697836,\n    \"redirectionTime\": -97300641,\n    \"redirectsCount\": -53034314,\n    \"httperror\": true,\n    \"chromeError\": false,\n    \"startTimestamp\": 43910473\n  },\n  \"fullResults\": {\n    \"status\": \"Lorem Ut nulla proident\",\n    \"failureMessage\": \"culpa enim\",\n    \"errorCode\": \"veniam velit nisi Lorem consequat\",\n    \"executionStepCount\": 31680156,\n    \"executionSteps\": [\n      {\n        \"monitorType\": \"HTTP\"\n      },\n      {\n        \"monitorType\": \"HTTP\"\n      }\n    ]\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "6e35e42e-a051-4d0e-a4f9-c9b166e2ba67",
            "name": "tenant Token Rotation",
            "item": [
                {
                    "id": "ed18a5fd-1c87-4489-96b6-45516088075e",
                    "name": "Cancels tenant token rotation",
                    "request": {
                        "name": "Cancels tenant token rotation",
                        "description": {
                            "content": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tenantTokenRotation",
                                "cancel"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "945d9d5e-16ec-4476-8c76-133277dad581",
                            "name": "Success. Rotation process has been cancelled. The current tenant token remains valid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "cancel"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"old\": {\n    \"value\": \"id tempor voluptate qui\"\n  },\n  \"active\": {\n    \"value\": \"officia laborum et\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7793a410-dcd7-4681-924d-2533d3d3384f",
                            "name": "Failed. There is no ongoing rotation process.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "cancel"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "dd1d41c5-d899-4e5b-a120-55c0394a13b0",
                    "name": "Finishes tenant token rotation",
                    "request": {
                        "name": "Finishes tenant token rotation",
                        "description": {
                            "content": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tenantTokenRotation",
                                "finish"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "72de01c3-34a0-4ed4-8140-48c46722eea4",
                            "name": "Success. The rotation process is completed. The **active** field of the response contains the new tenant token.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "finish"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"old\": {\n    \"value\": \"id tempor voluptate qui\"\n  },\n  \"active\": {\n    \"value\": \"officia laborum et\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "20843576-00c3-4621-9d65-78491bbb34a4",
                            "name": "No ongoing rotation process.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "finish"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a6aa9387-a73f-4385-b875-ff36fdce6436",
                    "name": "Starts tenant token rotation",
                    "request": {
                        "name": "Starts tenant token rotation",
                        "description": {
                            "content": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tenantTokenRotation",
                                "start"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "9aafde8c-6a2e-4733-81c7-3b751f9e37b3",
                            "name": "Success. The new tenant token is created and will replace the old one. The **active** field of the response contains the new tenant token.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "start"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"old\": {\n    \"value\": \"id tempor voluptate qui\"\n  },\n  \"active\": {\n    \"value\": \"officia laborum et\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7cbcc2e9-e9c5-4127-832c-52907513056e",
                            "name": "Failed. Another rotation process is already in progress.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "start"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"minim ipsum velit\",\n        \"message\": \"labore ut Dui\",\n        \"path\": \"Ut\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et Ut aliquip tempor\",\n        \"message\": \"Lorem dolor incididunt Duis\",\n        \"path\": \"est esse nisi\"\n      }\n    ],\n    \"code\": -97922966,\n    \"message\": \"dolore nulla tempor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "51d8c08c-9db5-4ce2-82a9-620829534d68",
            "name": "units",
            "item": [
                {
                    "id": "b48369e4-a3c2-4a7a-9228-80dd7f3469dd",
                    "name": "Lists all available units",
                    "request": {
                        "name": "Lists all available units",
                        "description": {
                            "content": "You can narrow down the output by providing filter criteria in the **unitSelector** field.\n\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "units"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "unitSelector",
                                    "value": "<string>",
                                    "description": "Selects units to be included to the response. Available criteria: \n* Compatibility: `compatibleTo(\"unit\",\"display-format\")`. Returns units that can be converted to the specified unit. The optional display format (`binary` or `decimal`) argument is supported by bit- and byte-based units and returns only units for the specified format."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Defines the list of properties to be included in the response. The ID of the unit is **always** included. The following additional properties are available: \n\n* `displayName`: The display name of the unit. \n* `symbol`: The symbol of the unit. \n* `description`: A short description of the unit.\n\nBy default, the ID, the display name, and the symbol are included. \n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`.\n\nTo specify several properties, join them with a comma (for example `fields=+description,-symbol`).\n\nIf you specify just one property, the response contains the unitId and the specified property. To return unit IDs only, specify `unitId` here."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2a370472-29c8-4f9f-92c1-5631afa80ef3",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "units"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "unitSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 2,\n  \"units\": [\n    {\n      \"unitId\": \"BytePerSecond\",\n      \"displayName\": \"byte per second\",\n      \"displayNamePlural\": \"bytes per second\",\n      \"symbol\": \"B/s\",\n      \"description\": \"byte per second\"\n    },\n    {\n      \"unitId\": \"BytePerMinute\",\n      \"displayName\": \"byte per minute\",\n      \"displayNamePlural\": \"bytes per minute\",\n      \"symbol\": \"B/min\",\n      \"description\": \"byte per minute\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ecacfb58-441a-4272-b096-fe289f39f0d8",
                    "name": "{unit Id}",
                    "item": [
                        {
                            "id": "665ec5b5-1329-4231-aaf1-2da84c283106",
                            "name": "Gets the properties of the specified unit",
                            "request": {
                                "name": "Gets the properties of the specified unit",
                                "description": {},
                                "url": {
                                    "path": [
                                        "units",
                                        ":unitId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "unitId",
                                            "description": "(Required) The ID of the required unit."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "fe8f713b-f2e0-4cf3-a0ff-8eb90d96406a",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "units",
                                                ":unitId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "unitId",
                                                    "description": "(Required) The ID of the required unit."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"unitId\": \"Second\",\n  \"displayName\": \"second\",\n  \"displayNamePlural\": \"seconds\",\n  \"symbol\": \"s\",\n  \"description\": \"The second is the base unit of time and defined as 1/86400 of a day.\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "48dabd86-e078-4203-b12f-08e3fcb4e2dc",
                                    "name": "Not found. The requested resource is not found or the query is incorrect.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "units",
                                                ":unitId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "unitId",
                                                    "description": "(Required) The ID of the required unit."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "6b12ecc8-ae99-41a1-94ab-1baa3e2b46f2",
                            "name": "Converts a value of the given source unit into a given target unit if specified, or finds an appropriate unit if no target is specified, respecting the preferred number format if specified.",
                            "request": {
                                "name": "Converts a value of the given source unit into a given target unit if specified, or finds an appropriate unit if no target is specified, respecting the preferred number format if specified.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "units",
                                        ":unitId",
                                        "convert"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "value",
                                            "value": "<double>",
                                            "description": "(Required) The value to be converted."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "targetUnit",
                                            "value": "<string>",
                                            "description": "The ID of the target unit."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "numberFormat",
                                            "value": "<string>",
                                            "description": "The preferred number format. Only taken into account if no target unit is specified."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "unitId",
                                            "description": "(Required) The ID of the source unit."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "e1e4303f-3fb8-4682-9f62-60b291d4a0f7",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "units",
                                                ":unitId",
                                                "convert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "value",
                                                    "value": "<double>"
                                                },
                                                {
                                                    "key": "targetUnit",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "numberFormat",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "unitId",
                                                    "description": "(Required) The ID of the source unit."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"resultValue\": -43534908.252376914,\n  \"unitId\": \"sint\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "4d5b12a2-e6bc-4248-a2ca-b5526b86c596",
                                    "name": "Not found. The requested resource is not found or the query is incorrect.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "units",
                                                ":unitId",
                                                "convert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "value",
                                                    "value": "<double>"
                                                },
                                                {
                                                    "key": "targetUnit",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "numberFormat",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "unitId",
                                                    "description": "(Required) The ID of the source unit."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        }
    ],
    "event": [],
    "variable": [
        {
            "type": "string",
            "value": "https://{{DT_HOST}}/api/v2",
            "key": "baseUrl"
        }
    ],
    "info": {
        "_postman_id": "d91e51e7-75bc-4c29-afd1-e5069e61f121",
        "name": "Dynatrace Environment API v2",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "\nDocumentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress. \n\nIf you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
            "type": "text/plain"
        }
    }
}