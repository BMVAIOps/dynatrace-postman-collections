{
    "item": [
        {
            "id": "960c4945-c52f-4926-b873-bcccf725131d",
            "name": "active Gates",
            "item": [
                {
                    "id": "dff88084-c379-4bdc-8a82-cd1918b51507",
                    "name": "Lists all available ActiveGates",
                    "request": {
                        "name": "Lists all available ActiveGates",
                        "description": {
                            "content": "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGates"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "hostname",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "osType",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the OS type of the host it's running on."
                                },
                                {
                                    "disabled": false,
                                    "key": "networkAddress",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "loadBalancerAddress",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the Load Balancer address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "type",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the ActiveGate type."
                                },
                                {
                                    "disabled": false,
                                    "key": "networkZone",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "updateStatus",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the auto-update status."
                                },
                                {
                                    "disabled": false,
                                    "key": "versionCompareType",
                                    "value": "EQUAL",
                                    "description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here."
                                },
                                {
                                    "disabled": false,
                                    "key": "version",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here."
                                },
                                {
                                    "disabled": false,
                                    "key": "autoUpdate",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the actual state of auto-update."
                                },
                                {
                                    "disabled": false,
                                    "key": "group",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "online",
                                    "value": "<boolean>",
                                    "description": "Filters the resulting set of ActiveGates by the communication status."
                                },
                                {
                                    "disabled": false,
                                    "key": "enabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the enabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "enabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the enabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "disabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the disabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "disabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the disabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "containerized",
                                    "value": "<boolean>",
                                    "description": "Filters the resulting set of ActiveGates to those which are running in container (`true`) or not (`false`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "tokenState",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates to those with authorization token in specified state."
                                },
                                {
                                    "disabled": false,
                                    "key": "tokenExpirationSet",
                                    "value": "<boolean>",
                                    "description": "Filters the resulting set of ActiveGates to those with set expiration date for authorization token."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "a979a0fa-1164-4b77-a96f-285d57460810",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "hostname",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "osType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "loadBalancerAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkZone",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "versionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "version",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "autoUpdate",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "group",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "online",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "containerized",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "tokenState",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tokenExpirationSet",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"activeGates\": [\n    {\n      \"id\": \"0x3efdd091\",\n      \"networkAddresses\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loadBalancerAddresses\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"osType\": \"WINDOWS\",\n      \"osArchitecture\": \"X86\",\n      \"osBitness\": \"64\",\n      \"autoUpdateStatus\": \"OUTDATED\",\n      \"offlineSince\": 1582031917814,\n      \"version\": \"1.185.0.20200201-120000\",\n      \"type\": \"ENVIRONMENT\",\n      \"hostname\": \"exampleHostname\",\n      \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n      \"environments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"autoUpdateSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"networkZone\": \"exampleNetworkZone\",\n      \"group\": \"default\",\n      \"modules\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"containerized\": false,\n      \"connectedHosts\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"activeGateTokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0x3efdd091\",\n      \"networkAddresses\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loadBalancerAddresses\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"osType\": \"WINDOWS\",\n      \"osArchitecture\": \"X86\",\n      \"osBitness\": \"64\",\n      \"autoUpdateStatus\": \"OUTDATED\",\n      \"offlineSince\": 1582031917814,\n      \"version\": \"1.185.0.20200201-120000\",\n      \"type\": \"ENVIRONMENT\",\n      \"hostname\": \"exampleHostname\",\n      \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n      \"environments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"autoUpdateSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"networkZone\": \"exampleNetworkZone\",\n      \"group\": \"default\",\n      \"modules\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"containerized\": true,\n      \"connectedHosts\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"activeGateTokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "56fe8e9c-0b60-4f70-bb7b-df0fd3e08e7e",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "hostname",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "osType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "loadBalancerAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkZone",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "versionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "version",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "autoUpdate",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "group",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "online",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "containerized",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "tokenState",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tokenExpirationSet",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"exercit\",\n    \"code\": 89804262\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e38d9cc9-f9c5-4fde-b0d3-9c5a4179c5c1",
                    "name": "{ag Id}",
                    "item": [
                        {
                            "id": "9c94bde5-8dfb-4a1e-b346-6374bcefa363",
                            "name": "Gets the details of the specified ActiveGate",
                            "request": {
                                "name": "Gets the details of the specified ActiveGate",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        ":agId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "agId",
                                            "description": "(Required) The ID of the required ActiveGate."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "0f560cef-8b5d-49a7-a46e-85eb71c5f2e7",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"id\": \"0x3efdd091\",\n  \"networkAddresses\": [\n    \"elit\",\n    \"adipisicing reprehe\"\n  ],\n  \"loadBalancerAddresses\": [\n    \"consectetur mollit\",\n    \"ut\"\n  ],\n  \"osType\": \"WINDOWS\",\n  \"osArchitecture\": \"X86\",\n  \"osBitness\": \"64\",\n  \"autoUpdateStatus\": \"OUTDATED\",\n  \"offlineSince\": 1582031917814,\n  \"version\": \"1.185.0.20200201-120000\",\n  \"type\": \"ENVIRONMENT\",\n  \"hostname\": \"exampleHostname\",\n  \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n  \"environments\": [\n    \"aliqua Lorem consectetur officia\",\n    \"commodo dolor\"\n  ],\n  \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n  },\n  \"networkZone\": \"exampleNetworkZone\",\n  \"group\": \"default\",\n  \"modules\": [\n    {\n      \"misconfigured\": false,\n      \"enabled\": false,\n      \"type\": \"KUBERNETES\",\n      \"attributes\": {\n        \"aliqua2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"laborebcc\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"version\": \"d\"\n    },\n    {\n      \"misconfigured\": true,\n      \"enabled\": true,\n      \"type\": \"KUBERNETES\",\n      \"attributes\": {\n        \"dolor_0_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"version\": \"nisi velit\"\n    }\n  ],\n  \"containerized\": false,\n  \"connectedHosts\": {\n    \"number\": 150\n  },\n  \"activeGateTokens\": [\n    {\n      \"environmentId\": \"qui\",\n      \"id\": \"dt0g02.4KWZO5EF\",\n      \"state\": \"EXPIRING\"\n    },\n    {\n      \"environmentId\": \"exercitation voluptate sit\",\n      \"id\": \"dt0g02.4KWZO5EF\",\n      \"state\": \"ABSENT\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "733a8481-28e6-43e6-9572-f4f3ddde0d64",
                                    "name": "Not found. See response body for details.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "f44fd36f-89a5-4970-a036-c8d51f7cad42",
                            "name": "auto Update",
                            "item": [
                                {
                                    "id": "b92b17aa-4b16-4d89-acae-975ba19f3ae3",
                                    "name": "Gets the configuration of auto-update for the specified ActiveGate",
                                    "request": {
                                        "name": "Gets the configuration of auto-update for the specified ActiveGate",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "feea65dd-197c-4372-8ec2-b0af2cb01f7f",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"setting\": \"INHERITED\",\n  \"effectiveSetting\": \"ENABLED\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "db5d109a-6f7b-4958-adcc-da5160a8486b",
                                            "name": "Not found. See response body for details.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "f8773397-b33e-4b5f-83f8-3d8af205d033",
                                    "name": "Updates the configuration of auto-update for the specified ActiveGate",
                                    "request": {
                                        "name": "Updates the configuration of auto-update for the specified ActiveGate",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "887456a7-55d4-4de1-93c3-3a094511f013",
                                            "name": "Success. The auto-update configuration have been updated. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "c2738033-c85f-458d-b86d-40d98b65f009",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "23845f69-e73e-49b3-af1f-1caee7e849e5",
                                    "name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
                                    "request": {
                                        "name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "autoUpdate",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "b5be0fef-0e0b-45f4-bbe1-d8d3f13d25df",
                                            "name": "Validated. The submitted auto-update configuration is valid. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "d3f0987a-8054-48ea-a38c-f33e35f19f7a",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "a611aa46-c3d3-48b7-a583-9791aa90ff47",
                            "name": "update Jobs",
                            "item": [
                                {
                                    "id": "3098cff7-4c58-436c-afe8-93344189df8a",
                                    "name": "Lists update jobs for the specified ActiveGate",
                                    "request": {
                                        "name": "Lists update jobs for the specified ActiveGate",
                                        "description": {
                                            "content": "The job can update the ActiveGate to the specified version or the latest available one.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "updateJobs"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "from",
                                                    "value": "<string>",
                                                    "description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "to",
                                                    "value": "<string>",
                                                    "description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "startVersionCompareType",
                                                    "value": "EQUAL",
                                                    "description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "startVersion",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "updateType",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of update-jobs by the update type."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "targetVersionCompareType",
                                                    "value": "EQUAL",
                                                    "description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "targetVersion",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "lastUpdates",
                                                    "value": "false",
                                                    "description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "7b09c76d-96c0-4452-a0ce-0a711664c02a",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "startVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "updateType",
                                                            "value": "ACTIVE_GATE"
                                                        },
                                                        {
                                                            "key": "targetVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "targetVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "lastUpdates",
                                                            "value": "false"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"agId\": \"0x3efdd092\",\n  \"updateJobs\": [\n    {\n      \"targetVersion\": \"1.190.0.20200301-130000\",\n      \"cancelable\": false,\n      \"jobState\": \"SUCCEED\",\n      \"updateMethod\": \"AUTOMATIC\",\n      \"updateType\": \"ACTIVE_GATE\",\n      \"agType\": \"ENVIRONMENT\",\n      \"startVersion\": \"1.185.0.20200201-120000\",\n      \"environments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"jobId\": \"-3524498778810258605\",\n      \"timestamp\": 1582031917814,\n      \"duration\": 3608000,\n      \"error\": \"dolore mollit\"\n    },\n    {\n      \"targetVersion\": \"1.190.0.20200301-130000\",\n      \"cancelable\": false,\n      \"jobState\": \"SUCCEED\",\n      \"updateMethod\": \"AUTOMATIC\",\n      \"updateType\": \"ACTIVE_GATE\",\n      \"agType\": \"ENVIRONMENT\",\n      \"startVersion\": \"1.185.0.20200201-120000\",\n      \"environments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"jobId\": \"-3524498778810258605\",\n      \"timestamp\": 1582031917814,\n      \"duration\": 3608000,\n      \"error\": \"off\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "2901810e-4237-4702-9c15-750cae078173",
                                            "name": "Not found. See response body for details.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "startVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "updateType",
                                                            "value": "ACTIVE_GATE"
                                                        },
                                                        {
                                                            "key": "targetVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "targetVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "lastUpdates",
                                                            "value": "false"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "82b18c23-c60a-49d7-8d45-6b636919808a",
                                    "name": "Creates a new update job for the specified ActiveGate",
                                    "request": {
                                        "name": "Creates a new update job for the specified ActiveGate",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "updateJobs"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "c9bb765a-b17c-4573-9a3c-b7d9410544a9",
                                            "name": "Success. The update-job have been created.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Created",
                                            "code": 201,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\",\n  \"cancelable\": false,\n  \"jobState\": \"SUCCEED\",\n  \"updateMethod\": \"AUTOMATIC\",\n  \"updateType\": \"ACTIVE_GATE\",\n  \"agType\": \"ENVIRONMENT\",\n  \"startVersion\": \"1.185.0.20200201-120000\",\n  \"environments\": [\n    \"laboris aliquip\",\n    \"nisi deserunt voluptate ea\"\n  ],\n  \"jobId\": \"-3524498778810258605\",\n  \"timestamp\": 1582031917814,\n  \"duration\": 3608000,\n  \"error\": \"enim occ\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "172a8975-6e83-4271-b93f-99a43846e864",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "251e8a40-2667-42b7-9914-a324e9660b0c",
                                    "name": "{job Id}",
                                    "item": [
                                        {
                                            "id": "1bd8dc1a-5883-4a03-a1ce-a967d691cbe7",
                                            "name": "Gets the parameters of the specified update job",
                                            "request": {
                                                "name": "Gets the parameters of the specified update job",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        ":jobId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "jobId",
                                                            "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "140af627-ed4d-4f02-965f-16670a7fdb16",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\",\n  \"cancelable\": false,\n  \"jobState\": \"SUCCEED\",\n  \"updateMethod\": \"AUTOMATIC\",\n  \"updateType\": \"ACTIVE_GATE\",\n  \"agType\": \"ENVIRONMENT\",\n  \"startVersion\": \"1.185.0.20200201-120000\",\n  \"environments\": [\n    \"laboris aliquip\",\n    \"nisi deserunt voluptate ea\"\n  ],\n  \"jobId\": \"-3524498778810258605\",\n  \"timestamp\": 1582031917814,\n  \"duration\": 3608000,\n  \"error\": \"enim occ\"\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "35d427be-ef69-4b23-967a-477ee277f049",
                                                    "name": "Not found. See response body for details.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "5c365fb0-4ae9-4d39-99d6-90d9f95afdd4",
                                            "name": "Deletes the specified update job",
                                            "request": {
                                                "name": "Deletes the specified update job",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        ":jobId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "jobId",
                                                            "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "d186c34c-7441-47cb-9b54-84d31194df57",
                                                    "name": "Success. The update-job have been deleted. Response doesn't have a body.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                },
                                                {
                                                    "id": "faa1c82a-47c1-4435-82ee-45234f06db16",
                                                    "name": "Failed. The input is invalid.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "bcfed66a-1066-499c-a4d2-da6987d6b0c6",
                                                    "name": "Not found. See response body for details.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "962ab418-c395-4668-b07d-060adc33cf8e",
                                    "name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
                                    "request": {
                                        "name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "updateJobs",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "e40b46b8-8dae-48e9-9ced-4044d0fbedc0",
                                            "name": "Validated. The submitted update-job is valid. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "e6ce830a-9cc5-4f2d-ba5f-ce959c12c9ea",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "17a85e46-280d-4342-a5ef-e392782b3ed4",
                    "name": "auto Update",
                    "item": [
                        {
                            "id": "1f25c641-9e0f-452c-96d1-5387ef76b350",
                            "name": "Gets the global auto-update configuration of environment ActiveGates.",
                            "request": {
                                "name": "Gets the global auto-update configuration of environment ActiveGates.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "autoUpdate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "74ccb1f2-91bf-4e6f-be0b-2b2801b64c96",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"globalSetting\": \"ENABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "756f2286-39bd-40b2-99a3-dd5aa7b72ba5",
                            "name": "Puts the global auto-update configuration of environment ActiveGates.",
                            "request": {
                                "name": "Puts the global auto-update configuration of environment ActiveGates.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "autoUpdate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "cb93f1d4-6731-4fbe-97ea-95339838dae9",
                                    "name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "985975fd-51b2-4caa-812f-e57208619b9c",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "651c94a6-509e-454c-83d2-74752e463104",
                            "name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
                            "request": {
                                "name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "autoUpdate",
                                        "validator"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "8f331e3b-3736-4d80-90bb-b0f1e38082ff",
                                    "name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "04b53037-273f-48c5-aee2-bdb21f106a99",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "99d0e9de-4da0-4275-9812-846cc21f3fec",
                    "name": "List ActiveGates with update jobs",
                    "request": {
                        "name": "List ActiveGates with update jobs",
                        "description": {
                            "content": "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGates",
                                "updateJobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "startVersionCompareType",
                                    "value": "EQUAL",
                                    "description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
                                },
                                {
                                    "disabled": false,
                                    "key": "startVersion",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "updateType",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of update-jobs by the update type."
                                },
                                {
                                    "disabled": false,
                                    "key": "targetVersionCompareType",
                                    "value": "EQUAL",
                                    "description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
                                },
                                {
                                    "disabled": false,
                                    "key": "targetVersion",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "lastUpdates",
                                    "value": "false",
                                    "description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "81dd9783-34fc-4788-a561-28d21f1f0f61",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "updateJobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "startVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "startVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateType",
                                            "value": "ACTIVE_GATE"
                                        },
                                        {
                                            "key": "targetVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "targetVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "lastUpdates",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"allUpdateJobs\": [\n    {\n      \"agId\": \"0x3efdd092\",\n      \"updateJobs\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"agId\": \"0x3efdd092\",\n      \"updateJobs\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bebb11ac-f13e-4142-af94-c05e30e4d9f3",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "updateJobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "startVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "startVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateType",
                                            "value": "ACTIVE_GATE"
                                        },
                                        {
                                            "key": "targetVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "targetVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "lastUpdates",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "bceda32d-a47a-4c67-aa16-0987d8043209",
                    "name": "remote Configuration Management",
                    "item": [
                        {
                            "id": "efc68384-884d-41cc-8ae4-036ac3a7f5fb",
                            "name": "Lists finished ActiveGate remote configuration management jobs",
                            "request": {
                                "name": "Lists finished ActiveGate remote configuration management jobs",
                                "description": {
                                    "content": "The response includes finished jobs for the last 7 days.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
                                        },
                                        {
                                            "disabled": false,
                                            "key": "to",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "3928f780-ef79-4cda-9802-92b43c154624",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"jobs\": [\n    {\n      \"entityType\": \"ONE_AGENT\",\n      \"id\": \"7974003406714390819\",\n      \"startTime\": \"2020-11-05T08:15:30.144Z\",\n      \"endTime\": \"2020-11-05T08:15:30.144Z\"\n    },\n    {\n      \"entityType\": \"ONE_AGENT\",\n      \"id\": \"7974003406714390819\",\n      \"startTime\": \"2020-11-05T08:15:30.144Z\",\n      \"endTime\": \"2020-11-05T08:15:30.144Z\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "929c67a1-1d8e-4bbe-8f04-1c0059991f9b",
                            "name": "Creates a new remote configuration management job",
                            "request": {
                                "name": "Creates a new remote configuration management job",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "0684f0b1-26d4-483e-94e5-57249eabcd34",
                                    "name": "Created",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"processedEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"totalEntitiesCount\": 1,\n  \"entityType\": \"ONE_AGENT\",\n  \"id\": \"7974003406714390819\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "4218491d-d640-400b-b731-9a0ddea11448",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"invalidEntities\": [\n    {\n      \"entity\": \"entityId\",\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ]\n    },\n    {\n      \"entity\": \"entityId\",\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ]\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "78bf368e-2d61-47c2-8faa-84b94a0b9d50",
                                    "name": "Other remote configuration management job is currently being executed",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "3874bb59-9334-41d3-a45e-217fc0be3f6b",
                            "name": "Creates a preview for remote configuration management job",
                            "request": {
                                "name": "Creates a preview for remote configuration management job",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement",
                                        "preview"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "3704431d-782a-444e-842a-7361d398bf11",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "preview"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"previews\": [\n    {\n      \"alreadyConfiguredEntitiesCount\": 1,\n      \"targetEntitiesCount\": 2,\n      \"attribute\": \"networkZone\",\n      \"value\": \"exampleNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"alreadyConfiguredEntitiesCount\": 1,\n      \"targetEntitiesCount\": 2,\n      \"attribute\": \"networkZone\",\n      \"value\": \"exampleNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "26a4b7e9-9a21-4e9e-bd8c-2fcf1e351881",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "preview"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"invalidEntities\": [\n    {\n      \"entity\": \"entityId\",\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ]\n    },\n    {\n      \"entity\": \"entityId\",\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ]\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "e92886cd-c24e-4545-89d3-391752e54ddf",
                            "name": "Gets remote configuration management job that is currently running",
                            "request": {
                                "name": "Gets remote configuration management job that is currently running",
                                "description": {
                                    "content": "The currently running remote configuration management job may be related to ActiveGates or OneAgents. There is a limit of one concurrent remote configuration management job, regardless of the entity type.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement",
                                        "current"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "44a823e7-0bb1-45a2-a08d-da53ba8ffb30",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "current"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"processedEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"totalEntitiesCount\": 1,\n  \"entityType\": \"ACTIVE_GATE\",\n  \"id\": \"7974003406714390819\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "522dcafd-67ac-4eb1-8b3e-5aba370896bc",
                                    "name": "No remote configuration management job is currently running ",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "current"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "935be477-9578-4e6b-89c3-4e71afe1321a",
                            "name": "Gets the specified remote configuration management job",
                            "request": {
                                "name": "Gets the specified remote configuration management job",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required remote configuration management job."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "e8b127cf-c90c-4990-9dbd-07b90e54194c",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required remote configuration management job."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"processedEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"totalEntitiesCount\": 1,\n  \"entityType\": \"ACTIVE_GATE\",\n  \"id\": \"7974003406714390819\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "0322fe76-a00d-44f9-a8d2-a868ed05a104",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required remote configuration management job."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "4467075c-50fd-40e7-9e51-5c3223408cf8",
                            "name": "Validates the payload for the `POST /activeGates/remoteConfigurationManagement` request.",
                            "request": {
                                "name": "Validates the payload for the `POST /activeGates/remoteConfigurationManagement` request.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement",
                                        "validator"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "2d549fa5-dfbe-4ab4-b3f1-18564c1ac352",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "8dc803c6-8fbd-4bf0-8809-00da2635ab68",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"invalidEntities\": [\n    {\n      \"entity\": \"entityId\",\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ]\n    },\n    {\n      \"entity\": \"entityId\",\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ]\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "12654359-dbca-41f2-a2e8-2e1edfe2426a",
                    "name": "Gets the status of ActiveGate tokens enforcement | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets the status of ActiveGate tokens enforcement | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "activeGates",
                                "tokenEnforcement"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "909ba1dc-fc15-43af-afcc-1673114776ce",
                            "name": "Success. The response contains the status of ActiveGate tokens enforcement",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "tokenEnforcement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"manualEnforced\": false,\n  \"autoEnforced\": false,\n  \"autoEnforcementEstimation\": {\n    \"value\": 22252956,\n    \"unit\": \"MINUTES\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "6ec5840e-9652-43a7-9907-a8307b0e7ac8",
            "name": "entities",
            "item": [
                {
                    "id": "d66031de-f456-4392-a5bc-db21f3feeb37",
                    "name": "Gets the information about monitored entities",
                    "request": {
                        "name": "Gets the information about monitored entities",
                        "description": {
                            "content": "Lists entities observed within the specified timeframe along with their properties. \n\nWhen you query entities of the `SERVICE_METHOD` type, only the following requests are returned: \n\n* [Key requests](https://dt-url.net/a903u9s) \n* Top X requests that are used for [baselining](https://dt-url.net/0j23uqb) \n* Requests that have caused a [problem](https://dt-url.net/pf43uqg) \n\nYou can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "entities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of entities. \n\nIf not set, 50 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "Defines the scope of the query. Only entities matching the specified criteria are included into response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\nThe field is **required** when you're querying the first page of results."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "<string>",
                                    "description": "Defines the ordering of the entities returned. \n\nThis field is **optional**, each field has a sign prefix (+/-), which corresponds to sorting order ( + for ascending and - for descending). If no sign prefix is set, then default ascending sorting order will be applied. \n\nCurrently ordering is only available for the display name (for example `sort=name or sort =+name for ascending, sort=-name for descending`)"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "227e7ab9-ed39-4dfe-ad0d-2828a516ca65",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 48687095,\n  \"pageSize\": 58135718,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"entities\": [\n    {\n      \"entityId\": \"HOST-06F288EE2A930951\",\n      \"type\": \"HOST\",\n      \"displayName\": \"my host\",\n      \"icon\": {\n        \"primaryIconType\": \"linux\",\n        \"secondaryIconType\": \"microsoft-azure-signet\",\n        \"customIconPath\": \"host\"\n      },\n      \"firstSeenTms\": 1574697667547,\n      \"lastSeenTms\": 1588242361417,\n      \"properties\": {\n        \"bitness\": 64,\n        \"monitoringMode\": \"FULL_STACK\",\n        \"osType\": \"LINUX\",\n        \"osArchitecture\": \"X86\",\n        \"networkZoneId\": \"aws.us.east01\",\n        \"cpuCores\": 8\n      },\n      \"tags\": [\n        {\n          \"context\": \"CONTEXTLESS\",\n          \"key\": \"architecture\",\n          \"value\": \"x86\",\n          \"stringRepresentation\": \"architecture:x86\"\n        },\n        {\n          \"context\": \"ENVIRONMENT\",\n          \"key\": \"Infrastructure\",\n          \"value\": \"Linux\",\n          \"stringRepresentation\": \"[ENVIRONMENT]Infrastructure:Linux\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"name\": \"main app\"\n        }\n      ],\n      \"fromRelationships\": {\n        \"isInstanceOf\": [\n          {\n            \"type\": \"HOST_GROUP\"\n          }\n        ]\n      },\n      \"toRelationships\": {\n        \"isDiskOf\": [\n          {\n            \"type\": \"DISK\"\n          }\n        ]\n      }\n    },\n    {\n      \"entityId\": \"HOST-06F288EE2A930951\",\n      \"type\": \"HOST\",\n      \"displayName\": \"my host\",\n      \"icon\": {\n        \"primaryIconType\": \"linux\",\n        \"secondaryIconType\": \"microsoft-azure-signet\",\n        \"customIconPath\": \"host\"\n      },\n      \"firstSeenTms\": 1574697667547,\n      \"lastSeenTms\": 1588242361417,\n      \"properties\": {\n        \"bitness\": 64,\n        \"monitoringMode\": \"FULL_STACK\",\n        \"osType\": \"LINUX\",\n        \"osArchitecture\": \"X86\",\n        \"networkZoneId\": \"aws.us.east01\",\n        \"cpuCores\": 8\n      },\n      \"tags\": [\n        {\n          \"context\": \"CONTEXTLESS\",\n          \"key\": \"architecture\",\n          \"value\": \"x86\",\n          \"stringRepresentation\": \"architecture:x86\"\n        },\n        {\n          \"context\": \"ENVIRONMENT\",\n          \"key\": \"Infrastructure\",\n          \"value\": \"Linux\",\n          \"stringRepresentation\": \"[ENVIRONMENT]Infrastructure:Linux\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"name\": \"main app\"\n        }\n      ],\n      \"fromRelationships\": {\n        \"isInstanceOf\": [\n          {\n            \"type\": \"HOST_GROUP\"\n          }\n        ]\n      },\n      \"toRelationships\": {\n        \"isDiskOf\": [\n          {\n            \"type\": \"DISK\"\n          }\n        ]\n      }\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b7b20fb2-deaf-4858-9f1d-425d5cfa819c",
                    "name": "Gets the properties of the specified monitored entity",
                    "request": {
                        "name": "Gets the properties of the specified monitored entity",
                        "description": {},
                        "url": {
                            "path": [
                                "entities",
                                ":entityId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
                                }
                            ],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "entityId",
                                    "description": "(Required) The ID of the required entity."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "6143a79d-55a7-42b3-bd0c-b9d095f3f0d4",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities",
                                        ":entityId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "entityId",
                                            "description": "(Required) The ID of the required entity."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"tags\": [\n    {\n      \"stringRepresentation\": \"reprehenderit in\",\n      \"value\": \"mollit non\",\n      \"key\": \"amet\",\n      \"context\": \"Ut enim Lorem\"\n    },\n    {\n      \"stringRepresentation\": \"aute quis do minim\",\n      \"value\": \"dolor consectetur ut consequat non\",\n      \"key\": \"laboris consectetur cupidatat\",\n      \"context\": \"mollit do labore\"\n    }\n  ],\n  \"fromRelationships\": {\n    \"quis64\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"toRelationships\": {\n    \"consequat61\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"enim_b4\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"managementZones\": [\n    {\n      \"name\": \"quis qui cillum\",\n      \"id\": \"velit labore\"\n    },\n    {\n      \"name\": \"sit \",\n      \"id\": \"qui culpa anim\"\n    }\n  ],\n  \"entityId\": \"officia Excepteur fugiat Duis deserunt\",\n  \"lastSeenTms\": -30555709,\n  \"firstSeenTms\": 41153379,\n  \"displayName\": \"sed Duis\",\n  \"properties\": {\n    \"amet2\": {}\n  },\n  \"type\": \"sed do enim qui\",\n  \"icon\": {\n    \"primaryIconType\": \"Lorem non ipsum proident ut\",\n    \"customIconPath\": \"dolore minim magna Ut\",\n    \"secondaryIconType\": \"elit eiusmod\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1831d158-b42b-451c-a56e-b47cc526e456",
                    "name": "Creates or updates a custom device",
                    "request": {
                        "name": "Creates or updates a custom device",
                        "description": {},
                        "url": {
                            "path": [
                                "entities",
                                "custom"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "b585d0dd-b5a7-46e8-b398-d145acc90364",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities",
                                        "custom"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"entityId\": \"quis culpa\",\n  \"groupId\": \"ut voluptate\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8ec77db0-dec1-4419-90e8-1fe6b9502d89",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities",
                                        "custom"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "77ee83ec-4dcb-49ea-95e1-ded23295d56c",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entities",
                                        "custom"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "7c2a7514-853e-48ab-bc66-f376714b073c",
            "name": "entity Types",
            "item": [
                {
                    "id": "cbfcb8ed-e226-44eb-88e3-0a8ae8fd57cb",
                    "name": "Gets a list of properties for all entity types",
                    "request": {
                        "name": "Gets a list of properties for all entity types",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "entityTypes"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of entity types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "e844a7c4-a456-46b6-839e-863f12c04830",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entityTypes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 86128972,\n  \"pageSize\": 33083535,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"types\": [\n    {\n      \"dimensionKey\": \"velit amet laboris\",\n      \"tags\": \"cupidatat esse\",\n      \"fromRelationships\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"toRelationships\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"managementZones\": \"est ut commodo exercitation cillum\",\n      \"entityLimitExceeded\": false,\n      \"displayName\": \"labore officia iru\",\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"pariatur nulla dolor esse\"\n    },\n    {\n      \"dimensionKey\": \"elit ipsum eu\",\n      \"tags\": \"culpa irure occaecat ut\",\n      \"fromRelationships\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"toRelationships\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"managementZones\": \"anim\",\n      \"entityLimitExceeded\": true,\n      \"displayName\": \"in fugiat in anim esse\",\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"sint consequat exercitation pariatur\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "686c5200-d625-4d30-959e-fbcb6e8e2c6f",
                            "name": "Failed. There are no more entity types to export.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entityTypes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "0edd917f-3c4b-4274-91ad-9eec0f719629",
                    "name": "Gets a list of properties for the specified entity type",
                    "request": {
                        "name": "Gets a list of properties for the specified entity type",
                        "description": {},
                        "url": {
                            "path": [
                                "entityTypes",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "description": "(Required) The required entity type."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "1c9a62c0-8b40-40bc-942f-d81690ab7e0a",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entityTypes",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "type",
                                            "description": "(Required) The required entity type."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"dimensionKey\": \"et elit\",\n  \"tags\": \"dolore aute dolore\",\n  \"fromRelationships\": [\n    {\n      \"toTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"ex fugiat\"\n    },\n    {\n      \"toTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"Duis ea officia v\"\n    }\n  ],\n  \"toRelationships\": [\n    {\n      \"fromTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"ad quis sed laborum\"\n    },\n    {\n      \"fromTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"laborum s\"\n    }\n  ],\n  \"managementZones\": \"sit Ut\",\n  \"entityLimitExceeded\": false,\n  \"displayName\": \"anim sunt\",\n  \"properties\": [\n    {\n      \"displayName\": \"cpu cores\",\n      \"id\": \"cpuCores\",\n      \"type\": \"Number\"\n    },\n    {\n      \"displayName\": \"cpu cores\",\n      \"id\": \"cpuCores\",\n      \"type\": \"Number\"\n    }\n  ],\n  \"type\": \"nostrud dolor\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dbf19949-894a-4b7e-b393-3b31591df1e3",
                            "name": "Failed. The requested monitored entity type is not exportable or doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "entityTypes",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "type",
                                            "description": "(Required) The required entity type."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "633aa235-d302-4481-b294-0daa12d3ebc6",
            "name": "events",
            "item": [
                {
                    "id": "ec9b904e-9f74-4923-97fa-f5dbda84a92a",
                    "name": "Lists events within the specified timeframe",
                    "request": {
                        "name": "Lists events within the specified timeframe",
                        "description": {},
                        "url": {
                            "path": [
                                "events"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of events in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "eventSelector",
                                    "value": "<string>",
                                    "description": "Defines the scope of the query. Only events matching the specified criteria are included in the response.\n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies.\n* Event ID: `eventId(\"id-1\", \"id-2\")`.\n* ID of related entity: `entityId(\"id-1\", \"id-2\")`.\n* Event status: `status(\"OPEN\")` or `status(\"CLOSED\")`. You can specify only one status.\n* Management zone ID: `managementZoneId(\"123\", \"321\")`.\n* Event type: `eventType(\"event-type\")`. You can specify only one event type. You can fetch the list of possible event types with the [GET event types](https://dt-url.net/qc03u6w) call. \n* Correlation ID: `correlationId(\"id-1\", \"id-2\")`.\n* Happened during maintenance (true, false): `underMaintenance(true)`. \n* Notifications are suppressed (true, false): `suppressAlert(true)`. \n* Problem creation is suppressed (true, false): `suppressProblem(true)`. \n* Frequent event (true, false): `frequentEvent(true)`. \n* Event property: `property.<key>(\"value-1\", \"value-2\")`.\n\nTo set several criteria, separate them with commas (`,`). Only results matching **all** criteria are included in the response. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\nThe number of entities that can be selected is limited to 10000."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "c391f96d-d00c-4cc6-9146-904337540915",
                            "name": "Success. The response contains the list of events.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "events"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "eventSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 82870232,\n  \"warnings\": [\n    \"consectetur irur\",\n    \"velit eu ea aliqua laborum\"\n  ],\n  \"events\": [\n    {\n      \"entityTags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"eventType\": \"LOW_DISK_SPACE\",\n      \"eventId\": \"4293884258445543163_1564039524182\",\n      \"managementZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"entityId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"frequentEvent\": true,\n      \"suppressAlert\": true,\n      \"suppressProblem\": true,\n      \"underMaintenance\": true,\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"OPEN\",\n      \"startTime\": 1564039524182,\n      \"endTime\": 1564039524182,\n      \"title\": \"High CPU load on host X\",\n      \"correlationId\": \"933613657e1c8fcf\"\n    },\n    {\n      \"entityTags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"eventType\": \"LOW_DISK_SPACE\",\n      \"eventId\": \"4293884258445543163_1564039524182\",\n      \"managementZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"entityId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"frequentEvent\": false,\n      \"suppressAlert\": false,\n      \"suppressProblem\": false,\n      \"underMaintenance\": true,\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"OPEN\",\n      \"startTime\": 1564039524182,\n      \"endTime\": 1564039524182,\n      \"title\": \"High CPU load on host X\",\n      \"correlationId\": \"933613657e1c8fcf\"\n    }\n  ],\n  \"pageSize\": -6829573,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "41b8b894-cab4-4db9-8526-539176b64fbd",
                    "name": "Ingests a custom event",
                    "request": {
                        "name": "Ingests a custom event",
                        "description": {
                            "content": "The ingestion of custom events consumes [Davis Data Units](https://dt-url.net/ddu) (DDUs) from the events pool.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "events",
                                "ingest"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "352e5a62-6b3a-4882-abb4-9330b9139482",
                            "name": "The event ingest request was received by the server. The response body indicates for each event whether its creation was successful.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "events",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"eventIngestResults\": [\n    {\n      \"status\": \"OK\",\n      \"correlationId\": \"in\"\n    },\n    {\n      \"status\": \"OK\",\n      \"correlationId\": \"par\"\n    }\n  ],\n  \"reportCount\": -62053705\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ce488916-86c6-4c50-ad75-fd42bfbb048c",
                    "name": "Gets the properties of an event",
                    "request": {
                        "name": "Gets the properties of an event",
                        "description": {},
                        "url": {
                            "path": [
                                "events",
                                ":eventId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "eventId",
                                    "description": "(Required) The ID of the required event."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2bab20a9-fa9a-4e5f-b534-de80cbbebbb9",
                            "name": "Success. The response contains the configuration of the event.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "events",
                                        ":eventId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "eventId",
                                            "description": "(Required) The ID of the required event."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"entityTags\": [\n    {\n      \"stringRepresentation\": \"do amet s\",\n      \"value\": \"ea nostrud\",\n      \"key\": \"ullamco incididunt\",\n      \"context\": \"dolor do velit\"\n    },\n    {\n      \"stringRepresentation\": \"eu cupidatat\",\n      \"value\": \"qui nisi\",\n      \"key\": \"sunt mollit esse\",\n      \"context\": \"eu consequat nostrud tempor\"\n    }\n  ],\n  \"eventType\": \"LOW_DISK_SPACE\",\n  \"eventId\": \"4293884258445543163_1564039524182\",\n  \"managementZones\": [\n    {\n      \"name\": \"anim magna\",\n      \"id\": \"ei\"\n    },\n    {\n      \"name\": \"mollit ut enim Excepteur incididunt\",\n      \"id\": \"non eiusmo\"\n    }\n  ],\n  \"entityId\": {\n    \"entityId\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"name\": \"reprehenderit\"\n  },\n  \"frequentEvent\": true,\n  \"suppressAlert\": true,\n  \"suppressProblem\": true,\n  \"underMaintenance\": false,\n  \"properties\": [\n    {\n      \"value\": \"mollit Duis cillum incidid\",\n      \"key\": \"reprehenderit\"\n    },\n    {\n      \"value\": \"dolor occaecat ut\",\n      \"key\": \"aliquip non\"\n    }\n  ],\n  \"status\": \"OPEN\",\n  \"startTime\": 1564039524182,\n  \"endTime\": 1564039524182,\n  \"title\": \"High CPU load on host X\",\n  \"correlationId\": \"933613657e1c8fcf\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "002face1-c494-478a-af18-7d61284ae39d",
            "name": "event Properties",
            "item": [
                {
                    "id": "776694d6-7b4c-426b-a936-e90591603881",
                    "name": "Lists all event properties",
                    "request": {
                        "name": "Lists all event properties",
                        "description": {},
                        "url": {
                            "path": [
                                "eventProperties"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of event properties in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "0650cae0-a3cc-47cc-8676-6267f9d0a840",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "eventProperties"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 43982254,\n  \"eventProperties\": [\n    {\n      \"writable\": true,\n      \"displayName\": \"Custom description\",\n      \"key\": \"dt.event.description\",\n      \"description\": \"in eu\"\n    },\n    {\n      \"writable\": true,\n      \"displayName\": \"Custom description\",\n      \"key\": \"dt.event.description\",\n      \"description\": \"officia eu in nisi aliqua\"\n    }\n  ],\n  \"pageSize\": 35564255,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9e4c4edb-a32a-4144-9afa-d8ecb76f4c1f",
                    "name": "Gets the details of an event property",
                    "request": {
                        "name": "Gets the details of an event property",
                        "description": {},
                        "url": {
                            "path": [
                                "eventProperties",
                                ":propertyKey"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "propertyKey",
                                    "description": "(Required) The event property key you're inquiring."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "8de97bd7-2239-4820-801f-4997076ff7ba",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "eventProperties",
                                        ":propertyKey"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "propertyKey",
                                            "description": "(Required) The event property key you're inquiring."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"writable\": true,\n  \"displayName\": \"Custom description\",\n  \"key\": \"dt.event.description\",\n  \"description\": \"ut ipsum\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "20b047f8-0d71-4a1a-8e33-f5987517c8f5",
            "name": "event Types",
            "item": [
                {
                    "id": "975ab799-407a-4fb5-a28c-394b1d291c30",
                    "name": "Lists all event types",
                    "request": {
                        "name": "Lists all event types",
                        "description": {},
                        "url": {
                            "path": [
                                "eventTypes"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of event types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "1dfff238-6856-4c8f-b124-d58da5cc5183",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "eventTypes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -22246685,\n  \"eventTypeInfos\": [\n    {\n      \"severityLevel\": \"PERFORMANCE\",\n      \"displayName\": \"High CPU\",\n      \"type\": \"OSI_HIGH_CPU\",\n      \"description\": \"aliquip amet ut enim aliqua\"\n    },\n    {\n      \"severityLevel\": \"PERFORMANCE\",\n      \"displayName\": \"High CPU\",\n      \"type\": \"OSI_HIGH_CPU\",\n      \"description\": \"elit incididunt Excepteur\"\n    }\n  ],\n  \"pageSize\": -66011602,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ce614edd-73cd-4424-98dc-954cb5567214",
                    "name": "Gets the properties of an event type",
                    "request": {
                        "name": "Gets the properties of an event type",
                        "description": {},
                        "url": {
                            "path": [
                                "eventTypes",
                                ":eventType"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "eventType",
                                    "description": "(Required) The event type you're inquiring."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "c91a0208-782f-4698-9a20-c459b097cd94",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "eventTypes",
                                        ":eventType"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "eventType",
                                            "description": "(Required) The event type you're inquiring."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"severityLevel\": \"PERFORMANCE\",\n  \"displayName\": \"High CPU\",\n  \"type\": \"OSI_HIGH_CPU\",\n  \"description\": \"culpa aliquip nisi\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "2427caee-a2b7-4a62-8617-b75e0a197341",
            "name": "metrics",
            "item": [
                {
                    "id": "065f5a0b-2aad-48e1-b591-e5bb4c986a8a",
                    "name": "Lists all available metrics",
                    "request": {
                        "name": "Lists all available metrics",
                        "description": {
                            "content": "You can narrow down the output by selecting metrics in the **metricSelector** field. \n\nYou can additionally limit the output by using pagination: \n\n1. Specify the number of results per page in the **pageSize** query parameter. \n\n2. Then use the cursor from the **nextPageKey** field of the response in the **nextPageKey** query parameter to obtain subsequent pages. All other query parameters must be omitted.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "metrics"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of metric schemata in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\n If a value higher than 500 is used, only 500 results per page are returned."
                                },
                                {
                                    "disabled": false,
                                    "key": "metricSelector",
                                    "value": "<string>",
                                    "description": "Selects metrics for the query by their keys.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can select a full set of related metrics by using a trailing asterisk (`*`) wildcard. For example, `builtin:host.*` selects all host-based metrics and `builtin:*` selects all Dynatrace-provided metrics. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax.\n\n Only `aggregation`, `merge`, `parents`, and `splitBy` transformations are supported by this endpoint.\n\n If the metric key contains any symbols you must quote (`\"`) the key. The following characters inside of a quoted metric key must be escaped with a tilde (`~`):\n\n* Quotes (`\"`)\n* Tildes (`~`) \n\nFor example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents: Type \"APACHE\"** you must specify this selector: \n\n `\"ext:selfmonitoring.jmx.Agents: Type ~\"APACHE~\"\"` \n\n\n\n To find metrics based on a search term, rather than metricId, use the **text** query parameter instead of this one."
                                },
                                {
                                    "disabled": false,
                                    "key": "text",
                                    "value": "<string>",
                                    "description": "Metric registry search term. Only show metrics that contain the term in their key, display name, or description. Use the `metricSelector` parameter instead of this one to select a complete metric hierarchy instead of doing a text-based search."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Defines the list of metric properties included in the response. \n\n`metricId` is **always** included in the result. The following additional properties are available: \n\n* `displayName`: The name of the metric in the user interface. Enabled by default. \n* `description`: A short description of the metric. Enabled by default. \n* `unit`: The unit of the metric. Enabled by default. \n* `tags`: The tags of the metric. \n+ `dduBillable`:  An indicator whether the usage of metric consumes [Davis data units](https://dt-url.net/ddu). \n* `created`:  The timestamp (UTC milliseconds) when the metrics has been created. \n* `lastWritten`:  The timestamp (UTC milliseconds) when metric data points have been written for the last time. \n* `aggregationTypes`: The list of allowed aggregations for the metric. Note that it may be different after a [transformation](https://dt-url.net/metricSelector) is applied. \n* `defaultAggregation`: The default aggregation of the metric. It is used when no aggregation is specified or the `:auto` transformation is set. \n* `dimensionDefinitions`: The fine metric division (for example, process group and process ID for some process-related metric). \n* `transformations`: A list of [transformations](https://dt-url.net/metricSelector) that can be applied to the metric.\n* `entityType`: A list of entity types supported by the metric.\n* `minimumValue`: The minimum allowed value of the metric.\n* `maximumValue`: The maximum allowed value of the metric.\n* `rootCauseRelevant`: Whether (true or false) the metric is related to a root cause of a problem. A root-cause relevant metric represents a strong indicator for a faulty component.\n* `impactRelevant`: Whether (true or false) the metric is relevant to a problem's impact. An impact-relevant metric is highly dependent on other metrics and changes because an underlying root-cause metric has changed.\n* `metricValueType`: The type of the metric's value. You have these options:\n\t * `score`: A score metric is a metric where high values indicate a good situation, while low values indicate trouble. An example of such a metric is a success rate.\n\t * `error`: An error metric is a metric where high values indicate trouble, while low values indicate a good situation. An example of such a metric is an error count.\n* `latency`: The latency of the metric, in minutes. The latency is the expected reporting delay (for example, caused by constraints of cloud vendors or other third-party data sources) between the observation of a metric data point and its availability in Dynatrace. The allowed value range is from `1` to `60` minutes.\n* `metricSelector`: The underlying metric selector used by a func: metric.\n* `scalar`: Indicates whether the metric expression resolves to a scalar (`true`) or to a series (`false`). \nA scalar result always contains one data point. The amount of data points in a series result depends on the resolution you're using. \n* `resolutionInfSupported`: If `true`, resolution=Inf can be applied to the metric query. \n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`.\n\nTo specify several properties, join them with a comma (for example `fields=+aggregationTypes,-description`).\n\nIf you specify just one property, the response contains the metric key and the specified property. To return metric keys only, specify `metricId` here."
                                },
                                {
                                    "disabled": false,
                                    "key": "writtenSince",
                                    "value": "<string>",
                                    "description": "Filters the resulted set of metrics to those that have data points within the specified timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "metadataSelector",
                                    "value": "<string>",
                                    "description": "The metadata scope of the query. Only metrics with specified properties are included to the response. \n\nYou can set one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used. If several values are specified, the **OR** logic applies. \n\n* `unit(\"unit-1\",\"unit-2\")` \n* `tags(\"tag-1\",\"tag-2\")` \n* `dimensionKey(\"dimkey-1\",\"dimkey-2\")`. The filtering applies only to dimensions that were written within the last 14 days. \n* `custom(\"true\")`. \"true\" to include only user-defined metrics metrics (without namespace or with `ext:`, `calc:`, `func:`, `appmon:`), \"false\" to filter them out. \n\nTo set several criteria, separate them with a comma (`,`). For example, `tags(\"feature\",\"cloud\"),unit(\"Percent\"),dimensionKey(\"location\"),custom(\"true\")`. Only results matching **all** criteria are included in response. \n\nFor example, to list metrics that have the tags **feature** AND **cloud** with a unit of **Percent** OR **MegaByte** AND a dimension with a dimension key **location**, use this **metadataSelector**: `tags(\"feature\"),unit(\"Percent\",\"MegaByte\"),tags(\"cloud\"),dimensionKey(\"location\")`."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "24c87eda-1d45-4151-83d4-4b4c415383bf",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "text",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "writtenSince",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "metadataSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"metrics\": [\n    {\n      \"metricId\": \"officia cupidatat Excepteur quis\",\n      \"scalar\": false,\n      \"metricSelector\": \"proident laboris non id\",\n      \"aggregationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"metricValueType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"entityType\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dduBillable\": true,\n      \"resolutionInfSupported\": true,\n      \"lastWritten\": -97670706,\n      \"impactRelevant\": false,\n      \"minimumValue\": 91119961.03563243,\n      \"maximumValue\": 32519111.506568074,\n      \"latency\": -4610234,\n      \"defaultAggregation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimensionDefinitions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"rootCauseRelevant\": true,\n      \"unitDisplayFormat\": \"decimal\",\n      \"dimensionCardinalities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"mollit fugiat deserunt dolore\",\n      \"description\": \"fugiat laboris\",\n      \"created\": 7669174,\n      \"transformations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unit\": \"Lorem mollit\",\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"metricId\": \"cillum velit\",\n      \"scalar\": true,\n      \"metricSelector\": \"Duis amet in consectetur adipisicing\",\n      \"aggregationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"metricValueType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"entityType\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dduBillable\": false,\n      \"resolutionInfSupported\": false,\n      \"lastWritten\": -49182917,\n      \"impactRelevant\": true,\n      \"minimumValue\": 57514124.72757113,\n      \"maximumValue\": -29824727.504527584,\n      \"latency\": -14529450,\n      \"defaultAggregation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimensionDefinitions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"rootCauseRelevant\": true,\n      \"unitDisplayFormat\": \"decimal\",\n      \"dimensionCardinalities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"fugiat mollit\",\n      \"description\": \"irure do in\",\n      \"created\": -74649418,\n      \"transformations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unit\": \"adipisicing sunt ex anim\",\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"nextPageKey\": \"aliqua\",\n  \"totalCount\": -67288815,\n  \"warnings\": [\n    \"nulla eu in\",\n    \"ex ut nostrud non reprehenderit\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "79b569c7-d523-4b81-bb42-f5bddd957eaf",
                            "name": "Syntax or validation error. **metricSelector** or **fields** have syntactic or semantic errors.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "text",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "writtenSince",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "metadataSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "ad2feaa4-a459-4f6d-91cc-a558a22a3e1b",
                            "name": "A metric has not been found.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "text",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "writtenSince",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "metadataSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "f6f402be-8985-41d4-8c48-48270dee80be",
                            "name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "text",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "writtenSince",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "metadataSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Acceptable",
                            "code": 406,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "6e7bb34b-ffcd-438a-b652-4e432a9a479d",
                    "name": "{metric Key}",
                    "item": [
                        {
                            "id": "cda13a55-a066-4560-9fa0-8cad6de31aa6",
                            "name": "Gets the descriptor of the specified metric",
                            "request": {
                                "name": "Gets the descriptor of the specified metric",
                                "description": {},
                                "url": {
                                    "path": [
                                        "metrics",
                                        ":metricKey"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "metricKey",
                                            "description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "60b859b9-c579-47de-8282-98c48ff10568",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"metricId\": \"si\",\n  \"scalar\": false,\n  \"metricSelector\": \"sed dolor amet ipsum\",\n  \"aggregationTypes\": [\n    \"avg\",\n    \"percentile\"\n  ],\n  \"metricValueType\": {\n    \"type\": \"unknown\"\n  },\n  \"tags\": [\n    \"ut mollit ni\",\n    \"voluptate mollit ullamco magna\"\n  ],\n  \"entityType\": [\n    \"nostrud aliquip pariatur sed ipsum\",\n    \"veniam\"\n  ],\n  \"dduBillable\": true,\n  \"resolutionInfSupported\": false,\n  \"lastWritten\": -21426119,\n  \"impactRelevant\": true,\n  \"minimumValue\": -35754237.90481276,\n  \"maximumValue\": -92036121.15246336,\n  \"latency\": -46573667,\n  \"defaultAggregation\": {\n    \"type\": \"value\",\n    \"parameter\": -90428613.13539197\n  },\n  \"dimensionDefinitions\": [\n    {\n      \"displayName\": \"sed in qui\",\n      \"index\": -84136082,\n      \"key\": \"voluptate\",\n      \"name\": \"Lorem sed eu in officia\",\n      \"type\": \"STRING\"\n    },\n    {\n      \"displayName\": \"id veniam mollit Ut\",\n      \"index\": -532252,\n      \"key\": \"aliqua do aute\",\n      \"name\": \"quis consequat nostrud\",\n      \"type\": \"NUMBER\"\n    }\n  ],\n  \"rootCauseRelevant\": false,\n  \"unitDisplayFormat\": \"binary\",\n  \"dimensionCardinalities\": [\n    {\n      \"estimate\": -61813366,\n      \"key\": \"elit\",\n      \"relative\": 48862936.0307571\n    },\n    {\n      \"estimate\": 24017148,\n      \"key\": \"amet dolor adipisicing\",\n      \"relative\": -70996311.28953949\n    }\n  ],\n  \"displayName\": \"labore Duis veniam\",\n  \"description\": \"voluptate cupidatat dolore qui\",\n  \"created\": 71062625,\n  \"transformations\": [\n    \"default\",\n    \"toUnit\"\n  ],\n  \"unit\": \"ipsum pariatur do nostrud\",\n  \"warnings\": [\n    \"aliquip mollit\",\n    \"in do\"\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "e389c4a1-bc7e-4f85-bbdf-9e027977c637",
                                    "name": "A metric has not been found.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "1e721cf8-996d-485a-9e08-d84021935e6b",
                                    "name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Acceptable",
                                    "code": 406,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "b3197e71-37ec-4d74-a4a3-dbd52f7e2e60",
                            "name": "Deletes the specified metric",
                            "request": {
                                "name": "Deletes the specified metric",
                                "description": {
                                    "content": "Deletion cannot be undone! You can't delete a metric if it has data points ingested within the last two hours.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "metrics",
                                        ":metricKey"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "metricKey",
                                            "description": "(Required) The key of the required metric. \n\n"
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "5b87a264-8244-4b0f-b056-3707961dbc2c",
                                    "name": "Success. The deletion of the metric has been triggered.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\n"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Accepted",
                                    "code": 202,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "6d6100ae-53c4-41a8-a2cc-c8f9bf1ca06f",
                                    "name": "Failed. The metric has been written within the last two hours.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\n"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "1eb035d5-5bfe-4b91-aa2e-93f3d9017278",
                                    "name": "Failed. The metric cannot be found or the key cannot be parsed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\n"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "cbae1934-c842-4d8f-b5b4-c77c03d74b9d",
                                    "name": "Failed. The deletion of metric dimensions failed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metrics",
                                                ":metricKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "metricKey",
                                                    "description": "(Required) The key of the required metric. \n\n"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "dbf8f23f-f918-4a6b-a800-f4309bf87af9",
                    "name": "Gets data points of the specified metrics",
                    "request": {
                        "name": "Gets data points of the specified metrics",
                        "description": {
                            "content": "The following limits apply: \n* The amount of aggregated data points in the response is limited to 1,000 \n* The amount of series in the response is limited to 1,000 \n   * The amount of data points per series is limited to 10,080 (minutes of one week) \n   * The overall amount of data points is limited to 100,000 \n\nThe **dataPointCountRatio** specifies the ratio of queried data points divided by the maximum number of data points per metric that are allowed in a single query.\nThe **dimensionCountRatio** specifies the ratio of queried dimension tuples divided by the maximum number of dimension tuples allowed in a single query.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "metrics",
                                "query"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "metricSelector",
                                    "value": "<string>",
                                    "description": "Selects metrics for the query by their keys. You can select up to 10 metrics for one query.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\n\n\n If the metric key contains any symbols you must quote (`\"`) the key. The following characters inside of a quoted metric key must be escaped with a tilde (`~`):\n\n* Quotes (`\"`)\n* Tildes (`~`) \n\nFor example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents: Type \"APACHE\"** you must specify this selector: \n\n `\"ext:selfmonitoring.jmx.Agents: Type ~\"APACHE~\"\"` \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax."
                                },
                                {
                                    "disabled": false,
                                    "key": "resolution",
                                    "value": "<string>",
                                    "description": "The desired resolution of data points. \n\nYou can use one of the following options: \n* The desired amount of data points. This is the default option. This is a reference number of points, which is not necessarily equal to the number of the returned data points. \n* The desired timespan between data points. This is a reference timespan, which is not necessarily equal to the returned timespan. To use this option, specify the unit of the timespan. \n\nValid units for the timespan are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `q`: quarters \n* `y`: years \n\nIf not set, the default is **120 data points**.\n\nFor example: \n\n* Get data points which are 10 minutes apart: `resolution=10m` \n* Get data points which are 3 weeks apart: `resolution=3w`"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "Specifies the entity scope of the query. Only data points delivered by matched entities are included in response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\nUse the [`GET /metrics/{metricId}`](https://dt-url.net/6z23ifk) call to fetch the list of possible entity types for your metric. \n\nTo set a universal scope matching all entities, omit this parameter."
                                },
                                {
                                    "disabled": false,
                                    "key": "mzSelector",
                                    "value": "<string>",
                                    "description": "The management zone scope of the query. Only metrics data relating to the specified management zones are included to the response. \n\nYou can set one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used. If several values are specified, the **OR** logic applies. \n\n* `mzId(123,456)` \n* `mzName(\"name-1\",\"name-2\")` \nTo set several criteria, separate them with a comma (`,`). For example, `mzName(\"name-1\",\"name-2\"),mzId(1234)`. Only results matching **all** of the criteria are included in the response.For example, to list metrics that have the id **123** OR **234** AND the name **name-1** OR **name-2**, use this **mzSelector**: `mzId(123,234),mzName(\"name-1\",\"name-2\")."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2b13806e-66c9-4790-a6db-e56b62751fd5",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "query"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "resolution",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mzSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"resolution\": \"in nostrud\",\n  \"result\": [\n    {\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataPointCountRatio\": -3788340.0429027677,\n      \"dimensionCountRatio\": -60001140.21753653,\n      \"metricId\": \"laborum Excepteur ex\",\n      \"appliedOptionalFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataPointCountRatio\": -87925585.01905093,\n      \"dimensionCountRatio\": 30970056.287281007,\n      \"metricId\": \"cillum ullamco Excepteur\",\n      \"appliedOptionalFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"warnings\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"totalCount\": 42470734,\n  \"warnings\": [\n    \"proident veniam\",\n    \"tempor ullamco\"\n  ],\n  \"nextPageKey\": \"labore laborum\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bd6842f7-b376-419a-8bcb-bca2ed4e1070",
                            "name": "Syntax or validation error. From and to parameters, entitySelector or resolution are incorrect individually or in their combined meaning.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "query"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "resolution",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mzSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "d2b37ab5-7bf4-4870-bb08-67d7eebc60cf",
                            "name": "A metric has not been found.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "query"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "resolution",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mzSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "c86e5af4-3db3-43a8-9f24-c52ff0a1ade3",
                            "name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "query"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "metricSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "resolution",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "mzSelector",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Acceptable",
                            "code": 406,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "aadaaa94-6d89-4bf9-8ab3-b57b6cbece52",
                    "name": "Pushes metric data points to Dynatrace",
                    "request": {
                        "name": "Pushes metric data points to Dynatrace",
                        "description": {},
                        "url": {
                            "path": [
                                "metrics",
                                "ingest"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "text/plain; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "<string>"
                        }
                    },
                    "response": [
                        {
                            "id": "4bbc4998-484b-42b4-b880-63e8bf2153d2",
                            "name": "The provided metric data points are accepted and will be processed in the background.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "server.cpu.temperature,cpu.id=0 42"
                                }
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"linesOk\": 29367020,\n  \"linesInvalid\": 4407918,\n  \"warnings\": {\n    \"changedMetricKeys\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ullamco nostrud dolor\"\n  },\n  \"error\": {\n    \"invalidLines\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"adipisicing amet\",\n    \"code\": 93882551\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "26d0ad29-e357-4dcd-965c-5aa1ba66a2ad",
                            "name": "Some data points are invalid. Valid data points are accepted and will be processed in the background.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "metrics",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "server.cpu.temperature,cpu.id=0 42"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"linesOk\": -94026743,\n  \"linesInvalid\": 97446457,\n  \"warnings\": {\n    \"changedMetricKeys\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ullamco consequat reprehenderit\"\n  },\n  \"error\": {\n    \"invalidLines\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"ea ex sit velit\",\n    \"code\": 1924885\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "d6be6165-f9c6-401e-be85-bce9083af02f",
            "name": "network Zones",
            "item": [
                {
                    "id": "b36a6591-285d-4d90-80fe-c3d734aec1cc",
                    "name": "Lists all existing network zones",
                    "request": {
                        "name": "Lists all existing network zones",
                        "description": {},
                        "url": {
                            "path": [
                                "networkZones"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2f8a550d-ea58-4a34-a9d1-9ab6772daba5",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "networkZones"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"networkZones\": [\n    {\n      \"alternativeZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"numOfOneAgentsUsing\": 28610386,\n      \"numOfConfiguredOneAgents\": -99124782,\n      \"numOfOneAgentsFromOtherZones\": 4364833,\n      \"numOfConfiguredActiveGates\": -70986556,\n      \"id\": \"reprehenderit amet\",\n      \"description\": \"dolor Duis ex in\"\n    },\n    {\n      \"alternativeZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"numOfOneAgentsUsing\": -34920774,\n      \"numOfConfiguredOneAgents\": -7959437,\n      \"numOfOneAgentsFromOtherZones\": -28110810,\n      \"numOfConfiguredActiveGates\": 74125871,\n      \"id\": \"cillum do aliqua\",\n      \"description\": \"magna fugiat nulla aliquip tempor\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a77d2614-2217-4d03-acb4-097d2a4d398e",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "3843e1f4-998f-4bb3-b635-7992287d15f7",
                            "name": "Gets parameters of the specified network zone",
                            "request": {
                                "name": "Gets parameters of the specified network zone",
                                "description": {},
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required network zone."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "03219f11-b2c0-4fd8-ae57-e2de7840d34e",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required network zone."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"alternativeZones\": [\n    \"nostrud officia\",\n    \"Excepteur do sed velit\"\n  ],\n  \"numOfOneAgentsUsing\": -82489874,\n  \"numOfConfiguredOneAgents\": -46498004,\n  \"numOfOneAgentsFromOtherZones\": -84937878,\n  \"numOfConfiguredActiveGates\": -16906847,\n  \"id\": \"eiusmod deserunt proident consectetur\",\n  \"description\": \"ex aute\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "710510bd-c987-4db6-9319-8f30452d4ff8",
                            "name": "Updates an existing network zone or creates a new one",
                            "request": {
                                "name": "Updates an existing network zone or creates a new one",
                                "description": {
                                    "content": "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "3384d935-df7d-4818-a131-06de52237c30",
                                    "name": "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"id\": \"nisi Excepteur\",\n  \"name\": \"aliquip\",\n  \"description\": \"in sunt quis amet\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "5ca50420-2aa6-43fd-96eb-c72c8e7e7895",
                                    "name": "Success. The network zone has been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "90059e84-747d-44d8-a7f0-8c06eba9c85a",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "06580516-8438-4f08-9728-7d874a26c849",
                            "name": "Deletes the specified network zone",
                            "request": {
                                "name": "Deletes the specified network zone",
                                "description": {
                                    "content": "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the network zone to be deleted."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "*/*"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "8c2e1e3d-cdb3-41a3-a74a-b441c6df9732",
                                    "name": "Deleted. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "d7225d94-5c6d-435d-b9af-d8104a1da82c",
                                    "name": "Failed. See error message in the response body for details.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "*/*"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "31f4fe50-e99d-447d-86eb-b88ee4e941d8",
                            "name": "Gets the statistics about hosts using the network zone",
                            "request": {
                                "name": "Gets the statistics about hosts using the network zone",
                                "description": {},
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id",
                                        "hostConnectionStatistics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "filter",
                                            "value": "all",
                                            "description": "Filters the resulting set of hosts: \n\n* `all`: All hosts using the zone. \n* `configuredButNotConnectedOnly`: Hosts from the network zone that use other zones. \n* `connectedAsAlternativeOnly`: Hosts that use the network zone as an alternative. \n* `connectedAsFailoverOnly`: Hosts from other zones that use the zone (not configured as an alternative) even though ActiveGates of higher priority are available. \n* `connectedAsFailoverWithoutOwnActiveGatesOnly`: Hosts from other zones that use the zone (not configured as an alternative) and **no** ActiveGates of higher priority are available. \n\nIf not set, `all` is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required network zone."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "d2f14c1a-9927-4a13-aaa3-bd9ca86ba2ca",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id",
                                                "hostConnectionStatistics"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "filter",
                                                    "value": "all"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required network zone."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"hostsConnectedAsAlternative\": [\n    \"et esse\",\n    \"non incididunt dolor\"\n  ],\n  \"hostsConnectedAsFailoverWithoutActiveGates\": [\n    \"esse incididunt\",\n    \"sunt sint sed\"\n  ],\n  \"hostsConnectedAsFailover\": [\n    \"ut aliquip\",\n    \"qui non\"\n  ],\n  \"hostsConfiguredButNotConnected\": [\n    \"quis ut in\",\n    \"in anim aliqua\"\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "03447ffc-a08d-482c-a0f1-1f8c1fafda2c",
            "name": "network Zone Settings",
            "item": [
                {
                    "id": "f42e5714-5884-41e0-b691-ae9b7ee45f3e",
                    "name": "Gets the global configuration of network zones",
                    "request": {
                        "name": "Gets the global configuration of network zones",
                        "description": {},
                        "url": {
                            "path": [
                                "networkZoneSettings"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "f90f567b-a469-4500-bbe1-978854681fff",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "networkZoneSettings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"networkZonesEnabled\": false\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e51e070a-0a5c-435d-9130-ce2a44240143",
                    "name": "Updates the global configuration of network zones",
                    "request": {
                        "name": "Updates the global configuration of network zones",
                        "description": {},
                        "url": {
                            "path": [
                                "networkZoneSettings"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "7454dca8-7523-4c21-b264-cd9085e3536d",
                            "name": "Success. The global network zones configuration has been updated. Response doesn't have a body.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "networkZoneSettings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "776feea2-ed71-4d78-b324-4d16b5a3e22a",
            "name": "oneagents/remote Configuration Management",
            "item": [
                {
                    "id": "5c629f5b-7f7f-4fe2-aae8-f23310bbb879",
                    "name": "Lists finished OneAgent remote configuration management jobs",
                    "request": {
                        "name": "Lists finished OneAgent remote configuration management jobs",
                        "description": {
                            "content": "The response includes finished jobs for the last 7 days.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "oneagents",
                                "remoteConfigurationManagement"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "f9c0204d-6c0b-452f-8e6c-de8c0553390f",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"jobs\": [\n    {\n      \"entityType\": \"ACTIVE_GATE\",\n      \"id\": \"7974003406714390819\",\n      \"startTime\": \"2020-11-05T08:15:30.144Z\",\n      \"endTime\": \"2020-11-05T08:15:30.144Z\"\n    },\n    {\n      \"entityType\": \"ACTIVE_GATE\",\n      \"id\": \"7974003406714390819\",\n      \"startTime\": \"2020-11-05T08:15:30.144Z\",\n      \"endTime\": \"2020-11-05T08:15:30.144Z\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "242f5427-d13a-4790-a50b-a217f1c7cf40",
                    "name": "Creates a new remote configuration management job",
                    "request": {
                        "name": "Creates a new remote configuration management job",
                        "description": {},
                        "url": {
                            "path": [
                                "oneagents",
                                "remoteConfigurationManagement"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "restart",
                                    "value": "true",
                                    "description": "When set to `false`, OneAgents will not be restarted after the configuration is applied."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "14881771-ccab-46f3-a812-78b95a6234b4",
                            "name": "Created",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "restart",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"processedEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"totalEntitiesCount\": 1,\n  \"entityType\": \"ACTIVE_GATE\",\n  \"id\": \"7974003406714390819\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "eedd0b27-00cf-490f-b685-97629ba79675",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "restart",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"invalidEntities\": [\n    {\n      \"entity\": \"entityId\",\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ]\n    },\n    {\n      \"entity\": \"entityId\",\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ]\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b42e7598-d1ae-4669-9c11-5ba4eb09463e",
                            "name": "Other remote configuration management job is currently being executed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "restart",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "bb707c5f-214c-4670-93a7-344075f38774",
                    "name": "Creates a preview for remote configuration management job",
                    "request": {
                        "name": "Creates a preview for remote configuration management job",
                        "description": {},
                        "url": {
                            "path": [
                                "oneagents",
                                "remoteConfigurationManagement",
                                "preview"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "92229724-bea3-4e02-b23e-c6f919a80d5e",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        "preview"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"previews\": [\n    {\n      \"alreadyConfiguredEntitiesCount\": 1,\n      \"targetEntitiesCount\": 2,\n      \"attribute\": \"networkZone\",\n      \"value\": \"exampleNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"alreadyConfiguredEntitiesCount\": 1,\n      \"targetEntitiesCount\": 2,\n      \"attribute\": \"networkZone\",\n      \"value\": \"exampleNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d8b223fb-74f0-46be-82e3-dca56c7390c5",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        "preview"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"invalidEntities\": [\n    {\n      \"entity\": \"entityId\",\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ]\n    },\n    {\n      \"entity\": \"entityId\",\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ]\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b6bb1448-4d2b-4d33-adac-d8437bad50f7",
                    "name": "Gets remote configuration management job that is currently running",
                    "request": {
                        "name": "Gets remote configuration management job that is currently running",
                        "description": {
                            "content": "The currently running remote configuration management job may be related to ActiveGates or OneAgents. There is a limit of one concurrent remote configuration management job, regardless of the entity type.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "oneagents",
                                "remoteConfigurationManagement",
                                "current"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "e704717c-7893-4eab-a894-a3d1cb737b53",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        "current"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"processedEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"totalEntitiesCount\": 1,\n  \"entityType\": \"ACTIVE_GATE\",\n  \"id\": \"7974003406714390819\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b0c6d0d3-05d2-431c-8608-bcd99ec8eb48",
                            "name": "No remote configuration management job is currently running ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        "current"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8b3b039b-d8f6-4a0a-9ecb-b2d4b68d9120",
                    "name": "Gets the specified remote configuration management job",
                    "request": {
                        "name": "Gets the specified remote configuration management job",
                        "description": {},
                        "url": {
                            "path": [
                                "oneagents",
                                "remoteConfigurationManagement",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "id",
                                    "description": "(Required) The ID of the required remote configuration management job."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2d588601-d79b-4be0-a756-0f21314df8c8",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required remote configuration management job."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"processedEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"totalEntitiesCount\": 1,\n  \"entityType\": \"ACTIVE_GATE\",\n  \"id\": \"7974003406714390819\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "90ac3d1d-9093-4233-ac16-39653d2f2349",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required remote configuration management job."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "36209c70-86ee-4708-a949-5eff5610b78c",
                    "name": "Validates the payload for the `POST /oneagents/remoteConfigurationManagement` request.",
                    "request": {
                        "name": "Validates the payload for the `POST /oneagents/remoteConfigurationManagement` request.",
                        "description": {},
                        "url": {
                            "path": [
                                "oneagents",
                                "remoteConfigurationManagement",
                                "validator"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "a37f4a39-c3ba-4ee9-8d62-df06a78e489e",
                            "name": "Success. Response doesn't have a body.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        "validator"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "66c42cc2-bd1c-47a4-8f73-0bc051f7c80b",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "oneagents",
                                        "remoteConfigurationManagement",
                                        "validator"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"invalidEntities\": [\n    {\n      \"entity\": \"entityId\",\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ]\n    },\n    {\n      \"entity\": \"entityId\",\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ]\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    },\n    {\n      \"reason\": \"Value must not start with a period\",\n      \"attribute\": \"networkZone\",\n      \"value\": \".exampleInvalidNetworkZoneName\",\n      \"operation\": \"set\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "f338f328-8f3b-40c7-a2be-4fa3ed60f251",
            "name": "tags",
            "item": [
                {
                    "id": "e6e7957d-d47c-4447-bd09-0bde57839ff8",
                    "name": "Gets a list of custom tags applied to the specified entities",
                    "request": {
                        "name": "Gets a list of custom tags applied to the specified entities",
                        "description": {
                            "content": "Automatically applied tags and imported tags are not included.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tags"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "(Required) Specifies the entities where you want to read tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "871ecfd9-22f1-4e9d-b4a1-06eda467df82",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"tags\": {\n    \"empty\": false\n  },\n  \"totalCount\": -89532037\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "fba0b5d9-6067-4f4b-9423-a4a435767861",
                    "name": "Adds custom tags to the specified entities",
                    "request": {
                        "name": "Adds custom tags to the specified entities",
                        "description": {
                            "content": "All existing tags remain unaffected.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tags"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "(Required) Specifies the entities where you want to update tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "4abfe16a-8a1b-43ee-a039-210b2e1ee85e",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"matchedEntitiesCount\": 21162149,\n  \"appliedTags\": {\n    \"empty\": false\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4fd1375a-8476-4b2d-b3bb-761a25099cca",
                    "name": "Deletes the specified tag from the specified entities",
                    "request": {
                        "name": "Deletes the specified tag from the specified entities",
                        "description": {},
                        "url": {
                            "path": [
                                "tags"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "key",
                                    "value": "<string>",
                                    "description": "(Required) The key of the tag to be deleted. \n\nIf **deleteAllWithKey** is `true`, then all tags with this key are deleted. Otherwise, only tags with exact match of key **and** value are deleted. \n\nFor value-only tags, specify the value here."
                                },
                                {
                                    "disabled": false,
                                    "key": "value",
                                    "value": "<string>",
                                    "description": "The value of the tag to be deleted. The value is ignored if **deleteAllWithKey** is `true`. \n\nFor value-only tags, specify the value in the **key** parameter."
                                },
                                {
                                    "disabled": false,
                                    "key": "deleteAllWithKey",
                                    "value": "<boolean>",
                                    "description": "* If `true`, all tags with the specified key are deleted, regardless of the value. \n* If `false`, only tags with exact match of key **and** value are deleted. \n\nIf not set, `false` is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "(Required) Specifies the entities where you want to delete tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "DELETE",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "a4beb8a7-cd6c-4a8b-a9ec-57ae11f05960",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "key",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "value",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "deleteAllWithKey",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"matchedEntitiesCount\": 2\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "fdee2e92-394d-4b74-bc2a-ad15fbbecdc7",
            "name": "logs",
            "item": [
                {
                    "id": "00cc8d08-becb-485f-b6bc-337fa2bcb91d",
                    "name": "Pushes log records to Dynatrace | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Pushes log records to Dynatrace | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "Ingested logs are stored in the indexed log storage. \n\nThis endpoint requires an ActiveGate with the **Log Analytics Collector** module enabled. \n\nThe maximum payload size of a single request is **5 MB**. Requests with a greater payload are rejected, and the API returns a 413 response code.\n\nIf the ingested payload is a JSON array, the maximum array size is **50000**. Requests with a greater payload are rejected, and the API returns a 413 response code.\n\n<br />**Log events per minute (SaaS)**: \n\nGrail tenants: no limit, other tenants: 1M per minute by default. \n\nIf your log data stream within your cluster exceeds the limit, all log events above the limit are ignored. \n\n<br />**Log events per minute (Managed)**: \n\n1k/minute per cluster by default. \n\nIf your log data stream within your cluster exceeds the limit, all log events above the limit are ignored. \n\nIf you increase resources (RAM) in your nodes, you can increase the limit based on the cluster resources size using an API call or Cluster Management Console (CMC). \n\n<br />Refresh cluster limit using the API call \n\nSee [Update log events per cluster for Log Monitoring](https://dt-url.net/f123yeu). \n\n<br />Refresh cluster limit using Cluster Management Console (CMC) \n\n1. In the CMC, select **Environments** and the environment for which you wish to update the total log events per cluster. \n\n2. On the environment details page, in the **Cluster overload prevention settings** section, select the **Refresh cluster limit**. \n\n**High-cardinality attributes:** \n\nUnique log data attributes (high-cardinality attributes) such as `span_id` and `trace_id` generate unnecessarily excessive facet lists that may impact log viewer performance. Because of this, they aren't listed in log viewer facets. You can still use them in a log viewer advanced search query. \n\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "logs",
                                "ingest"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "<object>",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "05353284-4341-4ef9-bbca-37287f9db192",
                            "name": "Only a part of input events were ingested due to event size limits or JSON parsing issues.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"details\": {\n    \"message\": \"non Duis \",\n    \"code\": -67907468\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7679d5be-708d-4a99-880c-53191397757f",
                            "name": "Success. Response doesn't have a body.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "2795df5a-f0f6-4a6d-a232-01922844745c",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "77b0c95b-d2fe-45d8-a25b-6764db997fe2",
                            "name": "Failed. You can't add more logs to the storage, because you are out of [Davis Data Units](https://dt-url.net/dduLog) (DDU). Purchase additional DDUs.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Payment Required",
                            "code": 402,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2defb49b-6f44-4115-bc20-d335a9bf521c",
                            "name": "Failed. The requested resource doesn't exist. This may happen when no ActiveGate is available with the Log Analytics Collector module enabled.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "546303b6-d0d1-49b0-a5de-d34751b7d836",
                            "name": "Failed. Request payload size is too big. This may happen when the payload byte size exceeds the limit or when the ingested payload is a JSON array with the size exceeding the limit.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Request Entity Too Large",
                            "code": 413,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6a047b2e-1489-49a1-8e2f-a3efbb52c38b",
                            "name": "Failed. Too Many Requests. This happens when log ingest is disabled.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c1d646dd-8340-478e-a2a3-9f9c0df8f7f6",
                            "name": "Failed. The server either does not recognize the request method, or it lacks the ability to fulfil the request. May happen when indexed log storage is not enabled.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "ingest"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object],[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "565ef5e5-4cbc-4a52-9023-fbc64c293973",
                    "name": "Exports log records | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Exports log records | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "Returns the first *X* records (specified in the **pageSize** query parameter).\n\n Unlike the **search** API, this API does not split the result into slices and has no limit for the total number of records. Log records are sorted by the criteria specified in the **sort** query parameter.\n\n In order to fetch large amount of records (exceeding the **pageSize** value), one should repeat the **export** call with **nextPageKey** param.\n\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "logs",
                                "export"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "1000",
                                    "description": "The number of results per result page."
                                },
                                {
                                    "disabled": false,
                                    "key": "query",
                                    "value": "",
                                    "description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f)."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "-timestamp",
                                    "description": "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first). \n\nWhen millisecond resolution provided by the timestamp is not enough, log records are sorted based on the order in which they appear in the log source (remote process writing to REST API endpoint or remote process from which logs are collected)."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "9e8a1a11-99e2-4ecb-8dbc-ecf82fb79ee6",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "export"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -4679688,\n  \"results\": [\n    {\n      \"eventType\": \"K8S\",\n      \"additionalColumns\": {\n        \"aliqua8\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"consecteturfbe\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"timestamp\": 95030414,\n      \"content\": \"eiusmod quis et\",\n      \"status\": \"INFO\"\n    },\n    {\n      \"eventType\": \"K8S\",\n      \"additionalColumns\": {\n        \"laborum__\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"voluptate24c\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"timestamp\": -22038246,\n      \"content\": \"dolor enim velit\",\n      \"status\": \"WARN\"\n    }\n  ],\n  \"pageSize\": 13637828,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7ae43cf2-2e41-4b62-9dc7-d53ed7d68d4e",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "export"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2f42d514-5d16-4fbd-8f8e-0a26243b145b",
                            "name": "Failed. The server either does not recognize the request method, or it lacks the ability to fulfill the request. May happen when Grail log storage is enabled.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "export"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e6e073dd-8c12-4368-a6a8-f924fe6d9f70",
                    "name": "Gets aggregated log records | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets aggregated log records | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "Returns the aggregated number of occurrences of log values divided into time slots. \n\nIt is possible that the timeframe covered by results exceeds the specified timeframe. In that case the request returns fewer time slots than specified in the **timeBuckets** query parameter.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "logs",
                                "aggregate"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "query",
                                    "value": "",
                                    "description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f)."
                                },
                                {
                                    "disabled": false,
                                    "key": "timeBuckets",
                                    "value": "1",
                                    "description": "The number of time slots in the result. \n\nThe query timeframe is divided equally into the specified number of slots. \n\nThe minimum length of a slot is 1 ms. \n\nIf not set, 1 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "maxGroupValues",
                                    "value": "10",
                                    "description": "The maximum number of values in each group. \n\nYou can get up to 100 values per group. \n\nIf not set, 10 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "groupBy",
                                    "value": "<string>",
                                    "description": "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values. \n\nUnique log data attributes (high-cardinality attributes) for example, `span_id` or `trace_id` cannot be used for grouping."
                                },
                                {
                                    "disabled": false,
                                    "key": "groupBy",
                                    "value": "<string>",
                                    "description": "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values. \n\nUnique log data attributes (high-cardinality attributes) for example, `span_id` or `trace_id` cannot be used for grouping."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "8fd7bca3-2ca1-4c1e-9a3a-1f942c9b1202",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "aggregate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "timeBuckets",
                                            "value": "1"
                                        },
                                        {
                                            "key": "maxGroupValues",
                                            "value": "10"
                                        },
                                        {
                                            "key": "groupBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "groupBy",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"aggregationResult\": {\n    \"consectetur_\": {\n      \"ete4\": {\n        \"ida2c\": -37647469,\n        \"sit018\": 19274252\n      },\n      \"magna_5db\": {\n        \"amet1a1\": -45154753\n      },\n      \"in1\": {\n        \"occaecatd\": 9687466,\n        \"aliquip9f\": -99993787\n      },\n      \"mollita\": {\n        \"id_45\": -81591474,\n        \"anim392\": -85802755,\n        \"Excepteurb7\": -22990858\n      }\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0327d66a-fe7b-451f-8a96-c1e4184146f2",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "aggregate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "timeBuckets",
                                            "value": "1"
                                        },
                                        {
                                            "key": "maxGroupValues",
                                            "value": "10"
                                        },
                                        {
                                            "key": "groupBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "groupBy",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "da130573-1252-4ed8-a5fe-8eb0942d5546",
                    "name": "Reads log records | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Reads log records | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "Returns the first *X* records (specified in the **limit** query parameter). Log records are sorted by the criteria specified in the **sort** query parameter. \n\nIf the query is too large to be processed in a single request, it is divided into slices. In that case the first response contains the **nextSliceKey** cursor for the second slice. Use it in the **nextSliceKey** query parameter to obtain the second slice, which contains **nextSliceKey** cursor for the third slice, and so on. \n\nResults can be distributed unevenly between slices and some slices might be empty.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "logs",
                                "search"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The desired amount of log records. \n\nThe maximal allowed limit is 1000. \n\nIf not set, 1000 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "query",
                                    "value": "",
                                    "description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f)."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "-timestamp",
                                    "description": "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first). \n\nWhen millisecond resolution provided by the timestamp is not enough, log records are sorted based on the order in which they appear in the log source (remote process writing to REST API endpoint or remote process from which logs are collected)."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextSliceKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next slice of results. You can find it in the **nextSliceKey** field of the previous response. \n\nThe first slice is always returned if you don't specify this parameter. \n\nIf this parameter is set, all other query parameters are ignored."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "754f7b76-65ae-4651-bd4d-b3b321376ea6",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "search"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        },
                                        {
                                            "key": "nextSliceKey",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"results\": [\n    {\n      \"eventType\": \"K8S\",\n      \"additionalColumns\": {\n        \"quis42\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"timestamp\": 16152401,\n      \"content\": \"voluptate nostrud velit sunt\",\n      \"status\": \"WARN\"\n    },\n    {\n      \"eventType\": \"K8S\",\n      \"additionalColumns\": {\n        \"Ut_8\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"culpaa4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"timestamp\": -10505159,\n      \"content\": \"commodo mollit\",\n      \"status\": \"NONE\"\n    }\n  ],\n  \"sliceSize\": 28841205,\n  \"nextSliceKey\": \"Lorem tempor incididunt et\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6530c50a-6d21-43f3-9b5e-2bec574788b1",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logs",
                                        "search"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "query",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        },
                                        {
                                            "key": "nextSliceKey",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "b38d647d-a42f-4bdf-a864-96646eed69d5",
            "name": "otlp/v1",
            "item": [
                {
                    "id": "f69a9c74-7f32-4736-bcef-685ced6c4a17",
                    "name": "Implementation of the OTLP/HTTP protocol for trace ingest.",
                    "request": {
                        "name": "Implementation of the OTLP/HTTP protocol for trace ingest.",
                        "description": {
                            "content": "This endpoint can be targeted by OpenTelemetry exporters. Ingested traces are forwarded to the server.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "otlp",
                                "v1",
                                "traces"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-protobuf"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "<byte>,<byte>"
                        }
                    },
                    "response": [
                        {
                            "id": "35e75be0-52a2-49b7-b61f-132416308ea5",
                            "name": "The request has been received and will be processed.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "traces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "<byte>,<byte>"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "02beb326-2fbc-41ae-9d4a-8d15d3d162a2",
                            "name": "The request could not be processed. This may happen if the message is malformed.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "traces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "<byte>,<byte>"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7e5c9cd8-24ad-4304-897f-783b113eb097",
                            "name": "The request could not be processed due to an internal server error.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "traces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "<byte>,<byte>"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "f5731eb1-e095-48f1-9da7-ca5855a423e5",
                            "name": "The service is currently unavailable. This may happen if the module is paused.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "traces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "<byte>,<byte>"
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "35deb967-bf1b-440d-82db-24a5e319f9f5",
                    "name": "Implementation of the OTLP/HTTP protocol for metric ingest.",
                    "request": {
                        "name": "Implementation of the OTLP/HTTP protocol for metric ingest.",
                        "description": {
                            "content": "This endpoint can be targeted by OpenTelemetry metric exporters.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "otlp",
                                "v1",
                                "metrics"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-protobuf"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "<byte>,<byte>"
                        }
                    },
                    "response": [
                        {
                            "id": "d0740b9d-f7f3-4c58-92af-a4f1fadd3454",
                            "name": "The request has been received and will be processed.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "<byte>,<byte>"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "d65e407d-f60c-4e6b-b583-0c0c8fa67177",
                            "name": "The request could not be processed. This may happen if the message is malformed.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "<byte>,<byte>"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "161b1e00-d27c-4415-ad66-4b0d2afe8ab0",
                            "name": "The OTLP message exceeded the payload size limit.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "<byte>,<byte>"
                                }
                            },
                            "status": "Request Entity Too Large",
                            "code": 413,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "86cf99b3-d85f-4c22-a42a-c95cd45722da",
                            "name": "The request could not be processed due to an internal server error.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "<byte>,<byte>"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "04c37dde-ac2a-4b0e-bf27-8d60790d77d8",
                            "name": "The service is currently unavailable. This may happen if the module is paused.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "otlp",
                                        "v1",
                                        "metrics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "<byte>,<byte>"
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "353245ef-2c80-4679-b75f-93cea3b1934d",
            "name": "active Gate Tokens",
            "item": [
                {
                    "id": "4d317205-b150-4afe-8fb6-5509a49bebae",
                    "name": "Lists all available ActiveGate tokens | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Lists all available ActiveGate tokens | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGateTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of ActiveGate tokens in a single response payload. \n\nThe maximal allowed page size is 3000 and the minimal size is 100. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "360dd461-ca76-4be8-aba1-9e5f4388142a",
                            "name": "Success. The response contains the list of ActiveGate tokens.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 1000,\n  \"pageSize\": 100,\n  \"nextPageKey\": \"AAAAAAAAAAAAAABOAAAAAAAAAAAAAAA6ACQAEAAAABgACgAITFdXQk1BRzYAAAhtZXRhZGF0YQB___-bf___m3iIYxfF7xVQvY72rwblQkcAAwAAAAAAAADHAAAAZA==\",\n  \"activeGateTokens\": {\n    \"name\": \"myToken\",\n    \"owner\": \"john.smith\",\n    \"creationDate\": \"2020-11-22T08:15:30.144Z\",\n    \"expirationDate\": \"2020-11-24T08:15:30.144Z\",\n    \"lastUsedDate\": \"2020-11-23T08:15:30.144Z\",\n    \"seedToken\": \"false\",\n    \"activeGateType\": \"ENVIRONMENT\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "703e7e2c-483c-4fa1-9a87-7fbd9775fca3",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2dac83f6-f8aa-4c62-aee0-400fc303838d",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4ea36a6d-0b88-429e-a698-c81f6f358cc1",
                    "name": "Creates a new ActiveGate token | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Creates a new ActiveGate token | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "The newly created token will be owned by the same user who owns the token used for authentication of the call.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGateTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "3f6a14b6-cfd2-4cbb-9eca-7b195a45be7f",
                            "name": "Success. The token has been created. The body of the response contains the token secret.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"id\": \"dt0g02.4KWZO5EF\",\n  \"token\": \"dt0g02.4KWZO5EF.XT47R5DRADJIZUFOX4UDNOKTSUSABGLN7XSMJG7UXHRXKNY4WLORH4OF4T75MG7E\",\n  \"expirationDate\": \"2020-11-24T08:15:30.144Z\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d63b35a4-f68a-4982-8885-575d6130113b",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "97d619bb-d5ad-4f97-8d2d-8e91731eb276",
                    "name": "{active Gate Token Identifier}",
                    "item": [
                        {
                            "id": "a93bd1c9-4cd7-4d23-8f15-9f87d88ed95d",
                            "name": "Gets metadata of an ActiveGate token | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Gets metadata of an ActiveGate token | maturity=EARLY_ADOPTER",
                                "description": {
                                    "content": "The token secret is **not** exposed.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "activeGateTokens",
                                        ":activeGateTokenIdentifier"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "activeGateTokenIdentifier",
                                            "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "c5aecdcf-5968-42e5-b5f9-2c1051f6c659",
                                    "name": "Success. The response contains the metadata of the tokens.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"activeGateType\": \"CLUSTER\",\n  \"creationDate\": \"2020-11-22T08:15:30.144Z\",\n  \"id\": \"dt0g02.4KWZO5EF\",\n  \"name\": \"myToken\",\n  \"owner\": \"john.smith\",\n  \"expirationDate\": \"2020-11-24T08:15:30.144Z\",\n  \"lastUsedDate\": \"2020-11-23T08:15:30.144Z\",\n  \"seedToken\": false\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ed411094-0aca-4026-831a-2699a003495c",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "70abc114-5ba9-4daf-8a7f-4b0dec498302",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "68e97717-4d85-4308-a757-1400f44c7c6f",
                            "name": "Deletes an ActiveGate token | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Deletes an ActiveGate token | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGateTokens",
                                        ":activeGateTokenIdentifier"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "activeGateTokenIdentifier",
                                            "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "d940024b-ec8e-47e5-867e-7bb52c29ef61",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "fcf94553-c10e-414e-b43b-5ce30a31fa6f",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "8a1a7f91-b6a8-41c3-84c3-ce59e71dffd4",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "10e4f1e6-12fc-45ad-bf4e-de4767753ebe",
            "name": "api Tokens",
            "item": [
                {
                    "id": "ab076571-b64c-499c-b00b-72c1b3aeb69c",
                    "name": "Lists all available API tokens",
                    "request": {
                        "name": "Lists all available API tokens",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "apiTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of API tokens in a single response payload. \n\nThe maximal allowed page size is 10000 and the minimal allowed page size is 100. \n\nIf not set, 200 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "apiTokenSelector",
                                    "value": "<string>",
                                    "description": "Filters the resulting sets of tokens. Only tokens matching the specified criteria are included into response. \n\nYou can set one or more of the following criteria: \n\n* Owner: `owner(\"value\")`. The user that owns the token. Case-sensitive.\n* Personal access token: `personalAccessToken(false)`. Set to `true` to include only personal access tokens or to `false` to include only API tokens.\n* Token scope: `scope(\"scope1\",\"scope2\")`. If several values are specified, the **OR** logic applies. \n\nTo set multiple criteria, separate them with commas (`,`). Only results matching **all** criteria are included into response."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Specifies the fields to be included in the response.\n\nThe following fields are included by default: \n\n* `id` \n* `name` \n* `enabled` \n* `owner` \n* `creationDate` \n\nTo remove fields from the response, specify them with the minus (`-`) operator as a comma-separated list (for example, `-creationDate,-owner`). \n\nYou can include additional fields: \n\n* `personalAccessToken` \n* `expirationDate` \n* `lastUsedDate` \n* `lastUsedIpAddress` \n* `modifiedDate` \n* `scopes` \n\n* `additionalMetadata` \n\nTo add fields to the response, specify them with the plus (`+`) operator as a comma-separated list (for example, `+expirationDate,+scopes`). You can combine adding and removing of fields (for example, `+scopes,-creationDate`). \n\nAlternatively, you can define the desired set of fields in the response. Specify the required fields as a comma-separated list, without operators (for example, `creationDate,expirationDate,owner`). The ID is always included in the response. \n\nThe **fields** string must be URL-encoded."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "Filters tokens based on the last usage time. \nThe start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "Filters tokens based on the last usage time. \nThe end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "-creationDate",
                                    "description": "The sort order of the token list. \n\nYou can sort by the following properties with a sign prefix for the sort order: \n\n * `name`: token name (`+` a...z or `-` z...a) \n * `lastUsedDate` last used (`+` never used tokens first `-` most recently used tokens first) \n * `creationDate` (`+` oldest tokens first `-` newest tokens first) \n * `expirationDate` (`+` tokens that expire soon first `-` unlimited tokens first) \n * `modifiedDate` last modified (`+` never modified tokens first `-` most recently modified tokens first) \n\nIf no prefix is set, + is used. \n\nIf not set, tokens are sorted by creation date with newest first."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "7b88601d-fdf5-4bb0-af8e-c47e22abceda",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "apiTokenSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-creationDate"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -98755891,\n  \"apiTokens\": [\n    {\n      \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n      \"personalAccessToken\": true,\n      \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"lastUsedIpAddress\": \"34.197.2.44\",\n      \"modifiedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"additionalMetadata\": {\n        \"dashboardId\": \"82402bab-7370-4359-924d-88ed13c8919a\"\n      },\n      \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n      \"name\": \"myToken\",\n      \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n      \"owner\": \"john.smith\",\n      \"enabled\": true,\n      \"scopes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n      \"personalAccessToken\": true,\n      \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"lastUsedIpAddress\": \"34.197.2.44\",\n      \"modifiedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"additionalMetadata\": {\n        \"dashboardId\": \"82402bab-7370-4359-924d-88ed13c8919a\"\n      },\n      \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n      \"name\": \"myToken\",\n      \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n      \"owner\": \"john.smith\",\n      \"enabled\": true,\n      \"scopes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"pageSize\": 61641666,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "497d5bfa-d917-4c2f-8b17-1b52af793aab",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "apiTokenSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-creationDate"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "2562b2e0-d253-4dfb-8126-0f908bb61b2d",
                    "name": "Creates a new API token",
                    "request": {
                        "name": "Creates a new API token",
                        "description": {
                            "content": "The newly created token will be owned by the same user who owns the token used for authentication of the call.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "apiTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "4f2733a9-518b-43f8-904e-b633b97d81c7",
                            "name": "Success. The token has been created. The body of the response contains the token secret.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n  \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n  \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8909c076-b536-4260-8e34-e85c7d6a99b8",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "322d1bf1-d47b-4822-b8be-4e72ec33b83d",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "03816ac2-a469-4d1d-ba64-ec4cad0cb3cc",
                            "name": "Gets API token metadata by token ID",
                            "request": {
                                "name": "Gets API token metadata by token ID",
                                "description": {
                                    "content": "The token secret is **not** exposed.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the token."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "300e7b29-9db1-40de-9b75-cdd77881e297",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n  \"personalAccessToken\": true,\n  \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"lastUsedIpAddress\": \"34.197.2.44\",\n  \"modifiedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"additionalMetadata\": {\n    \"dashboardId\": \"82402bab-7370-4359-924d-88ed13c8919a\"\n  },\n  \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n  \"name\": \"myToken\",\n  \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n  \"owner\": \"john.smith\",\n  \"enabled\": true,\n  \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "c6060280-16b0-4996-9b5c-1386aa2f04c7",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "8a26a987-0aff-415c-aeda-678e6fa6556b",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "c3859691-77f8-4aa3-8174-67aac5e1eed8",
                            "name": "Updates an API token",
                            "request": {
                                "name": "Updates an API token",
                                "description": {},
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "38446c1b-1f6c-465f-927f-af43133d7fcb",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "8ab384b7-e71e-4fd8-b594-d9482dbdaf5f",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "c1f0ed2a-4db1-421a-8297-5b7bb5bce7a8",
                            "name": "Deletes an API token",
                            "request": {
                                "name": "Deletes an API token",
                                "description": {},
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "a41f50e4-4e93-4c9e-8706-8cbdfe264cb3",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "3e7dc335-0af0-4105-9dcb-48b5f7ac1025",
                                    "name": "Failed. You can't delete the token you're using for authentication of the request.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "c0f73f58-4795-4d00-97b6-7697a737712f",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "apiTokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "eb50dea7-9c78-4941-a25b-eb78323f6bf5",
                    "name": "Gets API token metadata by token secret",
                    "request": {
                        "name": "Gets API token metadata by token secret",
                        "description": {},
                        "url": {
                            "path": [
                                "apiTokens",
                                "lookup"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "1c0942d9-a449-4f4d-9aa0-47251ff44af9",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        "lookup"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n  \"personalAccessToken\": true,\n  \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"lastUsedIpAddress\": \"34.197.2.44\",\n  \"modifiedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"additionalMetadata\": {\n    \"dashboardId\": \"82402bab-7370-4359-924d-88ed13c8919a\"\n  },\n  \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n  \"name\": \"myToken\",\n  \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n  \"owner\": \"john.smith\",\n  \"enabled\": true,\n  \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9da239c8-840f-413f-b6b8-00fb5c4c6aba",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "apiTokens",
                                        "lookup"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "a1802a44-81e2-4255-9038-197d6ec997a1",
            "name": "auditlogs",
            "item": [
                {
                    "id": "6471a41b-0862-44db-a144-095fcd99968d",
                    "name": "Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "auditlogs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of log entries in a single response payload. \n\nThe maximal allowed page size is 5000. \n\nIf not set, 1000 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "filter",
                                    "value": "<string>",
                                    "description": "Filters the audit log. You can use the following criteria: \n* User: `user(\"userIdentification\")`. The `EQUALS` operator applies. \n* Event type: `eventType(\"value\")`. The `EQUALS` operator applies. \n* Category of a logged operation: `category(\"value\")`. The `EQUALS` operator applies. \n* Entity ID: `entityId(\"id\")`. The `CONTAINS` operator applies. \n\nFor each criterion, you can specify multiple alternatives with comma-separated values. In this case, the OR logic applies. For example, `eventType(\"CREATE\",\"UPDATE\")` means eventType can be \"CREATE\" or \"UPDATE\". \n\nYou can specify multiple comma-separated criteria, such as `eventType(\"CREATE\",\"UPDATE\"),category(\"CONFIG\")`. Only results matching **all** criteria are included in response. \n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes: \n* Tilde `~` \n* Quote `\"`"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "-timestamp",
                                    "description": "The sorting of audit log entries: \n* `timestamp`: Oldest first. \n* `-timestamp`: Newest first. \n\nIf not set, the newest first sorting is applied."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "80ec3978-5e06-4f4a-a620-fb549e5e72d1",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "auditlogs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "-timestamp"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -36942193,\n  \"pageSize\": -57679470,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"auditLogs\": [\n    {\n      \"category\": \"DEBUG_UI\",\n      \"environmentId\": \"elit\",\n      \"eventType\": \"LOGIN\",\n      \"logId\": \"e\",\n      \"success\": false,\n      \"timestamp\": -3453724,\n      \"user\": \"et dolor\",\n      \"userType\": \"USER_NAME\",\n      \"entityId\": \"exercitation labore ad\",\n      \"userOrigin\": \"tempor in\",\n      \"message\": \"in Excepteur sunt\",\n      \"patch\": {}\n    },\n    {\n      \"category\": \"DEBUG_UI\",\n      \"environmentId\": \"dolor\",\n      \"eventType\": \"TAG_REMOVE\",\n      \"logId\": \"do dolor\",\n      \"success\": true,\n      \"timestamp\": -58163155,\n      \"user\": \"id\",\n      \"userType\": \"PUBLIC_TOKEN_IDENTIFIER\",\n      \"entityId\": \"mollit eu Excepteur elit\",\n      \"userOrigin\": \"elit qui\",\n      \"message\": \"sint\",\n      \"patch\": {}\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b962393b-f243-4e5f-badd-222bdab97b4c",
                    "name": "Gets the specified entry of the audit log | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets the specified entry of the audit log | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "auditlogs",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "id",
                                    "description": "(Required) The ID of the required log entry."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "eca5d125-fe96-486d-aa1e-7daa890e72a1",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "auditlogs",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required log entry."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"category\": \"CONFIG\",\n  \"environmentId\": \"ipsum occaecat magna laborum\",\n  \"eventType\": \"TAG_ADD\",\n  \"logId\": \"nulla Lo\",\n  \"success\": true,\n  \"timestamp\": 35202374,\n  \"user\": \"veniam sit labore\",\n  \"userType\": \"TOKEN_HASH\",\n  \"entityId\": \"ul\",\n  \"userOrigin\": \"adipisicing amet deserunt ut non\",\n  \"message\": \"Duis proident\",\n  \"patch\": {}\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f4e82ddf-4700-4faf-9bd8-4dbd4b792c8c",
                            "name": "Failed. Invalid ID format.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "auditlogs",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required log entry."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5bad2ad1-396b-44ac-988f-6e9fc98daa21",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "auditlogs",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required log entry."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "08918ca5-985b-46aa-9699-721b2031c3e5",
            "name": "Provides advice for security problems.",
            "request": {
                "name": "Provides advice for security problems.",
                "description": {
                    "content": "You can narrow down the output by providing the management zone and pagination. If you specify a management zone, only problems originating from that zone are included to the request.",
                    "type": "text/plain"
                },
                "url": {
                    "path": [
                        "davis",
                        "securityAdvices"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [
                        {
                            "disabled": false,
                            "key": "managementZoneFilter",
                            "value": "<string>",
                            "description": "To specify management zones, use one of the options listed below. For each option you can specify multiple comma-separated values. If several values are specified, the **OR** logic applies. All values are case-sensitive and must be quoted. \n\n* Management zone ID: ids(\"mzId-1\", \"mzId-2\"). \n* Management zone names: names(\"mz-1\", \"mz-2\"). \n\nYou can specify several comma-separated criteria (for example, `names(\"myMz\"),ids(\"9130632296508575249\")`)."
                        },
                        {
                            "disabled": false,
                            "key": "nextPageKey",
                            "value": "<string>",
                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                        },
                        {
                            "disabled": false,
                            "key": "pageSize",
                            "value": "<long>",
                            "description": "The amount of security advices in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 5 is used."
                        }
                    ],
                    "variable": []
                },
                "header": [
                    {
                        "key": "Accept",
                        "value": "application/json; charset=utf-8"
                    }
                ],
                "method": "GET",
                "auth": {
                    "type": "apikey",
                    "apikey": [
                        {
                            "key": "key",
                            "value": "Authorization"
                        },
                        {
                            "key": "value",
                            "value": "Api-Token {{DT_TOKEN}}"
                        },
                        {
                            "key": "in",
                            "value": "header"
                        }
                    ]
                }
            },
            "response": [
                {
                    "id": "1f3c8498-d4fb-4f46-a5de-efd9b0285de2",
                    "name": "Success",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "davis",
                                "securityAdvices"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "managementZoneFilter",
                                    "value": "<string>"
                                },
                                {
                                    "key": "nextPageKey",
                                    "value": "<string>"
                                },
                                {
                                    "key": "pageSize",
                                    "value": "<long>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Api-Token {{DT_TOKEN}}"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        }
                    ],
                    "body": "{\n  \"totalCount\": 72803976,\n  \"pageSize\": 64944316,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"advices\": [\n    {\n      \"name\": \"sit cupidatat\",\n      \"vulnerableComponent\": \"ad\",\n      \"technology\": \"GO\",\n      \"adviceType\": \"UPGRADE\",\n      \"critical\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"high\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"low\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"none\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"labore mollit qui elit\",\n      \"vulnerableComponent\": \"Excepteur amet labore culpa\",\n      \"technology\": \"DOTNET\",\n      \"adviceType\": \"UPGRADE\",\n      \"critical\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"high\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"low\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"none\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                }
            ],
            "event": [],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            }
        },
        {
            "id": "120e3fd9-20a9-4d6c-80d8-31c312166681",
            "name": "security Problems",
            "item": [
                {
                    "id": "4797bd4e-5949-4726-afb4-2fa1c3961498",
                    "name": "Lists all security problems",
                    "request": {
                        "name": "Lists all security problems",
                        "description": {},
                        "url": {
                            "path": [
                                "securityProblems"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of security problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "securityProblemSelector",
                                    "value": "<string>",
                                    "description": "Defines the scope of the query. Only security problems matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Status: `status(\"value\")`. Find the possible values in the description of the **status** field of the response. If not set, all security problems are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Risk level: `riskLevel(\"value\")`. The Davis risk level. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum risk score: `minRiskScore(\"5.5\")`. The Davis minimum risk score. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum risk score: `maxRiskScore(\"5.5\")`. The Davis maximum risk score. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* Base risk level: `baseRiskLevel(\"value\")`. The Base risk level from the CVSS. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum base risk score: `minBaseRiskScore(\"5.5\")`. The minimum base risk score from the CVSS. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum base risk score: `maxBaseRiskScore(\"5.5\")`. The maximum base risk score from the CVSS. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* External vulnerability ID contains: `externalVulnerabilityIdContains(\"id-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* External vulnerability ID: `externalVulnerabilityId(\"id-1\", \"id-2\")`. \n* CVE ID: `cveId(\"id\")`.\n* Risk assessment `riskAssessment(\"value-1\", \"value-2\")` Possible values are `EXPOSED`, `SENSITIVE`, `EXPLOIT`, `VULNERABLE_FUNCTION_IN_USE` and `ACCURACY_REDUCED`.\n* Related host ID: `relatedHostIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related host name: `relatedHostNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related host name contains: `relatedHostNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes cluster ID: `relatedKubernetesClusterIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes cluster name: `relatedKubernetesClusterNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes cluster name contains: `relatedKubernetesClusterNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes workload ID: `relatedKubernetesWorkloadIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes workload name: `relatedKubernetesWorkloadNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes workload name contains: `relatedKubernetesWorkloadNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Management zone ID: `managementZoneIds(\"mzId-1\", \"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Affected process group instance ID: `affectedPgiIds(\"pgiId-1\", \"pgiId-2\")`. Specify Dynatrace entity IDs here.\n* Affected process group ID: `affectedPgIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Affected process group name: `affectedPgNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Affected process group name contains: `affectedPgNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Vulnerable component ID: `vulnerableComponentIds(\"componentId-1\", \"componentId-2\")`. Specify component IDs here.\n* Vulnerable component name: `vulnerableComponentNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Vulnerable component name contains: `vulnerableComponentNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Host tags: `hostTags(\"hostTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Process group tags: `pgTags(\"pgTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Process group instance tags: `pgiTags(\"pgiTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Tags: `tags(\"tag-1\")`. The `CONTAINS` operator is used. This selector picks hosts, process groups, and process group instances at the same time. Maximum value length is 48 characters.\n* Display ID: `displayIds(\"S-1234\", \"S-5678\")`. The `EQUALS` operator is used.\n* Security problem ID: `securityProblemIds(\"12544152654387159360\", \"5904857564184044850\")`. The `EQUALS` operator is used.\n* Technology: `technology(\"technology-1\", \"technology-2\")`. Find the possible values in the description of the **technology** field of the response. The `EQUALS` operator is used.\n* Vulnerability type: `vulnerabilityType(\"type-1\", \"type-2\")`. Possible values are `THIRD_PARTY`, `CODE_LEVEL`, `RUNTIME`.\n\nRisk score and risk category are mutually exclusive (cannot be used at the same time).\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "<string>",
                                    "description": "Specifies one or more fields for sorting the security problem list. Multiple fields can be concatenated using a comma (`,`) as a separator (e.g. `+status,-timestamp`).\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n* `status`: The security problem status (`+` open first or `-` resolved first) \n* `muted`: The security problem mute state (`+` unmuted first or `-` muted first) \n* `technology`: The security problem technology \n* `firstSeenTimestamp`: The timestamp of the first occurrence of the security problem (`+` new problems first or `-` old problems first) \n* `lastUpdatedTimestamp`: The timestamp of the last update of the security problem (`+` recently updated problems first or `-`  earlier updated problems first)\n* `securityProblemId`: The auto-generated ID of the security problem (`+` lower number first or `-` higher number first) \n* `externalVulnerabilityId`: The ID of the external vulnerability (`+` lower number first or `-` higher number first) \n* `displayId`: The display ID (`+` lower number first or `-` higher number first) \n* `riskAssessment.riskScore`: The Davis security score (`+` lower score first or `-` higher score first) \n* `riskAssessment.riskLevel`: The Davis security level (`+` lower level first or `-` higher level first) \n* `riskAssessment.exposure`: Whether the problem is exposed to the internet \n* `riskAssessment.dataAssets`: Whether data assets are affected \n* `riskAssessment.vulnerableFunctionUsage`: Whether vulnerable functions are used \n* `riskAssessment.assessmentAccuracy`: The assessments accuracy (`+` less accuracy first or `-` more accuracy first) \n* `globalCounts.affectedNodes`: Number of affected nodes (`+` lower number first or `-` higher number first) \n* `globalCounts.affectedProcessGroupInstances`: Number of affected process group instances (`+` lower number first or `-` higher number first) \n* `globalCounts.affectedProcessGroups`: Number of affected process groups (`+` lower number first or `-` higher number first) \n* `globalCounts.exposedProcessGroups`: Number of exposed process groups (`+` lower number first or `-` higher number first) \n* `globalCounts.reachableDataAssets`: Number of reachable data assets (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedApplications`: Number of related applications (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedAttacks`: Number of attacks on the security problem (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedHosts`: Number of related hosts (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedKubernetesClusters`: Number of related Kubernetes cluster (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedKubernetesWorkloads`: Number of related Kubernetes workloads (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedServices`: Number of related services (`+` lower number first or `-` higher number first) \n* `globalCounts.vulnerableComponents`: Number of vulnerable components (`+` lower number first or `-` higher number first) \n\nIf no prefix is set, `+` is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "A list of additional security problem properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n* `codeLevelVulnerabilityDetails`: Details of the code-level vulnerability.\n* `globalCounts`: Globally calculated statistics about the security problem. No management zone information is taken into account.\n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.\n\nThe end of the timeframe must not be older than 365 days."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "c0c52b8a-b689-4ef1-b6a2-df84b30f12d7",
                            "name": "Success. The response contains the list of security problems.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "securityProblems"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "securityProblemSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -2014021,\n  \"pageSize\": 87989292,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"securityProblems\": [\n    {\n      \"securityProblemId\": \"consequ\",\n      \"displayId\": \"ea ullamco dolor\",\n      \"status\": \"RESOLVED\",\n      \"muted\": false,\n      \"externalVulnerabilityId\": \"in anim\",\n      \"vulnerabilityType\": \"THIRD_PARTY\",\n      \"title\": \"reprehenderit\",\n      \"packageName\": \"et sunt mollit ad\",\n      \"url\": \"sit commodo oc\",\n      \"technology\": \"NODE_JS\",\n      \"firstSeenTimestamp\": -41327436,\n      \"lastUpdatedTimestamp\": -1373559,\n      \"riskAssessment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"cveIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"globalCounts\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"codeLevelVulnerabilityDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"securityProblemId\": \"exercitation dolor labore\",\n      \"displayId\": \"sit culpa consectetur commodo occaec\",\n      \"status\": \"RESOLVED\",\n      \"muted\": true,\n      \"externalVulnerabilityId\": \"veniam magna sunt culpa voluptate\",\n      \"vulnerabilityType\": \"RUNTIME\",\n      \"title\": \"irure velit cupidatat exercitation\",\n      \"packageName\": \"sit cillum exercitation\",\n      \"url\": \"ut qui eiusmod\",\n      \"technology\": \"NODE_JS\",\n      \"firstSeenTimestamp\": -27297629,\n      \"lastUpdatedTimestamp\": -78259646,\n      \"riskAssessment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"cveIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"globalCounts\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"codeLevelVulnerabilityDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "05ad57bc-aad6-44d5-a93d-d91a587d4392",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "721ffb6f-bfb7-4e0c-b980-79fb5bf596fb",
                            "name": "Gets parameters of a security problem",
                            "request": {
                                "name": "Gets parameters of a security problem",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "fields",
                                            "value": "<string>",
                                            "description": "A list of additional security problem properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n* `codeLevelVulnerabilityDetails`: Details of the code-level vulnerability.\n* `globalCounts`: Globally calculated statistics about the security problem. No management zone information is taken into account.\n* `filteredCounts`: Statistics about the security problem, filtered by the management zone and timeframe start ('from') query parameters. \n* `description`: The description of the vulnerability.\n* `events`: The security problem's last 10 events within the last 365 days, sorted from newest to oldest.\n* `vulnerableComponents`: A list of vulnerable components of the security problem within the provided filter range. \n* `affectedEntities`: A list of affected entities of the security problem within the provided filter range. \n* `exposedEntities`: A list of exposed entities of the security problem within the provided filter range. \n* `reachableDataAssets`: A list of data assets reachable by affected entities of the security problem within the provided filter range. \n* `relatedEntities`: A list of related entities of the security problem within the provided filter range. \n* `relatedContainerImages`: A list of related container images of the security problem within the provided filter range. \n* `relatedAttacks`: A list of attacks detected on the exposed security problem. \n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n"
                                        },
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "Based on the timeframe start the affected-, related- and vulnerable entities are being calculated.\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the default timeframe start of 24 hours in the past is used (`now-24h`).\n\nThe timeframe start must not be older than 365 days."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "a5eed029-a07e-4ff8-8080-9e07c89e5f0a",
                                    "name": "Success. The response contains parameters of the security problem.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "fields",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"securityProblemId\": \"dolore laborum\",\n  \"displayId\": \"sunt ut\",\n  \"status\": \"OPEN\",\n  \"muted\": false,\n  \"externalVulnerabilityId\": \"sunt deserunt\",\n  \"vulnerabilityType\": \"RUNTIME\",\n  \"title\": \"enim consectetur laboris Lorem magna\",\n  \"packageName\": \"ut officia dolore cupidatat\",\n  \"url\": \"cupidatat sint\",\n  \"description\": \"cillum veniam Ut exercitation\",\n  \"technology\": \"KUBERNETES\",\n  \"firstSeenTimestamp\": 87936046,\n  \"lastUpdatedTimestamp\": -59370092,\n  \"riskAssessment\": {\n    \"riskLevel\": \"MEDIUM\",\n    \"riskScore\": -33147683.3492101,\n    \"riskVector\": \"mollit\",\n    \"baseRiskLevel\": \"NONE\",\n    \"baseRiskScore\": 40218420.663705915,\n    \"baseRiskVector\": \"in eu exercitation veniam\",\n    \"exposure\": \"NOT_DETECTED\",\n    \"dataAssets\": \"REACHABLE\",\n    \"publicExploit\": \"NOT_AVAILABLE\",\n    \"vulnerableFunctionUsage\": \"NOT_IN_USE\",\n    \"assessmentAccuracy\": \"FULL\"\n  },\n  \"managementZones\": [\n    {\n      \"name\": \"Ut nostrud ex dolor\",\n      \"id\": \"laboris\"\n    },\n    {\n      \"name\": \"tempor eu est pariatur\",\n      \"id\": \"dolo\"\n    }\n  ],\n  \"cveIds\": [\n    \"labore incididunt\",\n    \"in Lorem\"\n  ],\n  \"globalCounts\": {\n    \"affectedNodes\": -20804673,\n    \"affectedProcessGroupInstances\": 59584510,\n    \"affectedProcessGroups\": -32007587,\n    \"exposedProcessGroups\": -5447292,\n    \"reachableDataAssets\": -3243561,\n    \"relatedApplications\": -12601281,\n    \"relatedAttacks\": -58833196,\n    \"relatedHosts\": -47351186,\n    \"relatedKubernetesClusters\": 89249192,\n    \"relatedKubernetesWorkloads\": -42996125,\n    \"relatedServices\": -83567711,\n    \"vulnerableComponents\": 51605494\n  },\n  \"filteredCounts\": {\n    \"affectedNodes\": 86019769,\n    \"affectedProcessGroupInstances\": -69467213,\n    \"affectedProcessGroups\": -22674019,\n    \"exposedProcessGroups\": 80032822,\n    \"reachableDataAssets\": -37532018,\n    \"relatedApplications\": -13923595,\n    \"relatedAttacks\": 42922532,\n    \"relatedDatabases\": 28468509,\n    \"relatedHosts\": 79172453,\n    \"relatedKubernetesClusters\": -1960300,\n    \"relatedKubernetesWorkloads\": -68007489,\n    \"relatedServices\": 46413619,\n    \"vulnerableComponents\": 28776548\n  },\n  \"codeLevelVulnerabilityDetails\": {\n    \"processGroupIds\": [\n      \"culpa fugiat sed veniam aliqua\",\n      \"dolor proident ipsum nulla exercitation\"\n    ],\n    \"processGroups\": [\n      \"irure ex ad aliqua\",\n      \"Excepteur\"\n    ],\n    \"shortVulnerabilityLocation\": \"quis occaecat magna elit ex\",\n    \"type\": \"CMD_INJECTION\",\n    \"vulnerabilityLocation\": \"ad sit Ut dolor\",\n    \"vulnerableFunction\": \"veniam proident qui\",\n    \"vulnerableFunctionInput\": {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inputSegments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"events\": [\n    {\n      \"timestamp\": -14897835,\n      \"reason\": \"SECURITY_PROBLEM_MUTED\",\n      \"riskAssessmentSnapshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"muteState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"timestamp\": 91979606,\n      \"reason\": \"SECURITY_PROBLEM_UNMUTED\",\n      \"riskAssessmentSnapshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"muteState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"vulnerableComponents\": [\n    {\n      \"id\": \"velit consequat\",\n      \"displayName\": \"\",\n      \"shortName\": \"laboris eiusmod consequat et\",\n      \"fileName\": \"do aliqua\",\n      \"numberOfAffectedEntities\": -22612577,\n      \"affectedEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"sit aliqua\",\n      \"displayName\": \"ut commodo do\",\n      \"shortName\": \"dolor in ullamco laborum ut\",\n      \"fileName\": \"quis Duis Ut\",\n      \"numberOfAffectedEntities\": 10224877,\n      \"affectedEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"affectedEntities\": [\n    \"dolor reprehenderit esse nulla\",\n    \"dolor ex\"\n  ],\n  \"exposedEntities\": [\n    \"ullamco aliquip dolor in\",\n    \"proident eiusmod laboris ut aute\"\n  ],\n  \"reachableDataAssets\": [\n    \"officia\",\n    \"ipsum cupidatat magna\"\n  ],\n  \"relatedEntities\": {\n    \"applications\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"services\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"hosts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"databases\": [\n      \"ipsum sunt quis culpa\",\n      \"ullamco eiusmod voluptate\"\n    ],\n    \"kubernetesWorkloads\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"kubernetesClusters\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"relatedContainerImages\": [\n    {\n      \"containerImages\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"containerImages\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"relatedAttacks\": {\n    \"attacks\": [\n      \"minim ipsum\",\n      \"sed minim in aliqua\"\n    ]\n  },\n  \"muteStateChangeInProgress\": true\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "d708743f-887c-44e4-a99e-298aef46f591",
                            "name": "remediation Items",
                            "item": [
                                {
                                    "id": "5ad5f588-11ea-4eb4-80c5-957451cf12e4",
                                    "name": "Lists remediation items of a third-party security problem",
                                    "request": {
                                        "name": "Lists remediation items of a third-party security problem",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "remediationItems"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "remediationItemSelector",
                                                    "value": "<string>",
                                                    "description": "Defines the scope of the query. Only remediable entities matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Vulnerability state: `vulnerabilityState(\"value\")`. Find the possible values in the description of the **vulnerabilityState** field of the response. If not set, all entities are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Reachable data asset assessment: `assessment.dataAssets(\"value\")` Possible values are `REACHABLE`, and `NOT_DETECTED`.\n* Network exposure assessment: `assessment.exposure(\"value\")` Possible values are `PUBLIC_NETWORK`, and `NOT_DETECTED`.\n* Vulnerable function usage assessment: `assessment.vulnerableFunctionUsage(\"value\")` Possible values are `IN_USE`, and `NOT_IN_USE`.\n* Vulnerable function in use contains: `assessment.vulnerableFunctionInUseContains(\"value\")`. Possible values are `class::function`, `class::` and `function`. The `CONTAINS` operator is used. Only vulnerable functions in use are considered.\n* Assessment accuracy: `assessment.accuracy(\"value\")` Possible values are `FULL` and `REDUCED`.\n* Entity name contains: `entityNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required third-party security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "41c36da8-68cd-42c0-b735-8fe21468d52e",
                                            "name": "Success. The response contains the list of remediation items of a problem.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "securityProblems",
                                                        ":id",
                                                        "remediationItems"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "remediationItemSelector",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "id",
                                                            "description": "(Required) The ID of the required third-party security problem."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"remediationItems\": [\n    {\n      \"id\": \"non e\",\n      \"entityIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"dolor re\",\n      \"firstAffectedTimestamp\": -27723271,\n      \"assessment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resolvedTimestamp\": -64610431,\n      \"vulnerabilityState\": \"RESOLVED\",\n      \"muteState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vulnerableComponents\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"remediationProgress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": \"incididunt Ut\",\n      \"entityIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"ad aliquip fugiat Lor\",\n      \"firstAffectedTimestamp\": 94766134,\n      \"assessment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resolvedTimestamp\": 95873045,\n      \"vulnerabilityState\": \"VULNERABLE\",\n      \"muteState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vulnerableComponents\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"remediationProgress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "abf73a10-a641-4ec5-82d4-f634922e996d",
                                    "name": "Mutes several remediation items | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Mutes several remediation items | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "remediationItems",
                                                "mute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required third-party security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "b2bf6a3a-d86d-4be7-adf5-b0ea3813e7ff",
                                            "name": "Success. The remediation item(s) have been muted.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "securityProblems",
                                                        ":id",
                                                        "remediationItems",
                                                        "mute"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "id",
                                                            "description": "(Required) The ID of the required third-party security problem."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"summary\": [\n    {\n      \"muteStateChangeTriggered\": false,\n      \"remediationItemId\": \"Excepteur occaecat in velit nulla\",\n      \"reason\": \"ALREADY_MUTED\"\n    },\n    {\n      \"muteStateChangeTriggered\": false,\n      \"remediationItemId\": \"in ex sunt\",\n      \"reason\": \"ALREADY_MUTED\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "6f16b439-b97e-444e-a96a-f1955ae628d9",
                                    "name": "Un-mutes several remediation items | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Un-mutes several remediation items | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "remediationItems",
                                                "unmute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required third-party security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "8ee141e4-ab67-41e6-8916-41cb6ac0feda",
                                            "name": "Success. The remediation item(s) have been un-muted. ",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "securityProblems",
                                                        ":id",
                                                        "remediationItems",
                                                        "unmute"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "id",
                                                            "description": "(Required) The ID of the required third-party security problem."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"summary\": [\n    {\n      \"muteStateChangeTriggered\": false,\n      \"remediationItemId\": \"in dolore\",\n      \"reason\": \"ALREADY_UNMUTED\"\n    },\n    {\n      \"muteStateChangeTriggered\": true,\n      \"remediationItemId\": \"mollit\",\n      \"reason\": \"ALREADY_UNMUTED\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "9f3dc01d-61a4-4d93-b2ff-e573c3ef330d",
                                    "name": "Sets the mute state of a remediation item | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Sets the mute state of a remediation item | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "remediationItems",
                                                ":remediationItemId",
                                                "muteState"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required third-party security problem."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "remediationItemId",
                                                    "description": "(Required) The ID of the remediation item."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "7be7ce29-a825-472f-aa48-07551041580f",
                                            "name": "Success. The requested mute state has been applied to the remediation item.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "securityProblems",
                                                        ":id",
                                                        "remediationItems",
                                                        ":remediationItemId",
                                                        "muteState"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "id",
                                                            "description": "(Required) The ID of the required third-party security problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "remediationItemId",
                                                            "description": "(Required) The ID of the remediation item."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "610b0be2-413c-4349-918f-5297ba4ad149",
                                            "name": "Not executed. The remediation item was previously put into the requested mute state by the same user with the same reason and comment.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "securityProblems",
                                                        ":id",
                                                        "remediationItems",
                                                        ":remediationItemId",
                                                        "muteState"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "id",
                                                            "description": "(Required) The ID of the required third-party security problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "remediationItemId",
                                                            "description": "(Required) The ID of the remediation item."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "3427cbe8-390d-45d5-8c8c-66964002fd65",
                            "name": "Lists all events of a security problem",
                            "request": {
                                "name": "Lists all events of a security problem",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id",
                                        "events"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "to",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "43a73003-59e2-422f-bf50-ef4ce5120571",
                                    "name": "Success. The response contains the list of security problem events.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "events"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"totalCount\": -29627608,\n  \"events\": [\n    {\n      \"timestamp\": -45404021,\n      \"reason\": \"SECURITY_PROBLEM_CREATED\",\n      \"riskAssessmentSnapshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"muteState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"timestamp\": 12113211,\n      \"reason\": \"SECURITY_PROBLEM_REOPENED\",\n      \"riskAssessmentSnapshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"muteState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"pageSize\": 35281112,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "8d1b7342-28f0-4d18-be8d-62ee65ad53db",
                            "name": "Lists all vulnerable functions and their usage for a third-party security problem",
                            "request": {
                                "name": "Lists all vulnerable functions and their usage for a third-party security problem",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id",
                                        "vulnerableFunctions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "vulnerableFunctionsSelector",
                                            "value": "<string>",
                                            "description": "Defines the scope of the query. Only vulnerable functions matching the specified criteria are included in the response.\n\nYou can add the following criteria. Values are *not* case sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Management zone ID: `managementZoneIds(\"mzId-1\", \"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\", \"name-2\")`. Values are case sensitive.\n* Process group ID: `processGroupIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Process group name: `processGroupNames(\"name-1\", \"name-2\")`. Values are case sensitive.\n* Process group name contains: `processGroupNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
                                        },
                                        {
                                            "disabled": false,
                                            "key": "groupBy",
                                            "value": "<string>",
                                            "description": "Defines additional grouping types in which vulnerable functions should be displayed.\n\nYou can add one of the following grouping types.\n\n* Process group: `PROCESS_GROUP`"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required third-party security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "72077721-6cce-4123-8e03-4bfad8bd7cf9",
                                    "name": "Success. The response contains the list of vulnerable functions.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "vulnerableFunctions"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "vulnerableFunctionsSelector",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "groupBy",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required third-party security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"vulnerableFunctions\": [\n    {\n      \"function\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usage\": \"NOT_AVAILABLE\",\n      \"processGroupsInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"processGroupsNotInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"processGroupsNotAvailable\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"function\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usage\": \"IN_USE\",\n      \"processGroupsInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"processGroupsNotInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"processGroupsNotAvailable\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"vulnerableFunctionsByProcessGroup\": [\n    {\n      \"processGroup\": \"fugiat sunt irure ex\",\n      \"functionsInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"functionsNotInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"functionsNotAvailable\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"processGroup\": \"esse qui labore reprehenderit\",\n      \"functionsInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"functionsNotInUse\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"functionsNotAvailable\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "af6aa1a0-3edc-4757-8110-b61fae798c25",
                            "name": "Mutes a security problem",
                            "request": {
                                "name": "Mutes a security problem",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id",
                                        "mute"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "e73d7d75-ac89-4425-8448-68118d4f53fb",
                                    "name": "Success. The security problem has been muted.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "mute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "cc0a573d-53ac-4c7b-89a5-42040fb86963",
                                    "name": "Not executed. The security problem is already muted.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "mute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "d30c8cd8-8273-440d-9094-76832490ccbe",
                            "name": "Un-mutes a security problem",
                            "request": {
                                "name": "Un-mutes a security problem",
                                "description": {},
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        ":id",
                                        "unmute"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required security problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "1b489bdc-8beb-42ba-8a8d-dce42820c74a",
                                    "name": "Success. The security problem has been un-muted.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "unmute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "c4bfa514-5f44-4a81-9263-03d1df458859",
                                    "name": "Not executed. The security problem is already un-muted.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "securityProblems",
                                                ":id",
                                                "unmute"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required security problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "d21ed185-e040-4327-97b2-3f74e741f0bd",
                    "name": "Mutes several security problems | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Mutes several security problems | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "securityProblems",
                                "mute"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "13df645b-be60-41df-9781-14bed2d29aa1",
                            "name": "Success. The security problem(s) have been muted.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        "mute"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"summary\": [\n    {\n      \"muteStateChangeTriggered\": false,\n      \"securityProblemId\": \"dolor ipsum non ullamco\",\n      \"reason\": \"ALREADY_UNMUTED\"\n    },\n    {\n      \"muteStateChangeTriggered\": true,\n      \"securityProblemId\": \"eu dolore\",\n      \"reason\": \"ALREADY_UNMUTED\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f129ad6c-ed54-4d23-a1d8-416572c7b31c",
                    "name": "Un-mutes several security problems | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Un-mutes several security problems | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "securityProblems",
                                "unmute"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "89516bfc-0c88-4c2c-b053-407bbd73b6cc",
                            "name": "Success. The security problem(s) have been un-muted.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "securityProblems",
                                        "unmute"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"summary\": [\n    {\n      \"muteStateChangeTriggered\": false,\n      \"securityProblemId\": \"consequat laboris consectetur elit velit\",\n      \"reason\": \"ALREADY_MUTED\"\n    },\n    {\n      \"muteStateChangeTriggered\": true,\n      \"securityProblemId\": \"minim elit nulla\",\n      \"reason\": \"ALREADY_MUTED\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "a81c2da5-41e8-4666-ba4c-2abb186376a3",
            "name": "credentials",
            "item": [
                {
                    "id": "5564ec06-2278-4155-83d9-eb8b305eb5f8",
                    "name": "Lists all sets of credentials for synthetic monitors stored in your environment.",
                    "request": {
                        "name": "Lists all sets of credentials for synthetic monitors stored in your environment.",
                        "description": {
                            "content": "The credentials set itself (username/certificate and password) is not included in the response.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "credentials"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "type",
                                    "value": "<string>",
                                    "description": "Filters the result by the specified credentials type."
                                },
                                {
                                    "disabled": false,
                                    "key": "name",
                                    "value": "<string>",
                                    "description": "Filters the result by the name. When in quotation marks, whole phrase is taken. Case insensitive."
                                },
                                {
                                    "disabled": false,
                                    "key": "user",
                                    "value": "<string>",
                                    "description": "Filters credentials accessible to the user (owned by the user or the ones that are accessible for all)."
                                },
                                {
                                    "disabled": false,
                                    "key": "scope",
                                    "value": "<string>",
                                    "description": "Filters credentials with specified scope."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of credentials in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "adf1ad12-63c0-4dfa-ad99-79c8b561be82",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "credentials"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "name",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "user",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"credentials\": [\n    {\n      \"name\": \"Sample username-password credentials\",\n      \"type\": \"USERNAME_PASSWORD\",\n      \"description\": \"Sample credentials for demo purposes.\",\n      \"owner\": \"user@domain.com\",\n      \"ownerAccessOnly\": true,\n      \"scope\": \"SYNTHETIC\",\n      \"externalVault\": {\n        \"sourceAuthMethod\": \"HASHICORP_VAULT_APPROLE\",\n        \"vaultUrl\": \"https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200\",\n        \"usernameSecretName\": \"username\",\n        \"passwordSecretName\": \"password\",\n        \"pathToCredentials\": \"kv/credentials\",\n        \"roleId\": \"00e4858c-ec33-bc99-4e7e-34de6967de6c\",\n        \"secretId\": \"CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX\",\n        \"vaultNamespace\": \"admin\"\n      },\n      \"credentialUsageSummary\": [\n        {\n          \"HTTP_MONITOR\": 3,\n          \"BROWSER_MONITOR\": 2\n        }\n      ]\n    },\n    {\n      \"name\": \"Sample username-password credentials\",\n      \"type\": \"USERNAME_PASSWORD\",\n      \"description\": \"Sample credentials for demo purposes.\",\n      \"owner\": \"user@domain.com\",\n      \"ownerAccessOnly\": true,\n      \"scope\": \"SYNTHETIC\",\n      \"externalVault\": {\n        \"sourceAuthMethod\": \"HASHICORP_VAULT_APPROLE\",\n        \"vaultUrl\": \"https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200\",\n        \"usernameSecretName\": \"username\",\n        \"passwordSecretName\": \"password\",\n        \"pathToCredentials\": \"kv/credentials\",\n        \"roleId\": \"00e4858c-ec33-bc99-4e7e-34de6967de6c\",\n        \"secretId\": \"CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX\",\n        \"vaultNamespace\": \"admin\"\n      },\n      \"credentialUsageSummary\": [\n        {\n          \"HTTP_MONITOR\": 3,\n          \"BROWSER_MONITOR\": 2\n        }\n      ]\n    }\n  ],\n  \"totalCount\": -9060148,\n  \"pageSize\": -28899478,\n  \"nextPageKey\": \"Lorem laborum cupi\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4b4b5756-ef78-49a7-a195-936a0615d7f4",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "credentials"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "name",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "user",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "417e0032-58ea-472e-b023-cb936a44594d",
                    "name": "Creates a new credentials set.",
                    "request": {
                        "name": "Creates a new credentials set.",
                        "description": {
                            "content": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "credentials"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "95eefaab-0801-4207-8e36-680970a073df",
                            "name": "Success. The new credentials set has been created. The response contains the ID of the set.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "credentials"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"id\": \"eiusmod do ea Lorem aliqua\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "aeae4ccf-e801-41dd-8e50-1f6e3f36a5a8",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "credentials"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7a49f37c-1186-4b6f-b6da-76219eafb335",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "77d1e4bd-ae25-460f-8e8e-ea5520011476",
                            "name": "Gets the metadata of the specified credentials set.",
                            "request": {
                                "name": "Gets the metadata of the specified credentials set.",
                                "description": {
                                    "content": "The credentials set itself (e.g. username/certificate and password) is not included in the response.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "credentials",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The Dynatrace entity ID of the required credentials set."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "967570a6-8593-4c4b-9770-13574446939c",
                                    "name": "Success. The response contains the metadata of the credentials set.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The Dynatrace entity ID of the required credentials set."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"credentialUsageSummary\": [\n    {\n      \"type\": \"proident aliqua ex consequat\",\n      \"count\": -34424421\n    },\n    {\n      \"type\": \"adipisicing nisi\",\n      \"count\": 71283329\n    }\n  ],\n  \"description\": \"adipisicing Ut velit mollit\",\n  \"name\": \"laborum\",\n  \"owner\": \"id quis\",\n  \"ownerAccessOnly\": true,\n  \"type\": \"USERNAME_PASSWORD\",\n  \"id\": \"nisi elit ut anim occaecat\",\n  \"scope\": \"ALL\",\n  \"externalVault\": {\n    \"sourceAuthMethod\": \"HASHICORP_VAULT_APPROLE\",\n    \"vaultUrl\": \"est qui in\",\n    \"usernameSecretName\": \"dolor ad est\",\n    \"passwordSecretName\": \"amet est aute nostrud officia\",\n    \"tokenSecretName\": \"sit\",\n    \"credentialsUsedForExternalSynchronization\": [\n      \"nostrud quis sunt\",\n      \"deserunt\"\n    ],\n    \"type\": \"AZURE_CERTIFICATE_MODEL\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "5cdaafd9-b5b7-46d5-931c-0962bb3cc156",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The Dynatrace entity ID of the required credentials set."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "dd06a300-732b-4ea7-a67d-45689059efde",
                            "name": "Updates the specified credentials set.",
                            "request": {
                                "name": "Updates the specified credentials set.",
                                "description": {
                                    "content": "The body must not provide an ID. The ID should be provided in the path.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "credentials",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The Dynatrace entity ID of the credentials set to be updated."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "cd2ffbb4-0d6c-4a28-a417-919ba79845c2",
                                    "name": "Success. The new credentials set has been created. The response contains the ID of the set.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The Dynatrace entity ID of the credentials set to be updated."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"id\": \"eiusmod do ea Lorem aliqua\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "979b2e8d-8e42-4b6c-98d1-7c542dc78649",
                                    "name": "Success. The credentials set has been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The Dynatrace entity ID of the credentials set to be updated."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "5821e9a7-9e08-4536-b500-0a635805ef9f",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The Dynatrace entity ID of the credentials set to be updated."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "5ab2b5c5-98dd-4325-b282-5512397a39f3",
                            "name": "Deletes the specified credentials set",
                            "request": {
                                "name": "Deletes the specified credentials set",
                                "description": {
                                    "content": "Provide credential ID in the path.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "credentials",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the credentials set to be deleted."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "f4fdcf63-2ae0-4694-ba75-9592ae8c75ba",
                                    "name": "Success. The credentials set has been deleted. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the credentials set to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "19363e1f-fc25-4217-95b0-28f4c9100e6d",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the credentials set to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "eb154ee4-0c01-48ae-907f-303db1470558",
                                    "name": "Failed. Could not delete the credential.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "credentials",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the credentials set to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "78365cbb-a92b-4d64-91bf-b7e95719057d",
            "name": "extensions",
            "item": [
                {
                    "id": "eeb0e5aa-f50c-4989-85d3-eba25fdd3ca2",
                    "name": "Lists all the extensions 2.0 available in your environment",
                    "request": {
                        "name": "Lists all the extensions 2.0 available in your environment",
                        "description": {},
                        "url": {
                            "path": [
                                "extensions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "name",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of extensions 2.0 by name. You can specify a partial name. In that case, the CONTAINS operator is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "cff576dc-b177-4379-a27f-7edbe3ef6d95",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "name",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 55828314,\n  \"extensions\": [\n    {\n      \"extensionName\": \"do Lorem\",\n      \"version\": \"1.2.3\"\n    },\n    {\n      \"extensionName\": \"adipisicing reprehenderit sint ad\",\n      \"version\": \"1.2.3\"\n    }\n  ],\n  \"pageSize\": -85866253,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4d1ec96f-0779-421c-bfbe-48219d3a3f56",
                    "name": "Uploads or verifies a new extension 2.0",
                    "request": {
                        "name": "Uploads or verifies a new extension 2.0",
                        "description": {},
                        "url": {
                            "path": [
                                "extensions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "validateOnly",
                                    "value": "false",
                                    "description": "Only run validation but do not persist the extension even if validation was successful."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "file",
                                    "type": "file",
                                    "description": "(Required) Extension 2.0 zip file to upload."
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "30151180-1f98-43da-9a6a-86d320ea10ac",
                            "name": "The extension is valid",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "validateOnly",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) Extension 2.0 zip file to upload.",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<binary>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"extensionName\": \"fugiat id Excepteur aliquip\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"tempor sed qui\"\n  },\n  \"dataSources\": [\n    \"do exercitation anim enim\",\n    \"nisi ullamco ea\"\n  ],\n  \"variables\": [\n    \"Lorem ut labore elit eu\",\n    \"id magna\"\n  ],\n  \"featureSets\": [\n    \"ex do dolor ei\",\n    \"nisi in\"\n  ],\n  \"featureSetsDetails\": {\n    \"laboris__f2\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"laborum_5\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"Excepteur quis incididunt elit amet\",\n  \"minEECVersion\": \"qui\",\n  \"fileHash\": \"in aliquip\",\n  \"assetsInfo\": [\n    {\n      \"assetType\": \"Ut id\",\n      \"count\": 59676258\n    },\n    {\n      \"assetType\": \"ea qui aute adipis\",\n      \"count\": -57579966\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5f4b933f-75be-428e-82a5-73bfd5888b1e",
                            "name": "Success. The extension 2.0 has been uploaded.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "validateOnly",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) Extension 2.0 zip file to upload.",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<binary>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"extensionName\": \"Lorem esse\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"mollit laboris\"\n  },\n  \"dataSources\": [\n    \"magn\",\n    \"culpa ea ad in pariatur\"\n  ],\n  \"variables\": [\n    \"ex aliquip occaecat sunt\",\n    \"occaecat sint\"\n  ],\n  \"featureSets\": [\n    \"consectetur\",\n    \"consectetur esse adipisicing ea\"\n  ],\n  \"featureSetsDetails\": {\n    \"consequat_6\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"ut\",\n  \"minEECVersion\": \"consequat\",\n  \"fileHash\": \"incididunt non sed in\",\n  \"assetsInfo\": [\n    {\n      \"assetType\": \"anim\",\n      \"count\": -32308182\n    },\n    {\n      \"assetType\": \"ut deserunt dolor elit commodo\",\n      \"count\": -17645850\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c62bf677-d1c2-4343-b780-69b6cecd2689",
                            "name": "Failed. The input file is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "validateOnly",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) Extension 2.0 zip file to upload.",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<binary>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b0f4bfe7-ef01-4eb2-940d-e23ef2710fc1",
                            "name": "Upload not possible yet, please try again in a few seconds.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "extensions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "validateOnly",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) Extension 2.0 zip file to upload.",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<binary>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "6b460033-07a4-40ca-87c6-c8709d9c5534",
                    "name": "{extension Name}",
                    "item": [
                        {
                            "id": "5015aab2-dcb3-42b7-a2c1-8ebcc0f30fed",
                            "name": "Lists all versions of the extension 2.0",
                            "request": {
                                "name": "Lists all versions of the extension 2.0",
                                "description": {},
                                "url": {
                                    "path": [
                                        "extensions",
                                        ":extensionName"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "nextPageKey",
                                            "value": "<string>",
                                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                        },
                                        {
                                            "disabled": false,
                                            "key": "pageSize",
                                            "value": "<long>",
                                            "description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionName",
                                            "description": "(Required) The name of the requested extension 2.0."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "01b94828-c298-4881-b342-651a97e26462",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"totalCount\": 94310181,\n  \"extensions\": [\n    {\n      \"extensionName\": \"ea est\",\n      \"version\": \"1.2.3\"\n    },\n    {\n      \"extensionName\": \"elit Lorem non nisi\",\n      \"version\": \"1.2.3\"\n    }\n  ],\n  \"pageSize\": -59244645,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "c8947b98-a983-4e3e-a18d-ed612c65e162",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "1d859ddf-7b55-40d0-a799-3c9a04e4c194",
                            "name": "environment Configuration",
                            "item": [
                                {
                                    "id": "b0be732a-bb15-4444-984c-7f6d02848e63",
                                    "name": "Gets the active environment configuration version of the specified extension 2.0",
                                    "request": {
                                        "name": "Gets the active environment configuration version of the specified extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "ba106aca-e355-432d-9017-c954d999d53f",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"version\": \"1.2.3\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "61888dbf-7e47-4d97-b10f-ef1efc8e5a3f",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "1c0975d0-aebe-44fe-8d92-6e6648c65aa7",
                                    "name": "Updates the active environment configuration version of the extension 2.0",
                                    "request": {
                                        "name": "Updates the active environment configuration version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "6411d92c-62e7-4126-aff0-f245c31be304",
                                            "name": "Success. Environment configuration updated.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"version\": \"1.2.3\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "5791615d-137e-4d6f-ad32-5c50498f870f",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "d7f5ad9b-6715-47ee-b91b-6ef18b060416",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "297d4f8c-8f38-46dd-b5c2-fd07306a0053",
                                    "name": "Activates the environment configuration from the specified version of the extension 2.0",
                                    "request": {
                                        "name": "Activates the environment configuration from the specified version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "bab69279-9dfd-42ad-a26c-d4e72263e3d3",
                                            "name": "Success. Environment configuration created.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"version\": \"1.2.3\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "47c29edf-be8c-47a0-8413-037d2c50ae6b",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "c7571444-6561-40ac-881e-b307292a3cd5",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "1cf9c46b-d539-4bf4-9116-458ce236e487",
                                    "name": "Deactivates the environment configuration of the specified extension 2.0",
                                    "request": {
                                        "name": "Deactivates the environment configuration of the specified extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "aa8b7f0d-162f-4638-904d-9c39f4ab2005",
                                            "name": "Success. Environment configuration deactivated.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"version\": \"1.2.3\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "99632f0c-07f5-45f3-8a26-7e28f7fef272",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "7846346f-eb7a-42ed-ad46-c357e7a1eb96",
                                    "name": "List of the latest extension environment configuration events",
                                    "request": {
                                        "name": "List of the latest extension environment configuration events",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "environmentConfiguration",
                                                "events"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "from",
                                                    "value": "<string>",
                                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "to",
                                                    "value": "<string>",
                                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "content",
                                                    "value": "<string>",
                                                    "description": "Content of the event"
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "status",
                                                    "value": "<string>",
                                                    "description": "Status of the event"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "cd10b0f9-e567-4f26-99a3-cfc3945c094a",
                                            "name": "List of the latest extension environment configuration events",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration",
                                                        "events"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "content",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "status",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"extensionEvents\": [\n    {\n      \"timestamp\": \"enim mollit do voluptate\",\n      \"severity\": \"nisi ad dolor nulla\",\n      \"content\": \"cillum velit\",\n      \"dt.entity.host\": \"sint eu ad nulla\",\n      \"dt.active_gate.id\": \"aliquip\",\n      \"dt.extension.ds\": \"labore Lorem in\",\n      \"status\": \"INFO\"\n    },\n    {\n      \"timestamp\": \"in elit consectetur\",\n      \"severity\": \"esse laborum nulla ipsum\",\n      \"content\": \"sit quis cillum esse ut\",\n      \"dt.entity.host\": \"in aliquip cupidatat\",\n      \"dt.active_gate.id\": \"deserunt Excepteur\",\n      \"dt.extension.ds\": \"nostrud in aliqua ut\",\n      \"status\": \"NONE\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "0177f039-5825-46b8-b550-b799ae6fef5e",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "environmentConfiguration",
                                                        "events"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "content",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "status",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "0d05df7d-a444-4ac2-a190-1f23761bc1e5",
                            "name": "monitoring Configurations",
                            "item": [
                                {
                                    "id": "677a0d0c-7f00-4f83-856f-c8d278042a99",
                                    "name": "Lists all the monitoring configurations of the specified extension 2.0",
                                    "request": {
                                        "name": "Lists all the monitoring configurations of the specified extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "monitoringConfigurations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "nextPageKey",
                                                    "value": "<string>",
                                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "pageSize",
                                                    "value": "<long>",
                                                    "description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "version",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of configurations by extension 2.0 version."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "active",
                                                    "value": "<boolean>",
                                                    "description": "Filters the resulting set of configurations by the active state."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "c093f9e8-5879-4717-b5b3-a90cdd547871",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "nextPageKey",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "pageSize",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "version",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "active",
                                                            "value": "<boolean>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"totalCount\": 30457905,\n  \"items\": [\n    {\n      \"objectId\": \"sed\",\n      \"scope\": \"Excepteur in aliqua\",\n      \"value\": {}\n    },\n    {\n      \"objectId\": \"mollit ex proident\",\n      \"scope\": \"tempor laborum dolor\",\n      \"value\": {}\n    }\n  ],\n  \"pageSize\": 42854052,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "e23265f1-4cd7-41b6-b497-f5c8b6919914",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "nextPageKey",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "pageSize",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "version",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "active",
                                                            "value": "<boolean>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "811ab2b4-d86d-4e80-a4bf-baa2538dcedd",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "nextPageKey",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "pageSize",
                                                            "value": "<long>"
                                                        },
                                                        {
                                                            "key": "version",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "active",
                                                            "value": "<boolean>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "b5def430-8667-4ad4-99db-f311c72d0ed3",
                                    "name": "Creates new monitoring configuration for the specified extension 2.0",
                                    "request": {
                                        "name": "Creates new monitoring configuration for the specified extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                "monitoringConfigurations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "11a41a39-eb49-4313-a39a-1f7e229d4bb4",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object],[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "[\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -295101\n  },\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -35627066\n  }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "6448ce82-14af-419c-9b24-7305feee4fb0",
                                            "name": "Multi-Status, if not all requests resulted in the same status",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object],[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Multi-Status (WebDAV) (RFC 4918)",
                                            "code": 207,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "[\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -295101\n  },\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -35627066\n  }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "438d604e-b0aa-4b7a-924a-89e230131dd1",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object],[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "78177c17-c268-4139-a6df-f0a0fe7483fc",
                                    "name": "{configuration Id}",
                                    "item": [
                                        {
                                            "id": "4257e516-599c-4c39-a6a6-2f722b093075",
                                            "name": "Gets the details of the specified monitoring configuration",
                                            "request": {
                                                "name": "Gets the details of the specified monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "6286525f-25c5-4162-86ff-ac478b80cf4e",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"objectId\": \"id incididunt amet\",\n  \"scope\": \"sunt labore reprehenderit nulla\",\n  \"value\": {}\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "95725569-f940-4709-91c4-4de34d800a03",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "50c7b4e0-bfb3-4f1a-b9fe-bba40dffc862",
                                            "name": "Updates the specified monitoring configuration",
                                            "request": {
                                                "name": "Updates the specified monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json; charset=utf-8"
                                                    },
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                },
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "a1d131d5-91b9-4fb1-b9f7-872ac5867b70",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "[object Object]",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -26338371\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "760e6ffd-db51-428d-8d7c-c2a8e435806b",
                                                    "name": "Failed. The input is invalid.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "[object Object]",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "d8b4ef76-88f0-403e-9d30-0e0362cebdc7",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "[object Object]",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "4c6ee126-dd08-4097-ba63-29ebe67a4926",
                                            "name": "Deletes the specified monitoring configuration",
                                            "request": {
                                                "name": "Deletes the specified monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "054ce622-f6db-472f-9203-82b842ec2f48",
                                                    "name": "Success. Response doesn't have a body.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                },
                                                {
                                                    "id": "a3a18238-a2c0-495d-91ba-4ee0989472f5",
                                                    "name": "Failed. The input is invalid.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "272c2ae9-7cde-4904-9b35-c1b4e005cc2a",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "9201f7c9-6011-4832-b275-47cf0f7cc9d3",
                                            "name": "Gets the list of the events linked to specific monitoring configuration",
                                            "request": {
                                                "name": "Gets the list of the events linked to specific monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId",
                                                        "events"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "disabled": false,
                                                            "key": "from",
                                                            "value": "<string>",
                                                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "to",
                                                            "value": "<string>",
                                                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "dt.entity.host",
                                                            "value": "<string>",
                                                            "description": "Host that uses this monitoring configuration.\n\nExample: `HOST-ABCDEF0123456789`"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "dt.active_gate.id",
                                                            "value": "<string>",
                                                            "description": "Hexadecimal ID of Active Gate that uses this monitoring configuration.\n\nExample: `0x1a2b3c4d`"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "dt.extension.ds",
                                                            "value": "<string>",
                                                            "description": "Data source that uses this monitoring configuration.\n\nExample: `snmp`"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "content",
                                                            "value": "<string>",
                                                            "description": "Content of the event"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "status",
                                                            "value": "<string>",
                                                            "description": "Status of the event"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "aa34286b-f3de-4635-b1ff-75ee19624652",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId",
                                                                "events"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "from",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "to",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.entity.host",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.active_gate.id",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.extension.ds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "content",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "status",
                                                                    "value": "<string>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"extensionEvents\": [\n    {\n      \"timestamp\": \"velit dolore\",\n      \"severity\": \"est ad\",\n      \"content\": \"eiusmod ipsum\",\n      \"dt.entity.host\": \"dolor cillum Lorem ipsum velit\",\n      \"dt.active_gate.id\": \"consequat minim\",\n      \"dt.extension.ds\": \"minim proident\",\n      \"status\": \"INFO\"\n    },\n    {\n      \"timestamp\": \"dolor consequat ut\",\n      \"severity\": \"aliqua sed sint Ut dese\",\n      \"content\": \"in eu voluptate Except\",\n      \"dt.entity.host\": \"sint sit aliqua voluptate\",\n      \"dt.active_gate.id\": \"Lorem ali\",\n      \"dt.extension.ds\": \"Duis\",\n      \"status\": \"INFO\"\n    }\n  ]\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "0c97a1d2-7f0c-4666-b120-8bf9d440ebe9",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId",
                                                                "events"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "from",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "to",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.entity.host",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.active_gate.id",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "dt.extension.ds",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "content",
                                                                    "value": "<string>"
                                                                },
                                                                {
                                                                    "key": "status",
                                                                    "value": "<string>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "16e61ff6-0e76-44c0-a190-45cb9b82ba75",
                                            "name": "Gets the most recent status of the execution of given monitoring configuration",
                                            "request": {
                                                "name": "Gets the most recent status of the execution of given monitoring configuration",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        "monitoringConfigurations",
                                                        ":configurationId",
                                                        "status"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "configurationId",
                                                            "description": "(Required) The ID of the requested monitoring configuration."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "14a00526-8ce0-45fa-8257-96e522983007",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId",
                                                                "status"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"timestamp\": -24011960,\n  \"status\": \"OK\"\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "2b484aa2-dbbf-47ba-b9cb-7008bc57197c",
                                                    "name": "Failed. The requested resource doesn't exist.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "extensions",
                                                                ":extensionName",
                                                                "monitoringConfigurations",
                                                                ":configurationId",
                                                                "status"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "extensionName",
                                                                    "description": "(Required) The name of the requested extension 2.0."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "configurationId",
                                                                    "description": "(Required) The ID of the requested monitoring configuration."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "8941ab1d-96c9-42bc-b366-e1e0ce19a8aa",
                            "name": "{extension Version}",
                            "item": [
                                {
                                    "id": "93c73a77-3c69-4551-9c2a-677a57990d36",
                                    "name": "Gets details of the specified version of the extension 2.0",
                                    "request": {
                                        "name": "Gets details of the specified version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                ":extensionVersion"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionVersion",
                                                    "description": "(Required) The version of the requested extension 2.0"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "dfeec8f8-8095-4398-8598-38573862a8dd",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "ut"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"extensionName\": \"in do mollit\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"nostrud\"\n  },\n  \"dataSources\": [\n    \"enim aliquip est sunt ipsum\",\n    \"fugiat consequat\"\n  ],\n  \"variables\": [\n    \"Exce\",\n    \"ad nostrud\"\n  ],\n  \"featureSets\": [\n    \"laborum dolor do\",\n    \"cillum Excepteur proident\"\n  ],\n  \"featureSetsDetails\": {\n    \"ullamco6\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"velit_1d\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"ut cupidatat quis\",\n  \"minEECVersion\": \"dolor ad commodo cupidatat est\",\n  \"fileHash\": \"sint elit Ut\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "5b844dbc-bd08-49a4-bded-e788d1da017e",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "ut"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "82401f1b-a6c3-4842-ab14-ee3c298ee9fd",
                                            "name": "Not acceptable",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "ut"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Acceptable",
                                            "code": 406,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "020395c3-0f79-48d7-910d-ca72719df0c5",
                                    "name": "Deletes the specified version of the extension 2.0",
                                    "request": {
                                        "name": "Deletes the specified version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                ":extensionVersion"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionVersion",
                                                    "description": "(Required) The version of the requested extension 2.0"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "6ae4e2a2-75a3-4094-8383-2d26f64e4d5e",
                                            "name": "Success. The extension 2.0 version has been deleted.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"extensionName\": \"nostrud enim et magna aute\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"aliquip nisi proident esse\"\n  },\n  \"dataSources\": [\n    \"commodo laboris in\",\n    \"nulla elit eu\"\n  ],\n  \"variables\": [\n    \"aliqua anim magna ullamco in\",\n    \"veniam labore sit\"\n  ],\n  \"featureSets\": [\n    \"Lorem sint quis ullamco nulla\",\n    \"veniam ullamco dolore\"\n  ],\n  \"featureSetsDetails\": {\n    \"sit_e\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"dolore06\": {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"fugiat ad Excepteur\",\n  \"minEECVersion\": \"sit reprehenderit sunt\",\n  \"fileHash\": \"sunt Ut nulla culpa\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "b5673178-bc9d-4772-9b50-984426619721",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "5e6a14ac-3bd7-4161-9007-541bfc58c867",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "52a8ce40-31f7-4bc1-88c1-bf937a6ef0aa",
                                    "name": "Gets the configuration schema of the specified version of the extension 2.0",
                                    "request": {
                                        "name": "Gets the configuration schema of the specified version of the extension 2.0",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                ":extensionName",
                                                ":extensionVersion",
                                                "schema"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) The name of the requested extension 2.0."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionVersion",
                                                    "description": "(Required) The version of the requested extension 2.0"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "f7bda03d-769c-47c2-a2de-cbcf5406d35f",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion",
                                                        "schema"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"allowedScopes\": [\n    \"host\",\n    \"application\"\n  ],\n  \"description\": \"Dynatrace disables monitoring of containers that do not run any applications\",\n  \"displayName\": \"Built-in container monitoring rules\",\n  \"dynatrace\": \"1\",\n  \"enums\": {\n    \"exercitation_c\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"enum\",\n      \"enumClass\": \"enumClass\",\n      \"displayName\": \"typeDisplayName\"\n    },\n    \"quis_27\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"enum\",\n      \"enumClass\": \"enumClass\",\n      \"displayName\": \"typeDisplayName\"\n    }\n  },\n  \"maxObjects\": 10,\n  \"multiObject\": false,\n  \"properties\": {\n    \"esse9\": {\n      \"maxObjects\": -41271835,\n      \"nullable\": true,\n      \"type\": {},\n      \"referencedType\": \"propertyReferencedType\",\n      \"documentation\": \"propertyDocumentation\",\n      \"uiCustomization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"datasource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"precondition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minObjects\": 1,\n      \"modificationPolicy\": \"ALWAYS\",\n      \"items\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"propertyDisplayName\",\n      \"default\": {},\n      \"description\": \"propertyDescription\",\n      \"metadata\": {\n        \"consequat05e\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"laborumb\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"incididunt_fb\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"subType\": \"propertySubType\"\n    },\n    \"doloredfd\": {\n      \"maxObjects\": 55523726,\n      \"nullable\": true,\n      \"type\": {},\n      \"referencedType\": \"propertyReferencedType\",\n      \"documentation\": \"propertyDocumentation\",\n      \"uiCustomization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"datasource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"precondition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minObjects\": 1,\n      \"modificationPolicy\": \"ALWAYS\",\n      \"items\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"propertyDisplayName\",\n      \"default\": {},\n      \"description\": \"propertyDescription\",\n      \"metadata\": {\n        \"adipisicing5\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"subType\": \"propertySubType\"\n    }\n  },\n  \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n  \"types\": {\n    \"consequatdc\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"properties\": {\n        \"exercitation279\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ullamcoa45\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sunt_39\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ut_e87\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"summaryPattern\": \"summaryPatternOfType\",\n      \"version\": \"0\",\n      \"searchPattern\": \"searchPatternOfType\",\n      \"versionInfo\": \"Added new property\",\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"typeDisplayName\"\n    },\n    \"nulla_d\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"properties\": {\n        \"none3\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"summaryPattern\": \"summaryPatternOfType\",\n      \"version\": \"0\",\n      \"searchPattern\": \"searchPatternOfType\",\n      \"versionInfo\": \"Added new property\",\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"typeDisplayName\"\n    },\n    \"sunt4\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"properties\": {\n        \"fugiat_11\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"voluptate43\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"summaryPattern\": \"summaryPatternOfType\",\n      \"version\": \"0\",\n      \"searchPattern\": \"searchPatternOfType\",\n      \"versionInfo\": \"Added new property\",\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"typeDisplayName\"\n    },\n    \"dolor048\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"properties\": {\n        \"ullamco3d\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eiusmod2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"summaryPattern\": \"summaryPatternOfType\",\n      \"version\": \"0\",\n      \"searchPattern\": \"searchPatternOfType\",\n      \"versionInfo\": \"Added new property\",\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"typeDisplayName\"\n    }\n  },\n  \"version\": \"1.4.2\",\n  \"documentation\": \"velit nostrud cupidata\",\n  \"schemaGroups\": [\n    \"group:some.1\",\n    \"group:some.2\"\n  ],\n  \"ordered\": true,\n  \"constraints\": [\n    {\n      \"type\": \"PROPERTY_COUNT_RANGE\",\n      \"customMessage\": \"ipsum do commodo\",\n      \"customValidatorId\": \"my-min-max\",\n      \"minimumPropertyCount\": 1,\n      \"maximumPropertyCount\": 2,\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"LESS_THAN\",\n      \"customMessage\": \"mollit\",\n      \"customValidatorId\": \"my-min-max\",\n      \"minimumPropertyCount\": 1,\n      \"maximumPropertyCount\": 2,\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"ea_a4\": \"dolor veniam\",\n    \"non_3\": \"adipisicing mollit\"\n  },\n  \"uiCustomization\": {\n    \"tabs\": {\n      \"groups\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"expandable\": {\n      \"expanded\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sections\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"callback\": {\n      \"buttons\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"table\": {\n      \"emptyState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"columns\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"deletionConstraints\": [\n    {\n      \"customMessage\": \"labore ut\",\n      \"customValidatorId\": \"my-min-max\"\n    },\n    {\n      \"customMessage\": \"dolore\",\n      \"customValidatorId\": \"my-min-max\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "c6dc7ec3-6127-4190-bc5f-d7dc8bb436af",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        ":extensionName",
                                                        ":extensionVersion",
                                                        "schema"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) The name of the requested extension 2.0."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionVersion",
                                                            "description": "(Required) The version of the requested extension 2.0"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "9acd7906-266b-4a51-be18-61b49d319e98",
                    "name": "schemas",
                    "item": [
                        {
                            "id": "d6c5a516-8cd3-4f60-ae03-fe3729ee04ca",
                            "name": "Lists all the extension 2.0 schemas versions available in your environment",
                            "request": {
                                "name": "Lists all the extension 2.0 schemas versions available in your environment",
                                "description": {},
                                "url": {
                                    "path": [
                                        "extensions",
                                        "schemas"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "a2ac49ef-fa1a-4769-a4fb-e06244537b4a",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "extensions",
                                                "schemas"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"versions\": [\n    \"1.2.3\",\n    \"1.2.3\"\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "2a179957-3483-45c1-ad07-ec7363fbe592",
                            "name": "{schema Version}",
                            "item": [
                                {
                                    "id": "1e67fdf2-512e-48c8-b545-b60d0c1dfc69",
                                    "name": "Lists all the files available for the specified extension 2.0 schema version",
                                    "request": {
                                        "name": "Lists all the files available for the specified extension 2.0 schema version",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                "schemas",
                                                ":schemaVersion"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaVersion",
                                                    "description": "(Required) The version of the schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "3d201d59-d4cb-4b09-b1a9-98c8995ab23f",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "ut"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"files\": [\n    \"dolore aliqua voluptate\",\n    \"ut in\"\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "f3d21bb6-8f25-476c-bda1-3b1fb6f6a162",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "ut"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "7c69b1f1-6708-4c2f-9247-64f3e0d14a76",
                                            "name": "Not acceptable",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    },
                                                    {
                                                        "disabled": false,
                                                        "description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
                                                        "key": "Accept",
                                                        "value": "ut"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Acceptable",
                                            "code": 406,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "cdd28721-269a-4650-9d15-f8b6509152ff",
                                    "name": "Gets the extension 2.0 schema file in the specified version",
                                    "request": {
                                        "name": "Gets the extension 2.0 schema file in the specified version",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "extensions",
                                                "schemas",
                                                ":schemaVersion",
                                                ":fileName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaVersion",
                                                    "description": "(Required) The version of the schema."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "fileName",
                                                    "description": "(Required) The name of the schema file."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "6aa8172a-b0c4-40a1-ab20-e3d76a13dcdd",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion",
                                                        ":fileName"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "fileName",
                                                            "description": "(Required) The name of the schema file."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "\"<object>\"",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "70b087d7-6c40-419a-a8ac-1b7a35991f6c",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "extensions",
                                                        "schemas",
                                                        ":schemaVersion",
                                                        ":fileName"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "schemaVersion",
                                                            "description": "(Required) The version of the schema."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "fileName",
                                                            "description": "(Required) The name of the schema file."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "a6963fdf-c66c-4b39-9bf7-d603af1196ab",
            "name": "problems",
            "item": [
                {
                    "id": "91597bc9-0aa3-40e2-8699-9eddb2984f2d",
                    "name": "Lists problems observed within the specified timeframe",
                    "request": {
                        "name": "Lists problems observed within the specified timeframe",
                        "description": {},
                        "url": {
                            "path": [
                                "problems"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).\n\n The field is valid only for the current page of results. You must set it for each page you're requesting."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "problemSelector",
                                    "value": "<string>",
                                    "description": "Defines the scope of the query. Only problems matching the specified criteria are included into response. \n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies. All values must be quoted. \n* Status: `status(\"open\")` or `status(\"closed\")`. You can specify only one status. \n* Severity level: `severityLevel(\"level-1\",\"level-2\")`. Find the possible values in the description of the **severityLevel** field of the response.\n* Impact level: `impactLevel(\"level-11\",\"level-2\")` Find the possible values in the description of the **impactLevel** field of the response.\n* Root cause entity: `rootCauseEntity(\"id-1\", \"id-2\")`. \n* Management zone ID: `managementZoneIds(\"mZId-1\", \"mzId-2\")`. \n* Management zone name: `managementZones(\"value-1\",\"value-2\")`. \n* Impacted entities: `impactedEntities(\"id-1\", \"id-2\")`. \n* Affected entities: `affectedEntities(\"id-1\", \"id-2\")`. \n* Type of affected entities: `affectedEntityTypes(\"value-1\",\"value-2\")`. \n* Problem ID: `problemId(\"id-1\", \"id-2\")`. \n* Alerting profile ID: `problemFilterIds(\"id-1\", \"id-2\")`. \n* Alerting profile name (contains, case-insensitive): `problemFilterNames(\"value-1\",\"value-2\")`. \n* Alerting profile name (exact match, case-insensitive): `problemFilterNames.equals(\"value-1\",\"value-2\")`. \n* Entity tags: `entityTags(\"[context]key:value\",\"key:value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value tag`. All tag values are case-sensitive.\n* Display ID of the problem: `displayId(\"id-1\", \"id-2\")`. \n* Under maintenance: `underMaintenance(true|false)`. Shows (true) or hides (false) all problems created during maintenance mode.\n* Text search: `text(\"value\")`. Text search on the following fields: problem title, event titles, displayId and the id of affected and impacted entities. The text search is case insensitive, partial matching and based on a relevance score. Therefore the `relevance` sort option should be used to get the most relevant problems first. The special characters `~` and `\"` need to be escaped using a `~` (e.g. double quote search `text(\"~\"\")`). The search value is limited to 30 characters.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response. \n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "entitySelector",
                                    "value": "<string>",
                                    "description": "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\nThe maximum number of entities that may be selected is limited to 10000.\n\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "<string>",
                                    "description": "Specifies a set of comma-separated (`,`) fields for sorting in the problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n * `status`: problem status (`+` open problems first or `-` closed problems first)\n * `startTime`: problem start time (`+` old problems first or `-` new problems first) \n * `relevance`: problem relevance (`+` least relevant problems first or `-` most relevant problems first) - can be used only in combination with text search \n\nIf no prefix is set, `+` is used. \n\nYou can specify several levels of sorting. For example, `+status,-startTime` sorts problems by status, open problems first. Within the status, problems are sorted by start time, oldest first."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2d22f993-8b59-4e50-8167-f47a38782d92",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "problems"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "problemSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entitySelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"problems\": [\n    {\n      \"affectedEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayId\": \"dolore reprehenderit\",\n      \"endTime\": -69439120,\n      \"impactLevel\": \"SERVICES\",\n      \"impactedEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"problemFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"problemId\": \"magna aliquip \",\n      \"severityLevel\": \"MONITORING_UNAVAILABLE\",\n      \"startTime\": 97362135,\n      \"status\": \"OPEN\",\n      \"title\": \"occaecat sunt est voluptate\",\n      \"entityTags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"linkedProblemInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rootCauseEntity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"evidenceDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recentComments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"impactAnalysis\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"affectedEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayId\": \"in deserunt Du\",\n      \"endTime\": -83998027,\n      \"impactLevel\": \"INFRASTRUCTURE\",\n      \"impactedEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"problemFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"problemId\": \"adipisicing eu magna\",\n      \"severityLevel\": \"RESOURCE_CONTENTION\",\n      \"startTime\": -35561,\n      \"status\": \"OPEN\",\n      \"title\": \"proident veni\",\n      \"entityTags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"linkedProblemInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rootCauseEntity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"evidenceDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recentComments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"impactAnalysis\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"totalCount\": 86048855,\n  \"pageSize\": -1572648,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"warnings\": [\n    \"aliquip officia sin\",\n    \"consequat enim\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8042949c-bc5c-4621-a290-a5f9f6ca0a6d",
                    "name": "{problem Id}",
                    "item": [
                        {
                            "id": "32710855-d764-4cbb-8302-a4ee92381fa8",
                            "name": "Gets the properties of the specified problem",
                            "request": {
                                "name": "Gets the properties of the specified problem",
                                "description": {},
                                "url": {
                                    "path": [
                                        "problems",
                                        ":problemId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "fields",
                                            "value": "<string>",
                                            "description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`)."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "problemId",
                                            "description": "(Required) The ID of the required problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "31736283-e836-45f7-9508-e7d442298cb7",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "fields",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"affectedEntities\": [\n    {\n      \"entityId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"aliquip \"\n    },\n    {\n      \"entityId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"dolore aliqua veniam\"\n    }\n  ],\n  \"displayId\": \"sed fugiat est ex\",\n  \"endTime\": -2313892,\n  \"impactLevel\": \"INFRASTRUCTURE\",\n  \"impactedEntities\": [\n    {\n      \"entityId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"adipisicing labore tempor anim\"\n    },\n    {\n      \"entityId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"dolore quis voluptate\"\n    }\n  ],\n  \"managementZones\": [\n    {\n      \"name\": \"consequat anim nostrud\",\n      \"id\": \"irure aliqua enim est elit\"\n    },\n    {\n      \"name\": \"ad dolore cillum eiusmod\",\n      \"id\": \"do mollit Ut et\"\n    }\n  ],\n  \"problemFilters\": [\n    {\n      \"id\": \"sed exercitation in\",\n      \"name\": \"dolor adipisicing dolore reprehend\"\n    },\n    {\n      \"id\": \"velit sed\",\n      \"name\": \"eu aute labore\"\n    }\n  ],\n  \"problemId\": \"cillum culpa velit\",\n  \"severityLevel\": \"PERFORMANCE\",\n  \"startTime\": -51817574,\n  \"status\": \"CLOSED\",\n  \"title\": \"reprehenderit dolor ut\",\n  \"entityTags\": [\n    {\n      \"stringRepresentation\": \"voluptate laboris et pariatur\",\n      \"value\": \"in consequat ad fugiat irure\",\n      \"key\": \"ad reprehenderit\",\n      \"context\": \"velit amet qu\"\n    },\n    {\n      \"stringRepresentation\": \"enim nostrud minim Duis\",\n      \"value\": \"dolore cillum id Excepteur\",\n      \"key\": \"aliqua moll\",\n      \"context\": \"in\"\n    }\n  ],\n  \"linkedProblemInfo\": {\n    \"displayId\": \"est dolor ea labore nulla\",\n    \"problemId\": \"consectetur eu enim incididunt\"\n  },\n  \"rootCauseEntity\": {\n    \"entityId\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"name\": \"fugiat consequat non veniam\"\n  },\n  \"evidenceDetails\": {\n    \"details\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"totalCount\": 50017484\n  },\n  \"recentComments\": {\n    \"comments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"totalCount\": 79796730,\n    \"pageSize\": -3907452,\n    \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n  },\n  \"impactAnalysis\": {\n    \"impacts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "0b14df91-4256-4540-ac48-1b22808890d2",
                            "name": "Closes the specified problem and adds a closing comment on it",
                            "request": {
                                "name": "Closes the specified problem and adds a closing comment on it",
                                "description": {},
                                "url": {
                                    "path": [
                                        "problems",
                                        ":problemId",
                                        "close"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "problemId",
                                            "description": "(Required) The ID of the required problem."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "d394f73e-56d4-4127-bf4d-75cdefac4ae3",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId",
                                                "close"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"closeTimestamp\": -87500894,\n  \"closing\": false,\n  \"problemId\": \"quis officia\",\n  \"comment\": {\n    \"createdAtTimestamp\": -47507067,\n    \"authorName\": \"et nisi dolore\",\n    \"context\": \"culpa \",\n    \"id\": \"reprehenderit officia deserunt anim\",\n    \"content\": \"quis\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "43239a77-a68f-4254-b9cb-f07388f727dd",
                                    "name": "The problem is closed already the request hasn't been executed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId",
                                                "close"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "01695b8f-949d-4dd8-8b5c-53e735a92cb8",
                            "name": "comments",
                            "item": [
                                {
                                    "id": "84306e4e-516b-4b0a-be2d-c74936ce00ce",
                                    "name": "Gets all comments on the specified problem",
                                    "request": {
                                        "name": "Gets all comments on the specified problem",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId",
                                                "comments"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "nextPageKey",
                                                    "value": "<string>",
                                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "pageSize",
                                                    "value": "<long>",
                                                    "description": "The amount of comments in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 10 is used."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "0e933b6a-20b6-43be-9b42-d7d64ae37012",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "nextPageKey",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "pageSize",
                                                            "value": "<long>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"comments\": [\n    {\n      \"createdAtTimestamp\": -4628478,\n      \"authorName\": \"proident quis\",\n      \"context\": \"cupidatat id\",\n      \"id\": \"anim veniam labore incididunt\",\n      \"content\": \"nisi consequat id\"\n    },\n    {\n      \"createdAtTimestamp\": 50888623,\n      \"authorName\": \"aliquip Lorem\",\n      \"context\": \"exercitation aute\",\n      \"id\": \"eu ullamco\",\n      \"content\": \"dolore\"\n    }\n  ],\n  \"totalCount\": 92311050,\n  \"pageSize\": 75348436,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "ddb62c35-3583-4d01-9dda-d32ca8106047",
                                    "name": "Adds a new comment on the specified problem",
                                    "request": {
                                        "name": "Adds a new comment on the specified problem",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "problems",
                                                ":problemId",
                                                "comments"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "problemId",
                                                    "description": "(Required) The ID of the required problem."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "e67a28bd-80e3-4b27-b0ec-b8275badac3f",
                                            "name": "Success. The comment has been added.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Created",
                                            "code": 201,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "d0d710f0-365b-41b2-874f-654fed45df7b",
                                    "name": "{comment Id}",
                                    "item": [
                                        {
                                            "id": "855b84be-446a-4a41-9ea8-59ca56924ee9",
                                            "name": "Gets the specified comment on a problem",
                                            "request": {
                                                "name": "Gets the specified comment on a problem",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments",
                                                        ":commentId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "commentId",
                                                            "description": "(Required) The ID of the required comment."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "cecfec57-9d10-470a-97b0-cff99d90a2c5",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "problems",
                                                                ":problemId",
                                                                "comments",
                                                                ":commentId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "problemId",
                                                                    "description": "(Required) The ID of the required problem."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "commentId",
                                                                    "description": "(Required) The ID of the required comment."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"createdAtTimestamp\": -62244018,\n  \"authorName\": \"dolor minim do quis\",\n  \"context\": \"tempor commodo\",\n  \"id\": \"mo\",\n  \"content\": \"reprehenderit in\"\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "b12e8f57-0f80-4302-9edf-9e18f41b45e9",
                                            "name": "Updates the specified comment on a problem",
                                            "request": {
                                                "name": "Updates the specified comment on a problem",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments",
                                                        ":commentId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "commentId",
                                                            "description": "(Required) The ID of the required comment."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                },
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "5ef22aa0-c658-4f18-a841-09d9cdffca81",
                                                    "name": "Success. The comment has been updated.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "problems",
                                                                ":problemId",
                                                                "comments",
                                                                ":commentId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "problemId",
                                                                    "description": "(Required) The ID of the required problem."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "commentId",
                                                                    "description": "(Required) The ID of the required comment."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "[object Object]",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "70e4620e-6131-4b53-86eb-cf184107651e",
                                            "name": "Deletes the specified comment from a problem",
                                            "request": {
                                                "name": "Deletes the specified comment from a problem",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "problems",
                                                        ":problemId",
                                                        "comments",
                                                        ":commentId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "problemId",
                                                            "description": "(Required) The ID of the required problem."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "commentId",
                                                            "description": "(Required) The ID of the required comment."
                                                        }
                                                    ]
                                                },
                                                "method": "DELETE",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "c0da2cab-dae0-44d7-aebc-f656580c6ede",
                                                    "name": "Success. The comment has been deleted.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "problems",
                                                                ":problemId",
                                                                "comments",
                                                                ":commentId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "problemId",
                                                                    "description": "(Required) The ID of the required problem."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "commentId",
                                                                    "description": "(Required) The ID of the required comment."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "Api-Token {{DT_TOKEN}}"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "9924c1ac-f7ac-40e3-a151-a16369dc0a42",
            "name": "hub",
            "item": [
                {
                    "id": "18e14fb9-b81a-47e1-a5ca-f84976b333f7",
                    "name": "Retrieves the image associated with the given url.\nCan only obtain images used in hub items.",
                    "request": {
                        "name": "Retrieves the image associated with the given url.\nCan only obtain images used in hub items.",
                        "description": {},
                        "url": {
                            "path": [
                                "hub",
                                "assets",
                                "images",
                                ":encodedUrl"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "encodedUrl",
                                    "description": "(Required) "
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "135a3fd3-3bd6-4c60-8ee3-cb36e3b4b6b7",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "assets",
                                        "images",
                                        ":encodedUrl"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "encodedUrl",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "2423fb4b-14d5-454e-a42a-cb38d05ce8c7",
                            "name": "Not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "assets",
                                        "images",
                                        ":encodedUrl"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "encodedUrl",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "cc8a17d5-f58d-49f7-861b-12689523a426",
                    "name": "Lists all the available category groupings of items",
                    "request": {
                        "name": "Lists all the available category groupings of items",
                        "description": {},
                        "url": {
                            "path": [
                                "hub",
                                "categories"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "c113b7a4-9bdc-4b4e-9c33-55c895aa3978",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "categories"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"items\": [\n    {\n      \"id\": \"magna Ut fugiat\",\n      \"name\": \"ut in quis\",\n      \"description\": \"nulla sint\"\n    },\n    {\n      \"id\": \"sint magna ad\",\n      \"name\": \"nisi nulla aliqua\",\n      \"description\": \"pariatur nisi est\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "280f5aa6-7c48-4582-8be5-9eda6066d716",
                            "name": "Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "categories"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "53e2d5ad-52a5-435f-828a-295d2811d519",
                    "name": "extensions2/{extension Name}",
                    "item": [
                        {
                            "id": "aca0b2db-012b-485f-bff6-892b618bc040",
                            "name": "The details of the given extension",
                            "request": {
                                "name": "The details of the given extension",
                                "description": {},
                                "url": {
                                    "path": [
                                        "hub",
                                        "extensions2",
                                        ":extensionName"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionName",
                                            "description": "(Required) Fully qualified name of the extension"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "7c2417bf-f768-4903-ab97-8853a8c1cb31",
                                    "name": "OK",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions2",
                                                ":extensionName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) Fully qualified name of the extension"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"type\": \"TECHNOLOGY\",\n  \"itemId\": \"esse laboris ut occaecat\",\n  \"name\": \"aliqua\",\n  \"description\": \"mollit ullamco cupidatat\",\n  \"tags\": [\n    \"dolor pariatur ad voluptate nisi\",\n    \"elit\"\n  ],\n  \"authorName\": \"in\",\n  \"authorLogo\": \"consectetur commodo anim nostrud\",\n  \"clusterCompatible\": true,\n  \"clusterMinVersion\": -25198811,\n  \"clusterMaxVersion\": 19208870,\n  \"notCompatibleReason\": \"anim au\",\n  \"descriptionBlocks\": [\n    {\n      \"type\": \"GALLERY\",\n      \"title\": \"ex deserunt voluptate a\",\n      \"source\": \"labore su\",\n      \"images\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceId\": \"tempor adipisic\"\n    },\n    {\n      \"type\": \"GALLERY\",\n      \"title\": \"est ut sunt laboris\",\n      \"source\": \"ad minim ullamco eu\",\n      \"images\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceId\": \"sed et cupidatat anim\"\n    }\n  ],\n  \"documentationLink\": \"cupidatat dolore aliquip d\",\n  \"marketingLink\": \"anim ullamco\",\n  \"technologyDetails\": {\n    \"activationLink\": \"ullamco anim\"\n  },\n  \"extension1Details\": {\n    \"releases\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"extension2Details\": {\n    \"recommendedCatalogVersion\": \"est re\",\n    \"extensionName\": \"eu minim\",\n    \"releases\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"logo\": \"qui\",\n  \"relatedItems\": [\n    {\n      \"type\": \"EXTENSION1\",\n      \"id\": \"t\",\n      \"name\": \"eiusmod Excepteur\",\n      \"description\": \"minim dolor exercitation\",\n      \"iconUrl\": \"anim Ut sunt\",\n      \"externalLink\": \"minim Lorem non tempor\",\n      \"hasClusterLink\": false\n    },\n    {\n      \"type\": \"TECHNOLOGY\",\n      \"id\": \"r\",\n      \"name\": \"culpa officia\",\n      \"description\": \"nisi in ipsum nostrud\",\n      \"iconUrl\": \"co\",\n      \"externalLink\": \"sunt minim \",\n      \"hasClusterLink\": true\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "04ecf578-ae16-446e-b3ab-2aff47c485a3",
                                    "name": "Bad request",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions2",
                                                ":extensionName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) Fully qualified name of the extension"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "14bc38c9-79f1-4b4d-bba8-993cd9d7abdc",
                                    "name": "Not found",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions2",
                                                ":extensionName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) Fully qualified name of the extension"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "8274324b-bfcd-4f5a-a030-ea0dbc17fcc9",
                                    "name": "Unavailable",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions2",
                                                ":extensionName"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) Fully qualified name of the extension"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "011bf15e-cbaf-433f-a3ba-81f4e0ed33b5",
                            "name": "actions",
                            "item": [
                                {
                                    "id": "f436625e-cd3f-43e0-af04-78630286ce48",
                                    "name": "Registers the given extension version in the environment (using the recommended version if no other release is registered)",
                                    "request": {
                                        "name": "Registers the given extension version in the environment (using the recommended version if no other release is registered)",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions2",
                                                ":extensionName",
                                                "actions",
                                                "addToEnvironment"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "extensionVersion",
                                                    "value": "<string>",
                                                    "description": "Version of the extension. Fallback to the evaluated recommended version when the version is not provided"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) Fully qualified name of the extension"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "8a8fd93a-2bb3-4662-8b91-881f313c5d9c",
                                            "name": "OK",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "hub",
                                                        "extensions2",
                                                        ":extensionName",
                                                        "actions",
                                                        "addToEnvironment"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "extensionVersion",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) Fully qualified name of the extension"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"extensionVersion\": \"ad Lorem id est\",\n  \"extensionName\": \"ea ex velit pariatur\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "4d4f023f-7901-478b-845b-6f195cc06425",
                                            "name": "Bad request",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "hub",
                                                        "extensions2",
                                                        ":extensionName",
                                                        "actions",
                                                        "addToEnvironment"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "extensionVersion",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) Fully qualified name of the extension"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "0ed7c5b2-9a79-4b7c-ab99-8ba88aefb1f0",
                                            "name": "Not found",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "hub",
                                                        "extensions2",
                                                        ":extensionName",
                                                        "actions",
                                                        "addToEnvironment"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "extensionVersion",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) Fully qualified name of the extension"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "9eb110cc-815c-46a0-b7bb-799d8e4e0d94",
                                            "name": "Unavailable",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "hub",
                                                        "extensions2",
                                                        ":extensionName",
                                                        "actions",
                                                        "addToEnvironment"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "extensionVersion",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) Fully qualified name of the extension"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "5bd7fc37-7978-426c-86c2-3ca42813c51c",
                                    "name": "Updates the given extension to the latest compatible published version",
                                    "request": {
                                        "name": "Updates the given extension to the latest compatible published version",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions2",
                                                ":extensionName",
                                                "actions",
                                                "update"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "extensionVersion",
                                                    "value": "<string>",
                                                    "description": "Version of the extension. Fallback to the evaluated recommended version when the version is not provided"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) Fully qualified name of the extension"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "322eb546-38fc-4e2b-8f68-6d93511a7c3b",
                                            "name": "OK",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "hub",
                                                        "extensions2",
                                                        ":extensionName",
                                                        "actions",
                                                        "update"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "extensionVersion",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) Fully qualified name of the extension"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"extensionVersion\": \"ad Lorem id est\",\n  \"extensionName\": \"ea ex velit pariatur\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "62c2dc8d-496c-4631-b2ca-a080f2321994",
                                            "name": "Bad request",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "hub",
                                                        "extensions2",
                                                        ":extensionName",
                                                        "actions",
                                                        "update"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "extensionVersion",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) Fully qualified name of the extension"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "54560e36-71c4-4f44-a0ed-ee94dd3acd6d",
                                            "name": "Not found",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "hub",
                                                        "extensions2",
                                                        ":extensionName",
                                                        "actions",
                                                        "update"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "extensionVersion",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) Fully qualified name of the extension"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "f6e581d2-f06c-44f0-9277-2ffc109fa085",
                                            "name": "Unavailable",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "hub",
                                                        "extensions2",
                                                        ":extensionName",
                                                        "actions",
                                                        "update"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "extensionVersion",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "extensionName",
                                                            "description": "(Required) Fully qualified name of the extension"
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Service Unavailable",
                                            "code": 503,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "8af87006-2934-471b-a9db-be6a28bf5004",
                            "name": "Sets or updates the release notes of the specified extension release",
                            "request": {
                                "name": "Sets or updates the release notes of the specified extension release",
                                "description": {},
                                "url": {
                                    "path": [
                                        "hub",
                                        "extensions2",
                                        ":extensionName",
                                        "releases",
                                        ":version",
                                        "releaseNotes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionName",
                                            "description": "(Required) Fully qualified name of the extension"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "version",
                                            "description": "(Required) Version of the extension release"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "7c8eb852-86b0-4173-9ba3-051005bdb676",
                                    "name": "Extension release notes updated",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions2",
                                                ":extensionName",
                                                "releases",
                                                ":version",
                                                "releaseNotes"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) Fully qualified name of the extension"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "version",
                                                    "description": "(Required) Version of the extension release"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "57ca5b79-5a32-4cd8-8c22-68e6d448210b",
                                    "name": "Bad request",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions2",
                                                ":extensionName",
                                                "releases",
                                                ":version",
                                                "releaseNotes"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) Fully qualified name of the extension"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "version",
                                                    "description": "(Required) Version of the extension release"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "7140c79c-ee70-46fa-8a6d-4e6d86df19ed",
                                    "name": "Not found",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions2",
                                                ":extensionName",
                                                "releases",
                                                ":version",
                                                "releaseNotes"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) Fully qualified name of the extension"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "version",
                                                    "description": "(Required) Version of the extension release"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "e4526337-ef70-4811-bac3-43c01b2b6728",
                                    "name": "Unavailable",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions2",
                                                ":extensionName",
                                                "releases",
                                                ":version",
                                                "releaseNotes"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) Fully qualified name of the extension"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "version",
                                                    "description": "(Required) Version of the extension release"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "f5b158f1-964f-4748-a39d-1b9c3d69fd1b",
                            "name": "Create/Replace metadata for an extension that does not have Dynatrace distributed metadata.",
                            "request": {
                                "name": "Create/Replace metadata for an extension that does not have Dynatrace distributed metadata.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "hub",
                                        "extensions2",
                                        ":extensionName",
                                        "metadata"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extensionName",
                                            "description": "(Required) Fully qualified name of the extension"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "logo",
                                            "type": "file",
                                            "description": "Logo of the extension"
                                        },
                                        {
                                            "key": "name",
                                            "value": "<string>",
                                            "type": "text",
                                            "description": "If left empty or blank, the extension name will be used as name"
                                        },
                                        {
                                            "key": "description",
                                            "value": "<string>",
                                            "type": "text",
                                            "description": ""
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "215d20d6-1227-4fb8-8193-8bea96be8b18",
                                    "name": "Extension metadata uploaded",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions2",
                                                ":extensionName",
                                                "metadata"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extensionName",
                                                    "description": "(Required) Fully qualified name of the extension"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "formdata",
                                            "formdata": [
                                                {
                                                    "description": {
                                                        "content": "Logo of the extension",
                                                        "type": "text/plain"
                                                    },
                                                    "key": "logo",
                                                    "value": "<binary>",
                                                    "type": "text"
                                                },
                                                {
                                                    "description": {
                                                        "content": "If left empty or blank, the extension name will be used as name",
                                                        "type": "text/plain"
                                                    },
                                                    "key": "name",
                                                    "value": "<string>",
                                                    "type": "text"
                                                },
                                                {
                                                    "description": {
                                                        "content": "",
                                                        "type": "text/plain"
                                                    },
                                                    "key": "description",
                                                    "value": "<string>",
                                                    "type": "text"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "15cea3d8-8437-4126-b259-2415d26917f4",
                    "name": "extensions1/{extension1FQN}",
                    "item": [
                        {
                            "id": "d5597a3e-57cd-4bad-82af-a87452026501",
                            "name": "The details of the given extension version 1",
                            "request": {
                                "name": "The details of the given extension version 1",
                                "description": {},
                                "url": {
                                    "path": [
                                        "hub",
                                        "extensions1",
                                        ":extension1FQN"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extension1FQN",
                                            "description": "(Required) Fully qualified name of the extension1/plugin"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "942a2ea3-70cd-42ef-86d9-fe7462c61f05",
                                    "name": "OK",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions1",
                                                ":extension1FQN"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extension1FQN",
                                                    "description": "(Required) Fully qualified name of the extension1/plugin"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"type\": \"EXTENSION1\",\n  \"itemId\": \"in cillum\",\n  \"name\": \"sunt id anim\",\n  \"description\": \"officia minim in\",\n  \"tags\": [\n    \"voluptate tempor\",\n    \"consectetur exercitation sed dolore dolor\"\n  ],\n  \"authorName\": \"Excepteur quis sit\",\n  \"authorLogo\": \"minim qui\",\n  \"clusterCompatible\": false,\n  \"clusterMinVersion\": -36198036,\n  \"clusterMaxVersion\": 51890000,\n  \"notCompatibleReason\": \"veniam dolore\",\n  \"descriptionBlocks\": [\n    {\n      \"type\": \"GALLERY\",\n      \"title\": \"eiusmod conse\",\n      \"source\": \"ex dolor\",\n      \"images\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceId\": \"nisi ullamco dolore\"\n    },\n    {\n      \"type\": \"MARKDOWN\",\n      \"title\": \"sit of\",\n      \"source\": \"ut aute Ut Duis\",\n      \"images\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceId\": \"magna eu ipsum\"\n    }\n  ],\n  \"documentationLink\": \"commodo\",\n  \"marketingLink\": \"incididunt voluptate nostrud commodo\",\n  \"technologyDetails\": {\n    \"activationLink\": \"ex veniam\"\n  },\n  \"extension1Details\": {\n    \"releases\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"extension2Details\": {\n    \"recommendedCatalogVersion\": \"repreh\",\n    \"extensionName\": \"irure nisi dolor\",\n    \"releases\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"logo\": \"consectetur nulla\",\n  \"relatedItems\": [\n    {\n      \"type\": \"TECHNOLOGY\",\n      \"id\": \"et incididunt\",\n      \"name\": \"eiusmod deserun\",\n      \"description\": \"aliqua eiusmod ipsum\",\n      \"iconUrl\": \"veniam cillum\",\n      \"externalLink\": \"quis enim in dolore\",\n      \"hasClusterLink\": false\n    },\n    {\n      \"type\": \"EXTENSION1\",\n      \"id\": \"Lorem aliquip deserunt tempor\",\n      \"name\": \"esse veniam exercitation ut occaecat\",\n      \"description\": \"nisi dolore Excepteur magna irure\",\n      \"iconUrl\": \"deserunt exercitation fugiat magna\",\n      \"externalLink\": \"eu\",\n      \"hasClusterLink\": false\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "115e138d-db26-4b82-9c83-de5a1c524666",
                                    "name": "Not found",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions1",
                                                ":extension1FQN"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extension1FQN",
                                                    "description": "(Required) Fully qualified name of the extension1/plugin"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "9d28bb36-2740-4a7a-882d-3099de42a652",
                                    "name": "Unavailable",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions1",
                                                ":extension1FQN"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extension1FQN",
                                                    "description": "(Required) Fully qualified name of the extension1/plugin"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "5a1b3fbc-fdcc-43e4-94b0-3fc8fd811f43",
                            "name": "Artifact of the given version of an item",
                            "request": {
                                "name": "Artifact of the given version of an item",
                                "description": {},
                                "url": {
                                    "path": [
                                        "hub",
                                        "extensions1",
                                        ":extension1FQN",
                                        "releases",
                                        ":version"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "extension1FQN",
                                            "description": "(Required) Fully qualified name of the extension1/plugin"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "version",
                                            "description": "(Required) Version of the release of the extension1/plugin"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/zip"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "d26a2b71-acd2-4aaf-8f12-65a19649f45d",
                                    "name": "Ok - download file",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions1",
                                                ":extension1FQN",
                                                "releases",
                                                ":version"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extension1FQN",
                                                    "description": "(Required) Fully qualified name of the extension1/plugin"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "version",
                                                    "description": "(Required) Version of the release of the extension1/plugin"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/zip"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "43323e31-8731-4f6a-beec-b27babef8aa3",
                                    "name": "Not found",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions1",
                                                ":extension1FQN",
                                                "releases",
                                                ":version"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extension1FQN",
                                                    "description": "(Required) Fully qualified name of the extension1/plugin"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "version",
                                                    "description": "(Required) Version of the release of the extension1/plugin"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/zip"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "eb7db486-9d17-4411-98d4-6b613a75662a",
                                    "name": "Unavailable",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "hub",
                                                "extensions1",
                                                ":extension1FQN",
                                                "releases",
                                                ":version"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "extension1FQN",
                                                    "description": "(Required) Fully qualified name of the extension1/plugin"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "version",
                                                    "description": "(Required) Version of the release of the extension1/plugin"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Service Unavailable",
                                    "code": 503,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/zip"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "f7e99f6b-e4c9-4c81-aacb-d1cda3b42a20",
                    "name": "The details of the given technology",
                    "request": {
                        "name": "The details of the given technology",
                        "description": {},
                        "url": {
                            "path": [
                                "hub",
                                "technologies",
                                ":slug"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "slug",
                                    "description": "(Required) Slug of the technology to be fetched"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "c78bb0f9-3db2-4f75-b8d8-f86ac567ba19",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "technologies",
                                        ":slug"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "slug",
                                            "description": "(Required) Slug of the technology to be fetched"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"type\": \"EXTENSION1\",\n  \"itemId\": \"in cillum\",\n  \"name\": \"sunt id anim\",\n  \"description\": \"officia minim in\",\n  \"tags\": [\n    \"voluptate tempor\",\n    \"consectetur exercitation sed dolore dolor\"\n  ],\n  \"authorName\": \"Excepteur quis sit\",\n  \"authorLogo\": \"minim qui\",\n  \"clusterCompatible\": false,\n  \"clusterMinVersion\": -36198036,\n  \"clusterMaxVersion\": 51890000,\n  \"notCompatibleReason\": \"veniam dolore\",\n  \"descriptionBlocks\": [\n    {\n      \"type\": \"GALLERY\",\n      \"title\": \"eiusmod conse\",\n      \"source\": \"ex dolor\",\n      \"images\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceId\": \"nisi ullamco dolore\"\n    },\n    {\n      \"type\": \"MARKDOWN\",\n      \"title\": \"sit of\",\n      \"source\": \"ut aute Ut Duis\",\n      \"images\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceId\": \"magna eu ipsum\"\n    }\n  ],\n  \"documentationLink\": \"commodo\",\n  \"marketingLink\": \"incididunt voluptate nostrud commodo\",\n  \"technologyDetails\": {\n    \"activationLink\": \"ex veniam\"\n  },\n  \"extension1Details\": {\n    \"releases\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"extension2Details\": {\n    \"recommendedCatalogVersion\": \"repreh\",\n    \"extensionName\": \"irure nisi dolor\",\n    \"releases\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"logo\": \"consectetur nulla\",\n  \"relatedItems\": [\n    {\n      \"type\": \"TECHNOLOGY\",\n      \"id\": \"et incididunt\",\n      \"name\": \"eiusmod deserun\",\n      \"description\": \"aliqua eiusmod ipsum\",\n      \"iconUrl\": \"veniam cillum\",\n      \"externalLink\": \"quis enim in dolore\",\n      \"hasClusterLink\": false\n    },\n    {\n      \"type\": \"EXTENSION1\",\n      \"id\": \"Lorem aliquip deserunt tempor\",\n      \"name\": \"esse veniam exercitation ut occaecat\",\n      \"description\": \"nisi dolore Excepteur magna irure\",\n      \"iconUrl\": \"deserunt exercitation fugiat magna\",\n      \"externalLink\": \"eu\",\n      \"hasClusterLink\": false\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b78a6a18-cafc-4df9-a282-cdabe01acd42",
                            "name": "Not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "technologies",
                                        ":slug"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "slug",
                                            "description": "(Required) Slug of the technology to be fetched"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a62f3ea9-d103-44ec-8482-712b09bdfdff",
                            "name": "Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "technologies",
                                        ":slug"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "slug",
                                            "description": "(Required) Slug of the technology to be fetched"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a371a2da-7e3d-4d0e-abc1-6d652d6a6bed",
                    "name": "Lists all the available items in your environment",
                    "request": {
                        "name": "Lists all the available items in your environment",
                        "description": {},
                        "url": {
                            "path": [
                                "hub",
                                "items"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of hub items in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "itemType",
                                    "value": "<string>",
                                    "description": "If provided, will filter out results based on the given item type."
                                },
                                {
                                    "disabled": false,
                                    "key": "query",
                                    "value": "<string>",
                                    "description": "Filter the results for items matching the query string within id, name, author, description or any tag.\n- Case insensitive\n- Spaces in the query string will lead to an intersection of the results of each term"
                                },
                                {
                                    "disabled": false,
                                    "key": "installed",
                                    "value": "<boolean>",
                                    "description": "If provided, will restrict the result to Extensions 2.0 that have the respective installed state.\n- Only applies if itemType filter is not set or EXTENSION2"
                                },
                                {
                                    "disabled": false,
                                    "key": "categoryId",
                                    "value": "<string>",
                                    "description": "If provided, will filter items that belong to the given category.\n- This overrides the itemType or installed filters\n- For a list of category ids refer to /categories\n- Will return the items in the order of the category"
                                },
                                {
                                    "disabled": false,
                                    "key": "offset",
                                    "value": "<string>",
                                    "description": "If provided, will skip the desired number of results, allowing for pagination in combination with page size"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "e4234bc5-08dc-4beb-ab73-fe91b0245c3c",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "items"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "itemType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "query",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "installed",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "categoryId",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": -59424365,\n  \"items\": [\n    {\n      \"type\": \"TECHNOLOGY\",\n      \"itemId\": \"aliquip\",\n      \"name\": \"dolore\",\n      \"description\": \"ut esse mollit\",\n      \"tags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"authorName\": \"eiusmod dolor ad ut\",\n      \"authorLogo\": \"et qui\",\n      \"notCompatibleReason\": \"commodo eu cupidatat\",\n      \"documentationLink\": \"aliqua nisi officia eiusmod\",\n      \"marketingLink\": \"aute magna Lorem\",\n      \"hasDescriptionBlocks\": true,\n      \"comingSoon\": true,\n      \"artifactId\": \"snmp-extension.dynatrace.com\",\n      \"logo\": \"incididunt e\",\n      \"clusterCompatible\": false\n    },\n    {\n      \"type\": \"EXTENSION1\",\n      \"itemId\": \"sit\",\n      \"name\": \"culpa nostrud non Ut\",\n      \"description\": \"proident amet cupidatat eu Excepteur\",\n      \"tags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"authorName\": \"Lorem occaecat dolor\",\n      \"authorLogo\": \"minim commodo ex\",\n      \"notCompatibleReason\": \"exercitation esse laboris mollit\",\n      \"documentationLink\": \"consequat\",\n      \"marketingLink\": \"pariatur in lab\",\n      \"hasDescriptionBlocks\": true,\n      \"comingSoon\": false,\n      \"artifactId\": \"snmp-extension.dynatrace.com\",\n      \"logo\": \"in eu veniam ut\",\n      \"clusterCompatible\": true\n    }\n  ],\n  \"pageSize\": 4584731,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9bef5c2d-68d6-42aa-a6c7-694f10d23ddf",
                            "name": "Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "hub",
                                        "items"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "itemType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "query",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "installed",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "categoryId",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "67281b80-21ec-44a3-99c9-5b81f6e6ab0d",
            "name": "Lists monitoring states of entities | maturity=EARLY_ADOPTER",
            "request": {
                "name": "Lists monitoring states of entities | maturity=EARLY_ADOPTER",
                "description": {
                    "content": "Only porcess group instances are supported.",
                    "type": "text/plain"
                },
                "url": {
                    "path": [
                        "monitoringstate"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [
                        {
                            "disabled": false,
                            "key": "entitySelector",
                            "value": "<string>",
                            "description": "(Required) Specifies the process group instances where you're querying the state. Use the `PROCESS_GROUP_INSTANCE` entity type. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\n"
                        }
                    ],
                    "variable": []
                },
                "header": [
                    {
                        "key": "Accept",
                        "value": "application/json; charset=utf-8"
                    }
                ],
                "method": "GET",
                "auth": {
                    "type": "apikey",
                    "apikey": [
                        {
                            "key": "key",
                            "value": "Authorization"
                        },
                        {
                            "key": "value",
                            "value": "Api-Token {{DT_TOKEN}}"
                        },
                        {
                            "key": "in",
                            "value": "header"
                        }
                    ]
                }
            },
            "response": [
                {
                    "id": "a2d2c16a-dbd5-42f1-a33e-e87b54cb3e5f",
                    "name": "Success",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "monitoringstate"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "entitySelector",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Api-Token {{DT_TOKEN}}"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        }
                    ],
                    "body": "{\n  \"totalCount\": 1,\n  \"monitoringStates\": [\n    {\n      \"states\": [\n        {\n          \"entityId\": \"PROCESS_GROUP_INSTANCE-F1266E1D0AAC2C3C\",\n          \"state\": \"restart_required_outdated_agent_injected\",\n          \"severity\": \"warning\",\n          \"parameters\": [\n            {\n              \"key\": \"pids\",\n              \"value\": \"111,222,333\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                },
                {
                    "id": "3700d5cb-546b-4d98-a378-f9d1a9111d57",
                    "name": "Unavailable",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "monitoringstate"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "entitySelector",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Api-Token {{DT_TOKEN}}"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "Service Unavailable",
                    "code": 503,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        }
                    ],
                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                }
            ],
            "event": [],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            }
        },
        {
            "id": "19923482-010f-481c-a75e-39ec192d5dc3",
            "name": "Returns all releases",
            "request": {
                "name": "Returns all releases",
                "description": {},
                "url": {
                    "path": [
                        "releases"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [
                        {
                            "disabled": false,
                            "key": "from",
                            "value": "<string>",
                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                        },
                        {
                            "disabled": false,
                            "key": "to",
                            "value": "<string>",
                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                        },
                        {
                            "disabled": false,
                            "key": "nextPageKey",
                            "value": "<string>",
                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                        },
                        {
                            "disabled": false,
                            "key": "pageSize",
                            "value": "<long>",
                            "description": "The amount of Releases in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
                        },
                        {
                            "disabled": false,
                            "key": "demo",
                            "value": "false",
                            "description": "Get your Releases (`false`) or a set of demo Releases (`true`)."
                        },
                        {
                            "disabled": false,
                            "key": "releasesSelector",
                            "value": "",
                            "description": "Defines the scope of the query. Only Releases matching the provided criteria are included in the response.\n\nYou can add one or several of the criteria listed below.\n* Management zone: type(PROCESS_GROUP_INSTANCE),mzName(\"ManagementZone-A\"). Filters for all releases in the given management zone. The filter is case-sensitive.\n* Monitoring state: monitoringState(\"Active\") or monitoringState(\"Inactive\"). You can specify only one monitoring state. \n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Security vulnerability: affectedBySecurityProblem(\"Detected\") or affectedBySecurityProblem(\"Not detected\"). You can specify only one security vulnerability state.\n* Name: entityName(\"name\"). Filters for all releases that contain the given value in their name. The filter is case-insensitive.\n* Entity ID: entityId(\"id\").\n* Product: releasesProduct(\"product\"). Filters for all releases that contain the given value in their product. The filter is case-insensitive.\n* Stage: releasesStage(\"stage\"). Filters for all releases that contain the given value in their stage. The filter is case-insensitive.\n* Version: releasesVersion(\"version\"). Filters for all releases that contain the given value in their version. The filter is case-insensitive.\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/releases?releasesSelector=name(\"Server\"),monitoringState(\"Active\"),healthState(\"HEALTHY\"),releasesVersion(\"1.0.7\").\n\nThe special characters ~ and \" need to be escaped using a ~ (e.g. double quote search entityName(\"~\"\")."
                        },
                        {
                            "disabled": false,
                            "key": "sort",
                            "value": "name",
                            "description": "Specifies the field that is used for sorting the releases list.\nThe field has a sign prefix (+/-) which corresponds to the sorting order ('+' for ascending and '-' for descending). If no sign prefix is set, then the default ascending sorting order will be applied. You can sort by the following properties:\n* 'product': Product name\n* 'name': Release name\n* 'stage': Stage name\n* 'version': Version\n* 'instances': Instances\n* 'traffic': Traffic\n\nIf not set, the ascending order sorting for name is applied."
                        }
                    ],
                    "variable": []
                },
                "header": [
                    {
                        "key": "Accept",
                        "value": "application/json; charset=utf-8"
                    }
                ],
                "method": "GET",
                "auth": {
                    "type": "apikey",
                    "apikey": [
                        {
                            "key": "key",
                            "value": "Authorization"
                        },
                        {
                            "key": "value",
                            "value": "Api-Token {{DT_TOKEN}}"
                        },
                        {
                            "key": "in",
                            "value": "header"
                        }
                    ]
                }
            },
            "response": [
                {
                    "id": "c524e4a0-6c69-4fe1-adfb-dce49d7076ea",
                    "name": "Success",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "releases"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "from",
                                    "value": "<string>"
                                },
                                {
                                    "key": "to",
                                    "value": "<string>"
                                },
                                {
                                    "key": "nextPageKey",
                                    "value": "<string>"
                                },
                                {
                                    "key": "pageSize",
                                    "value": "<long>"
                                },
                                {
                                    "key": "demo",
                                    "value": "false"
                                },
                                {
                                    "key": "releasesSelector",
                                    "value": ""
                                },
                                {
                                    "key": "sort",
                                    "value": "name"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Api-Token {{DT_TOKEN}}"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        }
                    ],
                    "body": "{\n  \"totalCount\": 69026015,\n  \"releases\": [\n    {\n      \"instances\": [\n        \"PROCESS_GROUP_INSTANCE-49D94B90FB71C45B\",\n        \"PROCESS_GROUP_INSTANCE-7EA049157C82D1A5\"\n      ],\n      \"affectedBySecurityVulnerabilities\": true,\n      \"throughput\": 923234,\n      \"softwareTechs\": [\n        {\n          \"technology\": \"JAVA\",\n          \"edition\": \"OpenJDK\",\n          \"version\": \"1.8.0_242\",\n          \"verbatimType\": \"Java\"\n        }\n      ],\n      \"product\": \"Sockshop\",\n      \"securityVulnerabilitiesCount\": 4,\n      \"affectedByProblems\": true,\n      \"securityVulnerabilitiesEnabled\": true,\n      \"running\": true,\n      \"name\": \"cluster\",\n      \"version\": \"1.195.34.12341232423-012342\",\n      \"problemCount\": 4,\n      \"stage\": \"staging\",\n      \"releaseEntityId\": \"PROCESS_GROUP-DFDBAC9CBF104253\"\n    },\n    {\n      \"instances\": [\n        \"PROCESS_GROUP_INSTANCE-49D94B90FB71C45B\",\n        \"PROCESS_GROUP_INSTANCE-7EA049157C82D1A5\"\n      ],\n      \"affectedBySecurityVulnerabilities\": true,\n      \"throughput\": 923234,\n      \"softwareTechs\": [\n        {\n          \"technology\": \"JAVA\",\n          \"edition\": \"OpenJDK\",\n          \"version\": \"1.8.0_242\",\n          \"verbatimType\": \"Java\"\n        }\n      ],\n      \"product\": \"Sockshop\",\n      \"securityVulnerabilitiesCount\": 4,\n      \"affectedByProblems\": true,\n      \"securityVulnerabilitiesEnabled\": true,\n      \"running\": true,\n      \"name\": \"cluster\",\n      \"version\": \"1.195.34.12341232423-012342\",\n      \"problemCount\": 4,\n      \"stage\": \"staging\",\n      \"releaseEntityId\": \"PROCESS_GROUP-DFDBAC9CBF104253\"\n    }\n  ],\n  \"releasesWithProblems\": 20609956,\n  \"pageSize\": 34240766,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                },
                {
                    "id": "7f678150-1e24-4b6e-98a0-87ac45ca3804",
                    "name": "Failed. The input is invalid.",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "releases"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "from",
                                    "value": "<string>"
                                },
                                {
                                    "key": "to",
                                    "value": "<string>"
                                },
                                {
                                    "key": "nextPageKey",
                                    "value": "<string>"
                                },
                                {
                                    "key": "pageSize",
                                    "value": "<long>"
                                },
                                {
                                    "key": "demo",
                                    "value": "false"
                                },
                                {
                                    "key": "releasesSelector",
                                    "value": ""
                                },
                                {
                                    "key": "sort",
                                    "value": "name"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Api-Token {{DT_TOKEN}}"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        }
                    ],
                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                }
            ],
            "event": [],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            }
        },
        {
            "id": "dda78efa-ffb7-407f-8b69-6988a2013299",
            "name": "rum",
            "item": [
                {
                    "id": "b1c46387-9bee-4319-aaed-a0fb1a5fa375",
                    "name": "cities/{country Code}",
                    "item": [
                        {
                            "id": "90fc486c-7a27-4e01-a75d-5f47694dc03d",
                            "name": "Lists all cities of a country",
                            "request": {
                                "name": "Lists all cities of a country",
                                "description": {},
                                "url": {
                                    "path": [
                                        "rum",
                                        "cities",
                                        ":countryCode"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "countryCode",
                                            "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "932a21a9-e15c-4704-9329-854bc886d5c7",
                                    "name": "Success. The response contains the list of country's cities.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "cities",
                                                ":countryCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"countryName\": \"France\",\n  \"countryCode\": \"FR\",\n  \"regionCount\": 13,\n  \"regions\": [\n    {\n      \"name\": \"Auvergne-Rhone-Alpes\",\n      \"code\": \"ARA\",\n      \"cityCount\": 4,\n      \"cities\": [\n        {\n          \"name\": \"Abondance\",\n          \"latitude\": 46.2806,\n          \"longitude\": 6.7217\n        },\n        {\n          \"name\": \"Abrest\",\n          \"latitude\": 46.1008,\n          \"longitude\": 3.4463\n        }\n      ]\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ef677357-b54a-4db3-960f-1f400bd56286",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "cities",
                                                ":countryCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "d11fc2ea-853c-4674-999e-ac178b13a113",
                            "name": "Lists all cities of a country's region",
                            "request": {
                                "name": "Lists all cities of a country's region",
                                "description": {},
                                "url": {
                                    "path": [
                                        "rum",
                                        "cities",
                                        ":countryCode",
                                        ":regionCode"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "countryCode",
                                            "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "regionCode",
                                            "description": "(Required) The code of the required region. \n\n To fetch the list of available region codes, use the [GET regions of the country](https://dt-url.net/az230x0) request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "e39ca6bc-a6e9-4550-8bbd-725def1f496a",
                                    "name": "Success. The response contains the list of region's cities.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "cities",
                                                ":countryCode",
                                                ":regionCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "regionCode",
                                                    "description": "(Required) The code of the required region. \n\n To fetch the list of available region codes, use the [GET regions of the country](https://dt-url.net/az230x0) request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"countryName\": \"do quis sed labore\",\n  \"countryCode\": \"veniam consequat reprehenderit\",\n  \"regionCount\": 46985223,\n  \"regions\": [\n    {\n      \"name\": \"Burgenland\",\n      \"code\": \"01\",\n      \"cityCount\": 2,\n      \"cities\": [\n        {\n          \"name\": \"Althodis\",\n          \"latitude\": 47.3148,\n          \"longitude\": 16.3884\n        },\n        {\n          \"name\": \"Andau\",\n          \"latitude\": 47.7733,\n          \"longitude\": 17.029\n        }\n      ]\n    },\n    {\n      \"name\": \"Burgenland\",\n      \"code\": \"01\",\n      \"cityCount\": 2,\n      \"cities\": [\n        {\n          \"name\": \"Althodis\",\n          \"latitude\": 47.3148,\n          \"longitude\": 16.3884\n        },\n        {\n          \"name\": \"Andau\",\n          \"latitude\": 47.7733,\n          \"longitude\": 17.029\n        }\n      ]\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "9d46fe83-e3c6-46f0-b04b-369a58d81f23",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "cities",
                                                ":countryCode",
                                                ":regionCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "regionCode",
                                                    "description": "(Required) The code of the required region. \n\n To fetch the list of available region codes, use the [GET regions of the country](https://dt-url.net/az230x0) request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "f8c096da-2c51-45e0-b031-9f8d5e4db3c4",
                    "name": "Lists all countries",
                    "request": {
                        "name": "Lists all countries",
                        "description": {},
                        "url": {
                            "path": [
                                "rum",
                                "countries"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "62941c10-0801-4eeb-bc09-f5d392078eba",
                            "name": "Success. The response contains the list of countries.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "rum",
                                        "countries"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"countryCount\": 252,\n  \"countries\": [\n    {\n      \"name\": \"France\",\n      \"code\": \"FR\"\n    },\n    {\n      \"name\": \"Belgium\",\n      \"code\": \"BE\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "75ae5b48-0a0f-4b3b-bcb9-844243a21b81",
                    "name": "regions",
                    "item": [
                        {
                            "id": "6cd8ccfd-5e50-4cc8-969e-1c6722e24147",
                            "name": "Lists all countries along with their regions",
                            "request": {
                                "name": "Lists all countries along with their regions",
                                "description": {},
                                "url": {
                                    "path": [
                                        "rum",
                                        "regions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "5d7cf3ce-b399-4c43-8ca4-614fa482e4b2",
                                    "name": "Success. The response contains the list of countries with regional divisions.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "regions"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"countryCount\": 252,\n  \"countries\": [\n    {\n      \"name\": \"France\",\n      \"code\": \"FR\",\n      \"regionCount\": 2,\n      \"regions\": [\n        {\n          \"name\": \"Auvergne-Rhone-Alpes\",\n          \"code\": \"ARA\"\n        },\n        {\n          \"name\": \"Bourgogne-Franche-Comte\",\n          \"code\": \"BFC\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Belgium\",\n      \"code\": \"BE\",\n      \"regionCount\": 2,\n      \"regions\": [\n        {\n          \"name\": \"Antwerp Province\",\n          \"code\": \"01\"\n        },\n        {\n          \"name\": \"Brussels Captial\",\n          \"code\": \"11\"\n        }\n      ]\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "23c7e857-8c39-46e0-9d53-57382425d987",
                            "name": "Lists all regions of a country",
                            "request": {
                                "name": "Lists all regions of a country",
                                "description": {},
                                "url": {
                                    "path": [
                                        "rum",
                                        "regions",
                                        ":countryCode"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "countryCode",
                                            "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "790692ad-872e-403c-93fe-24123e3dad36",
                                    "name": "Success. The response contains the list of country's regions.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "regions",
                                                ":countryCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"countyName\": \"France\",\n  \"countryCode\": \"FR\",\n  \"regionCount\": 2,\n  \"regions\": [\n    {\n      \"name\": \"Auvergne-Rhone-Alpes\",\n      \"code\": \"ARA\"\n    },\n    {\n      \"name\": \"Bourgogne-Franche-Comte\",\n      \"code\": \"BFC\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "613a4feb-4752-4f57-a923-784b6f646ea4",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "rum",
                                                "regions",
                                                ":countryCode"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "countryCode",
                                                    "description": "(Required) The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "083d64f3-04c1-4c4b-aa67-10548929bad6",
            "name": "settings",
            "item": [
                {
                    "id": "86ebcaf5-ac9e-46ca-ae66-fb741f231c58",
                    "name": "objects",
                    "item": [
                        {
                            "id": "b04943da-661a-4b93-a83c-e5599168748e",
                            "name": "Lists persisted settings objects",
                            "request": {
                                "name": "Lists persisted settings objects",
                                "description": {
                                    "content": "Lists persisted settings objects for selected schemas at selected scopes (or entities).\n\nIf nothing is persisted or if all persisted settings objects are not accessible due to missing permissions, no items will be returned.\n\nTo query the effective values (including schema defaults) please see [/settings/effectiveValues](#/Settings%20-%20Objects/getEffectiveSettingsValues).",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "settings",
                                        "objects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "schemaIds",
                                            "value": "<string>",
                                            "description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nTo load the first page, when the **nextPageKey** is not set, either this parameter or **scopes** is required. \n\nTo load all objects belonging to the given schema IDs leave the **scopes** parameter empty."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "scopes",
                                            "value": "<string>",
                                            "description": "A list of comma-separated scopes, that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scopes. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, either this parameter or **schemaIds** is required. \n\nTo load all objects belonging to the given scopes leave the **schemaIds** parameter empty."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "fields",
                                            "value": "objectId,value",
                                            "description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `objectId,value`).\n\nSupported fields: `objectId`, `summary`, `searchSummary`, `created`, `modified`, `author`, `updateToken`, `scope`, `schemaId`, `schemaVersion`, `value`, `externalId`."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "nextPageKey",
                                            "value": "<string>",
                                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                        },
                                        {
                                            "disabled": false,
                                            "key": "pageSize",
                                            "value": "<long>",
                                            "description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "ed5abe09-0917-468c-9ba9-94856a855f0e",
                                    "name": "Success. Accessible objects returned.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "scopes",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fields",
                                                    "value": "objectId,value"
                                                },
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"items\": [\n    {\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"modified\": 10643278,\n      \"author\": \"john.doe@example.com\",\n      \"externalId\": \"aute con\",\n      \"scope\": \"HOST-D3A3C5A146830A79\",\n      \"created\": -19304047,\n      \"schemaVersion\": \"1.0.0\",\n      \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"searchSummary\": \"in dolor Ut occaecat\",\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"summary\": \"eiusmod ut tempor\"\n    },\n    {\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"modified\": -28004031,\n      \"author\": \"john.doe@example.com\",\n      \"externalId\": \"ut pariatur ad minim\",\n      \"scope\": \"HOST-D3A3C5A146830A79\",\n      \"created\": 37055525,\n      \"schemaVersion\": \"1.0.0\",\n      \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"searchSummary\": \"dolor\",\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"summary\": \"cupidatat ut veniam dolore\"\n    }\n  ],\n  \"pageSize\": -28691979,\n  \"totalCount\": 43545217,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "4afcb7b4-632d-40b7-a803-fa7a1b5d88ae",
                                    "name": "Failed. Forbidden.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "scopes",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fields",
                                                    "value": "objectId,value"
                                                },
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "5cbf3b32-a436-4d04-9e77-a1f736bf73cb",
                                    "name": "Failed. The specified schema or scope is not found.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "scopes",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fields",
                                                    "value": "objectId,value"
                                                },
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "48b4a347-e2c6-4277-8958-59f017cca3cf",
                            "name": "Creates a new settings object",
                            "request": {
                                "name": "Creates a new settings object",
                                "description": {
                                    "content": "You can upload several objects at once. In that case each object returns its own response code. Check the response body for details.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "settings",
                                        "objects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "validateOnly",
                                            "value": "false",
                                            "description": "If `true`, the request runs only validation of the submitted settings objects, without saving them."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object],[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "b4f24930-5996-466b-b625-efbac4504072",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 88762414,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"Lorem\",\n      \"code\": -23943312\n    }\n  },\n  {\n    \"code\": -80538285,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"occaecat officia\",\n      \"code\": 64474905\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ec04429c-ffe2-404c-a9c2-6fb19730faa1",
                                    "name": "Multi-status: different objects in the payload resulted in different statuses.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Multi-Status (WebDAV) (RFC 4918)",
                                    "code": 207,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 88762414,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"Lorem\",\n      \"code\": -23943312\n    }\n  },\n  {\n    \"code\": -80538285,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"occaecat officia\",\n      \"code\": 64474905\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "aa5460f4-f35f-4f3d-95e3-688fbc478b83",
                                    "name": "Failed. Schema validation failed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 88762414,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"Lorem\",\n      \"code\": -23943312\n    }\n  },\n  {\n    \"code\": -80538285,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"occaecat officia\",\n      \"code\": 64474905\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "f3d3cc2f-26a5-4123-8a9d-1819d8883253",
                                    "name": "Failed. Forbidden.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "5c77767b-1f19-48ae-852f-9f43599c0069",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 88762414,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"Lorem\",\n      \"code\": -23943312\n    }\n  },\n  {\n    \"code\": -80538285,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"occaecat officia\",\n      \"code\": 64474905\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "271c8183-4768-484a-bccc-a377cc8cd6cc",
                                    "name": "Failed. Conflicting resource.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object],[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 88762414,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"Lorem\",\n      \"code\": -23943312\n    }\n  },\n  {\n    \"code\": -80538285,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"occaecat officia\",\n      \"code\": 64474905\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "f5f84f15-280c-45c3-a044-622b06f47931",
                            "name": "{object Id}",
                            "item": [
                                {
                                    "id": "48eafacf-99b2-4979-be54-8c733c896e6c",
                                    "name": "Gets the specified settings object",
                                    "request": {
                                        "name": "Gets the specified settings object",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects",
                                                ":objectId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "objectId",
                                                    "description": "(Required) The ID of the required settings object."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "32dc8a3d-e900-44e0-92a5-45c9d824dea2",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n  \"modified\": -63632611,\n  \"author\": \"john.doe@example.com\",\n  \"externalId\": \"amet sunt\",\n  \"scope\": \"HOST-D3A3C5A146830A79\",\n  \"created\": 47821274,\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"searchSummary\": \"ut in\",\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"summary\": \"dolor culpa\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "e9a079f3-cfb7-426e-8f3b-3eda1ba3ccd5",
                                            "name": "Failed. Forbidden.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "81e30b92-ca6e-4534-a230-fe10c5356304",
                                            "name": "No object available for the given objectId",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "2d49223d-625a-4715-a181-b1ea7ec521de",
                                    "name": "Updates an existing settings object",
                                    "request": {
                                        "name": "Updates an existing settings object",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects",
                                                ":objectId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "objectId",
                                                    "description": "(Required) The ID of the required settings object."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "d4c75d63-f815-465d-9218-daf75d5c2090",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -81872874,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"Lorem ea reprehenderit\",\n    \"code\": 24214089\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "df580437-c31b-46b1-9972-0e40eff59d07",
                                            "name": "Failed. Schema validation failed.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -81872874,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"Lorem ea reprehenderit\",\n    \"code\": 24214089\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "5b0e3cd7-f54c-4e14-83cc-0795d802a586",
                                            "name": "Failed. Forbidden.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "37d82eb8-67ab-4a01-a952-1ef0658b0ace",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -81872874,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"Lorem ea reprehenderit\",\n    \"code\": 24214089\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "9433af4e-4d11-41f6-9c1e-8ced9765adff",
                                            "name": "Failed. Conflicting resource.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -81872874,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"Lorem ea reprehenderit\",\n    \"code\": 24214089\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "d7e73991-89b4-4de0-a0c2-50c644df296f",
                                    "name": "Deletes the specified settings object",
                                    "request": {
                                        "name": "Deletes the specified settings object",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects",
                                                ":objectId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "updateToken",
                                                    "value": "<string>",
                                                    "description": "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "objectId",
                                                    "description": "(Required) The ID of the required settings object."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "aba053b3-830a-46a1-babe-47d06a8a1b48",
                                            "name": "Success. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "25a7e952-9c63-47de-b335-9c2f64972f95",
                                            "name": "Failed. Schema validation failed.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -81872874,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"Lorem ea reprehenderit\",\n    \"code\": 24214089\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "310b3aa8-9f6a-4662-9157-cc8de1308eb2",
                                            "name": "Failed. Forbidden.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "0d6196fc-b8dc-4ebf-b16f-ddd204a02865",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -81872874,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"Lorem ea reprehenderit\",\n    \"code\": 24214089\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "90df9afd-db34-453b-85ab-547955675a20",
                                            "name": "Failed. Conflicting resource.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -81872874,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"Lorem ea reprehenderit\",\n    \"code\": 24214089\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "2cff8e15-978f-4d26-9fc2-2b4f2d81aab5",
                    "name": "Lists effective settings values",
                    "request": {
                        "name": "Lists effective settings values",
                        "description": {
                            "content": "Lists effective settings values for selected schemas at a selected scope (or entity). This operation evaluates the hierarchy of persisted objects (see [/settings/objects](#/Settings%20-%20Objects/getSettingsObjects))\n\nIt will always return a result for a schema/scope combination, even if the schema would not be relevant to the given scope/entity.\n\nIf no object along the hierarchy is persisted, the default value as defined in the schema will be returned.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "settings",
                                "effectiveValues"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "schemaIds",
                                    "value": "<string>",
                                    "description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nOnly considered on load of the first page, when the **nextPageKey** is not set."
                                },
                                {
                                    "disabled": false,
                                    "key": "scope",
                                    "value": "<string>",
                                    "description": "The scope that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scope. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "origin,value",
                                    "description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `origin,value`).\n\nSupported fields: `summary`, `searchSummary`, `created`, `modified`, `author`, `origin`, `schemaId`, `schemaVersion`, `value`, `externalId`."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "f1e09cd4-496a-483e-9360-8da8666f7881",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "settings",
                                        "effectiveValues"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "schemaIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "origin,value"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"items\": [\n    {\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"origin\": \"HOST-D3A3C5A146830A79\",\n      \"modified\": 59368527,\n      \"author\": \"john.doe@example.com\",\n      \"externalId\": \"dolor adipisicing mollit\",\n      \"created\": -75641949,\n      \"schemaVersion\": \"1.0.0\",\n      \"searchSummary\": \"quis cillum\",\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"summary\": \"Duis amet sunt ipsum\"\n    },\n    {\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"origin\": \"HOST-D3A3C5A146830A79\",\n      \"modified\": 85611537,\n      \"author\": \"john.doe@example.com\",\n      \"externalId\": \"officia mollit\",\n      \"created\": -75661952,\n      \"schemaVersion\": \"1.0.0\",\n      \"searchSummary\": \"Duis minim exercitation\",\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"summary\": \"Lorem dolore\"\n    }\n  ],\n  \"pageSize\": -63716469,\n  \"totalCount\": 27295922,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "53a23e4f-0c45-4588-9bc8-483a0da126f8",
                            "name": "Failed. The specified schema or scope is not found.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "settings",
                                        "effectiveValues"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "schemaIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "origin,value"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e322b709-d4f1-4c75-9007-f2816d3544b2",
                    "name": "schemas",
                    "item": [
                        {
                            "id": "b8a76218-8235-4efb-9d07-e4455d9ed44c",
                            "name": "Lists available settings schemas",
                            "request": {
                                "name": "Lists available settings schemas",
                                "description": {},
                                "url": {
                                    "path": [
                                        "settings",
                                        "schemas"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "33efbf67-ba16-47be-b034-f5d3f95a0f00",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"items\": [\n    {\n      \"displayName\": \"Built-in container monitoring rules\",\n      \"latestSchemaVersion\": \"1.4.2\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\"\n    },\n    {\n      \"displayName\": \"Built-in container monitoring rules\",\n      \"latestSchemaVersion\": \"1.4.2\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\"\n    }\n  ],\n  \"totalCount\": 1\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "eb0d2df3-972b-4d8a-90c8-35e823e89f04",
                            "name": "Gets parameters of the specified settings schema",
                            "request": {
                                "name": "Gets parameters of the specified settings schema",
                                "description": {},
                                "url": {
                                    "path": [
                                        "settings",
                                        "schemas",
                                        ":schemaId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "schemaVersion",
                                            "value": "<string>",
                                            "description": "The version of the required schema. \n\n If not set, the most recent version is returned."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "schemaId",
                                            "description": "(Required) The ID of the required schema."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "379581bf-666b-4d06-89d0-c8fa3a0b8a52",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas",
                                                ":schemaId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaVersion",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaId",
                                                    "description": "(Required) The ID of the required schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"allowedScopes\": [\n    \"host\",\n    \"application\"\n  ],\n  \"description\": \"Dynatrace disables monitoring of containers that do not run any applications\",\n  \"displayName\": \"Built-in container monitoring rules\",\n  \"dynatrace\": \"1\",\n  \"enums\": {\n    \"reprehenderit4b\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"enum\",\n      \"enumClass\": \"enumClass\",\n      \"displayName\": \"typeDisplayName\"\n    },\n    \"qui_f0\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"enum\",\n      \"enumClass\": \"enumClass\",\n      \"displayName\": \"typeDisplayName\"\n    }\n  },\n  \"maxObjects\": 10,\n  \"multiObject\": false,\n  \"properties\": {\n    \"ea8b\": {\n      \"maxObjects\": -7537622,\n      \"nullable\": true,\n      \"type\": {},\n      \"referencedType\": \"propertyReferencedType\",\n      \"documentation\": \"propertyDocumentation\",\n      \"uiCustomization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"datasource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"precondition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minObjects\": 1,\n      \"modificationPolicy\": \"ALWAYS\",\n      \"items\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"propertyDisplayName\",\n      \"default\": {},\n      \"description\": \"propertyDescription\",\n      \"metadata\": {\n        \"occaecat1_9\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"subType\": \"propertySubType\"\n    },\n    \"exercitation_58\": {\n      \"maxObjects\": 89059913,\n      \"nullable\": true,\n      \"type\": {},\n      \"referencedType\": \"propertyReferencedType\",\n      \"documentation\": \"propertyDocumentation\",\n      \"uiCustomization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"datasource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"precondition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minObjects\": 1,\n      \"modificationPolicy\": \"ALWAYS\",\n      \"items\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"propertyDisplayName\",\n      \"default\": {},\n      \"description\": \"propertyDescription\",\n      \"metadata\": {\n        \"in_41\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ullamco_2f_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ad6\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"subType\": \"propertySubType\"\n    }\n  },\n  \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n  \"types\": {\n    \"aliquabf5\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"properties\": {\n        \"nostrud_0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exercitation_47e\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dodce\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"aliqua_0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"summaryPattern\": \"summaryPatternOfType\",\n      \"version\": \"0\",\n      \"searchPattern\": \"searchPatternOfType\",\n      \"versionInfo\": \"Added new property\",\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"typeDisplayName\"\n    },\n    \"Duis__41\": {\n      \"description\": \"typeDescription\",\n      \"documentation\": \"typeDocumentation\",\n      \"properties\": {\n        \"sit40\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"aliquip_74\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"summaryPattern\": \"summaryPatternOfType\",\n      \"version\": \"0\",\n      \"searchPattern\": \"searchPatternOfType\",\n      \"versionInfo\": \"Added new property\",\n      \"constraints\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayName\": \"typeDisplayName\"\n    }\n  },\n  \"version\": \"1.4.2\",\n  \"documentation\": \"amet esse dolor Duis\",\n  \"schemaGroups\": [\n    \"group:some.1\",\n    \"group:some.2\"\n  ],\n  \"ordered\": false,\n  \"constraints\": [\n    {\n      \"type\": \"CUSTOM_VALIDATOR_REF\",\n      \"customMessage\": \"esse sed consequat\",\n      \"customValidatorId\": \"my-min-max\",\n      \"minimumPropertyCount\": 1,\n      \"maximumPropertyCount\": 2,\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"CUSTOM_VALIDATOR_REF\",\n      \"customMessage\": \"eu anim consequat fugiat\",\n      \"customValidatorId\": \"my-min-max\",\n      \"minimumPropertyCount\": 1,\n      \"maximumPropertyCount\": 2,\n      \"properties\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"id917\": \"exercitation\"\n  },\n  \"uiCustomization\": {\n    \"tabs\": {\n      \"groups\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"expandable\": {\n      \"expanded\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sections\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"callback\": {\n      \"buttons\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"table\": {\n      \"emptyState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"columns\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"deletionConstraints\": [\n    {\n      \"customMessage\": \"esse\",\n      \"customValidatorId\": \"my-min-max\"\n    },\n    {\n      \"customMessage\": \"Duis minim reprehenderit\",\n      \"customValidatorId\": \"my-min-max\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "6efee4d6-6cf7-45d7-81d6-4ba7e478afef",
                                    "name": "Failed. Forbidden.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas",
                                                ":schemaId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaVersion",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaId",
                                                    "description": "(Required) The ID of the required schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "9e29244e-e5e6-4be4-a565-1dc8f806d788",
                                    "name": "Failed. The specified schema doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas",
                                                ":schemaId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaVersion",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaId",
                                                    "description": "(Required) The ID of the required schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "94e9c71f-8c33-4cec-9367-d12c9fc43d29",
            "name": "slo",
            "item": [
                {
                    "id": "8946730c-c3e2-401e-a219-63cc5c1214cd",
                    "name": "Lists all available SLOs along with calculated values",
                    "request": {
                        "name": "Lists all available SLOs along with calculated values",
                        "description": {
                            "content": "By default the values are calculated for the SLO's own timeframe. You can use a custom timeframe: \n\n1. Set the **timeFrame** parameter to `GTF`. \n2. Provide the timeframe in **from** and **to** parameters.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "slo"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of SLOs in a single response payload. \n\nThe maximal allowed page size is 10000. \n\nIf not set, 10 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "sloSelector",
                                    "value": "",
                                    "description": "The scope of the query. Only SLOs matching the provided criteria are included in the response. \n\nYou can add one or several of the criteria listed below.\n* SLO ID: id(\"id-1\",\"id-2\").\n* Name: name(\"name\"). Filters for an SLO with the given name. The filter is case-sensitive.\n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Text: text(\"value\"). Filters for all SLOs that contain the given value in their name or description. The filter is case-insensitive.\n* Problem: problemDisplayName(\"value\"). Filters for all SLOs that are related to a given problem display name (e.g. P-12345).\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/slo?sloSelector=name(\"Service Availability\"), .../api/v2/slo?sloSelector=id(\"id\"), .../api/v2/slo?sloSelector=text(\"Description\"),healthState(\"HEALTHY\").\n\nThe special characters ~ and \" need to be escaped using a ~ (e.g. double quote search text(\"~\"\")."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "name",
                                    "description": "The sorting of SLO entries: \n* `name`: Names in ascending order. \n* `-name`: Names in descending order. \n\nIf not set, the ascending order is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "timeFrame",
                                    "value": "CURRENT",
                                    "description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "demo",
                                    "value": "false",
                                    "description": "Get your SLOs (`false`) or a set of demo SLOs (`true`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "evaluate",
                                    "value": "false",
                                    "description": "Get your SLOs without them being evaluated (`false`) or with evaluations (`true`) with maximum `pageSize` of 25."
                                },
                                {
                                    "disabled": false,
                                    "key": "enabledSlos",
                                    "value": "true",
                                    "description": "Get your enabled SLOs (`true`), disabled ones (`false`) or both enabled and disabled ones (`all`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "showGlobalSlos",
                                    "value": "true",
                                    "description": "Get your global SLOs (`true`) regardless of the selected filter or filter them out (`false`)."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "eb568270-dfe1-41c2-a107-9ffbaff6caaa",
                            "name": "Success. The response contains the parameters and calculated values of the requested SLO.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sloSelector",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "name"
                                        },
                                        {
                                            "key": "timeFrame",
                                            "value": "CURRENT"
                                        },
                                        {
                                            "key": "demo",
                                            "value": "false"
                                        },
                                        {
                                            "key": "evaluate",
                                            "value": "false"
                                        },
                                        {
                                            "key": "enabledSlos",
                                            "value": "true"
                                        },
                                        {
                                            "key": "showGlobalSlos",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 29968211,\n  \"slo\": [\n    {\n      \"metricKey\": \"func:slo.payment_service_availability\",\n      \"timeframe\": \"-1d\",\n      \"problemFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n      \"useRateMetric\": true,\n      \"metricRate\": \"builtin:service.successes.server.rate\",\n      \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n      \"metricDenominator\": \"builtin:service.requestCount.server\",\n      \"evaluationType\": \"AGGREGATE\",\n      \"errorBudgetBurnRate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorBudget\": 1.25,\n      \"evaluatedPercentage\": 96.25,\n      \"burnRateMetricKey\": \"func:slo.errorBudgetBurnRate.payment_service_availability\",\n      \"errorBudgetMetricKey\": \"func:slo.errorBudget.payment_service_availability\",\n      \"normalizedErrorBudgetMetricKey\": \"func:slo.normalizedErrorBudget.payment_service_availability\",\n      \"numeratorValue\": 80,\n      \"denominatorValue\": 90,\n      \"relatedOpenProblems\": -92657,\n      \"relatedTotalProblems\": 92170580,\n      \"filter\": \"type(\\\"SERVICE\\\")\",\n      \"enabled\": true,\n      \"name\": \"Payment service availability\",\n      \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n      \"target\": 95,\n      \"description\": \"Rate of successful payments per week\",\n      \"status\": \"WARNING\",\n      \"warning\": 97.5,\n      \"error\": \"NONE\"\n    },\n    {\n      \"metricKey\": \"func:slo.payment_service_availability\",\n      \"timeframe\": \"-1d\",\n      \"problemFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n      \"useRateMetric\": true,\n      \"metricRate\": \"builtin:service.successes.server.rate\",\n      \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n      \"metricDenominator\": \"builtin:service.requestCount.server\",\n      \"evaluationType\": \"AGGREGATE\",\n      \"errorBudgetBurnRate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorBudget\": 1.25,\n      \"evaluatedPercentage\": 96.25,\n      \"burnRateMetricKey\": \"func:slo.errorBudgetBurnRate.payment_service_availability\",\n      \"errorBudgetMetricKey\": \"func:slo.errorBudget.payment_service_availability\",\n      \"normalizedErrorBudgetMetricKey\": \"func:slo.normalizedErrorBudget.payment_service_availability\",\n      \"numeratorValue\": 80,\n      \"denominatorValue\": 90,\n      \"relatedOpenProblems\": -39062813,\n      \"relatedTotalProblems\": 65908443,\n      \"filter\": \"type(\\\"SERVICE\\\")\",\n      \"enabled\": true,\n      \"name\": \"Payment service availability\",\n      \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n      \"target\": 95,\n      \"description\": \"Rate of successful payments per week\",\n      \"status\": \"WARNING\",\n      \"warning\": 97.5,\n      \"error\": \"NONE\"\n    }\n  ],\n  \"pageSize\": 95048327,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "24bf77fe-483b-4be8-8cc5-61d160214e43",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "sloSelector",
                                            "value": ""
                                        },
                                        {
                                            "key": "sort",
                                            "value": "name"
                                        },
                                        {
                                            "key": "timeFrame",
                                            "value": "CURRENT"
                                        },
                                        {
                                            "key": "demo",
                                            "value": "false"
                                        },
                                        {
                                            "key": "evaluate",
                                            "value": "false"
                                        },
                                        {
                                            "key": "enabledSlos",
                                            "value": "true"
                                        },
                                        {
                                            "key": "showGlobalSlos",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4f446f70-f160-4a2f-8b42-0290f477f712",
                    "name": "Creates a new SLO",
                    "request": {
                        "name": "Creates a new SLO",
                        "description": {},
                        "url": {
                            "path": [
                                "slo"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "[object Object]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "855e35b1-3b00-4298-9cb9-2778a4cdd9ca",
                            "name": "Success. The new SLO has been created. Response doesn't have a body. The **location** response header contains the ID of the new SLO.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "disabled": false,
                                    "description": "The location of the new resource created by this request.",
                                    "key": "location",
                                    "value": "ut"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "725c410e-8ca4-4563-b492-9745ff1b0a8c",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a3f8a923-f8cd-4929-9358-20c32746d9d9",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "969ee098-08f4-4fab-aebf-426d0494053c",
                            "name": "Failed. Conflicting resource.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "07cb8915-747c-431e-90f6-17c2ae00b06f",
                            "name": "Internal server error.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "slo"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "37da9bf4-e0f8-415b-be62-7999ee912099",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "94fadfd7-d50d-47c6-9275-97bc68f90ee9",
                            "name": "Gets parameters and calculated values of a specific SLO",
                            "request": {
                                "name": "Gets parameters and calculated values of a specific SLO",
                                "description": {
                                    "content": "If **from** and **to** parameters are provided, the SLO is calculated for that timeframe; otherwise the SLO's own timeframe is used.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "slo",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "to",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "timeFrame",
                                            "value": "CURRENT",
                                            "description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<uuid>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required SLO."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "1dfcfafa-90ea-432a-8954-6ff5d814905d",
                                    "name": "Success. The response contains the parameters and calculated values of the requested SLO.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"metricKey\": \"func:slo.payment_service_availability\",\n  \"timeframe\": \"-1d\",\n  \"problemFilters\": [\n    \"[type(\\\"SERVICE\\\")]\"\n  ],\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"errorBudgetBurnRate\": {\n    \"burnRateVisualizationEnabled\": true,\n    \"fastBurnThreshold\": 1.5,\n    \"sloValue\": 95,\n    \"estimatedTimeToConsumeErrorBudget\": 24,\n    \"burnRateType\": \"SLOW\",\n    \"burnRateValue\": 1.25\n  },\n  \"errorBudget\": 1.25,\n  \"evaluatedPercentage\": 96.25,\n  \"burnRateMetricKey\": \"func:slo.errorBudgetBurnRate.payment_service_availability\",\n  \"errorBudgetMetricKey\": \"func:slo.errorBudget.payment_service_availability\",\n  \"normalizedErrorBudgetMetricKey\": \"func:slo.normalizedErrorBudget.payment_service_availability\",\n  \"numeratorValue\": 80,\n  \"denominatorValue\": 90,\n  \"relatedOpenProblems\": 68809538,\n  \"relatedTotalProblems\": 95823337,\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n  \"target\": 95,\n  \"description\": \"Rate of successful payments per week\",\n  \"status\": \"WARNING\",\n  \"warning\": 97.5,\n  \"error\": \"NONE\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "0bf92626-d8e9-42c2-b0db-90e5b34dd452",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "28c53e2b-05e7-4540-bbef-5e9c34f00ba4",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "f78362a1-2ba9-48ff-9eb4-8855965331eb",
                            "name": "Updates an existing SLO",
                            "request": {
                                "name": "Updates an existing SLO",
                                "description": {},
                                "url": {
                                    "path": [
                                        "slo",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<uuid>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required SLO."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "9a98b94b-2dea-4291-8a40-0c83770ab66b",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "0c7d2a36-2646-45b7-9cbb-9990f8502198",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "1f8093d9-2953-44e8-abd7-a8b831a808fd",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "80c8d622-8feb-49ad-9b49-3a8e5d9f35db",
                                    "name": "Internal server error.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "3675cbe3-7f0d-4344-9fbc-f4f91b0116c3",
                            "name": "Deletes an SLO",
                            "request": {
                                "name": "Deletes an SLO",
                                "description": {},
                                "url": {
                                    "path": [
                                        "slo",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<uuid>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required SLO."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "cd34dc35-9c09-41e8-b15e-6a19cd826d15",
                                    "name": "Success. The SLO has been deleted. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "33fdf45e-82db-45f8-a6d7-e835d7be4583",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "f0eee8ff-158d-48da-969f-19e40aa855de",
                                    "name": "Failed. Conflicting resource.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "8a9fe110-3205-46fb-9926-b566e0f1e0f6",
                                    "name": "Internal server error.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "91247710-ea8c-4085-ace8-ba706d763094",
                            "name": "Creates an alert of the provided alert type for an SLO",
                            "request": {
                                "name": "Creates an alert of the provided alert type for an SLO",
                                "description": {},
                                "url": {
                                    "path": [
                                        "slo",
                                        ":id",
                                        "alert"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "to",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "timeFrame",
                                            "value": "CURRENT",
                                            "description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<uuid>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required SLO."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "28e8bf23-ae6d-49c1-a86d-3abe5ed991e6",
                                    "name": "Success. The new alert has been created. Response doesn't have a body. The **location** response header contains the ID of the new alert.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "disabled": false,
                                            "description": "The location of the new resource created by this request.",
                                            "key": "location",
                                            "value": "ut"
                                        },
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "60e2601b-8966-4566-a2da-2831767d77ed",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "b4ff10e6-ca08-4696-9e38-283ad3b276e4",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "1ffc61bd-0380-4676-a7c8-efa5a627ff26",
                                    "name": "Precondition for creating an SLO alert not fulfilled. The SLO func metric cannot be created or is not created by the SLO.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Precondition Failed",
                                    "code": 412,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "d3696385-7252-4416-b2dc-6ecc2bf44e36",
                                    "name": "Internal server error.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "slo",
                                                ":id",
                                                "alert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "timeFrame",
                                                    "value": "CURRENT"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<uuid>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required SLO."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "7ee71389-35d5-4853-a1f1-8c735f439aa8",
            "name": "synthetic",
            "item": [
                {
                    "id": "53eca136-6712-440d-aa66-87c71d7cba11",
                    "name": "config",
                    "item": [
                        {
                            "id": "ff3f2e33-7c7a-4d08-ba50-4b851d2ca949",
                            "name": "Gets set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Gets set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "config"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "6bb04776-a02b-4991-984a-0eb08dc678f8",
                                    "name": "Success. The response contains synthetic related parameters defined for whole tenant.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "config"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"bmMonitorTimeout\": 495231,\n  \"bmStepTimeout\": 159743\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "3ffae944-d8c9-403e-a2fb-3c1e4aec83ea",
                            "name": "Updates set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Updates set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "config"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "8fedeebe-7317-4a00-8045-caa1151f4832",
                                    "name": "Success. The set of synthetic related parameters has been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "config"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"bmMonitorTimeout\": \"<long>\",\n  \"bmStepTimeout\": \"<long>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "c8240b12-b79a-44fe-80d9-99a934588e46",
                    "name": "Gets detailed information about the last execution of the specified HTTP monitor | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets detailed information about the last execution of the specified HTTP monitor | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "synthetic",
                                "execution",
                                ":monitorId",
                                ":resultType"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "locationId",
                                    "value": "<string>",
                                    "description": "Filters the results to those executed by specified Synthetic location. Specify the ID of the location."
                                }
                            ],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "monitorId",
                                    "description": "(Required) Identifier of the HTTP monitor for which last execution result is returned."
                                },
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "resultType",
                                    "description": "(Required) Defines the result type of the last HTTP monitor's execution."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "1f159da7-fbc3-4fc3-a9b0-c0ea0d2fb6b1",
                            "name": "Success. The response contains detailed data.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "execution",
                                        ":monitorId",
                                        ":resultType"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "locationId",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "monitorId",
                                            "description": "(Required) Identifier of the HTTP monitor for which last execution result is returned."
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "resultType",
                                            "description": "(Required) Defines the result type of the last HTTP monitor's execution."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"monitorId\": \"HTTP_CHECK-12B428F6D37A9197\",\n  \"locationsExecutionResults\": [\n    {\n      \"locationId\": \"7804738439930364165\",\n      \"executionId\": \"6136172183050046113\",\n      \"requestResults\": [\n        {\n          \"requestId\": \"HTTP_CHECK_STEP-53071FC3C4F72E28\",\n          \"requestName\": \"Request name\",\n          \"sequenceNumber\": 1,\n          \"startTimestamp\": 1615806570884,\n          \"engineId\": 338502283,\n          \"publicLocation\": false,\n          \"url\": \"https://www.examplePage.com\",\n          \"method\": \"GET\",\n          \"requestBody\": \"\",\n          \"requestHeaders\": [\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"DynatraceSynthetic/1.215.1\"\n            },\n            {\n              \"name\": \"X-Dynatrace-Visit\",\n              \"value\": \"6136172183050046113\"\n            },\n            {\n              \"name\": \"X-Dynatrace-Test\",\n              \"value\": \"HTTP_CHECK-12B428F6D37A9197\"\n            }\n          ],\n          \"responseStatusCode\": 200,\n          \"responseBody\": \"<html><head>Title</head><body>Main Page</body></html>\",\n          \"responseSize\": 1112,\n          \"responseBodySizeLimitExceeded\": false,\n          \"responseHeaders\": [\n            {\n              \"name\": \"Date\",\n              \"value\": \"Mon, 15 Mar 2021 11:09:30 GMT\"\n            },\n            {\n              \"name\": \"Content-Language\",\n              \"value\": \"en\"\n            }\n          ],\n          \"resolvedIps\": [\n            \"80.252.0.145\"\n          ],\n          \"errorCode\": 0,\n          \"responseMessage\": \"OK\",\n          \"peerCertificateExpiryDate\": 1647302399000,\n          \"peerCertificateDetails\": \"[Certificate details]\",\n          \"totalTime\": 238,\n          \"hostNameResolutionTime\": 26,\n          \"tcpConnectTime\": 15,\n          \"tlsHandshakeTime\": 8,\n          \"timeToFirstByte\": 96,\n          \"redirectionTime\": 70,\n          \"waitingTime\": 47,\n          \"redirectsCount\": 1,\n          \"failureMessage\": \"\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1293b78b-c89d-43af-add7-6d17f0d92cd1",
                    "name": "locations",
                    "item": [
                        {
                            "id": "dcc12c58-778e-497e-af11-65dafff6c151",
                            "name": "Lists all synthetic locations (both public and private) available for your environment",
                            "request": {
                                "name": "Lists all synthetic locations (both public and private) available for your environment",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "locations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "cloudPlatform",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of locations to those which are hosted on a specific cloud platform."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "type",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of locations to those of a specific type."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "f809ed17-97ed-408a-a3cd-7c63459a4407",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "cloudPlatform",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"locations\": [\n    {\n      \"name\": \"Gdansk\",\n      \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n      \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n      \"type\": \"PUBLIC\",\n      \"cloudPlatform\": \"AMAZON_EC2\",\n      \"ips\": [\n        \"134.189.153.97\",\n        \"134.189.153.98\"\n      ],\n      \"stage\": \"GA\",\n      \"status\": \"ENABLED\",\n      \"capabilities\": [\n        \"BROWSER\",\n        \"HTTP\"\n      ]\n    },\n    {\n      \"name\": \"My private location\",\n      \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n      \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n      \"type\": \"PRIVATE\",\n      \"status\": \"ENABLED\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "a606b6a0-9a29-43af-b99d-591107e80cf0",
                            "name": "Creates a new private synthetic location",
                            "request": {
                                "name": "Creates a new private synthetic location",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "locations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[object Object]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "b122ff52-637e-4e4f-ad21-d679e1c72152",
                                    "name": "Success. The private location has been created. The response contains the ID of the new location.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"entityId\": \"consectetur culpa labore ea\",\n  \"geoLocationId\": \"cupidatat ut quis\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "1ada1783-f745-407e-ac34-a6e4f5b3ce9d",
                            "name": "{location Id}",
                            "item": [
                                {
                                    "id": "dde6622f-0421-4ea8-b0ca-ec4950c75da7",
                                    "name": "Gets properties of the specified location",
                                    "request": {
                                        "name": "Gets properties of the specified location",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                ":locationId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "locationId",
                                                    "description": "(Required) The Dynatrace entity ID of the required location."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "091bee4d-cfcf-4da6-ab31-bc4cf816a4ec",
                                            "name": "Success. The response contains parameters of the synthetic location.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        ":locationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "locationId",
                                                            "description": "(Required) The Dynatrace entity ID of the required location."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"entityId\": \"<string>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"regionCode\": \"<string>\",\n  \"city\": \"<string>\",\n  \"status\": \"<string>\",\n  \"geoLocationId\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "a53ad69e-21ce-4232-bdb1-4f1de5ffc1a3",
                                    "name": "Updates the specified synthetic location",
                                    "request": {
                                        "name": "Updates the specified synthetic location",
                                        "description": {
                                            "content": "For public locations you can only change the location status.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                ":locationId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "locationId",
                                                    "description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "d92cf749-1ba7-478f-82b6-7126e9786078",
                                            "name": "Success. The location has been updated. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        ":locationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "locationId",
                                                            "description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "d7cebd72-12bf-47e0-a83b-eb5061c531a8",
                                    "name": "Deletes the specified private synthetic location",
                                    "request": {
                                        "name": "Deletes the specified private synthetic location",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                ":locationId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "locationId",
                                                    "description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
                                                }
                                            ]
                                        },
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "3996c1ad-a2d0-4d6e-96b6-4ecefb850309",
                                            "name": "Success. The location has been deleted. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        ":locationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "locationId",
                                                            "description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "7779a582-2b4f-45e4-85da-c1b7cbf52cc8",
                            "name": "status",
                            "item": [
                                {
                                    "id": "fc58793e-7b6e-4ee3-aa3d-d6552229997f",
                                    "name": "Checks the status of public synthetic locations",
                                    "request": {
                                        "name": "Checks the status of public synthetic locations",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                "status"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "6542bc56-8aaa-42b1-bbc2-b11242399ae2",
                                            "name": "Success. The response contains the public locations status.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        "status"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": []
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"publicLocationsEnabled\": true\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "b45d554f-2e3b-4356-8731-e21f640e61a9",
                                    "name": "Changes the status of public synthetic locations",
                                    "request": {
                                        "name": "Changes the status of public synthetic locations",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                "status"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "5f5ce968-c6d1-480c-a0b9-5abb1cac3114",
                                            "name": "Success. Locations status has been updated.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        "status"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": []
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "c48b5a7a-4368-48fa-bae8-e398f10cbc24",
                                            "name": "Conflict. Public locations couldn't be disabled because there are monitors assigned to them.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        "status"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": []
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "ddf12cf6-d837-46ae-8cc4-469ae7263249",
                    "name": "nodes",
                    "item": [
                        {
                            "id": "451d941d-dded-4354-b4cf-f52e27a06fc4",
                            "name": "Lists all synthetic nodes available in your environment",
                            "request": {
                                "name": "Lists all synthetic nodes available in your environment",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "nodes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "24eafe4b-276f-476d-ba4c-85fbdd9a49fe",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "nodes"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"nodes\": [\n    {\n      \"entityId\": \"3086117876\",\n      \"hostname\": \"gdn.dyna.trace\",\n      \"ips\": [\n        \"238.245.160.14\"\n      ],\n      \"version\": \"1.161.0.20181210-173639\",\n      \"browserMonitorsEnabled\": true,\n      \"activeGateVersion\": \"1.172.2.20190607-040913\",\n      \"oneAgentRoutingEnabled\": true,\n      \"operatingSystem\": \"Linux\",\n      \"autoUpdateEnabled\": true,\n      \"status\": \"Running\",\n      \"playerVersion\": \"1.179.0.20190920-145430\",\n      \"healthCheckStatus\": \"Ok\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "da159b72-7354-418b-b071-303423c44bad",
                            "name": "Lists properties of the specified synthetic node",
                            "request": {
                                "name": "Lists properties of the specified synthetic node",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "nodes",
                                        ":nodeId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "nodeId",
                                            "description": "(Required) The ID of the required synthetic node."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "4b0ddea8-429d-4bd7-9a5f-a4e413d9f41e",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "nodes",
                                                ":nodeId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "nodeId",
                                                    "description": "(Required) The ID of the required synthetic node."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"entityId\": \"3086117876\",\n  \"hostname\": \"gdn.dyna.trace\",\n  \"ips\": [\n    \"238.245.160.14\"\n  ],\n  \"version\": \"1.161.0.20181210-173639\",\n  \"browserMonitorsEnabled\": true,\n  \"activeGateVersion\": \"1.172.2.20190607-040913\",\n  \"oneAgentRoutingEnabled\": true,\n  \"operatingSystem\": \"Linux\",\n  \"autoUpdateEnabled\": true,\n  \"status\": \"Running\",\n  \"playerVersion\": \"1.179.0.20190920-145430\",\n  \"healthCheckStatus\": \"Ok\",\n  \"browserType\": \"Chrome\",\n  \"browserVersion\": \"69.0.3497.81\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "362d6463-fe5e-4629-aec0-520a0144bcac",
                    "name": "executions",
                    "item": [
                        {
                            "id": "3b98da58-c303-4858-ae7f-e6d8b9e1ef2b",
                            "name": "Gets the list of all on-demand executions of synthetic monitors | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Gets the list of all on-demand executions of synthetic monitors | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "executions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "executionStage",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of executions by their stage."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "schedulingFrom",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe for scheduling timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "schedulingTo",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe for scheduling timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "executionFrom",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe for execution timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "executionTo",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe for execution timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "dataDeliveryFrom",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe for data delivering timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "dataDeliveryTo",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe for data delivering timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "batchId",
                                            "value": "<long>",
                                            "description": "Filters the resulting set of the executions by batch. Specify the ID of the batch."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "monitorId",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of the executions by monitor synthetic monitor. Specify the ID of the monitor."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "locationId",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of the executions by Synthetic location. Specify the ID of the location."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "userId",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of executions by scheduled user."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "source",
                                            "value": "<string>",
                                            "description": "Filters the resulting set of the executions by the source of the triggering request."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "50b553f6-fdb9-4147-bf6c-560c35e5d36d",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "executionStage",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "schedulingFrom",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "schedulingTo",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "executionFrom",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "executionTo",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "dataDeliveryFrom",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "dataDeliveryTo",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "batchId",
                                                    "value": "<long>"
                                                },
                                                {
                                                    "key": "monitorId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "locationId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "userId",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "source",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"executions\": [\n    {\n      \"batchId\": \"esse est\",\n      \"dataDeliveryTimestamp\": 91392004,\n      \"executionId\": \"conse\",\n      \"executionStage\": \"TRIGGERED\",\n      \"executionTimestamp\": -65293631,\n      \"locationId\": \"commodo aute\",\n      \"monitorId\": \"ad adipisicing deserunt sint voluptate\",\n      \"processingMode\": \"UNKNOWN\",\n      \"schedulingTimestamp\": -29510640,\n      \"source\": \"API\",\n      \"userId\": \"mollit voluptat\",\n      \"metadata\": {\n        \"sint_c4f\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"simpleResults\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fullResults\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"batchId\": \"elit ut cupidatat dolore\",\n      \"dataDeliveryTimestamp\": 19707297,\n      \"executionId\": \"eu in Lorem et\",\n      \"executionStage\": \"TIMED_OUT\",\n      \"executionTimestamp\": 16085644,\n      \"locationId\": \"sed proident\",\n      \"monitorId\": \"comm\",\n      \"processingMode\": \"EXECUTIONS_DETAILS_ONLY\",\n      \"schedulingTimestamp\": -29570701,\n      \"source\": \"API\",\n      \"userId\": \"sed consequat\",\n      \"metadata\": {\n        \"non_1e2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"simpleResults\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fullResults\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "05607a27-a453-49c4-8156-19d594b007c1",
                            "name": "batch",
                            "item": [
                                {
                                    "id": "74297b49-3b42-401b-9e84-f2de04990f17",
                                    "name": "Triggers on-demand executions for synthetic monitors | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Triggers on-demand executions for synthetic monitors | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions",
                                                "batch"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[object Object]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "4d63ce48-b0fb-4e35-8de5-36f59c4e07e9",
                                            "name": "Success. The monitor's execution response details",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "executions",
                                                        "batch"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": []
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "[object Object]",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Created",
                                            "code": 201,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"batchId\": \"dese\",\n  \"triggeredCount\": 16192863,\n  \"triggeringProblemsCount\": -73153499,\n  \"triggeringProblemsDetails\": [\n    {\n      \"cause\": \"laboris \",\n      \"entityId\": \"enim sed\",\n      \"locationId\": \"occaecat se\"\n    },\n    {\n      \"cause\": \"cillum eiusmod cupidatat dolore\",\n      \"entityId\": \"in dolore enim occaecat in\",\n      \"locationId\": \"ut exercitation\"\n    }\n  ],\n  \"triggered\": [\n    {\n      \"executions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"monitorId\": \"voluptate\"\n    },\n    {\n      \"executions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"monitorId\": \"do in\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "a357e8ca-15c5-43f6-9dec-e81583a17a7f",
                                    "name": "Gets summary information and the list of failed executions for the given batch ID | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Gets summary information and the list of failed executions for the given batch ID | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions",
                                                "batch",
                                                ":batchId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<long>",
                                                    "key": "batchId",
                                                    "description": "(Required) The batch identifier of the executions."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "189379f2-2586-4810-a71c-572e2d1c85ec",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "executions",
                                                        "batch",
                                                        ":batchId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<long>",
                                                            "key": "batchId",
                                                            "description": "(Required) The batch identifier of the executions."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"batchId\": \"est dolor\",\n  \"batchStatus\": \"FAILED\",\n  \"executedCount\": -92707624,\n  \"failedCount\": 56990396,\n  \"failedToExecuteCount\": -8952798,\n  \"triggeredCount\": -30864431,\n  \"userId\": \"occaecat\",\n  \"failedExecutions\": [\n    {\n      \"errorCode\": \"minim esse tempor\",\n      \"executionId\": \"irure cupidatat adipisicing dolore\",\n      \"locationId\": \"eiusmod do aut\",\n      \"monitorId\": \"ipsum anim dolor\",\n      \"executionStage\": \"TRIGGERED\",\n      \"failureMessage\": \"occaecat magna ut ad\",\n      \"executionTimestamp\": 41832167\n    },\n    {\n      \"errorCode\": \"ex nisi ea sint qui\",\n      \"executionId\": \"tempor nostrud in Lorem proident\",\n      \"locationId\": \"ex dolor aliqua\",\n      \"monitorId\": \"esse sit adipisicing labore\",\n      \"executionStage\": \"EXECUTED\",\n      \"failureMessage\": \"magna veniam\",\n      \"executionTimestamp\": 60344601\n    }\n  ],\n  \"failedToExecute\": [\n    {\n      \"errorCode\": \"ex non\",\n      \"executionId\": \"pariatur\",\n      \"locationId\": \"in et Lorem ullamco \",\n      \"monitorId\": \"adipisicing\",\n      \"executionStage\": \"EXECUTED\",\n      \"failureMessage\": \"culpa\",\n      \"executionTimestamp\": -18584294\n    },\n    {\n      \"errorCode\": \"eiusmod pariatur c\",\n      \"executionId\": \"exercitation esse\",\n      \"locationId\": \"culpa dolor dolor Duis\",\n      \"monitorId\": \"consectetur sed nostrud\",\n      \"executionStage\": \"DATA_RETRIEVED\",\n      \"failureMessage\": \"labore exercitation\",\n      \"executionTimestamp\": -53338372\n    }\n  ],\n  \"metadata\": {\n    \"cillum_2\": \"dolore dolor in exercitation\"\n  },\n  \"triggeringProblemsCount\": 31097185,\n  \"triggeringProblems\": [\n    {\n      \"cause\": \"Duis nulla\",\n      \"entityId\": \"anim sit\",\n      \"locationId\": \"adipisicing nostrud\"\n    },\n    {\n      \"cause\": \"reprehenderit Lorem sunt occaecat\",\n      \"entityId\": \"in commodo consectetur\",\n      \"locationId\": \"ex commodo\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "6815c43c-cb0a-4dbd-ba2e-9d7a81bbd245",
                            "name": "{execution Id}",
                            "item": [
                                {
                                    "id": "3ec8d238-ca4f-44f5-b334-c109ffbb0727",
                                    "name": "Gets basic results of the specified on-demand execution | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Gets basic results of the specified on-demand execution | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions",
                                                ":executionId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<long>",
                                                    "key": "executionId",
                                                    "description": "(Required) The identifier of the on-demand execution."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "f90fd005-2f75-4caa-861f-7ffdf8d306f9",
                                            "name": "Success. The response contains basic information about the on-demand execution.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "executions",
                                                        ":executionId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<long>",
                                                            "key": "executionId",
                                                            "description": "(Required) The identifier of the on-demand execution."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"batchId\": \"ut ad sunt\",\n  \"dataDeliveryTimestamp\": -39187842,\n  \"executionId\": \"nostrud laborum \",\n  \"executionStage\": \"EXECUTED\",\n  \"executionTimestamp\": 43122627,\n  \"locationId\": \"proident commodo aute\",\n  \"monitorId\": \"adipisicing ex\",\n  \"processingMode\": \"UNKNOWN\",\n  \"schedulingTimestamp\": 3843931,\n  \"source\": \"UI\",\n  \"userId\": \"eiusmod veniam \",\n  \"metadata\": {\n    \"ad5\": \"proident comm\"\n  },\n  \"simpleResults\": {\n    \"status\": \"in est\",\n    \"failureMessage\": \"sed ex nisi qui\",\n    \"errorCode\": \"Duis sunt adipisicing\",\n    \"responseStatusCode\": 39548212,\n    \"executedSteps\": -32325171,\n    \"engineId\": -82432195,\n    \"startTimestamp\": 42714642,\n    \"publicLocation\": false,\n    \"responseSize\": -87381827,\n    \"responseBodySizeLimitExceeded\": false,\n    \"peerCertificateExpiryDate\": -81033846,\n    \"totalTime\": 31855428,\n    \"hostNameResolutionTime\": 16215532,\n    \"tcpConnectTime\": -73717621,\n    \"tlsHandshakeTime\": 30753417,\n    \"timeToFirstByte\": 58206855,\n    \"redirectionTime\": 47339725,\n    \"redirectsCount\": -99523129,\n    \"httperror\": true,\n    \"chromeError\": false\n  },\n  \"fullResults\": {\n    \"status\": \"e\",\n    \"failureMessage\": \"fugiat eiusmod dolor ad \",\n    \"errorCode\": \"occaecat deserunt velit\",\n    \"executionStepCount\": 94489121,\n    \"executionSteps\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "b68abed7-0686-4ff7-9077-d1ec1f699831",
                                    "name": "Gets detailed results of the specified on-demand execution | maturity=EARLY_ADOPTER",
                                    "request": {
                                        "name": "Gets detailed results of the specified on-demand execution | maturity=EARLY_ADOPTER",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "executions",
                                                ":executionId",
                                                "fullReport"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<long>",
                                                    "key": "executionId",
                                                    "description": "(Required) The identifier of the on-demand execution."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "82e7eb3e-7320-468f-b825-d76f1e4371e7",
                                            "name": "Success. The response contains detailed information about the on-demand execution.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "executions",
                                                        ":executionId",
                                                        "fullReport"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<long>",
                                                            "key": "executionId",
                                                            "description": "(Required) The identifier of the on-demand execution."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "Api-Token {{DT_TOKEN}}"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"batchId\": \"fugiat ullamco sed deserunt\",\n  \"dataDeliveryTimestamp\": 48837114,\n  \"executionId\": \"fugiat ut\",\n  \"executionStage\": \"TRIGGERED\",\n  \"executionTimestamp\": 66604838,\n  \"locationId\": \"eu ut\",\n  \"monitorId\": \"fugiat aliqua esse\",\n  \"processingMode\": \"EXECUTIONS_DETAILS_ONLY\",\n  \"schedulingTimestamp\": 65579265,\n  \"source\": \"UI\",\n  \"userId\": \"Excepteur officia\",\n  \"metadata\": {\n    \"ut_c\": \"anim ea reprehenderit in\"\n  },\n  \"simpleResults\": {\n    \"status\": \"aute\",\n    \"failureMessage\": \"aliqua elit veniam nisi\",\n    \"errorCode\": \"consequat labore consect\",\n    \"responseStatusCode\": 26594569,\n    \"executedSteps\": -46850799,\n    \"engineId\": -23678261,\n    \"startTimestamp\": 55964583,\n    \"publicLocation\": false,\n    \"responseSize\": 976128,\n    \"responseBodySizeLimitExceeded\": false,\n    \"peerCertificateExpiryDate\": 1861003,\n    \"totalTime\": 87304551,\n    \"hostNameResolutionTime\": -74219545,\n    \"tcpConnectTime\": -92380634,\n    \"tlsHandshakeTime\": 15199078,\n    \"timeToFirstByte\": -28281453,\n    \"redirectionTime\": 12660901,\n    \"redirectsCount\": 96886890,\n    \"httperror\": true,\n    \"chromeError\": false\n  },\n  \"fullResults\": {\n    \"status\": \"nostrud nisi elit\",\n    \"failureMessage\": \"consectetur veniam ut Lorem\",\n    \"errorCode\": \"fugiat anim quis Ut id\",\n    \"executionStepCount\": 19546668,\n    \"executionSteps\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "9ce3d291-56bc-4d77-97ab-73b4bf882627",
            "name": "tenant Token Rotation",
            "item": [
                {
                    "id": "a6f64acd-200f-4984-b250-a8fb37317a2f",
                    "name": "Cancels tenant token rotation",
                    "request": {
                        "name": "Cancels tenant token rotation",
                        "description": {
                            "content": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tenantTokenRotation",
                                "cancel"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "9ed32f26-e021-4e8f-a9eb-10a42902b92d",
                            "name": "Success. Rotation process has been cancelled. The current tenant token remains valid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "cancel"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"active\": {\n    \"value\": \"magna do ullamco dolore esse\"\n  },\n  \"old\": {\n    \"value\": \"in dolor ex eiusm\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dbae0e32-e149-431b-b4fc-d3b5a07702f0",
                            "name": "Failed. There is no ongoing rotation process.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "cancel"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "503d1b81-79a5-4214-8647-2af40f26d256",
                    "name": "Finishes tenant token rotation",
                    "request": {
                        "name": "Finishes tenant token rotation",
                        "description": {
                            "content": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tenantTokenRotation",
                                "finish"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "f0a05f9a-0d52-45af-9b1e-768256529545",
                            "name": "Success. The rotation process is completed. The **active** field of the response contains the new tenant token.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "finish"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"active\": {\n    \"value\": \"magna do ullamco dolore esse\"\n  },\n  \"old\": {\n    \"value\": \"in dolor ex eiusm\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9bd4bdac-aa76-4c57-b24f-43ccb74a351a",
                            "name": "No ongoing rotation process.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "finish"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7a645af5-f55c-4de4-8a7e-eeff92dc0b70",
                    "name": "Starts tenant token rotation",
                    "request": {
                        "name": "Starts tenant token rotation",
                        "description": {
                            "content": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tenantTokenRotation",
                                "start"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "eb4575d8-7ec4-4bed-8afe-df3eb4eb2a00",
                            "name": "Success. The new tenant token is created and will replace the old one. The **active** field of the response contains the new tenant token.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "start"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"active\": {\n    \"value\": \"magna do ullamco dolore esse\"\n  },\n  \"old\": {\n    \"value\": \"in dolor ex eiusm\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9b0190dd-eda3-4932-8902-2cb2b07466ea",
                            "name": "Failed. Another rotation process is already in progress.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tenantTokenRotation",
                                        "start"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sed exercitation\",\n    \"code\": 99963793\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "67c1fa62-2da6-44ac-acd9-a12e951221cd",
            "name": "units",
            "item": [
                {
                    "id": "050ea2e4-cd9a-4988-8e85-d139b109f52e",
                    "name": "Lists all available units",
                    "request": {
                        "name": "Lists all available units",
                        "description": {
                            "content": "You can narrow down the output by providing filter criteria in the **unitSelector** field.\n\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "units"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "unitSelector",
                                    "value": "<string>",
                                    "description": "Selects units to be included to the response. Available criteria: \n* Compatibility: `compatibleTo(\"unit\",\"display-format\")`. Returns units that can be converted to the specified unit. The optional display format (`binary` or `decimal`) argument is supported by bit- and byte-based units and returns only units for the specified format."
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Defines the list of properties to be included in the response. The ID of the unit is **always** included. The following additional properties are available: \n\n* `displayName`: The display name of the unit. \n* `symbol`: The symbol of the unit. \n* `description`: A short description of the unit.\n\nBy default, the ID, the display name, and the symbol are included. \n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`.\n\nTo specify several properties, join them with a comma (for example `fields=+description,-symbol`).\n\nIf you specify just one property, the response contains the unitId and the specified property. To return unit IDs only, specify `unitId` here."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "df96bf26-0587-49de-9974-156452a99277",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "units"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "unitSelector",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "Api-Token {{DT_TOKEN}}"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 2,\n  \"units\": [\n    {\n      \"unitId\": \"BytePerSecond\",\n      \"displayName\": \"byte per second\",\n      \"displayNamePlural\": \"bytes per second\",\n      \"symbol\": \"B/s\",\n      \"description\": \"byte per second\"\n    },\n    {\n      \"unitId\": \"BytePerMinute\",\n      \"displayName\": \"byte per minute\",\n      \"displayNamePlural\": \"bytes per minute\",\n      \"symbol\": \"B/min\",\n      \"description\": \"byte per minute\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "63c39c14-bfd6-4c94-9225-f08de3747c7e",
                    "name": "{unit Id}",
                    "item": [
                        {
                            "id": "81f30eb5-89d8-4003-b224-3676e41df8b0",
                            "name": "Gets the properties of the specified unit",
                            "request": {
                                "name": "Gets the properties of the specified unit",
                                "description": {},
                                "url": {
                                    "path": [
                                        "units",
                                        ":unitId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "unitId",
                                            "description": "(Required) The ID of the required unit."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "d0cda0a3-2816-434a-bddf-f1877bd75ac9",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "units",
                                                ":unitId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "unitId",
                                                    "description": "(Required) The ID of the required unit."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"unitId\": \"Second\",\n  \"displayName\": \"second\",\n  \"displayNamePlural\": \"seconds\",\n  \"symbol\": \"s\",\n  \"description\": \"The second is the base unit of time and defined as 1/86400 of a day.\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "1cfeedc1-d97b-48a8-87b6-98a6a0247249",
                                    "name": "Not found. The requested resource is not found or the query is incorrect.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "units",
                                                ":unitId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "unitId",
                                                    "description": "(Required) The ID of the required unit."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "704f9e45-86e7-4155-82b2-f4aac9ab225f",
                            "name": "Converts a value from a source unit into a target unit",
                            "request": {
                                "name": "Converts a value from a source unit into a target unit",
                                "description": {
                                    "content": "If no target unit is set, the request finds an appropriate target unit automatically, taking into account the preferred number format (if specified).",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "units",
                                        ":unitId",
                                        "convert"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "value",
                                            "value": "<double>",
                                            "description": "(Required) The value to be converted."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "targetUnit",
                                            "value": "<string>",
                                            "description": "The ID of the target unit. \n\nIf not set, the request finds an appropriate target unit automatically, based on the specified number format."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "numberFormat",
                                            "value": "<string>",
                                            "description": "The preferred number format of the target value. You can specify the following formats: \n\n* `binary` \n* `decimal` \n\n`Only used if the target unit if not set."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "unitId",
                                            "description": "(Required) The ID of the source unit."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "2cf6433c-803d-4a03-bf99-f463196a1eac",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "units",
                                                ":unitId",
                                                "convert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "value",
                                                    "value": "<double>"
                                                },
                                                {
                                                    "key": "targetUnit",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "numberFormat",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "unitId",
                                                    "description": "(Required) The ID of the source unit."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"resultValue\": 68936059.58217108,\n  \"unitId\": \"dolore Lorem cupidatat\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "359dbd89-6abb-45ce-8e12-65352f3eb569",
                                    "name": "Not found. The requested resource is not found or the query is incorrect.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "units",
                                                ":unitId",
                                                "convert"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "value",
                                                    "value": "<double>"
                                                },
                                                {
                                                    "key": "targetUnit",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "numberFormat",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "unitId",
                                                    "description": "(Required) The ID of the source unit."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "Api-Token {{DT_TOKEN}}"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        }
    ],
    "event": [],
    "variable": [
        {
            "type": "string",
            "value": "https://{{DT_HOST}}/api/v2",
            "key": "baseUrl"
        }
    ],
    "info": {
        "_postman_id": "4c384395-d8f4-41d0-8236-4f6696a665da",
        "name": "Dynatrace Environment API v2",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "\nDocumentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress. \n\nIf you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
            "type": "text/plain"
        }
    }
}