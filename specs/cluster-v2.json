{
    "item": [
        {
            "id": "7b6f153e-889c-4da0-b5a4-ee1f98b07013",
            "name": "license/consumption",
            "item": [
                {
                    "id": "56f1f229-cb73-4f89-87ec-7f56e6250061",
                    "name": "Export license consumption data",
                    "request": {
                        "name": "Export license consumption data",
                        "description": {
                            "content": "Export license consumption data as a ZIP archive.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "license",
                                "consumption"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "startTs",
                                    "value": "<long>",
                                    "description": "Start timestamp (30 days ago by default)"
                                },
                                {
                                    "disabled": false,
                                    "key": "endTs",
                                    "value": "<long>",
                                    "description": "End timestamp (2 hours ago by default, values from the last 2 hours are not allowed)"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/octet-stream"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "13f5507a-fc68-4da8-a8cd-96680a80da04",
                            "name": "OK - license consumption data export will start",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "license",
                                        "consumption"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTs",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "endTs",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/octet-stream"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "94684162-be7d-40d2-a6ee-2d12dd71a96f",
                            "name": "Bad request. Provided time range is incorrect.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "license",
                                        "consumption"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTs",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "endTs",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "5d2c1e57-177f-4b2e-a545-840600785c4b",
                            "name": "License consumption data is already being exported. Please wait for the first request to finish before requesting another export.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "license",
                                        "consumption"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTs",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "endTs",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "37eaf280-eeed-4caf-a912-c374c840e698",
                            "name": "Operation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "license",
                                        "consumption"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTs",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "endTs",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "2faa85c4-9a80-478b-b99f-8186f08342c0",
                    "name": "Retrieve license consumption",
                    "request": {
                        "name": "Retrieve license consumption",
                        "description": {},
                        "url": {
                            "path": [
                                "license",
                                "consumption",
                                "hour"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "startTs",
                                    "value": "<long>",
                                    "description": "Begin timestamp"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "47f45d3e-9540-4f43-9795-4c858b5d13f4",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "license",
                                        "consumption",
                                        "hour"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTs",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"clusterUuid\": \"veniam irure in Excepteur\",\n  \"timeFrameStart\": \"2004-02-24T17:30:23.204Z\",\n  \"timeFrameEnd\": \"2021-07-03T20:49:41.863Z\",\n  \"environmentBillingEntries\": [\n    {\n      \"environmentUuid\": \"aliqua laboris\",\n      \"visits\": -22397754,\n      \"mobileSessions\": 79078455,\n      \"totalRUMUserPropertiesUsed\": -35967205,\n      \"newProblems\": -93774975,\n      \"hostUsages\": [\n        {\n          \"osiId\": 73596743,\n          \"hostName\": \"sint reprehenderit qui Duis et\",\n          \"hostCategory\": \"adipisicing\",\n          \"agentUsages\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"infrastructureOnly\": false,\n          \"paas\": false,\n          \"passMemoryLimit\": -98332517,\n          \"vendorTypeId\": -85405058,\n          \"hostMemoryBytes\": -22886816,\n          \"premiumLogAnalytics\": true,\n          \"hasContainers\": true\n        },\n        {\n          \"osiId\": 99373556,\n          \"hostName\": \"anim aliquip culpa\",\n          \"hostCategory\": \"dolor deserunt dolor Duis\",\n          \"agentUsages\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"infrastructureOnly\": true,\n          \"paas\": true,\n          \"passMemoryLimit\": -96068556,\n          \"vendorTypeId\": -75278682,\n          \"hostMemoryBytes\": -64835356,\n          \"premiumLogAnalytics\": true,\n          \"hasContainers\": true\n        }\n      ],\n      \"downloads\": [\n        {\n          \"type\": \"magna tempor do laborum\",\n          \"downloadCount\": -42514332,\n          \"version\": \"adipisicing reprehenderit in cillum\",\n          \"firstDownloadTime\": \"2004-08-06T08:12:46.458Z\"\n        },\n        {\n          \"type\": \"officia eu aliquip do\",\n          \"downloadCount\": -58834462,\n          \"version\": \"proident adipisicing ad pariatur laborum\",\n          \"firstDownloadTime\": \"1971-05-21T23:44:30.998Z\"\n        }\n      ],\n      \"syntheticUsages\": [\n        {\n          \"monitorDefinitionId\": \"cupidatat adipisicing Ut\",\n          \"monitorDescription\": \"Duis consectetur reprehenderit veniam sed\",\n          \"monitorTypeId\": -6997928,\n          \"successCount\": 19444291,\n          \"failureCount\": -60550737,\n          \"syntheticActionCount\": -75935043,\n          \"performedSyntheticActions\": 91672896\n        },\n        {\n          \"monitorDefinitionId\": \"aliqua do adipisicing sunt elit\",\n          \"monitorDescription\": \"veniam Lorem\",\n          \"monitorTypeId\": -17437695,\n          \"successCount\": -69450039,\n          \"failureCount\": -46125797,\n          \"syntheticActionCount\": -91111343,\n          \"performedSyntheticActions\": 88954898\n        }\n      ],\n      \"syntheticBillingUsage\": [\n        {\n          \"monitorTypeId\": -38655277,\n          \"testId\": -5336320,\n          \"publicExecutions\": 70399303,\n          \"privateExecutions\": 47798557\n        },\n        {\n          \"monitorTypeId\": -2884667,\n          \"testId\": 79376431,\n          \"publicExecutions\": -84169601,\n          \"privateExecutions\": -57801875\n        }\n      ],\n      \"customMetrics\": [\n        {\n          \"source\": \"JMX, Dynatrace API\",\n          \"total\": 74787507\n        },\n        {\n          \"source\": \"JMX, Dynatrace API\",\n          \"total\": -13851052\n        }\n      ],\n      \"davisDataUnits\": [\n        {\n          \"pool\": \"Metrics, Serverless Functions, Log\",\n          \"total\": -88438993.88380629\n        },\n        {\n          \"pool\": \"Metrics, Serverless Functions, Log\",\n          \"total\": 80053628.23245722\n        }\n      ],\n      \"trial\": true,\n      \"internalUse\": false,\n      \"highAvailabilityCluster\": true,\n      \"logStorageUsageBytes\": -80141040,\n      \"logUploadVolumeBytes\": 44344791,\n      \"sessionReplays\": -70627288,\n      \"mobileSessionReplays\": -22708166\n    },\n    {\n      \"environmentUuid\": \"in tempor qui\",\n      \"visits\": -7247193,\n      \"mobileSessions\": 93121999,\n      \"totalRUMUserPropertiesUsed\": 60204025,\n      \"newProblems\": 15534431,\n      \"hostUsages\": [\n        {\n          \"osiId\": 9783114,\n          \"hostName\": \"mol\",\n          \"hostCategory\": \"deserunt cupid\",\n          \"agentUsages\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"infrastructureOnly\": false,\n          \"paas\": false,\n          \"passMemoryLimit\": -2506677,\n          \"vendorTypeId\": 5676546,\n          \"hostMemoryBytes\": 58312788,\n          \"premiumLogAnalytics\": true,\n          \"hasContainers\": false\n        },\n        {\n          \"osiId\": -58027830,\n          \"hostName\": \"dolore in\",\n          \"hostCategory\": \"Lorem\",\n          \"agentUsages\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"infrastructureOnly\": false,\n          \"paas\": true,\n          \"passMemoryLimit\": -28696006,\n          \"vendorTypeId\": -45082194,\n          \"hostMemoryBytes\": -98251491,\n          \"premiumLogAnalytics\": true,\n          \"hasContainers\": false\n        }\n      ],\n      \"downloads\": [\n        {\n          \"type\": \"dolor\",\n          \"downloadCount\": -8305694,\n          \"version\": \"minim fugiat tempor quis\",\n          \"firstDownloadTime\": \"2007-07-19T23:07:47.611Z\"\n        },\n        {\n          \"type\": \"quis esse sunt\",\n          \"downloadCount\": -2094445,\n          \"version\": \"culpa laboris anim in\",\n          \"firstDownloadTime\": \"2003-09-23T21:08:06.894Z\"\n        }\n      ],\n      \"syntheticUsages\": [\n        {\n          \"monitorDefinitionId\": \"cupidatat nisi sed Excepteur cillum\",\n          \"monitorDescription\": \"laborum eiusmod\",\n          \"monitorTypeId\": 74796894,\n          \"successCount\": -79288025,\n          \"failureCount\": -67922353,\n          \"syntheticActionCount\": -63900762,\n          \"performedSyntheticActions\": 374297\n        },\n        {\n          \"monitorDefinitionId\": \"laborum\",\n          \"monitorDescription\": \"Duis tempor vol\",\n          \"monitorTypeId\": -46833692,\n          \"successCount\": 41199301,\n          \"failureCount\": 42229317,\n          \"syntheticActionCount\": 81008383,\n          \"performedSyntheticActions\": 76689497\n        }\n      ],\n      \"syntheticBillingUsage\": [\n        {\n          \"monitorTypeId\": -62686264,\n          \"testId\": -44655791,\n          \"publicExecutions\": -40868731,\n          \"privateExecutions\": 88479518\n        },\n        {\n          \"monitorTypeId\": 32806037,\n          \"testId\": 31431450,\n          \"publicExecutions\": 1930666,\n          \"privateExecutions\": 81017344\n        }\n      ],\n      \"customMetrics\": [\n        {\n          \"source\": \"JMX, Dynatrace API\",\n          \"total\": -71353756\n        },\n        {\n          \"source\": \"JMX, Dynatrace API\",\n          \"total\": 62210795\n        }\n      ],\n      \"davisDataUnits\": [\n        {\n          \"pool\": \"Metrics, Serverless Functions, Log\",\n          \"total\": 38018031.601818144\n        },\n        {\n          \"pool\": \"Metrics, Serverless Functions, Log\",\n          \"total\": 35027093.85944757\n        }\n      ],\n      \"trial\": true,\n      \"internalUse\": false,\n      \"highAvailabilityCluster\": true,\n      \"logStorageUsageBytes\": 10206576,\n      \"logUploadVolumeBytes\": 67181634,\n      \"sessionReplays\": -457320,\n      \"mobileSessionReplays\": 71131784\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2777bf74-7c38-4a07-a26c-e885d7b70c8d",
                            "name": "Bad request. Provided timestamp is incorrect.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "license",
                                        "consumption",
                                        "hour"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTs",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7e1cdf39-31a4-4c5a-a64b-374d55647e41",
                            "name": "Operation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "license",
                                        "consumption",
                                        "hour"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "startTs",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "d847b46a-2da6-4c72-874c-52967be183e5",
            "name": "environments",
            "item": [
                {
                    "id": "6b7d26ee-c959-407d-bfd0-a94f130dab63",
                    "name": "Lists all existing environments.",
                    "request": {
                        "name": "Lists all existing environments.",
                        "description": {},
                        "url": {
                            "path": [
                                "environments"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of environments in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "sort",
                                    "value": "<string>",
                                    "description": "The sort order. Possible sorts orders are:\n * 'name' (without quotes): Sort by name ascending.\n * '-name' (without quotes): Sort by name descending.\n * 'creationDate' (without quotes): Sort by creation date ascending.\n * '-creationDate' (without quotes): Sort by name descending.\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "filter",
                                    "value": "<string>",
                                    "description": "Specifies the filter of the query. \n\nYou can set one or several of the following criteria:\n* Name: `name(string)`. The name can be either a substring or the full name of an environment. Case-insensitive.\n* Trial: `trial(true)` or `trial(false)`. Only includes trial environments if true is specified or only non-trial environments if false is specified.\n* State: `state(ENABLED)` or `state(DISABLED)`.\n* Tag: `tag(string)`. To filter by multiple tags by applying OR logic use `tag(string1,string2)`. To filter by multiple tags by applying AND logic use `tag(string1),tag(string2)`.\nTo set several criteria, separate them with a comma (`,`). Only results, matching **all** criteria, are included into response.\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "includeConsumptionInfo",
                                    "value": "<boolean>",
                                    "description": "If true, consumption information (limits, usage) is returned for each environment.\n\nReturned usage is typically up to 1 hour old. To obtain fresher data, you can use **includeUncachedConsumptionInfo** parameter instead."
                                },
                                {
                                    "disabled": false,
                                    "key": "includeStorageInfo",
                                    "value": "<boolean>",
                                    "description": "If true, storage information (limits, usage) is returned for each environment."
                                },
                                {
                                    "disabled": false,
                                    "key": "includeUncachedConsumptionInfo",
                                    "value": "<boolean>",
                                    "description": "If true, uncached consumption information (limits, usage) is returned for each environment.\n\nUp to date consumption will be calculated. Calculation may be time consuming, so it's recommended to use **includeConsumptionInfo** parameter instead.\n\nIf both this parameter and **includeConsumptionInfo** are set, **includeUncachedConsumptionInfo** will take priority."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "4609728c-f966-4754-87f9-06a10b341472",
                            "name": "Successful operation.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "environments"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "includeConsumptionInfo",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "includeStorageInfo",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "includeUncachedConsumptionInfo",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"environments\": [\n    {\n      \"name\": \"example environment\",\n      \"state\": \"ENABLED\",\n      \"tags\": [\n        \"tag1\",\n        \"tag2\"\n      ],\n      \"trial\": false\n    },\n    {\n      \"name\": \"example environment\",\n      \"state\": \"ENABLED\",\n      \"tags\": [\n        \"tag1\",\n        \"tag2\"\n      ],\n      \"trial\": false\n    }\n  ],\n  \"totalCount\": -58872618,\n  \"pageSize\": -67260147,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "0c7f09c8-bfd7-452e-b3bb-c4eee4c445bb",
                    "name": "Creates a new environment.",
                    "request": {
                        "name": "Creates a new environment.",
                        "description": {},
                        "url": {
                            "path": [
                                "environments"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "createToken",
                                    "value": "false",
                                    "description": "If true, a token management token with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement' (for usage with token API v1) is created when creating a new environment. This token is then returned in the response body. It can be used within the newly created environment to create other tokens for configuring this environment."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"trial\": \"<boolean>\",\n  \"state\": \"<string>\",\n  \"tags\": [\n    \"<string>\"\n  ],\n  \"quotas\": {\n    \"hostUnits\": {\n      \"maxLimit\": \"<long>\"\n    },\n    \"demUnits\": {\n      \"annualLimit\": \"<long>\",\n      \"monthlyLimit\": \"<long>\"\n    },\n    \"userSessions\": {\n      \"totalMonthlyLimit\": \"<long>\",\n      \"totalAnnualLimit\": \"<long>\"\n    },\n    \"sessionProperties\": {},\n    \"syntheticMonitors\": {\n      \"annualLimit\": \"<long>\",\n      \"monthlyLimit\": \"<long>\"\n    },\n    \"customMetrics\": {\n      \"maxLimit\": \"<long>\"\n    },\n    \"davisDataUnits\": {\n      \"annualLimit\": \"<long>\",\n      \"monthlyLimit\": \"<long>\"\n    },\n    \"logMonitoring\": {\n      \"annualLimit\": \"<long>\",\n      \"monthlyLimit\": \"<long>\"\n    }\n  },\n  \"storage\": {\n    \"transactionStorage\": {\n      \"maxLimit\": \"<long>\"\n    },\n    \"sessionReplayStorage\": {\n      \"maxLimit\": \"<long>\"\n    },\n    \"symbolFilesFromMobileApps\": {\n      \"maxLimit\": \"<long>\"\n    },\n    \"logMonitoringStorage\": {\n      \"maxLimit\": \"<long>\"\n    },\n    \"serviceRequestLevelRetention\": {\n      \"maxLimitInDays\": \"<long>\"\n    },\n    \"serviceCodeLevelRetention\": {\n      \"maxLimitInDays\": \"<long>\"\n    },\n    \"realUserMonitoringRetention\": {\n      \"maxLimitInDays\": \"<long>\"\n    },\n    \"syntheticMonitoringRetention\": {\n      \"maxLimitInDays\": \"<long>\"\n    },\n    \"sessionReplayRetention\": {\n      \"maxLimitInDays\": \"<long>\"\n    },\n    \"logMonitoringRetention\": {\n      \"maxLimitInDays\": \"<long>\"\n    },\n    \"userActionsPerMinute\": {\n      \"maxLimit\": \"<integer>\"\n    },\n    \"transactionTrafficQuota\": {\n      \"maxLimit\": \"<integer>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "7cdf0e93-90d9-4578-aba5-ab2ed2ba743e",
                            "name": "Success. The environment has been created and started. The response body contains the generated ID of the environment and a token with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement'. The location header contains the generated ID as well.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "environments"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "createToken",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"id\": \"adipisicing fugiat consequat in tempor\",\n  \"name\": \"Duis dolor id nostrud\",\n  \"description\": \"dolore Ut\",\n  \"tokenManagementToken\": \"ut sint est\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dd2f2cf3-3503-4e71-a05e-9e14f4bf229a",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "environments"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "createToken",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a3594fd3-dcbb-41e4-a770-7d718a748009",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "c577197f-c2fb-4d47-a88c-66e852c3e477",
                            "name": "Gets the properties of the specified environment.",
                            "request": {
                                "name": "Gets the properties of the specified environment.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "environments",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "includeConsumptionInfo",
                                            "value": "<boolean>",
                                            "description": "If true, consumption information (limits, usage) is returned for this environment.\n\nReturned usage is typically up to 1 hour old. To obtain fresher data, you can use **includeUncachedConsumptionInfo** parameter instead."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "includeStorageInfo",
                                            "value": "<boolean>",
                                            "description": "If true, storage information (limits, usage) is returned for this environment."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "includeUncachedConsumptionInfo",
                                            "value": "<boolean>",
                                            "description": "If true, uncached consumption information (limits, usage) is returned for this environment.\n\nUp to date consumption will be calculated. If both this parameter and **includeConsumptionInfo** are set, **includeUncachedConsumptionInfo** will take priority."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the environment."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "8c8e54ef-a964-49fc-a904-a71d557b518c",
                                    "name": "Successful operation.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "environments",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "includeConsumptionInfo",
                                                    "value": "<boolean>"
                                                },
                                                {
                                                    "key": "includeStorageInfo",
                                                    "value": "<boolean>"
                                                },
                                                {
                                                    "key": "includeUncachedConsumptionInfo",
                                                    "value": "<boolean>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the environment."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "a441d77d-bb19-439b-b4be-7a2b92961314",
                            "name": "Updates an existing environment or creates a new one.",
                            "request": {
                                "name": "Updates an existing environment or creates a new one.",
                                "description": {
                                    "content": "If the environment with the specified ID does not exist, a new environment will be created.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "environments",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "createToken",
                                            "value": "false",
                                            "description": "If true, a token management token with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement' (for usage with token API v1) is created when creating a new environment. This token is then returned in the response body. It can be used within the newly created environment to create other tokens for configuring this environment."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the environment to update.\n\n If you set the ID in the body as well, it must match this ID."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"trial\": \"<boolean>\",\n  \"state\": \"<string>\",\n  \"tags\": [\n    \"<string>\"\n  ],\n  \"quotas\": {\n    \"hostUnits\": {\n      \"maxLimit\": \"<long>\"\n    },\n    \"demUnits\": {\n      \"annualLimit\": \"<long>\",\n      \"monthlyLimit\": \"<long>\"\n    },\n    \"userSessions\": {\n      \"totalMonthlyLimit\": \"<long>\",\n      \"totalAnnualLimit\": \"<long>\"\n    },\n    \"sessionProperties\": {},\n    \"syntheticMonitors\": {\n      \"annualLimit\": \"<long>\",\n      \"monthlyLimit\": \"<long>\"\n    },\n    \"customMetrics\": {\n      \"maxLimit\": \"<long>\"\n    },\n    \"davisDataUnits\": {\n      \"annualLimit\": \"<long>\",\n      \"monthlyLimit\": \"<long>\"\n    },\n    \"logMonitoring\": {\n      \"annualLimit\": \"<long>\",\n      \"monthlyLimit\": \"<long>\"\n    }\n  },\n  \"storage\": {\n    \"transactionStorage\": {\n      \"maxLimit\": \"<long>\"\n    },\n    \"sessionReplayStorage\": {\n      \"maxLimit\": \"<long>\"\n    },\n    \"symbolFilesFromMobileApps\": {\n      \"maxLimit\": \"<long>\"\n    },\n    \"logMonitoringStorage\": {\n      \"maxLimit\": \"<long>\"\n    },\n    \"serviceRequestLevelRetention\": {\n      \"maxLimitInDays\": \"<long>\"\n    },\n    \"serviceCodeLevelRetention\": {\n      \"maxLimitInDays\": \"<long>\"\n    },\n    \"realUserMonitoringRetention\": {\n      \"maxLimitInDays\": \"<long>\"\n    },\n    \"syntheticMonitoringRetention\": {\n      \"maxLimitInDays\": \"<long>\"\n    },\n    \"sessionReplayRetention\": {\n      \"maxLimitInDays\": \"<long>\"\n    },\n    \"logMonitoringRetention\": {\n      \"maxLimitInDays\": \"<long>\"\n    },\n    \"userActionsPerMinute\": {\n      \"maxLimit\": \"<integer>\"\n    },\n    \"transactionTrafficQuota\": {\n      \"maxLimit\": \"<integer>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "3d450c75-4f33-4ef8-b467-9e38a6700174",
                                    "name": "Success. The new environment has been created. The response body contains the ID, the name and also a token management token if 'createToken' is 'true'.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "environments",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "createToken",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the environment to update.\n\n If you set the ID in the body as well, it must match this ID."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"id\": \"adipisicing fugiat consequat in tempor\",\n  \"name\": \"Duis dolor id nostrud\",\n  \"description\": \"dolore Ut\",\n  \"tokenManagementToken\": \"ut sint est\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "36c7572b-56b9-43b3-a4ae-88abd9e91562",
                                    "name": "Success. The environment has been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "environments",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "createToken",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the environment to update.\n\n If you set the ID in the body as well, it must match this ID."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "3265a3c2-7f1a-40e1-8f28-6f8e9f822637",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "environments",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "createToken",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the environment to update.\n\n If you set the ID in the body as well, it must match this ID."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "145058c5-56aa-4322-bf91-0000093ab158",
                            "name": "Deletes the specified environment. An environment must be disabled before it can be deleted.",
                            "request": {
                                "name": "Deletes the specified environment. An environment must be disabled before it can be deleted.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "environments",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the environment to be deleted."
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "918effac-db33-4cc9-b94c-046d15d9255e",
                                    "name": "Deleted. Response does not have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "environments",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the environment to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "f5d042be-c3c8-48aa-8b44-2732d415b920",
                                    "name": "Failed. For example, if an environment is not disabled.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "environments",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the environment to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "1195bcc6-e1d8-4f1d-b0c1-4e49a02b3d26",
                            "name": "Creates a new tenant management token for an environment.",
                            "request": {
                                "name": "Creates a new tenant management token for an environment.",
                                "description": {
                                    "content": "The newly created token is owned by the same user who owns the token used for authentication of creation call. \nIt has the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement' (for usage with token API v1).",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "environments",
                                        ":id",
                                        "tokenManagementToken"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the environment where the token is valid."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"<string>\",\n  \"expiresIn\": {\n    \"value\": \"<long>\",\n    \"unit\": \"<string>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "21df5162-0438-4cb9-9f5c-063eb15fc73e",
                                    "name": "Success. The token has been created. The response body contains the token itself",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "environments",
                                                ":id",
                                                "tokenManagementToken"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the environment where the token is valid."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"Token Management\",\n  \"expiresIn\": {\n    \"value\": 3600,\n    \"unit\": \"SECONDS\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "disabled": false,
                                            "description": "Token Id",
                                            "key": "Location",
                                            "value": "sint nisi mollit"
                                        },
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"token\": \"abcdefjhij1234567890\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "34a2bf37-6f4f-478b-8c52-4758290385e2",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "environments",
                                                ":id",
                                                "tokenManagementToken"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the environment where the token is valid."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"Token Management\",\n  \"expiresIn\": {\n    \"value\": 3600,\n    \"unit\": \"SECONDS\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"irure\",\n        \"message\": \"est\",\n        \"path\": \"commodo magna tempor enim reprehenderit\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"id ipsum\",\n        \"message\": \"nostrud rep\",\n        \"path\": \"laboris dolor velit nulla\"\n      }\n    ],\n    \"code\": -20964231,\n    \"message\": \"nisi Lore\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "af8b7fdc-3e28-40a8-9401-74c8f836f318",
            "name": "logMonitoring",
            "item": [
                {
                    "id": "5df3d9db-8c50-4ed8-93d1-b3fa3395ddb9",
                    "name": "{environmentId}",
                    "item": [
                        {
                            "id": "1238c494-071d-4f85-8953-77d85337ccfa",
                            "name": "Gets the current status of Log Monitoring v2",
                            "request": {
                                "name": "Gets the current status of Log Monitoring v2",
                                "description": {},
                                "url": {
                                    "path": [
                                        "logMonitoring",
                                        ":environmentId",
                                        "status"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "environmentId",
                                            "description": "(Required) The ID of the environment."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "0185dbc9-bab1-47f9-921e-3591ef93524f",
                                    "name": "Successful operation.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "logMonitoring",
                                                ":environmentId",
                                                "status"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "environmentId",
                                                    "description": "(Required) The ID of the environment."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"enabled\": true\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "8061ec00-b28a-45dd-b498-38b6d1c84600",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "logMonitoring",
                                                ":environmentId",
                                                "status"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "environmentId",
                                                    "description": "(Required) The ID of the environment."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "adc7a8c3-a516-4acc-b748-964fa9bbcf0a",
                            "name": "Enables Log Monitoring v2",
                            "request": {
                                "name": "Enables Log Monitoring v2",
                                "description": {
                                    "content": "Enables Log Monitoring v2 and sets a default limit of 1,000 log events per minute for the specified environment. The total log events per cluster for all environments cannot exceed 10,000. You can enable Log Monitoring v2 for the environment that will not exceed the total log events per minute limit for the cluster. If you need to ingest more, please contact the Dynatrace ONE team.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "logMonitoring",
                                        ":environmentId",
                                        "enable"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "environmentId",
                                            "description": "(Required) The ID of the environment."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "f848aa5b-580f-46fc-9bbe-8bd9460c8724",
                                    "name": "Enabled. Response does not have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "logMonitoring",
                                                ":environmentId",
                                                "enable"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "environmentId",
                                                    "description": "(Required) The ID of the environment."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "e052edba-5123-4430-8ecd-f80f11d4e6fd",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "logMonitoring",
                                                ":environmentId",
                                                "enable"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "environmentId",
                                                    "description": "(Required) The ID of the environment."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "fd8fa706-4133-46a5-9d67-fc9d61ed52e0",
                                    "name": "Minimum memory requirement of 64 GB per node is not met.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "logMonitoring",
                                                ":environmentId",
                                                "enable"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "environmentId",
                                                    "description": "(Required) The ID of the environment."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "a5f67177-e8a7-4ea6-adc9-a3692b6c6ca5",
                                    "name": "The Log Monitoring v2 cannot be enabled because the limit of log events per minute for this cluster is reached. Reduce log event ingestion per minute on other environments, so that at least 1,000 log events per minute are available for this cluster.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "logMonitoring",
                                                ":environmentId",
                                                "enable"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "environmentId",
                                                    "description": "(Required) The ID of the environment."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Not Extended (RFC 2774)",
                                    "code": 510,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "914e667f-11f2-4000-9167-b0869fd67a86",
                    "name": "Updates the total log events per cluster limit based on the cluster resources size",
                    "request": {
                        "name": "Updates the total log events per cluster limit based on the cluster resources size",
                        "description": {},
                        "url": {
                            "path": [
                                "logMonitoring",
                                "refreshLogEventsLimit"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "f27c2468-ac7f-4d9d-8c40-6da7a927b63a",
                            "name": "Successful operation. Returns new log events limit",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logMonitoring",
                                        "refreshLogEventsLimit"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"limit\": 40118849\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2533c369-3c11-47b7-b5b4-3faba874362e",
                            "name": "Refreshing log events limit not possible due to lack of storage statistics",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "logMonitoring",
                                        "refreshLogEventsLimit"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "7d637136-5e88-4ad3-a1da-be909a7fe3e0",
            "name": "remoteaccess/requests",
            "item": [
                {
                    "id": "28924816-bd1c-491d-b279-6002396ded03",
                    "name": "Get all access requests",
                    "request": {
                        "name": "Get all access requests",
                        "description": {},
                        "url": {
                            "path": [
                                "remoteaccess",
                                "requests"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "b65e854d-e304-47b8-86cb-e4179700463d",
                            "name": "Successful",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "remoteaccess",
                                        "requests"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"requestId\": \"anim\",\n    \"userId\": \"dolore nulla amet enim\",\n    \"reason\": \"eiu\",\n    \"requestedDays\": -89566079,\n    \"role\": \"devops-viewer\",\n    \"createdTimestamp\": -75623440,\n    \"expirationTimestamp\": -25441784,\n    \"state\": \"REJECTED\",\n    \"stateModifiedByUser\": \"ad Lorem\"\n  },\n  {\n    \"requestId\": \"quis reprehenderit consequat adipisicing\",\n    \"userId\": \"Excepteur aliquip fugiat exercitation\",\n    \"reason\": \"minim irure officia occaecat\",\n    \"requestedDays\": -71927700,\n    \"role\": \"devops-user\",\n    \"createdTimestamp\": -91934836,\n    \"expirationTimestamp\": 6706209,\n    \"state\": \"PENDING\",\n    \"stateModifiedByUser\": \"tempor non ipsum\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6b7402d3-c310-4ffd-a11d-a38b42d43272",
                            "name": "Approving remote access request is disabled",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "remoteaccess",
                                        "requests"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "bf21a609-d32a-4e75-bf4d-c99c817132df",
                    "name": "Grant remote access permission",
                    "request": {
                        "name": "Grant remote access permission",
                        "description": {},
                        "url": {
                            "path": [
                                "remoteaccess",
                                "requests"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "*/*"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"userId\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"requestedDays\": \"<integer>\",\n  \"role\": \"<string>\"\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "76fb2f9f-b2d0-4f94-a52a-a7cfa23a153b",
                            "name": "Successfully created",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "remoteaccess",
                                        "requests"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"userId\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"requestedDays\": \"<integer>\",\n  \"role\": \"<string>\"\n}"
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"requestId\": \"in\",\n  \"userId\": \"elit nostrud mollit cillum\",\n  \"reason\": \"proident nisi pariatur dolor tempor\",\n  \"requestedDays\": -80942472,\n  \"role\": \"devops-user\",\n  \"createdTimestamp\": -86690039,\n  \"expirationTimestamp\": -49792275,\n  \"state\": \"ACCEPTED\",\n  \"stateModifiedByUser\": \"deserunt aute\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "aa9ae42f-8676-4218-9402-b5a02c3e8185",
                            "name": "Invalid parameters",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "remoteaccess",
                                        "requests"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"userId\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"requestedDays\": \"<integer>\",\n  \"role\": \"<string>\"\n}"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "f06163fa-15cd-48d1-9c75-b1a597403afa",
                            "name": "Approving remote access request is disabled",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "remoteaccess",
                                        "requests"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"userId\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"requestedDays\": \"<integer>\",\n  \"role\": \"<string>\"\n}"
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "ac1b2348-e34b-4f55-8fd1-8251bec7601c",
                            "name": "Operation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "remoteaccess",
                                        "requests"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"userId\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"requestedDays\": \"<integer>\",\n  \"role\": \"<string>\"\n}"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "8b5ef753-ac82-476b-945e-1c44bdf7f733",
                            "name": "Mission Control is unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "remoteaccess",
                                        "requests"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"userId\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"requestedDays\": \"<integer>\",\n  \"role\": \"<string>\"\n}"
                                }
                            },
                            "code": 513,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ff9d21bf-a512-4ac3-bed0-afbda2b7a4cc",
                    "name": "{requestId}",
                    "item": [
                        {
                            "id": "7269dad2-aa66-4e2b-972a-6ed7e5c866a5",
                            "name": "Get access request",
                            "request": {
                                "name": "Get access request",
                                "description": {},
                                "url": {
                                    "path": [
                                        "remoteaccess",
                                        "requests",
                                        ":requestId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "requestId",
                                            "description": "(Required) Request id param"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "b402bfa1-65d3-4cf0-82e1-833bac5d4b59",
                                    "name": "Successful",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "remoteaccess",
                                                "requests",
                                                ":requestId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "requestId",
                                                    "description": "(Required) Request id param"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n  \"requestId\": \"in\",\n  \"userId\": \"elit nostrud mollit cillum\",\n  \"reason\": \"proident nisi pariatur dolor tempor\",\n  \"requestedDays\": -80942472,\n  \"role\": \"devops-user\",\n  \"createdTimestamp\": -86690039,\n  \"expirationTimestamp\": -49792275,\n  \"state\": \"ACCEPTED\",\n  \"stateModifiedByUser\": \"deserunt aute\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "1641582f-943c-4b4b-9513-75cf94c951e3",
                                    "name": "Bad request",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "remoteaccess",
                                                "requests",
                                                ":requestId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "requestId",
                                                    "description": "(Required) Request id param"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "2f27978f-4ee6-481e-b37f-ceeb59ed8862",
                                    "name": "Approving remote access request is disabled",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "remoteaccess",
                                                "requests",
                                                ":requestId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "requestId",
                                                    "description": "(Required) Request id param"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "a4ee1ebe-58da-4bee-85ef-8745e5bb5aaf",
                                    "name": "Not found",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "remoteaccess",
                                                "requests",
                                                ":requestId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "requestId",
                                                    "description": "(Required) Request id param"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "d481cbd4-4d32-464d-99de-f35eef6c90e3",
                            "name": "Change state of access request",
                            "request": {
                                "name": "Change state of access request",
                                "description": {},
                                "url": {
                                    "path": [
                                        "remoteaccess",
                                        "requests",
                                        ":requestId",
                                        "state"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "requestId",
                                            "description": "(Required) Request id param"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "*/*"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"state\": \"<string>\"\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "c4f18f04-6fcc-4a01-8924-6b63c5dd9e49",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "remoteaccess",
                                                "requests",
                                                ":requestId",
                                                "state"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "requestId",
                                                    "description": "(Required) Request id param"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"state\": \"<string>\"\n}"
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "11b360ff-ae0c-4969-85cb-e0f29889df74",
                                    "name": "Bad request",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "remoteaccess",
                                                "requests",
                                                ":requestId",
                                                "state"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "requestId",
                                                    "description": "(Required) Request id param"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"state\": \"<string>\"\n}"
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "427d956d-832b-4d7b-a1cb-47135d95bdba",
                                    "name": "Approving remote access request is disabled",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "remoteaccess",
                                                "requests",
                                                ":requestId",
                                                "state"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "requestId",
                                                    "description": "(Required) Request id param"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"state\": \"<string>\"\n}"
                                        }
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "75cb6aeb-70ef-4040-96f8-1b4f951d8210",
                                    "name": "Access request not found",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "remoteaccess",
                                                "requests",
                                                ":requestId",
                                                "state"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "requestId",
                                                    "description": "(Required) Request id param"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"state\": \"<string>\"\n}"
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "6a73ae5d-3b0c-4b62-bcb0-e934065b459b",
                                    "name": "Access request was found, but it's already expired",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "remoteaccess",
                                                "requests",
                                                ":requestId",
                                                "state"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "requestId",
                                                    "description": "(Required) Request id param"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"state\": \"<string>\"\n}"
                                        }
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "f51b0c00-87f4-475f-98cc-40f9d80ab6a1",
                                    "name": "Operation failed",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "remoteaccess",
                                                "requests",
                                                ":requestId",
                                                "state"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "requestId",
                                                    "description": "(Required) Request id param"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"state\": \"<string>\"\n}"
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "75eeb509-e02b-47cb-8db4-835e355348ec",
            "name": "clusterConfig/userSessions",
            "item": [
                {
                    "id": "42174700-ac8a-4097-9eb0-b79dca61370b",
                    "name": "Get user sessions configuration",
                    "request": {
                        "name": "Get user sessions configuration",
                        "description": {},
                        "url": {
                            "path": [
                                "clusterConfig",
                                "userSessions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "cabdaf2d-44e1-462d-abf7-2b56c01e1f91",
                            "name": "Successful",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "clusterConfig",
                                        "userSessions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"automaticLogoutDto\": {\n    \"logoutInactiveUsersEnabled\": true,\n    \"userInactivityTimeout\": 900\n  },\n  \"concurrentSessionPolicyDto\": {\n    \"adminLimit\": 47716969,\n    \"userLimit\": 46075782\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a0ca8f3e-34b1-427d-b2b7-b3f86874571f",
                    "name": "Update user sessions configuration",
                    "request": {
                        "name": "Update user sessions configuration",
                        "description": {},
                        "url": {
                            "path": [
                                "clusterConfig",
                                "userSessions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"automaticLogoutDto\": {\n    \"logoutInactiveUsersEnabled\": \"<boolean>\",\n    \"userInactivityTimeout\": \"<integer>\"\n  },\n  \"concurrentSessionPolicyDto\": {\n    \"adminLimit\": \"<integer>\",\n    \"userLimit\": \"<integer>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "68834d18-7b70-4879-88f4-f22767010cb9",
                            "name": "Successful",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "clusterConfig",
                                        "userSessions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"automaticLogoutDto\": {\n    \"logoutInactiveUsersEnabled\": true,\n    \"userInactivityTimeout\": 900\n  },\n  \"concurrentSessionPolicyDto\": {\n    \"adminLimit\": \"<integer>\",\n    \"userLimit\": \"<integer>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "ef76d9db-d17f-4f2e-9882-e8e2c2a7cd3f",
                            "name": "Wrong parameters",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "clusterConfig",
                                        "userSessions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"automaticLogoutDto\": {\n    \"logoutInactiveUsersEnabled\": true,\n    \"userInactivityTimeout\": 900\n  },\n  \"concurrentSessionPolicyDto\": {\n    \"adminLimit\": \"<integer>\",\n    \"userLimit\": \"<integer>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "eb71f958-88a9-47df-a275-5e66b455f753",
                            "name": "Configuration update failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "clusterConfig",
                                        "userSessions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"automaticLogoutDto\": {\n    \"logoutInactiveUsersEnabled\": true,\n    \"userInactivityTimeout\": 900\n  },\n  \"concurrentSessionPolicyDto\": {\n    \"adminLimit\": \"<integer>\",\n    \"userLimit\": \"<integer>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Extended (RFC 2774)",
                            "code": 510,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "cbd7c017-4b69-4ab7-8d38-160057a2d08d",
            "name": "userSessions",
            "item": [
                {
                    "id": "81da28ba-2cba-4b05-8ec6-2ab474d25fb3",
                    "name": "Get user sessions",
                    "request": {
                        "name": "Get user sessions",
                        "description": {},
                        "url": {
                            "path": [
                                "userSessions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "userId",
                                    "value": "<string>",
                                    "description": "User ID (optional)"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "3dd4c51b-33cc-4e51-b331-760686e66d97",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "userSessions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "userId",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"creationTime\": -6876884,\n    \"loginType\": \"LOCAL\",\n    \"nodeId\": -20045449,\n    \"sessionId\": \"magna Excepteur fugiat dolor\",\n    \"tenantUuid\": \"nisi voluptate in\",\n    \"userId\": \"commod\",\n    \"lastAccessedTimestamp\": 25150126,\n    \"device\": \"dolore voluptate\",\n    \"ip\": \"sunt in adipisicing sit dolor\"\n  },\n  {\n    \"creationTime\": 51940645,\n    \"loginType\": \"LDAP\",\n    \"nodeId\": 65111201,\n    \"sessionId\": \"tempor occaecat aliquip reprehenderit in\",\n    \"tenantUuid\": \"voluptate elit aliqua quis non\",\n    \"userId\": \"dolore dolor et\",\n    \"lastAccessedTimestamp\": 90193331,\n    \"device\": \"do et\",\n    \"ip\": \"proident aliqua eu\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "996e1eda-b2f8-4c20-bcab-77b24a8c51a8",
                            "name": "Operation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "userSessions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "userId",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d20d31b9-e8cb-46d8-9587-f9e3a6fb3219",
                    "name": "Remove user sessions for a given user",
                    "request": {
                        "name": "Remove user sessions for a given user",
                        "description": {},
                        "url": {
                            "path": [
                                "userSessions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "userId",
                                    "value": "<string>",
                                    "description": "User ID (mandatory)"
                                }
                            ],
                            "variable": []
                        },
                        "method": "DELETE",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "366771dd-17d3-4911-8360-b2128eab1be9",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "userSessions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "userId",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "3c221805-91c8-453f-b423-d0890f7501e3",
                            "name": "Bad request. User id must be filled in.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "userSessions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "userId",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "3228f41e-0a57-4774-a621-bf7c219c1dd8",
                            "name": "User sessions not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "userSessions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "userId",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "036df722-34ac-49de-89dd-c4482d47e9ac",
                            "name": "Operation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "userSessions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "userId",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "594247cb-12df-4749-a272-0f04ce9591d6",
                            "name": "Failed to invalidate sessions",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "userSessions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "userId",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Extended (RFC 2774)",
                            "code": 510,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "181b7b0c-b9d0-40b5-af48-374633fe1ec9",
            "name": "activeGates",
            "item": [
                {
                    "id": "6e7aab0e-ee81-4f53-8f18-07746cca032e",
                    "name": "Lists all available ActiveGates",
                    "request": {
                        "name": "Lists all available ActiveGates",
                        "description": {
                            "content": "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGates"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "hostname",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "osType",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the OS type of the host it's running on."
                                },
                                {
                                    "disabled": false,
                                    "key": "networkAddress",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "loadBalancerAddress",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the Load Balancer address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "type",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the ActiveGate type."
                                },
                                {
                                    "disabled": false,
                                    "key": "networkZone",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "updateStatus",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the auto-update status."
                                },
                                {
                                    "disabled": false,
                                    "key": "versionCompareType",
                                    "value": "EQUAL",
                                    "description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here."
                                },
                                {
                                    "disabled": false,
                                    "key": "version",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here."
                                },
                                {
                                    "disabled": false,
                                    "key": "autoUpdate",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the actual state of auto-update."
                                },
                                {
                                    "disabled": false,
                                    "key": "group",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "online",
                                    "value": "<boolean>",
                                    "description": "Filters the resulting set of ActiveGates by the communication status."
                                },
                                {
                                    "disabled": false,
                                    "key": "enabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the enabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "enabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the enabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "disabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the disabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "disabledModule",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates by the disabled modules."
                                },
                                {
                                    "disabled": false,
                                    "key": "containerized",
                                    "value": "<boolean>",
                                    "description": "Filters the resulting set of ActiveGates to those which are running in container (`true`) or not (`false`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "tokenState",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of ActiveGates to those with authorization token in specified state."
                                },
                                {
                                    "disabled": false,
                                    "key": "tokenExpirationSet",
                                    "value": "<boolean>",
                                    "description": "Filters the resulting set of ActiveGates to those with set expiration date for authorization token."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "5e3b5c15-6fd7-4f10-ae3b-e8025d06d242",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "hostname",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "osType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "loadBalancerAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkZone",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "versionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "version",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "autoUpdate",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "group",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "online",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "containerized",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "tokenState",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tokenExpirationSet",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"activeGates\": [\n    {\n      \"id\": \"0x3efdd091\",\n      \"networkAddresses\": [\n        \"occaecat id et\",\n        \"magna occaecat nostrud commodo incididunt\"\n      ],\n      \"loadBalancerAddresses\": [\n        \"cillum\",\n        \"Excepteur commodo nisi\"\n      ],\n      \"osType\": \"WINDOWS\",\n      \"osArchitecture\": \"X86\",\n      \"osBitness\": \"64\",\n      \"autoUpdateStatus\": \"OUTDATED\",\n      \"offlineSince\": 1582031917814,\n      \"version\": \"1.185.0.20200201-120000\",\n      \"type\": \"ENVIRONMENT\",\n      \"hostname\": \"exampleHostname\",\n      \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n      \"environments\": [\n        \"ullamco tempor\",\n        \"minim ut ipsum\"\n      ],\n      \"autoUpdateSettings\": {\n        \"setting\": \"INHERITED\",\n        \"effectiveSetting\": \"ENABLED\"\n      },\n      \"networkZone\": \"exampleNetworkZone\",\n      \"group\": \"default\",\n      \"modules\": [\n        {\n          \"misconfigured\": false,\n          \"version\": \"an\",\n          \"enabled\": true,\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"voluptate__af\": \"sit adipisicing\",\n            \"cillum6f\": \"ex in consectetur qui laboris\"\n          }\n        },\n        {\n          \"misconfigured\": false,\n          \"version\": \"culpa cillum\",\n          \"enabled\": true,\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"pariatur8e\": \"voluptate aute minim id\"\n          }\n        }\n      ],\n      \"containerized\": false,\n      \"connectedHosts\": {\n        \"number\": 150\n      },\n      \"activeGateTokens\": [\n        {\n          \"environmentId\": \"eu\",\n          \"id\": \"dt0g02.4KWZO5EF\",\n          \"state\": \"INVALID\"\n        },\n        {\n          \"environmentId\": \"ex Ut qui aute\",\n          \"id\": \"dt0g02.4KWZO5EF\",\n          \"state\": \"EXPIRING\"\n        }\n      ]\n    },\n    {\n      \"id\": \"0x3efdd091\",\n      \"networkAddresses\": [\n        \"officia sed culpa\",\n        \"dolore eiusmod pariatur culpa\"\n      ],\n      \"loadBalancerAddresses\": [\n        \"Excepteur mollit sed sit\",\n        \"mo\"\n      ],\n      \"osType\": \"WINDOWS\",\n      \"osArchitecture\": \"X86\",\n      \"osBitness\": \"64\",\n      \"autoUpdateStatus\": \"OUTDATED\",\n      \"offlineSince\": 1582031917814,\n      \"version\": \"1.185.0.20200201-120000\",\n      \"type\": \"ENVIRONMENT\",\n      \"hostname\": \"exampleHostname\",\n      \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n      \"environments\": [\n        \"nulla mollit amet minim\",\n        \"magna dolor laboris fugiat\"\n      ],\n      \"autoUpdateSettings\": {\n        \"setting\": \"INHERITED\",\n        \"effectiveSetting\": \"ENABLED\"\n      },\n      \"networkZone\": \"exampleNetworkZone\",\n      \"group\": \"default\",\n      \"modules\": [\n        {\n          \"misconfigured\": false,\n          \"version\": \"fugiat\",\n          \"enabled\": true,\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"veniame\": \"velit nulla\",\n            \"dolore746\": \"exercitation id commodo\"\n          }\n        },\n        {\n          \"misconfigured\": false,\n          \"version\": \"magna officia\",\n          \"enabled\": false,\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"reprehenderit0\": \"commodo Lorem elit\",\n            \"magna1b\": \"mollit\",\n            \"anim_d44\": \"dolor mollit\",\n            \"occaecat0\": \"id ex\"\n          }\n        }\n      ],\n      \"containerized\": true,\n      \"connectedHosts\": {\n        \"number\": 150\n      },\n      \"activeGateTokens\": [\n        {\n          \"environmentId\": \"cupidatat\",\n          \"id\": \"dt0g02.4KWZO5EF\",\n          \"state\": \"ABSENT\"\n        },\n        {\n          \"environmentId\": \"consectet\",\n          \"id\": \"dt0g02.4KWZO5EF\",\n          \"state\": \"VALID\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9b89bbcb-2856-471c-84b3-98756539927a",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "hostname",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "osType",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "loadBalancerAddress",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "networkZone",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "versionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "version",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "autoUpdate",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "group",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "online",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "enabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "disabledModule",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "containerized",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "tokenState",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "tokenExpirationSet",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d34f1ad9-dd94-4f67-a81c-821ebb91a1bc",
                    "name": "{agId}",
                    "item": [
                        {
                            "id": "a43a0657-9afc-41f0-8276-629cf8177e34",
                            "name": "Gets the details of the specified ActiveGate",
                            "request": {
                                "name": "Gets the details of the specified ActiveGate",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        ":agId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "agId",
                                            "description": "(Required) The ID of the required ActiveGate."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "54929869-70c5-4944-bb84-229972f09cab",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"id\": \"0x3efdd091\",\n  \"networkAddresses\": [\n    \"ipsum dolore\",\n    \"in id est\"\n  ],\n  \"loadBalancerAddresses\": [\n    \"nulla magna quis ullamco\",\n    \"commodo\"\n  ],\n  \"osType\": \"WINDOWS\",\n  \"osArchitecture\": \"X86\",\n  \"osBitness\": \"64\",\n  \"autoUpdateStatus\": \"OUTDATED\",\n  \"offlineSince\": 1582031917814,\n  \"version\": \"1.185.0.20200201-120000\",\n  \"type\": \"ENVIRONMENT\",\n  \"hostname\": \"exampleHostname\",\n  \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n  \"environments\": [\n    \"dolor m\",\n    \"dolor labore deserunt nulla\"\n  ],\n  \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n  },\n  \"networkZone\": \"exampleNetworkZone\",\n  \"group\": \"default\",\n  \"modules\": [\n    {\n      \"misconfigured\": true,\n      \"version\": \"nisi id\",\n      \"enabled\": false,\n      \"type\": \"KUBERNETES\",\n      \"attributes\": {\n        \"veniam_5ed\": \"Ut Excepteur quis dolor\"\n      }\n    },\n    {\n      \"misconfigured\": true,\n      \"version\": \"deserunt ut qui enim\",\n      \"enabled\": false,\n      \"type\": \"KUBERNETES\",\n      \"attributes\": {\n        \"in_0c\": \"mollit Excepteur deserunt\",\n        \"ullamco_d9a\": \"irure ipsum dolor sit aliqua\",\n        \"enimd_\": \"ut dolor et\"\n      }\n    }\n  ],\n  \"containerized\": false,\n  \"connectedHosts\": {\n    \"number\": 150\n  },\n  \"activeGateTokens\": [\n    {\n      \"environmentId\": \"Lorem\",\n      \"id\": \"dt0g02.4KWZO5EF\",\n      \"state\": \"UNKNOWN\"\n    },\n    {\n      \"environmentId\": \"laborum consequat ea\",\n      \"id\": \"dt0g02.4KWZO5EF\",\n      \"state\": \"VALID\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "87e315db-8df6-49e2-bc7c-bd286d70b0c1",
                                    "name": "Not found. See response body for details.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "c6c970cb-b8be-443e-b246-bd0b7929ee30",
                            "name": "autoUpdate",
                            "item": [
                                {
                                    "id": "2df36b4e-950a-44fb-8b30-4b3571b3592a",
                                    "name": "Gets the configuration of auto-update for the specified ActiveGate",
                                    "request": {
                                        "name": "Gets the configuration of auto-update for the specified ActiveGate",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "c5032352-67f3-4278-9cfc-784c562f306f",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"setting\": \"INHERITED\",\n  \"effectiveSetting\": \"ENABLED\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "47bf119b-349b-4526-8a6c-f2696122bb55",
                                            "name": "Not found. See response body for details.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "b506a530-f711-4c5d-bcc1-6638f8979251",
                                    "name": "Updates the configuration of auto-update for the specified ActiveGate",
                                    "request": {
                                        "name": "Updates the configuration of auto-update for the specified ActiveGate",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"setting\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "451bc541-5c88-406b-b35d-4558c11cc14e",
                                            "name": "Success. The auto-update configuration have been updated. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"setting\": \"INHERITED\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "a0672b31-e0f2-425f-af24-83dc5bc122c2",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"setting\": \"INHERITED\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "f6659b7f-6c3a-4847-95a8-f87c2d675c6a",
                                    "name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
                                    "request": {
                                        "name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "autoUpdate",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"setting\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "fb0f7765-d9ab-4e14-b5f6-8a069082f4db",
                                            "name": "Validated. The submitted auto-update configuration is valid. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"setting\": \"INHERITED\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "be158b66-cb38-475e-bc30-4057b2f0c616",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "autoUpdate",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"setting\": \"INHERITED\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "09a3aae4-22fe-4c31-b39a-ebf33b0ebdf4",
                            "name": "updateJobs",
                            "item": [
                                {
                                    "id": "355febe5-8cf5-4e2a-b54b-73b4160ecc8f",
                                    "name": "Lists update jobs for the specified ActiveGate",
                                    "request": {
                                        "name": "Lists update jobs for the specified ActiveGate",
                                        "description": {
                                            "content": "The job can update the ActiveGate to the specified version or the latest available one.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "updateJobs"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "from",
                                                    "value": "<string>",
                                                    "description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "to",
                                                    "value": "<string>",
                                                    "description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "startVersionCompareType",
                                                    "value": "EQUAL",
                                                    "description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "startVersion",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "updateType",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of update-jobs by the update type."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "targetVersionCompareType",
                                                    "value": "EQUAL",
                                                    "description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "targetVersion",
                                                    "value": "<string>",
                                                    "description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
                                                },
                                                {
                                                    "disabled": false,
                                                    "key": "lastUpdates",
                                                    "value": "false",
                                                    "description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "fcdb1e3f-79e0-4916-a0a3-446e41c9ea5a",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "startVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "updateType",
                                                            "value": "ACTIVE_GATE"
                                                        },
                                                        {
                                                            "key": "targetVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "targetVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "lastUpdates",
                                                            "value": "false"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"updateJobs\": [\n    {\n      \"targetVersion\": \"1.190.0.20200301-130000\",\n      \"jobId\": \"-3524498778810258605\",\n      \"jobState\": \"SUCCEED\",\n      \"updateMethod\": \"AUTOMATIC\",\n      \"updateType\": \"ACTIVE_GATE\",\n      \"agType\": \"ENVIRONMENT\",\n      \"startVersion\": \"1.185.0.20200201-120000\",\n      \"environments\": [\n        \"id\",\n        \"est incididunt ad id\"\n      ],\n      \"cancelable\": false,\n      \"timestamp\": 1582031917814,\n      \"duration\": 3608000,\n      \"error\": \"eiusmod ipsum cupidatat sunt\"\n    },\n    {\n      \"targetVersion\": \"1.190.0.20200301-130000\",\n      \"jobId\": \"-3524498778810258605\",\n      \"jobState\": \"SUCCEED\",\n      \"updateMethod\": \"AUTOMATIC\",\n      \"updateType\": \"ACTIVE_GATE\",\n      \"agType\": \"ENVIRONMENT\",\n      \"startVersion\": \"1.185.0.20200201-120000\",\n      \"environments\": [\n        \"ipsum ad in\",\n        \"Duis incididunt ea\"\n      ],\n      \"cancelable\": false,\n      \"timestamp\": 1582031917814,\n      \"duration\": 3608000,\n      \"error\": \"magna ullamco\"\n    }\n  ],\n  \"agId\": \"0x3efdd092\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "21831791-b777-4a93-9613-01580e1016aa",
                                            "name": "Not found. See response body for details.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "from",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "to",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "startVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "startVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "updateType",
                                                            "value": "ACTIVE_GATE"
                                                        },
                                                        {
                                                            "key": "targetVersionCompareType",
                                                            "value": "EQUAL"
                                                        },
                                                        {
                                                            "key": "targetVersion",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "lastUpdates",
                                                            "value": "false"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "8975a233-b1ad-41b3-a0d6-2271c7d7290f",
                                    "name": "Creates a new update job for the specified ActiveGate",
                                    "request": {
                                        "name": "Creates a new update job for the specified ActiveGate",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "updateJobs"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"targetVersion\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "9b25618e-56aa-4818-a3a5-357ce65f15f8",
                                            "name": "Success. The update-job have been created.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Created",
                                            "code": 201,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\",\n  \"jobId\": \"-3524498778810258605\",\n  \"jobState\": \"SUCCEED\",\n  \"updateMethod\": \"AUTOMATIC\",\n  \"updateType\": \"ACTIVE_GATE\",\n  \"agType\": \"ENVIRONMENT\",\n  \"startVersion\": \"1.185.0.20200201-120000\",\n  \"environments\": [\n    \"exercitation d\",\n    \"proident Duis id mollit\"\n  ],\n  \"cancelable\": false,\n  \"timestamp\": 1582031917814,\n  \"duration\": 3608000,\n  \"error\": \"Duis labore\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "2fe678fd-d996-43a3-b0ad-1acd075a2cac",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "0d7bef67-651a-4723-bdc1-b3c658f66dd0",
                                    "name": "{jobId}",
                                    "item": [
                                        {
                                            "id": "fc507e64-ee5b-467d-928c-335cdc46a7b1",
                                            "name": "Gets the parameters of the specified update job",
                                            "request": {
                                                "name": "Gets the parameters of the specified update job",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        ":jobId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "jobId",
                                                            "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "36416038-b1ce-4f65-8069-f69ddc288149",
                                                    "name": "Success",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\",\n  \"jobId\": \"-3524498778810258605\",\n  \"jobState\": \"SUCCEED\",\n  \"updateMethod\": \"AUTOMATIC\",\n  \"updateType\": \"ACTIVE_GATE\",\n  \"agType\": \"ENVIRONMENT\",\n  \"startVersion\": \"1.185.0.20200201-120000\",\n  \"environments\": [\n    \"exercitation d\",\n    \"proident Duis id mollit\"\n  ],\n  \"cancelable\": false,\n  \"timestamp\": 1582031917814,\n  \"duration\": 3608000,\n  \"error\": \"Duis labore\"\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "e49373b9-e410-404d-99ee-937c28b2b3f4",
                                                    "name": "Not found. See response body for details.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "2dacfbfa-5131-4de4-b58d-e5446ba2eb79",
                                            "name": "Deletes the specified update job",
                                            "request": {
                                                "name": "Deletes the specified update job",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        ":jobId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "jobId",
                                                            "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json; charset=utf-8"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "91e6bd6f-a95d-4fec-89fb-205433131bc9",
                                                    "name": "Success. The update-job have been deleted. Response doesn't have a body.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                },
                                                {
                                                    "id": "70810e07-50ab-4456-a840-e44a6e2c0705",
                                                    "name": "Failed. The input is invalid.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "651c98c6-2cd7-4e6f-b47e-de704931bfda",
                                                    "name": "Not found. See response body for details.",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "activeGates",
                                                                ":agId",
                                                                "updateJobs",
                                                                ":jobId"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "agId",
                                                                    "description": "(Required) The ID of the required ActiveGate."
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "jobId",
                                                                    "description": "(Required) A unique identifier for a update-job of ActiveGate."
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json; charset=utf-8"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "09458f1c-1863-4977-bd2c-b198c6ebf7cf",
                                    "name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
                                    "request": {
                                        "name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                ":agId",
                                                "updateJobs",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "agId",
                                                    "description": "(Required) The ID of the required ActiveGate."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"targetVersion\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "c910c9d7-812d-4da5-a9ee-028d8ce5d50f",
                                            "name": "Validated. The submitted update-job is valid. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "b7a2bb05-9445-41d9-bab2-5af0faa8530f",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        ":agId",
                                                        "updateJobs",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "agId",
                                                            "description": "(Required) The ID of the required ActiveGate."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "1dd3be70-72eb-4900-afb7-d8021aa3bd66",
                    "name": "autoUpdate",
                    "item": [
                        {
                            "id": "5d005ce5-bb6a-404d-85b7-2ca33855a66c",
                            "name": "Gets the global auto-update configuration of cluster ActiveGates.",
                            "request": {
                                "name": "Gets the global auto-update configuration of cluster ActiveGates.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "autoUpdate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "5d9c9c8b-63ff-43a5-8d50-af80eaa2c351",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "c104a4a8-4fec-4d5c-8d0a-acfbe7bf0016",
                            "name": "Puts the global auto-update configuration of cluster ActiveGates.",
                            "request": {
                                "name": "Puts the global auto-update configuration of cluster ActiveGates.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "autoUpdate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      \"<long>\",\n      \"<long>\"\n    ],\n    \"currentConfigurationVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"clusterVersion\": \"<string>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "3c7f29b6-7130-4d8d-843c-d6d047aeb789",
                                    "name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "e216b78e-602e-40c9-bc89-31bb6168fbe6",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "dc1acafc-ef39-4694-a2c0-5763b620516a",
                            "name": "{envId}",
                            "item": [
                                {
                                    "id": "d240c21d-5176-40c7-8694-68daadb0aa63",
                                    "name": "Gets the global auto-update configuration of environment ActiveGates.",
                                    "request": {
                                        "name": "Gets the global auto-update configuration of environment ActiveGates.",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate",
                                                ":envId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "envId",
                                                    "description": "(Required) The ID of the environment."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "bbc1cd07-9af8-49b7-a88c-d216da479241",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        "autoUpdate",
                                                        ":envId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "envId",
                                                            "description": "(Required) The ID of the environment."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "acb0a8ae-5848-4b4f-abd2-9b3f1c415c36",
                                            "name": "Not found. See response body for details.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        "autoUpdate",
                                                        ":envId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "envId",
                                                            "description": "(Required) The ID of the environment."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "172083ef-5918-43b3-adb8-c7c0a18de005",
                                    "name": "Puts the global auto-update configuration of environment ActiveGates.",
                                    "request": {
                                        "name": "Puts the global auto-update configuration of environment ActiveGates.",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate",
                                                ":envId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "envId",
                                                    "description": "(Required) The ID of the environment."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      \"<long>\",\n      \"<long>\"\n    ],\n    \"currentConfigurationVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"clusterVersion\": \"<string>\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "19714889-80c9-448e-ac86-345913c06686",
                                            "name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        "autoUpdate",
                                                        ":envId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "envId",
                                                            "description": "(Required) The ID of the environment."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "cbc34abf-f395-4fc6-ae96-793146655f3d",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        "autoUpdate",
                                                        ":envId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "envId",
                                                            "description": "(Required) The ID of the environment."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "cdccfe56-db2d-47af-8b36-9410934d82eb",
                                    "name": "Validates the payload for the `POST /activeGates/autoUpdate/{envId}` request.",
                                    "request": {
                                        "name": "Validates the payload for the `POST /activeGates/autoUpdate/{envId}` request.",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate",
                                                ":envId",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "envId",
                                                    "description": "(Required) The ID of the environment."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      \"<long>\",\n      \"<long>\"\n    ],\n    \"currentConfigurationVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"clusterVersion\": \"<string>\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "1ea694ae-6ac0-4656-8da2-83d5858e82fe",
                                            "name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        "autoUpdate",
                                                        ":envId",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "envId",
                                                            "description": "(Required) The ID of the environment."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "d418de16-7fa2-4a92-96d2-d05aeb414836",
                                            "name": "Failed. The input is invalid.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "activeGates",
                                                        "autoUpdate",
                                                        ":envId",
                                                        "validator"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "envId",
                                                            "description": "(Required) The ID of the environment."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "090226ad-0aa4-4b89-8373-7550140c072c",
                            "name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
                            "request": {
                                "name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "autoUpdate",
                                        "validator"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      \"<long>\",\n      \"<long>\"\n    ],\n    \"currentConfigurationVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"clusterVersion\": \"<string>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "3b364096-e8df-4f6f-81b6-6ae938a01901",
                                    "name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "0aa5f7cc-4e1e-4a73-b19b-46b30bbd722a",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "autoUpdate",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"globalSetting\": \"<string>\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "c9521f8f-4a44-47e2-bd6f-f0c2368995f4",
                    "name": "List ActiveGates with update jobs",
                    "request": {
                        "name": "List ActiveGates with update jobs",
                        "description": {
                            "content": "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGates",
                                "updateJobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<string>",
                                    "description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<string>",
                                    "description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                },
                                {
                                    "disabled": false,
                                    "key": "startVersionCompareType",
                                    "value": "EQUAL",
                                    "description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
                                },
                                {
                                    "disabled": false,
                                    "key": "startVersion",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "updateType",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of update-jobs by the update type."
                                },
                                {
                                    "disabled": false,
                                    "key": "targetVersionCompareType",
                                    "value": "EQUAL",
                                    "description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
                                },
                                {
                                    "disabled": false,
                                    "key": "targetVersion",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "lastUpdates",
                                    "value": "false",
                                    "description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2fdb42bd-efa9-4f98-83db-c204c7f0ce00",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "updateJobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "startVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "startVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateType",
                                            "value": "ACTIVE_GATE"
                                        },
                                        {
                                            "key": "targetVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "targetVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "lastUpdates",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"allUpdateJobs\": [\n    {\n      \"updateJobs\": [\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"jobId\": \"-3524498778810258605\",\n          \"jobState\": \"SUCCEED\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"environments\": [\n            \"adipisicing\",\n            \"aliquip ex\"\n          ],\n          \"cancelable\": false,\n          \"timestamp\": 1582031917814,\n          \"duration\": 3608000,\n          \"error\": \"laboris irure minim fugiat\"\n        },\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"jobId\": \"-3524498778810258605\",\n          \"jobState\": \"SUCCEED\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"environments\": [\n            \"commodo fugiat\",\n            \"sint in enim Ut occaecat\"\n          ],\n          \"cancelable\": false,\n          \"timestamp\": 1582031917814,\n          \"duration\": 3608000,\n          \"error\": \"in amet dolor aliqua dolore\"\n        }\n      ],\n      \"agId\": \"0x3efdd092\"\n    },\n    {\n      \"updateJobs\": [\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"jobId\": \"-3524498778810258605\",\n          \"jobState\": \"SUCCEED\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"environments\": [\n            \"eu consequat ex amet\",\n            \"in Duis\"\n          ],\n          \"cancelable\": false,\n          \"timestamp\": 1582031917814,\n          \"duration\": 3608000,\n          \"error\": \"velit aliqua nisi\"\n        },\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"jobId\": \"-3524498778810258605\",\n          \"jobState\": \"SUCCEED\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"environments\": [\n            \"sunt magna\",\n            \"pariatur nulla irure cillum\"\n          ],\n          \"cancelable\": false,\n          \"timestamp\": 1582031917814,\n          \"duration\": 3608000,\n          \"error\": \"aliqua\"\n        }\n      ],\n      \"agId\": \"0x3efdd092\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e3c8cd8e-9c6f-44f7-8901-a7ca87bf9f6d",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "updateJobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "from",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "startVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "startVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "updateType",
                                            "value": "ACTIVE_GATE"
                                        },
                                        {
                                            "key": "targetVersionCompareType",
                                            "value": "EQUAL"
                                        },
                                        {
                                            "key": "targetVersion",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "lastUpdates",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c4fcfc88-3b58-469f-a2a5-a9b61065ba60",
                    "name": "remoteConfigurationManagement",
                    "item": [
                        {
                            "id": "7d24db35-d0f3-4d20-92ed-14921cec91d8",
                            "name": "Lists finished ActiveGate remote configuration management jobs",
                            "request": {
                                "name": "Lists finished ActiveGate remote configuration management jobs",
                                "description": {
                                    "content": "The response includes finished jobs for the last 7 days.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "from",
                                            "value": "<string>",
                                            "description": "The start of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
                                        },
                                        {
                                            "disabled": false,
                                            "key": "to",
                                            "value": "<string>",
                                            "description": "The end of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "87aed7a2-6613-477e-8e0e-b923c312b4b5",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "from",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "to",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"jobs\": [\n    {\n      \"entityType\": \"ACTIVE_GATE\",\n      \"startTime\": \"2020-11-05T08:15:30.144Z\",\n      \"endTime\": \"2020-11-05T08:15:30.144Z\",\n      \"id\": \"7974003406714390819\"\n    },\n    {\n      \"entityType\": \"ONE_AGENT\",\n      \"startTime\": \"2020-11-05T08:15:30.144Z\",\n      \"endTime\": \"2020-11-05T08:15:30.144Z\",\n      \"id\": \"7974003406714390819\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "6a50ff0a-25f5-4c15-8ccd-f8bf248c065a",
                            "name": "Creates a new remote configuration management job",
                            "request": {
                                "name": "Creates a new remote configuration management job",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "f67946bd-2c9e-4e23-a066-ba4968d47b95",
                                    "name": "Created",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"processedEntitiesCount\": 1,\n  \"totalEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"entityType\": \"ACTIVE_GATE\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\",\n  \"id\": \"7974003406714390819\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "6d660e5b-86b6-4a8c-acff-cc41bb97d499",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"invalidEntities\": [\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    },\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"reason\": \"Value must not start with a period\",\n      \"operation\": \"set\",\n      \"value\": \".exampleInvalidNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"reason\": \"Value must not start with a period\",\n      \"operation\": \"set\",\n      \"value\": \".exampleInvalidNetworkZoneName\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "c4273b60-84ef-4410-b8d9-4b9785464727",
                                    "name": "Other remote configuration management job is currently being executed",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "f73761e2-2b3a-4fc4-a182-179cb4350495",
                            "name": "Creates a preview for remote configuration management job",
                            "request": {
                                "name": "Creates a preview for remote configuration management job",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement",
                                        "preview"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "a16ceb67-db71-400c-8c4a-f62392ecb88a",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "preview"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"previews\": [\n    {\n      \"alreadyConfiguredEntitiesCount\": 1,\n      \"targetEntitiesCount\": 2,\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"alreadyConfiguredEntitiesCount\": 1,\n      \"targetEntitiesCount\": 2,\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "0a9f0485-ecce-469d-ab67-23617e9b5448",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "preview"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"invalidEntities\": [\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    },\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"reason\": \"Value must not start with a period\",\n      \"operation\": \"set\",\n      \"value\": \".exampleInvalidNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"reason\": \"Value must not start with a period\",\n      \"operation\": \"set\",\n      \"value\": \".exampleInvalidNetworkZoneName\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "2b287832-485c-4b8a-aad9-35fe02a121ea",
                            "name": "Gets remote configuration management job that is currently running",
                            "request": {
                                "name": "Gets remote configuration management job that is currently running",
                                "description": {
                                    "content": "The currently running remote configuration management job may be related to ActiveGates or OneAgents. There is a limit of one concurrent remote configuration management job, regardless of the entity type.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement",
                                        "current"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "8ccfd918-1547-48a7-a94f-8b7dedb16214",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "current"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"processedEntitiesCount\": 1,\n  \"totalEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"entityType\": \"ONE_AGENT\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\",\n  \"id\": \"7974003406714390819\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "03740f16-f445-426e-9544-f9ade0a5eb9e",
                                    "name": "No remote configuration management job is currently running ",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "current"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "8599f4d4-393c-4f7e-b0c1-9098dfaea1d6",
                            "name": "Gets the specified remote configuration management job",
                            "request": {
                                "name": "Gets the specified remote configuration management job",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required remote configuration management job."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "2f25b2d0-5580-442a-9032-8c04cbb627a7",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required remote configuration management job."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"processedEntitiesCount\": 1,\n  \"totalEntitiesCount\": 1,\n  \"timeoutTime\": \"2020-11-05T08:15:30.144Z\",\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ],\n  \"entityType\": \"ONE_AGENT\",\n  \"startTime\": \"2020-11-05T08:15:30.144Z\",\n  \"endTime\": \"2020-11-05T08:15:30.144Z\",\n  \"id\": \"7974003406714390819\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "a955027d-87ca-41f6-bb4d-45859e0edac1",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required remote configuration management job."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "5043f810-34ec-4be8-9398-c21ae982bdda",
                            "name": "Validates the payload for the `POST /activeGates/remoteConfigurationManagement` request.",
                            "request": {
                                "name": "Validates the payload for the `POST /activeGates/remoteConfigurationManagement` request.",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "remoteConfigurationManagement",
                                        "validator"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"attribute\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "19fa094f-7a06-46fa-bad3-18f56ea99f1c",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "315443fc-35b8-4c26-a531-d510792018fa",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGates",
                                                "remoteConfigurationManagement",
                                                "validator"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entities\": [\n    \"0x2b7c0b02\",\n    \"0x4928065d\"\n  ],\n  \"operations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"operation\": \"set\",\n      \"value\": \"exampleNetworkZoneName\"\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"invalidEntities\": [\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    },\n    {\n      \"reasons\": [\n        \"RUNNING_IN_CONTAINER\"\n      ],\n      \"entity\": \"entityId\"\n    }\n  ],\n  \"invalidOperations\": [\n    {\n      \"attribute\": \"networkZone\",\n      \"reason\": \"Value must not start with a period\",\n      \"operation\": \"set\",\n      \"value\": \".exampleInvalidNetworkZoneName\"\n    },\n    {\n      \"attribute\": \"networkZone\",\n      \"reason\": \"Value must not start with a period\",\n      \"operation\": \"set\",\n      \"value\": \".exampleInvalidNetworkZoneName\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "5f3b6bdf-1ba2-4ede-ad94-91f837b8ad70",
                    "name": "Gets the status of ActiveGate tokens enforcement | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Gets the status of ActiveGate tokens enforcement | maturity=EARLY_ADOPTER",
                        "description": {},
                        "url": {
                            "path": [
                                "activeGates",
                                "tokenEnforcement"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "3c3a4c38-d50b-489b-8638-8cc8a2de24d7",
                            "name": "Success. The response contains the status of ActiveGate tokens enforcement",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGates",
                                        "tokenEnforcement"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"manualEnforced\": false,\n  \"autoEnforced\": false,\n  \"autoEnforcementEstimation\": {\n    \"value\": \"<long>\",\n    \"unit\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "425b7a0c-69eb-40a4-a678-072f62ef2754",
            "name": "Lists all available versions of ActiveGate installer",
            "request": {
                "name": "Lists all available versions of ActiveGate installer",
                "description": {},
                "url": {
                    "path": [
                        "deployment",
                        "installer",
                        "gateway",
                        "versions",
                        ":osType"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [
                        {
                            "disabled": false,
                            "key": "arch",
                            "value": "all",
                            "description": "The architecture of your OS: \n\n* `all`: Defaults to `amd64`. \n* `amd64`: amd64 architecture.\n* `s390`: S/390 architecture, only supported for Linux. \n\n"
                        }
                    ],
                    "variable": [
                        {
                            "disabled": false,
                            "type": "any",
                            "value": "<string>",
                            "key": "osType",
                            "description": "(Required) The operating system of the installer."
                        }
                    ]
                },
                "header": [
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "method": "GET",
                "auth": {
                    "type": "apikey",
                    "apikey": [
                        {
                            "key": "key",
                            "value": "Authorization"
                        },
                        {
                            "key": "value",
                            "value": "Api-Token {{DT_TOKEN}}"
                        },
                        {
                            "key": "in",
                            "value": "header"
                        }
                    ]
                }
            },
            "response": [
                {
                    "id": "66f50fa4-0dcb-4ace-a174-bc63d9bf662f",
                    "name": "Success. The payload contains the available versions.",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "deployment",
                                "installer",
                                "gateway",
                                "versions",
                                ":osType"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "arch",
                                    "value": "all"
                                }
                            ],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "osType",
                                    "description": "(Required) The operating system of the installer."
                                }
                            ]
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "<API Key>"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "body": "{\n  \"availableVersions\": [\n    \"veniam ad\",\n    \"minim et \"\n  ]\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                },
                {
                    "id": "d00e2ce5-0429-4400-bc3a-312a07ebaf62",
                    "name": "Not found. See the response body for details.",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "deployment",
                                "installer",
                                "gateway",
                                "versions",
                                ":osType"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "key": "arch",
                                    "value": "all"
                                }
                            ],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "osType",
                                    "description": "(Required) The operating system of the installer."
                                }
                            ]
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "<API Key>"
                            }
                        ],
                        "method": "GET",
                        "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                }
            ],
            "event": [],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            }
        },
        {
            "id": "41aabba0-a0e4-44cb-a029-00f4e1de3a1b",
            "name": "networkZones",
            "item": [
                {
                    "id": "078d6148-e581-4f57-be74-c6ad6afa0547",
                    "name": "Lists all existing network zones",
                    "request": {
                        "name": "Lists all existing network zones",
                        "description": {},
                        "url": {
                            "path": [
                                "networkZones"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "4506d5bf-b649-485f-a618-a2121708fe31",
                            "name": "Success.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "networkZones"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"networkZones\": [\n    {\n      \"alternativeZones\": [\n        \"fugiat\",\n        \"exercitation id laborum deserunt sint\"\n      ],\n      \"numOfOneAgentsUsing\": -92719408,\n      \"numOfConfiguredOneAgents\": -93290263,\n      \"numOfOneAgentsFromOtherZones\": -80113572,\n      \"numOfConfiguredActiveGates\": 16517358,\n      \"description\": \"enim exercitation et laborum\",\n      \"id\": \"est et\"\n    },\n    {\n      \"alternativeZones\": [\n        \"reprehenderi\",\n        \"id anim sit\"\n      ],\n      \"numOfOneAgentsUsing\": 82521048,\n      \"numOfConfiguredOneAgents\": -99089535,\n      \"numOfOneAgentsFromOtherZones\": 36151828,\n      \"numOfConfiguredActiveGates\": -64284192,\n      \"description\": \"cillum dolor\",\n      \"id\": \"do voluptate consequat adipisicing\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1194a85b-07b8-4c0c-a4b1-a0601d4e44ae",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "6411b761-27f5-48dc-941f-dba27697fd19",
                            "name": "Gets parameters of the specified network zone",
                            "request": {
                                "name": "Gets parameters of the specified network zone",
                                "description": {},
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required network zone."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "92581392-daf2-457d-bc60-7fcbc4c3120b",
                                    "name": "Success.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required network zone."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"alternativeZones\": [\n    \"labore fugiat amet\",\n    \"aute reprehenderit voluptate consectetur adipisicing\"\n  ],\n  \"numOfOneAgentsUsing\": -91202264,\n  \"numOfConfiguredOneAgents\": -75555020,\n  \"numOfOneAgentsFromOtherZones\": 25090533,\n  \"numOfConfiguredActiveGates\": 60865904,\n  \"description\": \"Excepteur Ut consectetur nisi sint\",\n  \"id\": \"minim labore reprehenderit in esse\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "4b8ca07a-6b5a-4443-9268-07c0608d17a0",
                            "name": "Updates an existing network zone or creates a new one",
                            "request": {
                                "name": "Updates an existing network zone or creates a new one",
                                "description": {
                                    "content": "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"alternativeZones\": [\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "266524fd-6205-456a-ab1d-95939de8ad67",
                                    "name": "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"alternativeZones\": [\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"id\": \"mollit qui labore in\",\n  \"name\": \"quis veniam anim labore\",\n  \"description\": \"est Lorem deserunt\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "60c01280-6f12-448c-8815-0aa4cef994e1",
                                    "name": "Success. The network zone has been updated. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"alternativeZones\": [\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "9effc3cb-d5b3-4680-9808-ca5ae88a904d",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"alternativeZones\": [\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "4a19fc8c-ffac-4f82-8eea-0d3f83d0c4f5",
                            "name": "Deletes the specified network zone",
                            "request": {
                                "name": "Deletes the specified network zone",
                                "description": {
                                    "content": "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "networkZones",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the network zone to be deleted."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "*/*"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "4bfcc8da-8f65-41e1-b458-6af2aa3f930e",
                                    "name": "Deleted. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "38abe9e1-f9f3-4be6-b6a2-561208c7fe61",
                                    "name": "Failed. See error message in the response body for details.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "networkZones",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the network zone to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "*/*"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "d37354ff-d4bf-44e1-b33a-446d15b446d7",
            "name": "tokens",
            "item": [
                {
                    "id": "398de11a-5e05-4a37-b850-7b7de9757252",
                    "name": "Lists available tokens in your environment",
                    "request": {
                        "name": "Lists available tokens in your environment",
                        "description": {
                            "content": "You can narrow down the output by adding parameters. The token has to match *all* the specified parameters. \n\n You can also specify the limit of returned tokens.\n\n **This list may contain tokens which were created automatically** (e.g. InstallerDownload, Mobile, ...) and are not visible on the `Settings` page. Deleting those might have unintended side-effects as they might still be in use.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "Limits the maximum number of returned tokens. \n\n If not set the value of `1000` is used. \n\n Maximum value is 1000000."
                                },
                                {
                                    "disabled": false,
                                    "key": "user",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of tokens by user, who owns the token."
                                },
                                {
                                    "disabled": false,
                                    "key": "permissions",
                                    "value": "<string>",
                                    "description": "Filters the resulting set of tokens by scopes assigned to the token. \n\n You can specify several permissions in the following format: `permissions=scope1&permissions=scope2`. The token must have *all* the specified scopes."
                                },
                                {
                                    "disabled": false,
                                    "key": "from",
                                    "value": "<long>",
                                    "description": "Last used after this timestamp (UTC milliseconds)."
                                },
                                {
                                    "disabled": false,
                                    "key": "to",
                                    "value": "<long>",
                                    "description": "Last used before this timestamp (UTC milliseconds)."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "d6210d50-966c-4b59-9b91-8f194a9bb99c",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "user",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "permissions",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "from",
                                            "value": "<long>"
                                        },
                                        {
                                            "key": "to",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"values\": [\n    {\n      \"id\": \"pariatur ex\",\n      \"name\": \"ipsum irure\",\n      \"description\": \"aute exercitation sint\"\n    },\n    {\n      \"id\": \"amet ut aute esse\",\n      \"name\": \"pa\",\n      \"description\": \"do cupidatat dolore\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1bbcf32e-b72c-49d4-9459-98ed3c652200",
                    "name": "Creates a new token",
                    "request": {
                        "name": "Creates a new token",
                        "description": {
                            "content": "The newly created token will be owned by the same user who owns the token used for authentication of the call.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "tokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"<string>\",\n  \"scopes\": [\n    \"<string>\"\n  ],\n  \"expiresIn\": {\n    \"value\": \"<long>\",\n    \"unit\": \"<string>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "913da7ef-e7f0-4a72-a413-df64b08d755a",
                            "name": "Success. The token has been created. The response body contains the token itself.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"<string>\",\n  \"scopes\": [\n    \"<string>\"\n  ],\n  \"expiresIn\": {\n    \"value\": \"<long>\",\n    \"unit\": \"<string>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "disabled": false,
                                    "description": "Token Id",
                                    "key": "Location",
                                    "value": "sint nisi mollit"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"token\": \"abcdefjhij1234567890\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "275b121b-a7bf-4df9-a7fb-8267d1daeee5",
                            "name": "Failed. The input is invalid. Response body provides details.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"<string>\",\n  \"scopes\": [\n    \"<string>\"\n  ],\n  \"expiresIn\": {\n    \"value\": \"<long>\",\n    \"unit\": \"<string>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "000cb7a2-3b70-427f-ab6e-b8a5d7601285",
                    "name": "{id}",
                    "item": [
                        {
                            "id": "fd619759-e001-4c17-b715-353faaeea370",
                            "name": "Lists token metadata by token ID",
                            "request": {
                                "name": "Lists token metadata by token ID",
                                "description": {
                                    "content": "The token itself is **not** exposed.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "tokens",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the required token."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "d4f07063-defe-44b2-b86b-3b08b8b383fa",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "tokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"scopes\": [\n    \"activeGateTokenManagement.write\",\n    \"DiagnosticExport\"\n  ],\n  \"id\": \"fugiat amet\",\n  \"name\": \"aute\",\n  \"userId\": \"pariatur sint\",\n  \"revoked\": false,\n  \"created\": -41352118,\n  \"expires\": 9375056,\n  \"lastUse\": 98614730,\n  \"personalAccessToken\": false\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "e17aee03-ac0f-4fcf-9698-070d50a8ac4e",
                                    "name": "Failed. The requested token has not been found.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "tokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the required token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "9d83ce34-636d-4778-a07a-54fb79be3f0d",
                            "name": "Updates the specified token",
                            "request": {
                                "name": "Updates the specified token",
                                "description": {},
                                "url": {
                                    "path": [
                                        "tokens",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the token to be updated. \n\n You can't update the token you're using for authentication of the request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "PUT",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"revoked\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"scopes\": [\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "bb2561b3-db3c-412b-ad0a-fd828c554c9e",
                                    "name": "Success. The token has been updated.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "tokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be updated. \n\n You can't update the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"revoked\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"scopes\": [\n    \"<string>\"\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "24358b8c-7142-4786-bee1-33957929ee19",
                                    "name": "Failed. You can't update the token you're using for authentication of the request.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "tokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be updated. \n\n You can't update the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"revoked\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"scopes\": [\n    \"<string>\"\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "cc6d2012-eb21-4be6-aab3-17fef7c1ed79",
                                    "name": "Failed. The requested token has not been found.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "tokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be updated. \n\n You can't update the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "PUT",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"revoked\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"scopes\": [\n    \"<string>\"\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "0678c5ac-2ab3-4254-ac29-18bdb82180f1",
                            "name": "Deletes the specified token",
                            "request": {
                                "name": "Deletes the specified token",
                                "description": {},
                                "url": {
                                    "path": [
                                        "tokens",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "id",
                                            "description": "(Required) The ID of the token to be deleted. Can either be the public identifier or the secret.\n\n You can't delete the token you're using for authentication of the request."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "914c91bb-9879-4246-85ea-6f97c27c3709",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "tokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be deleted. Can either be the public identifier or the secret.\n\n You can't delete the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "92c0573b-e0fc-4fb8-96fa-2493a5cd30c3",
                                    "name": "Failed. You can't delete the token you're using for authentication of the request.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "tokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be deleted. Can either be the public identifier or the secret.\n\n You can't delete the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "d2337910-a23a-44c9-ba5d-10bd3a8d1015",
                                    "name": "Failed. The requested token has not been found.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "tokens",
                                                ":id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "id",
                                                    "description": "(Required) The ID of the token to be deleted. Can either be the public identifier or the secret.\n\n You can't delete the token you're using for authentication of the request."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                },
                {
                    "id": "0185afc8-fc4f-4f43-98fa-458f3d501976",
                    "name": "Lists token metadata by token itself",
                    "request": {
                        "name": "Lists token metadata by token itself",
                        "description": {},
                        "url": {
                            "path": [
                                "tokens",
                                "lookup"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"token\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "5dfb4012-d321-4d38-af83-8fbfe0827ae8",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "tokens",
                                        "lookup"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"token\": \"abcdefjhij1234567890\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"scopes\": [\n    \"apiTokens.read\",\n    \"settings.read\"\n  ],\n  \"id\": \"anim laborum\",\n  \"name\": \"sit\",\n  \"userId\": \"ut enim\",\n  \"revoked\": true,\n  \"created\": -86721150,\n  \"expires\": 82287255,\n  \"lastUse\": 89213027,\n  \"personalAccessToken\": true\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ],
            "event": []
        },
        {
            "id": "4fb3355f-d24e-4b0f-a9e9-60ae29cf8520",
            "name": "iam",
            "item": [
                {
                    "id": "46208bd0-8723-4e4f-9810-655f9ad74434",
                    "name": "Gets configuration for policy statements. Available values for services, permissions, conditions and operators",
                    "request": {
                        "name": "Gets configuration for policy statements. Available values for services, permissions, conditions and operators",
                        "description": {},
                        "url": {
                            "path": [
                                "iam",
                                "configuration",
                                "policystatements"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "statuses",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "key": "statuses",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "76cb60a5-edaa-4d0d-958c-3d69fa7d4876",
                            "name": "Successful response",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "iam",
                                        "configuration",
                                        "policystatements"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "statuses",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "statuses",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"services\": [\n    {\n      \"name\": \"dolor ex pariatur cillum nostrud\",\n      \"description\": \"ipsum Excepteur voluptate\",\n      \"permissions\": [\n        {\n          \"name\": \"pariatur incididunt\",\n          \"description\": \"aliqua cillum dolor sunt\",\n          \"conditions\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"dynamicConditionPrefixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"status\": \"IN_DEVELOPMENT\",\n          \"internal\": true\n        },\n        {\n          \"name\": \"in Ut dolor laboris\",\n          \"description\": \"nisi est ex pariatur\",\n          \"conditions\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"dynamicConditionPrefixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"status\": \"GENERAL_AVAILABILITY\",\n          \"internal\": false\n        }\n      ],\n      \"status\": \"IN_DEVELOPMENT\"\n    },\n    {\n      \"name\": \"nisi commodo\",\n      \"description\": \"elit\",\n      \"permissions\": [\n        {\n          \"name\": \"ea \",\n          \"description\": \"aliqua\",\n          \"conditions\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"dynamicConditionPrefixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"status\": \"IN_DEVELOPMENT\",\n          \"internal\": true\n        },\n        {\n          \"name\": \"in reprehenderit\",\n          \"description\": \"exercitation reprehenderit in\",\n          \"conditions\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"dynamicConditionPrefixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"status\": \"GENERAL_AVAILABILITY\",\n          \"internal\": false\n        }\n      ],\n      \"status\": \"IN_DEVELOPMENT\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ce3f794b-9cb0-4346-94a7-3a4e2793dd0b",
                    "name": "Get effective permissions",
                    "request": {
                        "name": "Get effective permissions",
                        "description": {},
                        "url": {
                            "path": [
                                "iam",
                                "resolution",
                                ":level-type",
                                ":level-id",
                                "effectivepermissions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "services",
                                    "value": "<string>",
                                    "description": "Optional services list. Policies for given services will be returned"
                                },
                                {
                                    "disabled": false,
                                    "key": "entity_type",
                                    "value": "<string>",
                                    "description": "(Required) Required entity type: group or user"
                                },
                                {
                                    "disabled": false,
                                    "key": "entity_id",
                                    "value": "<string>",
                                    "description": "(Required) Required entity id"
                                },
                                {
                                    "disabled": false,
                                    "key": "explain",
                                    "value": "<boolean>",
                                    "description": "Optional explain parameter. Returns effective permissions within effective policies."
                                },
                                {
                                    "disabled": false,
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "disabled": false,
                                    "key": "size",
                                    "value": "100"
                                }
                            ],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "level-type",
                                    "description": "(Required) For group entity one of the values: global, account, environment and for user entity one of the values: account, environment"
                                },
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "level-id",
                                    "description": "(Required) "
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "18c42fb1-e216-4f0d-b413-62a743beb944",
                            "name": "Successful response - level found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "iam",
                                        "resolution",
                                        ":level-type",
                                        ":level-id",
                                        "effectivepermissions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "services",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entity_type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entity_id",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "explain",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "size",
                                            "value": "100"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "level-type",
                                            "description": "(Required) For group entity one of the values: global, account, environment and for user entity one of the values: account, environment"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "level-id",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"effectivePermissions\": [\n    {\n      \"permission\": \"ullamco irure ea ipsum consequat\",\n      \"effects\": [\n        {\n          \"effect\": \"DENY\",\n          \"conditions\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"effectivePolicies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"effect\": \"ALLOW\",\n          \"conditions\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"effectivePolicies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"permission\": \"qui\",\n      \"effects\": [\n        {\n          \"effect\": \"ALLOW\",\n          \"conditions\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"effectivePolicies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"effect\": \"ALLOW\",\n          \"conditions\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"effectivePolicies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c9b2fae5-0d1c-4816-b8a4-f4dc905a35a5",
                            "name": "Level not found response",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "iam",
                                        "resolution",
                                        ":level-type",
                                        ":level-id",
                                        "effectivepermissions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "services",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entity_type",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "entity_id",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "explain",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "size",
                                            "value": "100"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "level-type",
                                            "description": "(Required) For group entity one of the values: global, account, environment and for user entity one of the values: account, environment"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "level-id",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "013760a7-6dc8-40a9-b53b-9325e8c4a263",
                    "name": "repo/{level-type}/{level-id}",
                    "item": [
                        {
                            "id": "e1730fa4-2f1f-4196-9b16-73381e5e2431",
                            "name": "bindings",
                            "item": [
                                {
                                    "id": "e49dbbbb-32aa-4115-9265-542cdae19c05",
                                    "name": "Get policy bindings for a level",
                                    "request": {
                                        "name": "Get policy bindings for a level",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "iam",
                                                "repo",
                                                ":level-type",
                                                ":level-id",
                                                "bindings"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-type",
                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-id",
                                                    "description": "(Required) "
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "ee8aec9d-bed8-4f3f-97c1-f5da09adfbaf",
                                            "name": "Successful response - level found",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"officia fugiat aliquip\"\n      ],\n      \"policyUuid\": \"urn:uuid:8bf6050a-62fc-bd2d-40f6-892076dd6c24\",\n      \"parameters\": {\n        \"dolore7_\": \"do\"\n      },\n      \"metadata\": {\n        \"laboris_e_d\": \"Lorem\",\n        \"laboris1e\": \"aliquip\"\n      }\n    },\n    {\n      \"groups\": [\n        \"ea labore e\"\n      ],\n      \"policyUuid\": \"561bcc02-5fb5-c088-a490-a5126647a92b\",\n      \"parameters\": {\n        \"anim_db3\": \"culpa\"\n      },\n      \"metadata\": {\n        \"sit_1\": \"nulla pariatur\",\n        \"cupidatat_79\": \"nostrud minim in\",\n        \"commodo_b2\": \"sunt dolore el\"\n      }\n    }\n  ],\n  \"levelType\": \"laboris sit ipsum Lorem\",\n  \"levelId\": \"ea est magna reprehenderit\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "b2471ad2-590a-453e-a865-d921af65671d",
                                            "name": "Level not found response",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "bb66da6b-ff78-42c8-9794-00bb506193c6",
                                    "name": "Update policy bindings within a level",
                                    "request": {
                                        "name": "Update policy bindings within a level",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "iam",
                                                "repo",
                                                ":level-type",
                                                ":level-id",
                                                "bindings"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-type",
                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-id",
                                                    "description": "(Required) "
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"irure6c3\": \"<string>\",\n        \"in25\": \"<string>\"\n      },\n      \"metadata\": {\n        \"quis3\": \"<string>\",\n        \"irure__\": \"<string>\",\n        \"dolor___9\": \"<string>\"\n      }\n    },\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"magna_3d5\": \"<string>\"\n      },\n      \"metadata\": {\n        \"dolore_cec\": \"<string>\",\n        \"deserunt_9\": \"<string>\"\n      }\n    }\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "87810dea-743d-42a4-8cec-f913ff5e1c6c",
                                            "name": "Successful response - policy bindings created or updated",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"ullamco7\": \"<string>\",\n        \"in1c\": \"<string>\"\n      },\n      \"metadata\": {\n        \"minim_b3\": \"<string>\",\n        \"irure237\": \"<string>\",\n        \"cillum_8\": \"<string>\",\n        \"irure48b\": \"<string>\"\n      }\n    },\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"nulla_75\": \"<string>\",\n        \"qui__2\": \"<string>\"\n      },\n      \"metadata\": {\n        \"sit_a\": \"<string>\",\n        \"sed_f63\": \"<string>\"\n      }\n    }\n  ]\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "e5a6f2bd-024f-4908-aef2-5899a4752b09",
                                            "name": "Policy bindings create or update request invalid",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"ullamco7\": \"<string>\",\n        \"in1c\": \"<string>\"\n      },\n      \"metadata\": {\n        \"minim_b3\": \"<string>\",\n        \"irure237\": \"<string>\",\n        \"cillum_8\": \"<string>\",\n        \"irure48b\": \"<string>\"\n      }\n    },\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"nulla_75\": \"<string>\",\n        \"qui__2\": \"<string>\"\n      },\n      \"metadata\": {\n        \"sit_a\": \"<string>\",\n        \"sed_f63\": \"<string>\"\n      }\n    }\n  ]\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "6da9e301-c3f0-4408-bd59-c02a7fef9898",
                                            "name": "Level not found response",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"ullamco7\": \"<string>\",\n        \"in1c\": \"<string>\"\n      },\n      \"metadata\": {\n        \"minim_b3\": \"<string>\",\n        \"irure237\": \"<string>\",\n        \"cillum_8\": \"<string>\",\n        \"irure48b\": \"<string>\"\n      }\n    },\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"nulla_75\": \"<string>\",\n        \"qui__2\": \"<string>\"\n      },\n      \"metadata\": {\n        \"sit_a\": \"<string>\",\n        \"sed_f63\": \"<string>\"\n      }\n    }\n  ]\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "992d7b58-d5e3-4ac6-9452-4d4413b5ed92",
                                            "name": "Policy bindings create or update request invalid",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"ullamco7\": \"<string>\",\n        \"in1c\": \"<string>\"\n      },\n      \"metadata\": {\n        \"minim_b3\": \"<string>\",\n        \"irure237\": \"<string>\",\n        \"cillum_8\": \"<string>\",\n        \"irure48b\": \"<string>\"\n      }\n    },\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"nulla_75\": \"<string>\",\n        \"qui__2\": \"<string>\"\n      },\n      \"metadata\": {\n        \"sit_a\": \"<string>\",\n        \"sed_f63\": \"<string>\"\n      }\n    }\n  ]\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                            "code": 422,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "02f212f6-9e32-4ca9-a6c1-fb781e4de357",
                                    "name": "Delete all policy bindings from a level",
                                    "request": {
                                        "name": "Delete all policy bindings from a level",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "iam",
                                                "repo",
                                                ":level-type",
                                                ":level-id",
                                                "bindings"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-type",
                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-id",
                                                    "description": "(Required) "
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "2b1bc7ba-1f49-4dcb-87de-4b6e1afecfe7",
                                            "name": "Successful response - bindings deleted",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "ff42459f-911a-4e8c-a739-602b787ab675",
                                            "name": "Policy bindings delete request invalid",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "96e40a62-d0d8-4fe7-8314-0fdc0d1a9fc1",
                                            "name": "Level not found response",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "fa2149a2-6ffe-48ad-88ef-f5c674cfeb88",
                                            "name": "Policy bindings delete request invalid",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                            "code": 422,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "615b4815-8211-4994-bcb4-befe6ce0b6bc",
                                    "name": "{policy-uuid}",
                                    "item": [
                                        {
                                            "id": "495a6232-d4f4-411f-9210-3a745c50c115",
                                            "name": "Get policy bindings within a level",
                                            "request": {
                                                "name": "Get policy bindings within a level",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings",
                                                        ":policy-uuid"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "disabled": false,
                                                            "key": "empty",
                                                            "value": "<boolean>",
                                                            "description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<uuid>",
                                                            "key": "policy-uuid",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "81e80c5c-4c2b-462a-a7eb-1a0f7a171c4a",
                                                    "name": "Successful response - list of policy bindings with parameters",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "parameters[param1]",
                                                                    "value": "value1"
                                                                },
                                                                {
                                                                    "key": "parameters[param2]",
                                                                    "value": "value2"
                                                                },
                                                                {
                                                                    "key": "metadata[param1]",
                                                                    "value": "value1"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"aliqua0\": \"<string>\",\n        \"officia_72a\": \"<string>\"\n      },\n      \"metadata\": {\n        \"ipsuma\": \"<string>\",\n        \"in_fb_\": \"<string>\",\n        \"id_f\": \"<string>\"\n      }\n    },\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"consectetur97\": \"<string>\",\n        \"labore7\": \"<string>\",\n        \"exd\": \"<string>\"\n      },\n      \"metadata\": {\n        \"dolore_c44\": \"<string>\",\n        \"nostrud__6\": \"<string>\"\n      }\n    }\n  ],\n  \"levelType\": \"laborum dolor quis\",\n  \"levelId\": \"in qui dolore\"\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "43772880-f139-493f-983b-d03251bc059e",
                                                    "name": "Level or policy not found response",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "parameters[param1]",
                                                                    "value": "value1"
                                                                },
                                                                {
                                                                    "key": "parameters[param2]",
                                                                    "value": "value2"
                                                                },
                                                                {
                                                                    "key": "metadata[param1]",
                                                                    "value": "value1"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "150e1010-dc7d-4a9a-bd4e-9612ea324394",
                                            "name": "Append policy bindings within a level",
                                            "request": {
                                                "name": "Append policy bindings within a level",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings",
                                                        ":policy-uuid"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<uuid>",
                                                            "key": "policy-uuid",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json"
                                                    },
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "method": "POST",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                },
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"groups\": [\n    \"<string>\"\n  ],\n  \"parameters\": {\n    \"qui_1d4\": \"<string>\"\n  },\n  \"metadata\": {\n    \"eu4\": \"<string>\"\n  }\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "6f5f2a08-4c5e-4dda-b3bb-b1f8a1282c96",
                                                    "name": "Successful response - policy bindings created",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"groups\": [\n    \"<string>\"\n  ],\n  \"parameters\": {\n    \"Excepteur_1\": \"<string>\"\n  },\n  \"metadata\": {\n    \"enim4d5\": \"<string>\"\n  }\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                },
                                                {
                                                    "id": "ea625713-29c0-4687-bf98-3cb852da1c05",
                                                    "name": "Policy bindings create request invalid",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"groups\": [\n    \"<string>\"\n  ],\n  \"parameters\": {\n    \"Excepteur_1\": \"<string>\"\n  },\n  \"metadata\": {\n    \"enim4d5\": \"<string>\"\n  }\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "8c030bf8-0481-429b-bd40-c5d0b661bf5c",
                                                    "name": "Level not found response",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"groups\": [\n    \"<string>\"\n  ],\n  \"parameters\": {\n    \"Excepteur_1\": \"<string>\"\n  },\n  \"metadata\": {\n    \"enim4d5\": \"<string>\"\n  }\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "a077ad60-f8e4-4938-97d9-11a8aa0ffbef",
                                                    "name": "Policy bindings create request invalid",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"groups\": [\n    \"<string>\"\n  ],\n  \"parameters\": {\n    \"Excepteur_1\": \"<string>\"\n  },\n  \"metadata\": {\n    \"enim4d5\": \"<string>\"\n  }\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                                    "code": 422,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "8d036fcf-b327-4b3d-b0b0-947615c8aa87",
                                            "name": "Delete all policy bindings within a level",
                                            "request": {
                                                "name": "Delete all policy bindings within a level",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings",
                                                        ":policy-uuid"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "disabled": false,
                                                            "key": "empty",
                                                            "value": "<boolean>",
                                                            "description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "key": "forceMultiple",
                                                            "value": "<boolean>",
                                                            "description": "Forces multiple in case delete by parameters and metadata query"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<uuid>",
                                                            "key": "policy-uuid",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "9b774594-959c-4921-9ca8-7071a33158db",
                                                    "name": "Successful response - binding deleted",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "parameters[param1]",
                                                                    "value": "value1"
                                                                },
                                                                {
                                                                    "key": "parameters[param2]",
                                                                    "value": "value2"
                                                                },
                                                                {
                                                                    "key": "metadata[param1]",
                                                                    "value": "value1"
                                                                },
                                                                {
                                                                    "key": "forceMultiple",
                                                                    "value": "<boolean>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                },
                                                {
                                                    "id": "4b451c2f-c8dc-491f-bdc3-3d149323dbdd",
                                                    "name": "Policy bindings delete request invalid",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "parameters[param1]",
                                                                    "value": "value1"
                                                                },
                                                                {
                                                                    "key": "parameters[param2]",
                                                                    "value": "value2"
                                                                },
                                                                {
                                                                    "key": "metadata[param1]",
                                                                    "value": "value1"
                                                                },
                                                                {
                                                                    "key": "forceMultiple",
                                                                    "value": "<boolean>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "58d9063c-73f3-4fad-9505-d624c2bcf9e3",
                                                    "name": "Level not found response",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "parameters[param1]",
                                                                    "value": "value1"
                                                                },
                                                                {
                                                                    "key": "parameters[param2]",
                                                                    "value": "value2"
                                                                },
                                                                {
                                                                    "key": "metadata[param1]",
                                                                    "value": "value1"
                                                                },
                                                                {
                                                                    "key": "forceMultiple",
                                                                    "value": "<boolean>"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "c5a628c2-6652-4a44-9ebd-1e0018b077b8",
                                            "name": "{group-uuid}",
                                            "item": [
                                                {
                                                    "id": "b0041464-f980-4170-acc1-8e1a05c92b21",
                                                    "name": "Get policy bindings within a level and for given group",
                                                    "request": {
                                                        "name": "Get policy bindings within a level and for given group",
                                                        "description": {},
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                ":policy-uuid",
                                                                ":group-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "disabled": false,
                                                                    "key": "empty",
                                                                    "value": "<boolean>",
                                                                    "description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, account, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "group-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "key": "Accept",
                                                                "value": "application/json"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "auth": {
                                                            "type": "apikey",
                                                            "apikey": [
                                                                {
                                                                    "key": "key",
                                                                    "value": "Authorization"
                                                                },
                                                                {
                                                                    "key": "value",
                                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                                },
                                                                {
                                                                    "key": "in",
                                                                    "value": "header"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "response": [
                                                        {
                                                            "id": "f1fb94eb-b1c4-4f13-893a-56b09194626d",
                                                            "name": "Successful response - list of policy bindings with parameters",
                                                            "originalRequest": {
                                                                "url": {
                                                                    "path": [
                                                                        "iam",
                                                                        "repo",
                                                                        ":level-type",
                                                                        ":level-id",
                                                                        "bindings",
                                                                        ":policy-uuid",
                                                                        ":group-uuid"
                                                                    ],
                                                                    "host": [
                                                                        "{{baseUrl}}"
                                                                    ],
                                                                    "query": [
                                                                        {
                                                                            "key": "parameters[param1]",
                                                                            "value": "value1"
                                                                        },
                                                                        {
                                                                            "key": "parameters[param2]",
                                                                            "value": "value2"
                                                                        },
                                                                        {
                                                                            "key": "metadata[param1]",
                                                                            "value": "value1"
                                                                        }
                                                                    ],
                                                                    "variable": [
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-type",
                                                                            "description": "(Required) One of the values: global, account, environment"
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-id",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<uuid>",
                                                                            "key": "policy-uuid",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "group-uuid",
                                                                            "description": "(Required) "
                                                                        }
                                                                    ]
                                                                },
                                                                "header": [
                                                                    {
                                                                        "description": {
                                                                            "content": "Added as a part of security scheme: apikey",
                                                                            "type": "text/plain"
                                                                        },
                                                                        "key": "Authorization",
                                                                        "value": "<API Key>"
                                                                    }
                                                                ],
                                                                "method": "GET",
                                                                "body": {}
                                                            },
                                                            "status": "OK",
                                                            "code": 200,
                                                            "header": [
                                                                {
                                                                    "key": "Content-Type",
                                                                    "value": "application/json"
                                                                }
                                                            ],
                                                            "body": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"aliqua0\": \"<string>\",\n        \"officia_72a\": \"<string>\"\n      },\n      \"metadata\": {\n        \"ipsuma\": \"<string>\",\n        \"in_fb_\": \"<string>\",\n        \"id_f\": \"<string>\"\n      }\n    },\n    {\n      \"groups\": [\n        \"<string>\"\n      ],\n      \"policyUuid\": \"<uuid>\",\n      \"parameters\": {\n        \"consectetur97\": \"<string>\",\n        \"labore7\": \"<string>\",\n        \"exd\": \"<string>\"\n      },\n      \"metadata\": {\n        \"dolore_c44\": \"<string>\",\n        \"nostrud__6\": \"<string>\"\n      }\n    }\n  ],\n  \"levelType\": \"laborum dolor quis\",\n  \"levelId\": \"in qui dolore\"\n}",
                                                            "cookie": [],
                                                            "_postman_previewlanguage": "json"
                                                        },
                                                        {
                                                            "id": "36af1fa3-2f3c-4107-bd57-b527d30c0c5c",
                                                            "name": "Level or policy not found response",
                                                            "originalRequest": {
                                                                "url": {
                                                                    "path": [
                                                                        "iam",
                                                                        "repo",
                                                                        ":level-type",
                                                                        ":level-id",
                                                                        "bindings",
                                                                        ":policy-uuid",
                                                                        ":group-uuid"
                                                                    ],
                                                                    "host": [
                                                                        "{{baseUrl}}"
                                                                    ],
                                                                    "query": [
                                                                        {
                                                                            "key": "parameters[param1]",
                                                                            "value": "value1"
                                                                        },
                                                                        {
                                                                            "key": "parameters[param2]",
                                                                            "value": "value2"
                                                                        },
                                                                        {
                                                                            "key": "metadata[param1]",
                                                                            "value": "value1"
                                                                        }
                                                                    ],
                                                                    "variable": [
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-type",
                                                                            "description": "(Required) One of the values: global, account, environment"
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-id",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<uuid>",
                                                                            "key": "policy-uuid",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "group-uuid",
                                                                            "description": "(Required) "
                                                                        }
                                                                    ]
                                                                },
                                                                "header": [
                                                                    {
                                                                        "description": {
                                                                            "content": "Added as a part of security scheme: apikey",
                                                                            "type": "text/plain"
                                                                        },
                                                                        "key": "Authorization",
                                                                        "value": "<API Key>"
                                                                    }
                                                                ],
                                                                "method": "GET",
                                                                "body": {}
                                                            },
                                                            "status": "Not Found",
                                                            "code": 404,
                                                            "header": [
                                                                {
                                                                    "key": "Content-Type",
                                                                    "value": "application/json"
                                                                }
                                                            ],
                                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                            "cookie": [],
                                                            "_postman_previewlanguage": "json"
                                                        }
                                                    ],
                                                    "event": [],
                                                    "protocolProfileBehavior": {
                                                        "disableBodyPruning": true
                                                    }
                                                },
                                                {
                                                    "id": "dc47353f-1b72-4bf7-bdf5-4e13a99f46e4",
                                                    "name": "Append policy bindings within a level for particular group",
                                                    "request": {
                                                        "name": "Append policy bindings within a level for particular group",
                                                        "description": {},
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                ":policy-uuid",
                                                                ":group-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "group-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                            },
                                                            {
                                                                "key": "Accept",
                                                                "value": "application/json"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "auth": {
                                                            "type": "apikey",
                                                            "apikey": [
                                                                {
                                                                    "key": "key",
                                                                    "value": "Authorization"
                                                                },
                                                                {
                                                                    "key": "value",
                                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                                },
                                                                {
                                                                    "key": "in",
                                                                    "value": "header"
                                                                }
                                                            ]
                                                        },
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"parameters\": {\n    \"do_a54\": \"<string>\",\n    \"proident_4\": \"<string>\"\n  },\n  \"metadata\": {\n    \"veniam_0\": \"<string>\",\n    \"ipsum_4\": \"<string>\"\n  }\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "response": [
                                                        {
                                                            "id": "d70d5c52-5130-48b7-aeb5-f5ccb2758a77",
                                                            "name": "Successful response - policy bindings created",
                                                            "originalRequest": {
                                                                "url": {
                                                                    "path": [
                                                                        "iam",
                                                                        "repo",
                                                                        ":level-type",
                                                                        ":level-id",
                                                                        "bindings",
                                                                        ":policy-uuid",
                                                                        ":group-uuid"
                                                                    ],
                                                                    "host": [
                                                                        "{{baseUrl}}"
                                                                    ],
                                                                    "query": [],
                                                                    "variable": [
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-type",
                                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-id",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<uuid>",
                                                                            "key": "policy-uuid",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "group-uuid",
                                                                            "description": "(Required) "
                                                                        }
                                                                    ]
                                                                },
                                                                "header": [
                                                                    {
                                                                        "description": {
                                                                            "content": "Added as a part of security scheme: apikey",
                                                                            "type": "text/plain"
                                                                        },
                                                                        "key": "Authorization",
                                                                        "value": "<API Key>"
                                                                    }
                                                                ],
                                                                "method": "POST",
                                                                "body": {
                                                                    "mode": "raw",
                                                                    "raw": "{\n  \"parameters\": {\n    \"Lorem3\": \"<string>\"\n  },\n  \"metadata\": {\n    \"commodo7\": \"<string>\",\n    \"eiusmod_c_b\": \"<string>\"\n  }\n}",
                                                                    "options": {
                                                                        "raw": {
                                                                            "language": "json"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": "No Content",
                                                            "code": 204,
                                                            "header": [
                                                                {
                                                                    "key": "Content-Type",
                                                                    "value": "text/plain"
                                                                }
                                                            ],
                                                            "body": "",
                                                            "cookie": [],
                                                            "_postman_previewlanguage": "text"
                                                        },
                                                        {
                                                            "id": "b6f3477f-024f-4444-8124-c980e0ffaa26",
                                                            "name": "Policy bindings create request invalid",
                                                            "originalRequest": {
                                                                "url": {
                                                                    "path": [
                                                                        "iam",
                                                                        "repo",
                                                                        ":level-type",
                                                                        ":level-id",
                                                                        "bindings",
                                                                        ":policy-uuid",
                                                                        ":group-uuid"
                                                                    ],
                                                                    "host": [
                                                                        "{{baseUrl}}"
                                                                    ],
                                                                    "query": [],
                                                                    "variable": [
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-type",
                                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-id",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<uuid>",
                                                                            "key": "policy-uuid",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "group-uuid",
                                                                            "description": "(Required) "
                                                                        }
                                                                    ]
                                                                },
                                                                "header": [
                                                                    {
                                                                        "description": {
                                                                            "content": "Added as a part of security scheme: apikey",
                                                                            "type": "text/plain"
                                                                        },
                                                                        "key": "Authorization",
                                                                        "value": "<API Key>"
                                                                    }
                                                                ],
                                                                "method": "POST",
                                                                "body": {
                                                                    "mode": "raw",
                                                                    "raw": "{\n  \"parameters\": {\n    \"Lorem3\": \"<string>\"\n  },\n  \"metadata\": {\n    \"commodo7\": \"<string>\",\n    \"eiusmod_c_b\": \"<string>\"\n  }\n}",
                                                                    "options": {
                                                                        "raw": {
                                                                            "language": "json"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": "Bad Request",
                                                            "code": 400,
                                                            "header": [
                                                                {
                                                                    "key": "Content-Type",
                                                                    "value": "application/json"
                                                                }
                                                            ],
                                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                            "cookie": [],
                                                            "_postman_previewlanguage": "json"
                                                        },
                                                        {
                                                            "id": "c53e8883-927b-4e27-a617-651bda22e3e2",
                                                            "name": "Level not found response",
                                                            "originalRequest": {
                                                                "url": {
                                                                    "path": [
                                                                        "iam",
                                                                        "repo",
                                                                        ":level-type",
                                                                        ":level-id",
                                                                        "bindings",
                                                                        ":policy-uuid",
                                                                        ":group-uuid"
                                                                    ],
                                                                    "host": [
                                                                        "{{baseUrl}}"
                                                                    ],
                                                                    "query": [],
                                                                    "variable": [
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-type",
                                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-id",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<uuid>",
                                                                            "key": "policy-uuid",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "group-uuid",
                                                                            "description": "(Required) "
                                                                        }
                                                                    ]
                                                                },
                                                                "header": [
                                                                    {
                                                                        "description": {
                                                                            "content": "Added as a part of security scheme: apikey",
                                                                            "type": "text/plain"
                                                                        },
                                                                        "key": "Authorization",
                                                                        "value": "<API Key>"
                                                                    }
                                                                ],
                                                                "method": "POST",
                                                                "body": {
                                                                    "mode": "raw",
                                                                    "raw": "{\n  \"parameters\": {\n    \"Lorem3\": \"<string>\"\n  },\n  \"metadata\": {\n    \"commodo7\": \"<string>\",\n    \"eiusmod_c_b\": \"<string>\"\n  }\n}",
                                                                    "options": {
                                                                        "raw": {
                                                                            "language": "json"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": "Not Found",
                                                            "code": 404,
                                                            "header": [
                                                                {
                                                                    "key": "Content-Type",
                                                                    "value": "application/json"
                                                                }
                                                            ],
                                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                            "cookie": [],
                                                            "_postman_previewlanguage": "json"
                                                        },
                                                        {
                                                            "id": "3845745b-2d95-4949-a42c-f6c8a510185d",
                                                            "name": "Policy bindings create request invalid",
                                                            "originalRequest": {
                                                                "url": {
                                                                    "path": [
                                                                        "iam",
                                                                        "repo",
                                                                        ":level-type",
                                                                        ":level-id",
                                                                        "bindings",
                                                                        ":policy-uuid",
                                                                        ":group-uuid"
                                                                    ],
                                                                    "host": [
                                                                        "{{baseUrl}}"
                                                                    ],
                                                                    "query": [],
                                                                    "variable": [
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-type",
                                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-id",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<uuid>",
                                                                            "key": "policy-uuid",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "group-uuid",
                                                                            "description": "(Required) "
                                                                        }
                                                                    ]
                                                                },
                                                                "header": [
                                                                    {
                                                                        "description": {
                                                                            "content": "Added as a part of security scheme: apikey",
                                                                            "type": "text/plain"
                                                                        },
                                                                        "key": "Authorization",
                                                                        "value": "<API Key>"
                                                                    }
                                                                ],
                                                                "method": "POST",
                                                                "body": {
                                                                    "mode": "raw",
                                                                    "raw": "{\n  \"parameters\": {\n    \"Lorem3\": \"<string>\"\n  },\n  \"metadata\": {\n    \"commodo7\": \"<string>\",\n    \"eiusmod_c_b\": \"<string>\"\n  }\n}",
                                                                    "options": {
                                                                        "raw": {
                                                                            "language": "json"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                                            "code": 422,
                                                            "header": [
                                                                {
                                                                    "key": "Content-Type",
                                                                    "value": "application/json"
                                                                }
                                                            ],
                                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                            "cookie": [],
                                                            "_postman_previewlanguage": "json"
                                                        }
                                                    ],
                                                    "event": [],
                                                    "protocolProfileBehavior": {
                                                        "disableBodyPruning": true
                                                    }
                                                },
                                                {
                                                    "id": "7888d1ef-ee52-4415-a08e-773f6b02ff65",
                                                    "name": "Delete a policy binding from a group within a level",
                                                    "request": {
                                                        "name": "Delete a policy binding from a group within a level",
                                                        "description": {},
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                ":policy-uuid",
                                                                ":group-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "disabled": false,
                                                                    "key": "empty",
                                                                    "value": "<boolean>",
                                                                    "description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "key": "forceMultiple",
                                                                    "value": "<boolean>",
                                                                    "description": "Forces multiple bindings delete in case of delete attempt by parameters and metadata query"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "group-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "key": "Accept",
                                                                "value": "application/json"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "auth": {
                                                            "type": "apikey",
                                                            "apikey": [
                                                                {
                                                                    "key": "key",
                                                                    "value": "Authorization"
                                                                },
                                                                {
                                                                    "key": "value",
                                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                                },
                                                                {
                                                                    "key": "in",
                                                                    "value": "header"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "response": [
                                                        {
                                                            "id": "28c24d79-f245-4f52-aa3e-43cad6090f14",
                                                            "name": "Successful response - binding deleted",
                                                            "originalRequest": {
                                                                "url": {
                                                                    "path": [
                                                                        "iam",
                                                                        "repo",
                                                                        ":level-type",
                                                                        ":level-id",
                                                                        "bindings",
                                                                        ":policy-uuid",
                                                                        ":group-uuid"
                                                                    ],
                                                                    "host": [
                                                                        "{{baseUrl}}"
                                                                    ],
                                                                    "query": [
                                                                        {
                                                                            "key": "parameters[param1]",
                                                                            "value": "value1"
                                                                        },
                                                                        {
                                                                            "key": "parameters[param2]",
                                                                            "value": "value2"
                                                                        },
                                                                        {
                                                                            "key": "metadata[param1]",
                                                                            "value": "value1"
                                                                        },
                                                                        {
                                                                            "key": "forceMultiple",
                                                                            "value": "<boolean>"
                                                                        }
                                                                    ],
                                                                    "variable": [
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-type",
                                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-id",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<uuid>",
                                                                            "key": "policy-uuid",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "group-uuid",
                                                                            "description": "(Required) "
                                                                        }
                                                                    ]
                                                                },
                                                                "header": [
                                                                    {
                                                                        "description": {
                                                                            "content": "Added as a part of security scheme: apikey",
                                                                            "type": "text/plain"
                                                                        },
                                                                        "key": "Authorization",
                                                                        "value": "<API Key>"
                                                                    }
                                                                ],
                                                                "method": "DELETE",
                                                                "body": {}
                                                            },
                                                            "status": "No Content",
                                                            "code": 204,
                                                            "header": [
                                                                {
                                                                    "key": "Content-Type",
                                                                    "value": "text/plain"
                                                                }
                                                            ],
                                                            "body": "",
                                                            "cookie": [],
                                                            "_postman_previewlanguage": "text"
                                                        },
                                                        {
                                                            "id": "9d072f7c-b82f-4067-b233-46423ec5b1ff",
                                                            "name": "Policy bindings delete request invalid",
                                                            "originalRequest": {
                                                                "url": {
                                                                    "path": [
                                                                        "iam",
                                                                        "repo",
                                                                        ":level-type",
                                                                        ":level-id",
                                                                        "bindings",
                                                                        ":policy-uuid",
                                                                        ":group-uuid"
                                                                    ],
                                                                    "host": [
                                                                        "{{baseUrl}}"
                                                                    ],
                                                                    "query": [
                                                                        {
                                                                            "key": "parameters[param1]",
                                                                            "value": "value1"
                                                                        },
                                                                        {
                                                                            "key": "parameters[param2]",
                                                                            "value": "value2"
                                                                        },
                                                                        {
                                                                            "key": "metadata[param1]",
                                                                            "value": "value1"
                                                                        },
                                                                        {
                                                                            "key": "forceMultiple",
                                                                            "value": "<boolean>"
                                                                        }
                                                                    ],
                                                                    "variable": [
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-type",
                                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-id",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<uuid>",
                                                                            "key": "policy-uuid",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "group-uuid",
                                                                            "description": "(Required) "
                                                                        }
                                                                    ]
                                                                },
                                                                "header": [
                                                                    {
                                                                        "description": {
                                                                            "content": "Added as a part of security scheme: apikey",
                                                                            "type": "text/plain"
                                                                        },
                                                                        "key": "Authorization",
                                                                        "value": "<API Key>"
                                                                    }
                                                                ],
                                                                "method": "DELETE",
                                                                "body": {}
                                                            },
                                                            "status": "Bad Request",
                                                            "code": 400,
                                                            "header": [
                                                                {
                                                                    "key": "Content-Type",
                                                                    "value": "application/json"
                                                                }
                                                            ],
                                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                            "cookie": [],
                                                            "_postman_previewlanguage": "json"
                                                        },
                                                        {
                                                            "id": "ae1ab556-edc7-4eb6-a379-a2c381e02500",
                                                            "name": "Level not found response",
                                                            "originalRequest": {
                                                                "url": {
                                                                    "path": [
                                                                        "iam",
                                                                        "repo",
                                                                        ":level-type",
                                                                        ":level-id",
                                                                        "bindings",
                                                                        ":policy-uuid",
                                                                        ":group-uuid"
                                                                    ],
                                                                    "host": [
                                                                        "{{baseUrl}}"
                                                                    ],
                                                                    "query": [
                                                                        {
                                                                            "key": "parameters[param1]",
                                                                            "value": "value1"
                                                                        },
                                                                        {
                                                                            "key": "parameters[param2]",
                                                                            "value": "value2"
                                                                        },
                                                                        {
                                                                            "key": "metadata[param1]",
                                                                            "value": "value1"
                                                                        },
                                                                        {
                                                                            "key": "forceMultiple",
                                                                            "value": "<boolean>"
                                                                        }
                                                                    ],
                                                                    "variable": [
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-type",
                                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "level-id",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<uuid>",
                                                                            "key": "policy-uuid",
                                                                            "description": "(Required) "
                                                                        },
                                                                        {
                                                                            "disabled": false,
                                                                            "type": "any",
                                                                            "value": "<string>",
                                                                            "key": "group-uuid",
                                                                            "description": "(Required) "
                                                                        }
                                                                    ]
                                                                },
                                                                "header": [
                                                                    {
                                                                        "description": {
                                                                            "content": "Added as a part of security scheme: apikey",
                                                                            "type": "text/plain"
                                                                        },
                                                                        "key": "Authorization",
                                                                        "value": "<API Key>"
                                                                    }
                                                                ],
                                                                "method": "DELETE",
                                                                "body": {}
                                                            },
                                                            "status": "Not Found",
                                                            "code": 404,
                                                            "header": [
                                                                {
                                                                    "key": "Content-Type",
                                                                    "value": "application/json"
                                                                }
                                                            ],
                                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                            "cookie": [],
                                                            "_postman_previewlanguage": "json"
                                                        }
                                                    ],
                                                    "event": [],
                                                    "protocolProfileBehavior": {
                                                        "disableBodyPruning": true
                                                    }
                                                }
                                            ],
                                            "event": []
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "56dfc786-f28d-46dd-b843-a9408ca11ecb",
                                    "name": "groups/{group-uuid}",
                                    "item": [
                                        {
                                            "id": "cd193175-a01a-4c80-a576-27ba272c0f46",
                                            "name": "Get policy UUIDs for a given level by level ID and group",
                                            "request": {
                                                "name": "Get policy UUIDs for a given level by level ID and group",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings",
                                                        "groups",
                                                        ":group-uuid"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "group-uuid",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "b048396a-ea42-4f08-a48f-3f6edef5f2fd",
                                                    "name": "Successful response - level found",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                "groups",
                                                                ":group-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "group-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"policyUuids\": [\n    \"5d220ded-d1f8-11cc-c104-7c4d9499e8f3\",\n    \"urn:uuid:310044c8-80a2-3e2e-baca-e1c9d6b13027\"\n  ]\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "b2dfa759-406d-4bd4-9ab9-56681a68f82a",
                                                    "name": "Level not found response",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                "groups",
                                                                ":group-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "group-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "ea3e61f9-14cc-4ad3-86bb-777f5c2a740b",
                                            "name": "Create or update policy bindings within a level for a group",
                                            "request": {
                                                "name": "Create or update policy bindings within a level for a group",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "bindings",
                                                        "groups",
                                                        ":group-uuid"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "group-uuid",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json"
                                                    },
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                },
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"policyUuids\": [\n    \"<uuid>\"\n  ],\n  \"parameters\": {\n    \"culpa_75\": \"<string>\"\n  },\n  \"metadata\": {\n    \"ipsum85b\": \"<string>\",\n    \"aliquipd4b\": \"<string>\"\n  }\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "d22c5f91-9e05-4639-9f88-429222cfa5e6",
                                                    "name": "Successful response - policy bindings created or updated",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                "groups",
                                                                ":group-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "group-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"policyUuids\": [\n    \"<uuid>\"\n  ],\n  \"parameters\": {\n    \"ipsum6e1\": \"<string>\",\n    \"enime6_\": \"<string>\"\n  },\n  \"metadata\": {\n    \"laborum_e\": \"<string>\"\n  }\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                },
                                                {
                                                    "id": "ede05959-47ca-4510-ab7d-c0981794f5d5",
                                                    "name": "Policy bindings create or update request invalid",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                "groups",
                                                                ":group-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "group-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"policyUuids\": [\n    \"<uuid>\"\n  ],\n  \"parameters\": {\n    \"ipsum6e1\": \"<string>\",\n    \"enime6_\": \"<string>\"\n  },\n  \"metadata\": {\n    \"laborum_e\": \"<string>\"\n  }\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "200ba613-7f56-488b-a024-01737b04ce31",
                                                    "name": "Level not found response",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                "groups",
                                                                ":group-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "group-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"policyUuids\": [\n    \"<uuid>\"\n  ],\n  \"parameters\": {\n    \"ipsum6e1\": \"<string>\",\n    \"enime6_\": \"<string>\"\n  },\n  \"metadata\": {\n    \"laborum_e\": \"<string>\"\n  }\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "6818f0db-df8b-4a96-a893-c19e78b45cde",
                                                    "name": "Policy bindings create or update request invalid",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "bindings",
                                                                "groups",
                                                                ":group-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "group-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"policyUuids\": [\n    \"<uuid>\"\n  ],\n  \"parameters\": {\n    \"ipsum6e1\": \"<string>\",\n    \"enime6_\": \"<string>\"\n  },\n  \"metadata\": {\n    \"laborum_e\": \"<string>\"\n  }\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                                    "code": 422,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "dc3bbe1e-8522-4d83-bb14-a6146f66f4dc",
                            "name": "policies",
                            "item": [
                                {
                                    "id": "8066fce7-51e2-4d87-a5c1-f3c0fe47f0e5",
                                    "name": "Get all policies for a level",
                                    "request": {
                                        "name": "Get all policies for a level",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "iam",
                                                "repo",
                                                ":level-type",
                                                ":level-id",
                                                "policies"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "name",
                                                    "value": "<string>",
                                                    "description": "Optional policy name. Only policies that are of equal name will be returned"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-type",
                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-id",
                                                    "description": "(Required) "
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "c8dc7e0d-83fc-49e3-b78d-123de81f882e",
                                            "name": "Successful response - level found",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "name",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"policies\": [\n    {\n      \"uuid\": \"f248cf51-363e-ab4c-98a8-8b56639186df\",\n      \"name\": \"laboris aliqua\",\n      \"description\": \"in aute dolor cupidatat\",\n      \"tags\": [\n        \"incididunt\",\n        \"commodo qui adipisicing\"\n      ]\n    },\n    {\n      \"uuid\": \"urn:uuid:fe59e3cd-3351-5efd-4483-a741c6a14f6d\",\n      \"name\": \"eu anim in incididunt\",\n      \"description\": \"enim quis Excepteur ipsum nisi\",\n      \"tags\": [\n        \"Ut ipsum esse\",\n        \"Excepteur do\"\n      ]\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "fc217da8-3666-4dac-9168-1b7231b6229c",
                                            "name": "Level not found response",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "name",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "2716a8bc-186b-43fa-ba0f-7d80de23d0e2",
                                    "name": "Create a policy within a level",
                                    "request": {
                                        "name": "Create a policy within a level",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "iam",
                                                "repo",
                                                ":level-type",
                                                ":level-id",
                                                "policies"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-type",
                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-id",
                                                    "description": "(Required) "
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "b42a0843-cbd4-4271-a82d-752c6392d1f7",
                                            "name": "Successful response - policy created",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Created",
                                            "code": 201,
                                            "header": [
                                                {
                                                    "disabled": false,
                                                    "description": "URI of created policy",
                                                    "key": "Location",
                                                    "value": ""
                                                },
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"name\": \"quis fugiat irure\",\n  \"statementQuery\": \"qui\",\n  \"statements\": [\n    {\n      \"effect\": \"ALLOW\",\n      \"permissions\": [\n        \"aliquip sit Ut\"\n      ],\n      \"conditions\": [\n        {\n          \"name\": \"ad sed occaecat\",\n          \"operator\": \"CONTAINS\",\n          \"values\": [\n            \"eu dolor\"\n          ]\n        },\n        {\n          \"name\": \"laborum aliquip dolore est\",\n          \"operator\": \"IN\",\n          \"values\": [\n            \"ullamco commodo fugiat consectetur reprehenderit\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"uuid\": \"urn:uuid:0eebd4b8-fc76-b16d-37a0-1fb516bea2b9\",\n  \"description\": \"do\",\n  \"tags\": [\n    \"nulla\",\n    \"ipsum elit\"\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "6cdccfb5-e893-497a-bb38-eaa5f1f715dc",
                                            "name": "Policy create request invalid",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "1e1dfbc0-d577-49b6-967f-84e45e5fa255",
                                            "name": "Level not found response",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "fb32191f-27ef-4ae0-9dd7-4b3a3413a895",
                                            "name": "Policy create request invalid",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "POST",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                            "code": 422,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "bec4f63c-5d46-4943-8766-53aa3f933a6e",
                                    "name": "{uuid}",
                                    "item": [
                                        {
                                            "id": "dcbe5d72-0c94-495a-96b6-73a2d94d748c",
                                            "name": "Get a policy within a level",
                                            "request": {
                                                "name": "Get a policy within a level",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies",
                                                        ":uuid"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<uuid>",
                                                            "key": "uuid",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "method": "GET",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "37e0363e-ce5e-460f-b3b2-53f39ca2e2a0",
                                                    "name": "Successful response - policy found",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                ":uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"name\": \"officia consequat\",\n  \"statementQuery\": \"esse consequat est\",\n  \"statements\": [\n    {\n      \"effect\": \"ALLOW\",\n      \"permissions\": [\n        \"nostrud occaecat magna\"\n      ],\n      \"conditions\": [\n        {\n          \"name\": \"ipsum qui ut nulla\",\n          \"operator\": \"EQ\",\n          \"values\": [\n            \"consequat in fugiat\"\n          ]\n        },\n        {\n          \"name\": \"ad ipsum minim exercitation\",\n          \"operator\": \"GT\",\n          \"values\": [\n            \"cillum id veniam mol\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"uuid\": \"urn:uuid:8dd162ea-384c-8e23-e45a-20d01d4939d4\",\n  \"description\": \"dolore proident nulla\",\n  \"tags\": [\n    \"vo\",\n    \"non Excepteur culpa cillum nulla\"\n  ]\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "01afbbb9-c209-458d-aba0-25261da47bc3",
                                                    "name": "Policy not found response",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                ":uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "GET",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "601e76c1-caa7-4f2a-af2e-15318e8c60a2",
                                            "name": "Update or create a new policy within a level",
                                            "request": {
                                                "name": "Update or create a new policy within a level",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies",
                                                        ":uuid"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<uuid>",
                                                            "key": "uuid",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json"
                                                    },
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                },
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "cac36476-faec-4df6-83e2-f222aef15859",
                                                    "name": "Successful response - policy created",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                ":uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Created",
                                                    "code": 201,
                                                    "header": [
                                                        {
                                                            "disabled": false,
                                                            "description": "URI of created policy",
                                                            "key": "Location",
                                                            "value": ""
                                                        },
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"name\": \"officia consequat\",\n  \"statementQuery\": \"esse consequat est\",\n  \"statements\": [\n    {\n      \"effect\": \"ALLOW\",\n      \"permissions\": [\n        \"nostrud occaecat magna\"\n      ],\n      \"conditions\": [\n        {\n          \"name\": \"ipsum qui ut nulla\",\n          \"operator\": \"EQ\",\n          \"values\": [\n            \"consequat in fugiat\"\n          ]\n        },\n        {\n          \"name\": \"ad ipsum minim exercitation\",\n          \"operator\": \"GT\",\n          \"values\": [\n            \"cillum id veniam mol\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"uuid\": \"urn:uuid:8dd162ea-384c-8e23-e45a-20d01d4939d4\",\n  \"description\": \"dolore proident nulla\",\n  \"tags\": [\n    \"vo\",\n    \"non Excepteur culpa cillum nulla\"\n  ]\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "42a3b65f-d48e-41ef-8c1f-a7ca847f9ac1",
                                                    "name": "Successful response - policy updated",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                ":uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                },
                                                {
                                                    "id": "e90b31ef-053c-468f-a526-908aa6ff4242",
                                                    "name": "Policy put request invalid",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                ":uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "0c130d2e-ed1b-4f48-9d2d-2971378bce8c",
                                                    "name": "Level not found response",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                ":uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "28e77a7d-f984-4580-83d8-a27cc555bca3",
                                                    "name": "Policy put request invalid",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                ":uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "PUT",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                                    "code": 422,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "6d39d8aa-7c50-40bd-85c0-db0211f025ae",
                                            "name": "Delete a policy from a level",
                                            "request": {
                                                "name": "Delete a policy from a level",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies",
                                                        ":uuid"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "disabled": false,
                                                            "key": "force",
                                                            "value": "true"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<uuid>",
                                                            "key": "uuid",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "8acf0891-45db-4f3f-b9ea-fddf572def0e",
                                                    "name": "Successful response - policy deleted",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                ":uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "force",
                                                                    "value": "true"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "No Content",
                                                    "code": 204,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "text"
                                                },
                                                {
                                                    "id": "083423db-bab9-425d-ade9-9cc3be3b2e95",
                                                    "name": "Policy delete request invalid",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                ":uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "force",
                                                                    "value": "true"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "1c601ea8-0897-4c91-8693-5c03baa642ba",
                                                    "name": "Level not found response",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                ":uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [
                                                                {
                                                                    "key": "force",
                                                                    "value": "true"
                                                                }
                                                            ],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "DELETE",
                                                        "body": {}
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "3d2722da-d72b-45f9-8337-8a07f640c9c5",
                                    "name": "Get overview of all policies for a given level, descendant and ancestor levels",
                                    "request": {
                                        "name": "Get overview of all policies for a given level, descendant and ancestor levels",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "iam",
                                                "repo",
                                                ":level-type",
                                                ":level-id",
                                                "policies",
                                                "aggregate"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-type",
                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-id",
                                                    "description": "(Required) "
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "e6a4845f-bb46-4c84-8227-318a5c3170d9",
                                            "name": "Successful response - level found",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies",
                                                        "aggregate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"policyOverviewList\": [\n    {\n      \"uuid\": \"4db28805-7b07-509d-916b-2c55a1dff287\",\n      \"name\": \"reprehenderit ea Excepteur\",\n      \"description\": \"et tempor deserunt\",\n      \"levelType\": \"adipisicing dolore id Lorem Excepteur\",\n      \"levelId\": \"dolore cillum velit commodo mollit\"\n    },\n    {\n      \"uuid\": \"urn:uuid:79a150e8-c972-275a-d542-66ba86783453\",\n      \"name\": \"elit labori\",\n      \"description\": \"amet aliqua incididunt velit magna\",\n      \"levelType\": \"dolore\",\n      \"levelId\": \"eiusmod\"\n    }\n  ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "fd96a7ee-5e4d-4f8f-88cd-f14ec39fb5ec",
                                            "name": "Level not found response",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies",
                                                        "aggregate"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "6c37e1b2-9b8c-40b7-b31f-76a67663a530",
                                    "name": "validation",
                                    "item": [
                                        {
                                            "id": "7363fe88-86cf-4089-9cfc-7ed1c8048148",
                                            "name": "Validates policy before creation or update",
                                            "request": {
                                                "name": "Validates policy before creation or update",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies",
                                                        "validation"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json"
                                                    },
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "method": "POST",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                },
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "37f608c3-69c0-4c25-a98f-3a4f9e9803f8",
                                                    "name": "Policy is valid but there may be some validation warnings. Please check the response body",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                "validation"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"warnings\": [\n    \"do in cons\",\n    \"adipisicing esse Excepteur\"\n  ]\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "e9c6a919-e7ab-42e5-b049-cae5d8271717",
                                                    "name": "Policy request is invalid",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                "validation"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "73d4b786-ad2d-437d-95cf-a7eff428a678",
                                                    "name": "Level not found response",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                "validation"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "ccd33c73-2997-4ea9-a05a-27453b8fa94f",
                                                    "name": "Policy request is invalid",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                "validation"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                                    "code": 422,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        },
                                        {
                                            "id": "069c79d7-2fce-4f44-8a1f-82d42aa6d74e",
                                            "name": "Validates policy before creation or update",
                                            "request": {
                                                "name": "Validates policy before creation or update",
                                                "description": {},
                                                "url": {
                                                    "path": [
                                                        "iam",
                                                        "repo",
                                                        ":level-type",
                                                        ":level-id",
                                                        "policies",
                                                        "validation",
                                                        ":policy-uuid"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-type",
                                                            "description": "(Required) One of the values: global, cluster, environment"
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "level-id",
                                                            "description": "(Required) "
                                                        },
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<uuid>",
                                                            "key": "policy-uuid",
                                                            "description": "(Required) "
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "key": "Content-Type",
                                                        "value": "application/json"
                                                    },
                                                    {
                                                        "key": "Accept",
                                                        "value": "application/json"
                                                    }
                                                ],
                                                "method": "POST",
                                                "auth": {
                                                    "type": "apikey",
                                                    "apikey": [
                                                        {
                                                            "key": "key",
                                                            "value": "Authorization"
                                                        },
                                                        {
                                                            "key": "value",
                                                            "value": "Api-Token {{DT_TOKEN}}"
                                                        },
                                                        {
                                                            "key": "in",
                                                            "value": "header"
                                                        }
                                                    ]
                                                },
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "response": [
                                                {
                                                    "id": "22f4e9af-c8ce-42ab-8bd6-cd342db57d39",
                                                    "name": "Policy is valid but there may be some validation warnings. Please check the response body",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                "validation",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "OK",
                                                    "code": 200,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"warnings\": [\n    \"velit u\",\n    \"nulla\"\n  ]\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "206cda42-4929-496d-b1bf-4fb639d484a7",
                                                    "name": "Policy request is invalid",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                "validation",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Bad Request",
                                                    "code": 400,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "8cd50ff1-b674-4046-98cc-2005e36f66b2",
                                                    "name": "Level not found response",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                "validation",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Not Found",
                                                    "code": 404,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                },
                                                {
                                                    "id": "db6e9362-fd67-49c6-a159-0f3bff237d68",
                                                    "name": "Policy request is invalid",
                                                    "originalRequest": {
                                                        "url": {
                                                            "path": [
                                                                "iam",
                                                                "repo",
                                                                ":level-type",
                                                                ":level-id",
                                                                "policies",
                                                                "validation",
                                                                ":policy-uuid"
                                                            ],
                                                            "host": [
                                                                "{{baseUrl}}"
                                                            ],
                                                            "query": [],
                                                            "variable": [
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-type",
                                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<string>",
                                                                    "key": "level-id",
                                                                    "description": "(Required) "
                                                                },
                                                                {
                                                                    "disabled": false,
                                                                    "type": "any",
                                                                    "value": "<uuid>",
                                                                    "key": "policy-uuid",
                                                                    "description": "(Required) "
                                                                }
                                                            ]
                                                        },
                                                        "header": [
                                                            {
                                                                "description": {
                                                                    "content": "Added as a part of security scheme: apikey",
                                                                    "type": "text/plain"
                                                                },
                                                                "key": "Authorization",
                                                                "value": "<API Key>"
                                                            }
                                                        ],
                                                        "method": "POST",
                                                        "body": {
                                                            "mode": "raw",
                                                            "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"statementQuery\": \"<string>\"\n}",
                                                            "options": {
                                                                "raw": {
                                                                    "language": "json"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                                                    "code": 422,
                                                    "header": [
                                                        {
                                                            "key": "Content-Type",
                                                            "value": "application/json"
                                                        }
                                                    ],
                                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                                    "cookie": [],
                                                    "_postman_previewlanguage": "json"
                                                }
                                            ],
                                            "event": [],
                                            "protocolProfileBehavior": {
                                                "disableBodyPruning": true
                                            }
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "9c157e14-696f-4998-98bf-215703c7d915",
                    "name": "organizational-levels/{level-type}/{level-id}",
                    "item": [
                        {
                            "id": "70e929ac-4a9d-4ade-bbfb-74848aa86da4",
                            "name": "Get an organizational level by level ID",
                            "request": {
                                "name": "Get an organizational level by level ID",
                                "description": {},
                                "url": {
                                    "path": [
                                        "iam",
                                        "organizational-levels",
                                        ":level-type",
                                        ":level-id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "level-type",
                                            "description": "(Required) One of the values: global, cluster, environment"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "level-id",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "c6361b1b-1845-4437-b195-b3eebaf89323",
                                    "name": "Successful response - level found",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "iam",
                                                "organizational-levels",
                                                ":level-type",
                                                ":level-id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-type",
                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-id",
                                                    "description": "(Required) "
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n  \"parentId\": \"l\",\n  \"parentType\": \"deserunt esse\",\n  \"type\": \"minim culpa exercitation\",\n  \"id\": \"pariatur i\",\n  \"modifiedAt\": \"cillum laboris\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "a2a30746-6742-4a05-8cfd-f673ba941671",
                                    "name": "Level not found response",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "iam",
                                                "organizational-levels",
                                                ":level-type",
                                                ":level-id"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-type",
                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-id",
                                                    "description": "(Required) "
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "1c21ddf4-2323-416a-8380-087a9ab932c1",
                            "name": "Get descendant organizational levels for a given level by level ID",
                            "request": {
                                "name": "Get descendant organizational levels for a given level by level ID",
                                "description": {},
                                "url": {
                                    "path": [
                                        "iam",
                                        "organizational-levels",
                                        ":level-type",
                                        ":level-id",
                                        "descendants"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "level-type",
                                            "description": "(Required) One of the values: global, cluster, environment"
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "level-id",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "f93dac94-e08f-43e5-bb49-0ff4eda90f6a",
                                    "name": "Successful response - level list",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "iam",
                                                "organizational-levels",
                                                ":level-type",
                                                ":level-id",
                                                "descendants"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-type",
                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-id",
                                                    "description": "(Required) "
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n  \"levels\": [\n    {\n      \"parentId\": \"Excepteur laboris ex oc\",\n      \"parentType\": \"reprehenderit mollit minim\",\n      \"type\": \"enim\",\n      \"id\": \"inci\",\n      \"modifiedAt\": \"reprehenderit dolore consectetur Ut\"\n    },\n    {\n      \"parentId\": \"ut ex amet an\",\n      \"parentType\": \"aliquip pariatur mi\",\n      \"type\": \"veniam occa\",\n      \"id\": \"et ad\",\n      \"modifiedAt\": \"proident fugiat officia\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "2696b6b2-5ebf-49bb-9148-e345cb2915ec",
                                    "name": "Level not found response",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "iam",
                                                "organizational-levels",
                                                ":level-type",
                                                ":level-id",
                                                "descendants"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-type",
                                                    "description": "(Required) One of the values: global, cluster, environment"
                                                },
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "level-id",
                                                    "description": "(Required) "
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "986fb9fc-f32e-4a01-82f1-00b69fa2fd18",
            "name": "activeGateTokens",
            "item": [
                {
                    "id": "8a88dd39-7cc5-4cdc-808d-d7c380c77c25",
                    "name": "Lists all available ActiveGate tokens | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Lists all available ActiveGate tokens | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGateTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of ActiveGate tokens in a single response payload. \n\nThe maximal allowed page size is 3000 and the minimal size is 100. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "dc49d2a2-61b0-49f6-bef4-4038e6b66bbc",
                            "name": "Success. The response contains the list of ActiveGate tokens.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"totalCount\": 1000,\n  \"pageSize\": 100,\n  \"nextPageKey\": \"AAAAAAAAAAAAAABOAAAAAAAAAAAAAAA6ACQAEAAAABgACgAITFdXQk1BRzYAAAhtZXRhZGF0YQB___-bf___m3iIYxfF7xVQvY72rwblQkcAAwAAAAAAAADHAAAAZA==\",\n  \"activeGateTokens\": {\n    \"name\": \"myToken\",\n    \"owner\": \"john.smith\",\n    \"creationDate\": \"2020-11-22T08:15:30.144Z\",\n    \"expirationDate\": \"2020-11-24T08:15:30.144Z\",\n    \"lastUsedDate\": \"2020-11-23T08:15:30.144Z\",\n    \"seedToken\": \"false\",\n    \"activeGateType\": \"ENVIRONMENT\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b7078909-cca1-44c7-92d2-651b6253348b",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f3f73779-227d-434c-a43c-74ab6dfbf3b6",
                            "name": "Failed. The requested resource doesn't exist.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "fe9556c7-3a9d-4fbd-8c92-9568addaaf76",
                    "name": "Creates a new ActiveGate token | maturity=EARLY_ADOPTER",
                    "request": {
                        "name": "Creates a new ActiveGate token | maturity=EARLY_ADOPTER",
                        "description": {
                            "content": "The newly created token will be owned by the same user who owns the token used for authentication of the call.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "activeGateTokens"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=utf-8"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"activeGateType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"seedToken\": \"<boolean>\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "499574d1-74a5-47b7-951b-7fcc0880ff41",
                            "name": "Success. The token has been created. The body of the response contains the token secret.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"activeGateType\": \"<string>\",\n  \"name\": \"myToken\",\n  \"expirationDate\": \"now+14d\",\n  \"seedToken\": false\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"id\": \"dt0g02.4KWZO5EF\",\n  \"token\": \"dt0g02.4KWZO5EF.XT47R5DRADJIZUFOX4UDNOKTSUSABGLN7XSMJG7UXHRXKNY4WLORH4OF4T75MG7E\",\n  \"expirationDate\": \"2020-11-24T08:15:30.144Z\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3ee209eb-9d40-47c0-b4af-8a456af359d8",
                            "name": "Failed. The input is invalid.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "activeGateTokens"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"activeGateType\": \"<string>\",\n  \"name\": \"myToken\",\n  \"expirationDate\": \"now+14d\",\n  \"seedToken\": false\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "04042803-cd9a-4e0d-8d85-c8028194d955",
                    "name": "{activeGateTokenIdentifier}",
                    "item": [
                        {
                            "id": "06021e2f-c45d-45e6-ad4a-e7313c31063e",
                            "name": "Gets metadata of an ActiveGate token | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Gets metadata of an ActiveGate token | maturity=EARLY_ADOPTER",
                                "description": {
                                    "content": "The token secret is **not** exposed.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "activeGateTokens",
                                        ":activeGateTokenIdentifier"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "activeGateTokenIdentifier",
                                            "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "cddeac96-6587-47e4-af6f-1a0d76bbd9d8",
                                    "name": "Success. The response contains the metadata of the tokens.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"activeGateType\": \"ENVIRONMENT\",\n  \"creationDate\": \"2020-11-22T08:15:30.144Z\",\n  \"id\": \"dt0g02.4KWZO5EF\",\n  \"name\": \"myToken\",\n  \"owner\": \"john.smith\",\n  \"expirationDate\": \"2020-11-24T08:15:30.144Z\",\n  \"lastUsedDate\": \"2020-11-23T08:15:30.144Z\",\n  \"seedToken\": false\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ae27626f-6df9-4690-bc75-616325f648c9",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "6f3a49c4-07d7-4348-bad2-4ddebe537a03",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "8f8d0510-d714-42d2-abe6-a367a0cf3154",
                            "name": "Deletes an ActiveGate token | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Deletes an ActiveGate token | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "activeGateTokens",
                                        ":activeGateTokenIdentifier"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "activeGateTokenIdentifier",
                                            "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "DELETE",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "2345cc26-d80d-4f9e-abe0-08fe1be1813e",
                                    "name": "Success. Response doesn't have a body.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "No Content",
                                    "code": 204,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "body": "",
                                    "cookie": [],
                                    "_postman_previewlanguage": "text"
                                },
                                {
                                    "id": "5f39878c-21a7-4b89-a36f-adc879261bc1",
                                    "name": "Failed. The input is invalid.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "activeGateTokens",
                                                ":activeGateTokenIdentifier"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "activeGateTokenIdentifier",
                                                    "description": "(Required) The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "9a35a003-20b2-493f-8ad2-0f0200348ddb",
            "name": "settings",
            "item": [
                {
                    "id": "90ed9e52-2b85-4f36-8ad8-1ce9450a19ac",
                    "name": "objects",
                    "item": [
                        {
                            "id": "bbd94967-ae30-4ecb-8307-b98c51f5aea4",
                            "name": "Lists persisted settings objects",
                            "request": {
                                "name": "Lists persisted settings objects",
                                "description": {
                                    "content": "Lists persisted settings objects for selected schemas at selected scopes (or entities).\n\nIf nothing is persisted or if all persisted settings objects are not accessible due to missing permissions, no items will be returned.\n\nTo query the effective values (including schema defaults) please see [/settings/effectiveValues](#/Settings%20-%20Objects/getEffectiveSettingsValues).",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "settings",
                                        "objects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "schemaIds",
                                            "value": "<string>",
                                            "description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nTo load the first page, when the **nextPageKey** is not set, either this parameter or **scopes** is required. \n\nTo load all objects belonging to the given schema IDs leave the **scopes** parameter empty."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "scopes",
                                            "value": "<string>",
                                            "description": "A list of comma-separated scopes, that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scopes. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, either this parameter or **schemaIds** is required. \n\nTo load all objects belonging to the given scopes leave the **schemaIds** parameter empty."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "fields",
                                            "value": "objectId,value",
                                            "description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `objectId,value`)."
                                        },
                                        {
                                            "disabled": false,
                                            "key": "nextPageKey",
                                            "value": "<string>",
                                            "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                        },
                                        {
                                            "disabled": false,
                                            "key": "pageSize",
                                            "value": "<long>",
                                            "description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "bfe11798-5150-45d7-9436-52e202380151",
                                    "name": "Success. Accessible objects returned.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "scopes",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fields",
                                                    "value": "objectId,value"
                                                },
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"items\": [\n    {\n      \"externalId\": \"adipisicing in dolore\",\n      \"author\": \"john.doe@example.com\",\n      \"modified\": 37577469,\n      \"schemaVersion\": \"1.0.0\",\n      \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"created\": -14062159,\n      \"scope\": \"HOST-D3A3C5A146830A79\",\n      \"summary\": \"magna\",\n      \"value\": {\n        \"autoMonitoring\": true\n      }\n    },\n    {\n      \"externalId\": \"do ipsum aliqua\",\n      \"author\": \"john.doe@example.com\",\n      \"modified\": -91557492,\n      \"schemaVersion\": \"1.0.0\",\n      \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"created\": 82066551,\n      \"scope\": \"HOST-D3A3C5A146830A79\",\n      \"summary\": \"irure et adipisicing tempor\",\n      \"value\": {\n        \"autoMonitoring\": true\n      }\n    }\n  ],\n  \"pageSize\": -33663113,\n  \"totalCount\": -31165135,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "a6671702-5efd-4803-9bcd-ed33514a1a86",
                                    "name": "Failed. Forbidden.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "scopes",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fields",
                                                    "value": "objectId,value"
                                                },
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "0bc85da5-a3e4-4121-8f06-d3f2132bfbaa",
                                    "name": "Failed. The specified schema or scope is not found.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaIds",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "scopes",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "fields",
                                                    "value": "objectId,value"
                                                },
                                                {
                                                    "key": "nextPageKey",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "pageSize",
                                                    "value": "<long>"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "d70bd6fb-242b-4c92-95bf-3436ff6459d1",
                            "name": "Creates a new settings object",
                            "request": {
                                "name": "Creates a new settings object",
                                "description": {
                                    "content": "You can upload several objects at once. In that case each object returns its own response code. Check the response body for details.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "settings",
                                        "objects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "validateOnly",
                                            "value": "false",
                                            "description": "If `true`, the request runs only validation of the submitted settings objects, without saving them."
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"schemaId\": \"<string>\",\n    \"value\": \"<object>\",\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"<string>\",\n    \"insertAfter\": \"<string>\",\n    \"scope\": \"<string>\"\n  },\n  {\n    \"schemaId\": \"<string>\",\n    \"value\": \"<object>\",\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"<string>\",\n    \"insertAfter\": \"<string>\",\n    \"scope\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "a018aaf0-26c4-4147-a4df-1e1e6d6b33a5",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 62702330,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"laboris consequat culpa ut ad\",\n          \"message\": \"elit ad\",\n          \"path\": \"exerci\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"in non culpa exercitation\",\n          \"message\": \"nostrud esse mag\",\n          \"path\": \"fugiat in officia reprehenderit\"\n        }\n      ],\n      \"code\": 32994428,\n      \"message\": \"est sed non consequat\"\n    }\n  },\n  {\n    \"code\": -44375567,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"fugiat officia reprehenderit commodo\",\n          \"message\": \"ea id Duis do\",\n          \"path\": \"elit magna pariatur\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"Lorem\",\n          \"message\": \"adipisicing non\",\n          \"path\": \"tempor ipsum exercitation voluptate\"\n        }\n      ],\n      \"code\": 60672616,\n      \"message\": \"cupidatat ipsum voluptate tempor anim\"\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "bdd34545-3260-4f2e-a3c3-8c48f16f53f0",
                                    "name": "Multi-status: different objects in the payload resulted in different statuses.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Multi-Status (WebDAV) (RFC 4918)",
                                    "code": 207,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 62702330,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"laboris consequat culpa ut ad\",\n          \"message\": \"elit ad\",\n          \"path\": \"exerci\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"in non culpa exercitation\",\n          \"message\": \"nostrud esse mag\",\n          \"path\": \"fugiat in officia reprehenderit\"\n        }\n      ],\n      \"code\": 32994428,\n      \"message\": \"est sed non consequat\"\n    }\n  },\n  {\n    \"code\": -44375567,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"fugiat officia reprehenderit commodo\",\n          \"message\": \"ea id Duis do\",\n          \"path\": \"elit magna pariatur\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"Lorem\",\n          \"message\": \"adipisicing non\",\n          \"path\": \"tempor ipsum exercitation voluptate\"\n        }\n      ],\n      \"code\": 60672616,\n      \"message\": \"cupidatat ipsum voluptate tempor anim\"\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "5c69716e-ac74-46fd-a836-91f5b50da1ef",
                                    "name": "Failed. Schema validation failed.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 62702330,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"laboris consequat culpa ut ad\",\n          \"message\": \"elit ad\",\n          \"path\": \"exerci\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"in non culpa exercitation\",\n          \"message\": \"nostrud esse mag\",\n          \"path\": \"fugiat in officia reprehenderit\"\n        }\n      ],\n      \"code\": 32994428,\n      \"message\": \"est sed non consequat\"\n    }\n  },\n  {\n    \"code\": -44375567,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"fugiat officia reprehenderit commodo\",\n          \"message\": \"ea id Duis do\",\n          \"path\": \"elit magna pariatur\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"Lorem\",\n          \"message\": \"adipisicing non\",\n          \"path\": \"tempor ipsum exercitation voluptate\"\n        }\n      ],\n      \"code\": 60672616,\n      \"message\": \"cupidatat ipsum voluptate tempor anim\"\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "e67e4f79-e873-4807-b208-4c09d541f15c",
                                    "name": "Failed. Forbidden.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "834346ad-6b6b-483c-85ba-272389629e42",
                                    "name": "Failed. The requested resource doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 62702330,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"laboris consequat culpa ut ad\",\n          \"message\": \"elit ad\",\n          \"path\": \"exerci\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"in non culpa exercitation\",\n          \"message\": \"nostrud esse mag\",\n          \"path\": \"fugiat in officia reprehenderit\"\n        }\n      ],\n      \"code\": 32994428,\n      \"message\": \"est sed non consequat\"\n    }\n  },\n  {\n    \"code\": -44375567,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"fugiat officia reprehenderit commodo\",\n          \"message\": \"ea id Duis do\",\n          \"path\": \"elit magna pariatur\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"Lorem\",\n          \"message\": \"adipisicing non\",\n          \"path\": \"tempor ipsum exercitation voluptate\"\n        }\n      ],\n      \"code\": 60672616,\n      \"message\": \"cupidatat ipsum voluptate tempor anim\"\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "0f4e4b5f-d8f2-490d-b92c-41802ad586a7",
                                    "name": "Failed. Conflicting resource.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "validateOnly",
                                                    "value": "false"
                                                }
                                            ],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"externalId\": \"<string>\",\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "[\n  {\n    \"code\": 62702330,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"laboris consequat culpa ut ad\",\n          \"message\": \"elit ad\",\n          \"path\": \"exerci\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"in non culpa exercitation\",\n          \"message\": \"nostrud esse mag\",\n          \"path\": \"fugiat in officia reprehenderit\"\n        }\n      ],\n      \"code\": 32994428,\n      \"message\": \"est sed non consequat\"\n    }\n  },\n  {\n    \"code\": -44375567,\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"fugiat officia reprehenderit commodo\",\n          \"message\": \"ea id Duis do\",\n          \"path\": \"elit magna pariatur\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"Lorem\",\n          \"message\": \"adipisicing non\",\n          \"path\": \"tempor ipsum exercitation voluptate\"\n        }\n      ],\n      \"code\": 60672616,\n      \"message\": \"cupidatat ipsum voluptate tempor anim\"\n    }\n  }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "a047e0c7-3537-484c-8fb8-da27a023b53c",
                            "name": "{objectId}",
                            "item": [
                                {
                                    "id": "6d8f4f9a-adf3-4bf8-9a23-26bad7607e23",
                                    "name": "Gets the specified settings object",
                                    "request": {
                                        "name": "Gets the specified settings object",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects",
                                                ":objectId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "objectId",
                                                    "description": "(Required) The ID of the required settings object."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "472f6eee-1c28-4d7f-96e3-2c39975604e7",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"externalId\": \"est\",\n  \"author\": \"john.doe@example.com\",\n  \"modified\": 75538342,\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"created\": 38930983,\n  \"scope\": \"HOST-D3A3C5A146830A79\",\n  \"summary\": \"sed proident officia\",\n  \"value\": {\n    \"autoMonitoring\": true\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "64122b75-437c-4e2b-9824-d4a8825cf1dd",
                                            "name": "Failed. Forbidden.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "55451575-5b8b-479a-97de-3c3dc35af1b1",
                                            "name": "No object available for the given objectId",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "569856c7-d547-4ace-9a5a-beccf8ed7398",
                                    "name": "Updates an existing settings object",
                                    "request": {
                                        "name": "Updates an existing settings object",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects",
                                                ":objectId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "objectId",
                                                    "description": "(Required) The ID of the required settings object."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"value\": \"<object>\",\n  \"schemaVersion\": \"<string>\",\n  \"updateToken\": \"<string>\",\n  \"insertAfter\": \"<string>\",\n  \"insertBefore\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "029fbc1d-cc37-41ad-a03a-f12537c679bf",
                                            "name": "Success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertBefore\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -47199767,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"labore cupid\",\n        \"message\": \"esse ex proident elit\",\n        \"path\": \"veniam dolore cupidatat\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ut id aliqua ma\",\n        \"message\": \"ut Duis\",\n        \"path\": \"do ea\"\n      }\n    ],\n    \"code\": -93097954,\n    \"message\": \"in velit veniam ullamco\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "e2ba5f69-bad3-4889-8e61-fa6f0f8a014b",
                                            "name": "Failed. Schema validation failed.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertBefore\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -47199767,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"labore cupid\",\n        \"message\": \"esse ex proident elit\",\n        \"path\": \"veniam dolore cupidatat\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ut id aliqua ma\",\n        \"message\": \"ut Duis\",\n        \"path\": \"do ea\"\n      }\n    ],\n    \"code\": -93097954,\n    \"message\": \"in velit veniam ullamco\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "4d1252fe-f537-4ce4-b5bc-849b9c134d2b",
                                            "name": "Failed. Forbidden.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertBefore\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "bf50fe40-4687-4371-b118-31359fe9e745",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertBefore\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -47199767,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"labore cupid\",\n        \"message\": \"esse ex proident elit\",\n        \"path\": \"veniam dolore cupidatat\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ut id aliqua ma\",\n        \"message\": \"ut Duis\",\n        \"path\": \"do ea\"\n      }\n    ],\n    \"code\": -93097954,\n    \"message\": \"in velit veniam ullamco\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "4cb36740-8c05-4a54-a853-929235c95ef4",
                                            "name": "Failed. Conflicting resource.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"schemaVersion\": \"1.0.0\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"insertBefore\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -47199767,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"labore cupid\",\n        \"message\": \"esse ex proident elit\",\n        \"path\": \"veniam dolore cupidatat\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ut id aliqua ma\",\n        \"message\": \"ut Duis\",\n        \"path\": \"do ea\"\n      }\n    ],\n    \"code\": -93097954,\n    \"message\": \"in velit veniam ullamco\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "ad655853-25af-4a05-b9b6-57288d6dc4e6",
                                    "name": "Deletes the specified settings object",
                                    "request": {
                                        "name": "Deletes the specified settings object",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "settings",
                                                "objects",
                                                ":objectId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "disabled": false,
                                                    "key": "updateToken",
                                                    "value": "<string>",
                                                    "description": "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks."
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "objectId",
                                                    "description": "(Required) The ID of the required settings object."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "4c7d6e89-751f-4795-9d1e-c5cf3d630b2a",
                                            "name": "Success. Response doesn't have a body.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "No Content",
                                            "code": 204,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "body": "",
                                            "cookie": [],
                                            "_postman_previewlanguage": "text"
                                        },
                                        {
                                            "id": "fc6bfd37-efd6-4ea7-a851-e6b64e7fc8c3",
                                            "name": "Failed. Schema validation failed.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -47199767,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"labore cupid\",\n        \"message\": \"esse ex proident elit\",\n        \"path\": \"veniam dolore cupidatat\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ut id aliqua ma\",\n        \"message\": \"ut Duis\",\n        \"path\": \"do ea\"\n      }\n    ],\n    \"code\": -93097954,\n    \"message\": \"in velit veniam ullamco\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "ad728145-1449-4d41-a991-ca8721fcde37",
                                            "name": "Failed. Forbidden.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "90bef68e-9f39-47ef-b800-1ecd31f718a4",
                                            "name": "Failed. The requested resource doesn't exist.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -47199767,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"labore cupid\",\n        \"message\": \"esse ex proident elit\",\n        \"path\": \"veniam dolore cupidatat\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ut id aliqua ma\",\n        \"message\": \"ut Duis\",\n        \"path\": \"do ea\"\n      }\n    ],\n    \"code\": -93097954,\n    \"message\": \"in velit veniam ullamco\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "ecdd62d0-a45e-4eb8-b9f5-d3672badb382",
                                            "name": "Failed. Conflicting resource.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "settings",
                                                        "objects",
                                                        ":objectId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "updateToken",
                                                            "value": "<string>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "objectId",
                                                            "description": "(Required) The ID of the required settings object."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"code\": -47199767,\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"labore cupid\",\n        \"message\": \"esse ex proident elit\",\n        \"path\": \"veniam dolore cupidatat\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ut id aliqua ma\",\n        \"message\": \"ut Duis\",\n        \"path\": \"do ea\"\n      }\n    ],\n    \"code\": -93097954,\n    \"message\": \"in velit veniam ullamco\"\n  }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "d9a7329a-53c9-4fe2-aa89-c0ff6f0980d3",
                    "name": "Lists effective settings values",
                    "request": {
                        "name": "Lists effective settings values",
                        "description": {
                            "content": "Lists effective settings values for selected schemas at a selected scope (or entity). This operation evaluates the hierarchy of persisted objects (see [/settings/objects](#/Settings%20-%20Objects/getSettingsObjects))\n\nIt will always return a result for a schema/scope combination, even if the schema would not be relevant to the given scope/entity.\n\nIf no object along the hierarchy is persisted, the default value as defined in the schema will be returned.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "settings",
                                "effectiveValues"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "schemaIds",
                                    "value": "<string>",
                                    "description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nOnly considered on load of the first page, when the **nextPageKey** is not set."
                                },
                                {
                                    "disabled": false,
                                    "key": "scope",
                                    "value": "<string>",
                                    "description": "The scope that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scope. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
                                },
                                {
                                    "disabled": false,
                                    "key": "fields",
                                    "value": "origin,value",
                                    "description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `origin,value`)."
                                },
                                {
                                    "disabled": false,
                                    "key": "nextPageKey",
                                    "value": "<string>",
                                    "description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
                                },
                                {
                                    "disabled": false,
                                    "key": "pageSize",
                                    "value": "<long>",
                                    "description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json; charset=utf-8"
                            }
                        ],
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization"
                                },
                                {
                                    "key": "value",
                                    "value": "Api-Token {{DT_TOKEN}}"
                                },
                                {
                                    "key": "in",
                                    "value": "header"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2e14775e-e0d2-48d4-bc89-2fb5bd071789",
                            "name": "Success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "settings",
                                        "effectiveValues"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "schemaIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "origin,value"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"items\": [\n    {\n      \"externalId\": \"incididunt quis\",\n      \"author\": \"john.doe@example.com\",\n      \"modified\": 89623583,\n      \"schemaVersion\": \"1.0.0\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"origin\": \"HOST-D3A3C5A146830A79\",\n      \"created\": 66961266,\n      \"summary\": \"irur\",\n      \"value\": {\n        \"autoMonitoring\": true\n      }\n    },\n    {\n      \"externalId\": \"non tempor id laborum cillum\",\n      \"author\": \"john.doe@example.com\",\n      \"modified\": 27280790,\n      \"schemaVersion\": \"1.0.0\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"origin\": \"HOST-D3A3C5A146830A79\",\n      \"created\": -1949342,\n      \"summary\": \"Ut incididunt ex velit quis\",\n      \"value\": {\n        \"autoMonitoring\": true\n      }\n    }\n  ],\n  \"pageSize\": -14681863,\n  \"totalCount\": 59554241,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3bb93e5b-8873-43ce-93c9-e2ad5283389f",
                            "name": "Failed. The specified schema or scope is not found.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "settings",
                                        "effectiveValues"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "schemaIds",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "origin,value"
                                        },
                                        {
                                            "key": "nextPageKey",
                                            "value": "<string>"
                                        },
                                        {
                                            "key": "pageSize",
                                            "value": "<long>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json; charset=utf-8"
                                }
                            ],
                            "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "62772985-e1b0-4931-b1c6-ec170a9d7deb",
                    "name": "schemas",
                    "item": [
                        {
                            "id": "80602c06-91db-41d9-a116-8e28fe666c8c",
                            "name": "Lists available settings schemas",
                            "request": {
                                "name": "Lists available settings schemas",
                                "description": {},
                                "url": {
                                    "path": [
                                        "settings",
                                        "schemas"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "19d546a2-9fda-4c49-8c08-0d667b151b06",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"items\": [\n    {\n      \"displayName\": \"Built-in container monitoring rules\",\n      \"latestSchemaVersion\": \"1.4.2\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\"\n    },\n    {\n      \"displayName\": \"Built-in container monitoring rules\",\n      \"latestSchemaVersion\": \"1.4.2\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\"\n    }\n  ],\n  \"totalCount\": 1\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "845bc381-9a38-44ae-9f81-194caa37546a",
                            "name": "Gets parameters of the specified settings schema",
                            "request": {
                                "name": "Gets parameters of the specified settings schema",
                                "description": {},
                                "url": {
                                    "path": [
                                        "settings",
                                        "schemas",
                                        ":schemaId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "key": "schemaVersion",
                                            "value": "<string>",
                                            "description": "The version of the required schema. \n\n If not set, the most recent version is returned."
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "schemaId",
                                            "description": "(Required) The ID of the required schema."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "49c2965e-143f-44c4-8d20-46f1613aedf9",
                                    "name": "Success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas",
                                                ":schemaId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaVersion",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaId",
                                                    "description": "(Required) The ID of the required schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "null",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "2055f026-b64d-4b46-97ac-18c666e41ad6",
                                    "name": "Failed. Forbidden.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas",
                                                ":schemaId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaVersion",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaId",
                                                    "description": "(Required) The ID of the required schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "3467582f-ad3c-488b-bdff-e8042cbe2490",
                                    "name": "Failed. The specified schema doesn't exist.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "settings",
                                                "schemas",
                                                ":schemaId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "schemaVersion",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "schemaId",
                                                    "description": "(Required) The ID of the required schema."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"occaecat laboris\",\n        \"message\": \"labore pariatur\",\n        \"path\": \"exercitation sed ut in dolor\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"ea eu sed occaecat aliquip\",\n        \"message\": \"non do nisi ut quis\",\n        \"path\": \"ea laboris ut\"\n      }\n    ],\n    \"code\": 28181736,\n    \"message\": \"aute\"\n  }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "307ad613-fa01-4283-a78c-b82bd2f945af",
            "name": "synthetic",
            "item": [
                {
                    "id": "63ce018a-8563-44a4-bef9-58512cb01758",
                    "name": "locations",
                    "item": [
                        {
                            "id": "c869994d-7ab9-45af-ad47-f9a803ea1533",
                            "name": "Lists all cluster private synthetic locations",
                            "request": {
                                "name": "Lists all cluster private synthetic locations",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "locations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "bf8364bb-6672-425b-a559-0b5a820bae5c",
                                    "name": "Success.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"locations\": [\n    {\n      \"name\": \"Gdansk\",\n      \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n      \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n      \"type\": \"PUBLIC\",\n      \"cloudPlatform\": \"AMAZON_EC2\",\n      \"ips\": [\n        \"134.189.153.97\",\n        \"134.189.153.98\"\n      ],\n      \"stage\": \"GA\",\n      \"status\": \"ENABLED\",\n      \"capabilities\": [\n        \"BROWSER\",\n        \"HTTP\"\n      ]\n    },\n    {\n      \"name\": \"My private location\",\n      \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n      \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n      \"type\": \"PRIVATE\",\n      \"status\": \"ENABLED\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "6e28eeaf-4647-4761-bb9e-0efa6f6854d2",
                            "name": "Creates a new private synthetic cluster location",
                            "request": {
                                "name": "Creates a new private synthetic cluster location",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "locations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json; charset=utf-8"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"entityId\": \"<string>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"name\": \"<string>\",\n  \"nodes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"regionCode\": \"<string>\",\n  \"city\": \"<string>\",\n  \"status\": \"<string>\",\n  \"availabilityLocationOutage\": \"<boolean>\",\n  \"availabilityNodeOutage\": \"<boolean>\",\n  \"locationNodeOutageDelayInMinutes\": \"<integer>\",\n  \"availabilityNotificationsEnabled\": \"<boolean>\",\n  \"deploymentType\": \"<string>\",\n  \"autoUpdateChromium\": \"<boolean>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [
                                {
                                    "id": "b9171c4a-2114-4372-a90c-21c534ef5233",
                                    "name": "Success.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "POST",
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entityId\": \"<string>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"name\": \"<string>\",\n  \"nodes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"regionCode\": \"<string>\",\n  \"city\": \"<string>\",\n  \"status\": \"<string>\",\n  \"availabilityLocationOutage\": \"<boolean>\",\n  \"availabilityNodeOutage\": \"<boolean>\",\n  \"locationNodeOutageDelayInMinutes\": \"<integer>\",\n  \"availabilityNotificationsEnabled\": \"<boolean>\",\n  \"deploymentType\": \"<string>\",\n  \"autoUpdateChromium\": \"<boolean>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"entityId\": \"tempor proident est incididunt\",\n  \"geoLocationId\": \"nostrud\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "eec8865c-7706-44ae-ad39-31dde3547bbf",
                            "name": "{locationId}",
                            "item": [
                                {
                                    "id": "4e02ba12-6f16-4330-8283-f5f8f4c93209",
                                    "name": "Gets properties of the specified cluster location",
                                    "request": {
                                        "name": "Gets properties of the specified cluster location",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                ":locationId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "locationId",
                                                    "description": "(Required) The Dynatrace entity ID of the required cluster location."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "GET",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "8310e441-0094-4893-b163-959f44510079",
                                            "name": "Success. The response contains parameters of the synthetic cluster location.",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        ":locationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "locationId",
                                                            "description": "(Required) The Dynatrace entity ID of the required cluster location."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "{\n  \"entityId\": \"id cillum ut deserunt nulla\",\n  \"latitude\": 23494420.717871904,\n  \"longitude\": 52847720.4511947,\n  \"name\": \"eu minim voluptate\",\n  \"type\": \"PUBLIC\",\n  \"countryCode\": \"irure\",\n  \"regionCode\": \"tempor \",\n  \"city\": \"exercitat\",\n  \"status\": \"ENABLED\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "719c120e-b7f3-4388-8662-fef97b18d694",
                                    "name": "Updates the specified private synthetic cluster location",
                                    "request": {
                                        "name": "Updates the specified private synthetic cluster location",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                ":locationId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "locationId",
                                                    "description": "(Required) The Dynatrace entity ID of the private synthetic cluster location to be updated."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json; charset=utf-8"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "PUT",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"entityId\": \"<string>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"name\": \"<string>\",\n  \"nodes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"regionCode\": \"<string>\",\n  \"city\": \"<string>\",\n  \"status\": \"<string>\",\n  \"availabilityLocationOutage\": \"<boolean>\",\n  \"availabilityNodeOutage\": \"<boolean>\",\n  \"locationNodeOutageDelayInMinutes\": \"<integer>\",\n  \"availabilityNotificationsEnabled\": \"<boolean>\",\n  \"deploymentType\": \"<string>\",\n  \"autoUpdateChromium\": \"<boolean>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "20a70126-c87a-42f4-bc79-ff278313ddd7",
                                            "name": "default response",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        ":locationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "locationId",
                                                            "description": "(Required) The Dynatrace entity ID of the private synthetic cluster location to be updated."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "PUT",
                                                "body": {
                                                    "mode": "raw",
                                                    "raw": "{\n  \"entityId\": \"<string>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"name\": \"<string>\",\n  \"nodes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"regionCode\": \"<string>\",\n  \"city\": \"<string>\",\n  \"status\": \"<string>\",\n  \"availabilityLocationOutage\": \"<boolean>\",\n  \"availabilityNodeOutage\": \"<boolean>\",\n  \"locationNodeOutageDelayInMinutes\": \"<integer>\",\n  \"availabilityNotificationsEnabled\": \"<boolean>\",\n  \"deploymentType\": \"<string>\",\n  \"autoUpdateChromium\": \"<boolean>\"\n}",
                                                    "options": {
                                                        "raw": {
                                                            "language": "json"
                                                        }
                                                    }
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "\"\"",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                },
                                {
                                    "id": "fb3315bd-782e-49fe-84cc-1b3448c5d03d",
                                    "name": "Deletes the specified private synthetic cluster location",
                                    "request": {
                                        "name": "Deletes the specified private synthetic cluster location",
                                        "description": {},
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "locations",
                                                ":locationId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "locationId",
                                                    "description": "(Required) The Dynatrace entity ID of the private synthetic cluster location to be deleted."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Accept",
                                                "value": "application/json; charset=utf-8"
                                            }
                                        ],
                                        "method": "DELETE",
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": "Api-Token {{DT_TOKEN}}"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "89639796-573c-4814-98b6-2b8a840472db",
                                            "name": "default response",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "synthetic",
                                                        "locations",
                                                        ":locationId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "disabled": false,
                                                            "type": "any",
                                                            "value": "<string>",
                                                            "key": "locationId",
                                                            "description": "(Required) The Dynatrace entity ID of the private synthetic cluster location to be deleted."
                                                        }
                                                    ]
                                                },
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "method": "DELETE",
                                                "body": {}
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json; charset=utf-8"
                                                }
                                            ],
                                            "body": "\"\"",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": [],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    }
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "831ca390-b879-4b2c-8528-51d871ebac58",
                    "name": "nodes",
                    "item": [
                        {
                            "id": "d2fdcb19-aede-4890-901e-74e56a1f3051",
                            "name": "Lists all synthetic cluster nodes | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Lists all synthetic cluster nodes | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "nodes"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "0ed64db2-600c-4204-97a2-75957193ddfb",
                                    "name": "Success.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "nodes"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"nodes\": [\n    {\n      \"entityId\": \"3086117876\",\n      \"hostname\": \"gdn.dyna.trace\",\n      \"ips\": [\n        \"238.245.160.14\"\n      ],\n      \"version\": \"1.161.0.20181210-173639\",\n      \"browserMonitorsEnabled\": true,\n      \"activeGateVersion\": \"1.172.2.20190607-040913\",\n      \"oneAgentRoutingEnabled\": true,\n      \"operatingSystem\": \"Linux\",\n      \"autoUpdateEnabled\": true,\n      \"status\": \"Running\",\n      \"playerVersion\": \"1.179.0.20190920-145430\",\n      \"healthCheckStatus\": \"Ok\"\n    }\n  ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        },
                        {
                            "id": "459b427d-1ec5-4ccc-81eb-bdeb2f380d12",
                            "name": "Lists properties of the specified synthetic cluster node | maturity=EARLY_ADOPTER",
                            "request": {
                                "name": "Lists properties of the specified synthetic cluster node | maturity=EARLY_ADOPTER",
                                "description": {},
                                "url": {
                                    "path": [
                                        "synthetic",
                                        "nodes",
                                        ":nodeId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "nodeId",
                                            "description": "(Required) The ID of the required synthetic cluster node."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json; charset=utf-8"
                                    }
                                ],
                                "method": "GET",
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization"
                                        },
                                        {
                                            "key": "value",
                                            "value": "Api-Token {{DT_TOKEN}}"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header"
                                        }
                                    ]
                                }
                            },
                            "response": [
                                {
                                    "id": "17134711-d9b6-4d72-b1e2-a8f99ae675d1",
                                    "name": "Success.",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "synthetic",
                                                "nodes",
                                                ":nodeId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "disabled": false,
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "nodeId",
                                                    "description": "(Required) The ID of the required synthetic cluster node."
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json; charset=utf-8"
                                        }
                                    ],
                                    "body": "{\n  \"entityId\": \"3086117876\",\n  \"hostname\": \"gdn.dyna.trace\",\n  \"ips\": [\n    \"238.245.160.14\"\n  ],\n  \"version\": \"1.161.0.20181210-173639\",\n  \"browserMonitorsEnabled\": true,\n  \"activeGateVersion\": \"1.172.2.20190607-040913\",\n  \"oneAgentRoutingEnabled\": true,\n  \"operatingSystem\": \"Linux\",\n  \"autoUpdateEnabled\": true,\n  \"status\": \"Running\",\n  \"playerVersion\": \"1.179.0.20190920-145430\",\n  \"healthCheckStatus\": \"Ok\",\n  \"browserType\": \"Chrome\",\n  \"browserVersion\": \"69.0.3497.81\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        }
    ],
    "event": [],
    "auth": {
        "type": "apikey",
        "apikey": [
            {
                "key": "value",
                "value": "Api-Token {{DT_TOKEN}}",
                "type": "string"
            },
            {
                "key": "key",
                "value": "Authorization",
                "type": "string"
            }
        ]
    },
    "variable": [
        {
            "type": "string",
            "value": "https://{{DT_HOST}}/api/cluster/v2",
            "key": "baseUrl"
        }
    ],
    "info": {
        "_postman_id": "46a6b77f-f964-4656-8ea0-345e982badec",
        "name": "Dynatrace Cluster API",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "Dynatrace Managed exposes cluster-wide functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters. \n\nTo authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:\n\n* 400 - Bad Request: Some request parameters are not correct. See response body for details.\n* 401 - Unauthorized: A valid authorization header is required but is missing.\n* 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid.\n* 404 - Not Found: Endpoint does not exist or some entities could not be found.\n* 500 - Internal Server Error: See response body for details.\n* 556 - Upgrade in progress: Operation couldn't be performed during the upgrade.\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
            "type": "text/plain"
        }
    }
}