{
	"info": {
		"_postman_id": "eaa0ea65-5422-4488-9487-dff331807e47",
		"name": "Dynatrace Environment API v2",
		"description": "\nDocumentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress. \n\nIf you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, refer to the [help page](https://dt-url.net/2u23k1k) .\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "active Gates",
			"item": [
				{
					"name": "{ag Id}",
					"item": [
						{
							"name": "update Jobs",
							"item": [
								{
									"name": "{job Id}",
									"item": [
										{
											"name": "Gets the parameters of the specified update job | maturity=EARLY_ADOPTER",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "aliquip laborum laboris cillum",
															"type": "string",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "aliquip laborum laboris cillum",
															"type": "string",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"targetVersion\": \"1.190.0.20200301-130000\",\n \"jobId\": \"-3524498778810258605\",\n \"jobState\": \"SUCCEED\",\n \"updateMethod\": \"AUTOMATIC\",\n \"updateType\": \"ACTIVE_GATE\",\n \"cancelable\": false,\n \"startVersion\": \"1.185.0.20200201-120000\",\n \"timestamp\": 1582031917814,\n \"agType\": \"ENVIRONMENT\",\n \"environments\": [\n  \"magna id ea sed\",\n  \"eu nostrud velit incididunt\"\n ],\n \"error\": \"anim veniam\",\n \"duration\": 3608000\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified update job | maturity=EARLY_ADOPTER",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "aliquip laborum laboris cillum",
															"type": "string",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "aliquip laborum laboris cillum",
															"type": "string",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The update-job have been deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists update jobs for the specified ActiveGate | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&startVersionCompareType=EQUAL&startVersion=aliquip laborum laboris cillum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=aliquip laborum laboris cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"query": [
												{
													"key": "from",
													"value": "aliquip laborum laboris cillum",
													"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days."
												},
												{
													"key": "to",
													"value": "aliquip laborum laboris cillum",
													"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
												},
												{
													"key": "startVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
												},
												{
													"key": "startVersion",
													"value": "aliquip laborum laboris cillum",
													"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "updateType",
													"value": "ACTIVE_GATE",
													"description": "Filters the resulting set of update-jobs by the update type."
												},
												{
													"key": "targetVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
												},
												{
													"key": "targetVersion",
													"value": "aliquip laborum laboris cillum",
													"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
												}
											],
											"variable": [
												{
													"key": "agId",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										},
										"description": "The job can update the ActiveGate to the specified version or the latest available one."
									},
									"response": [
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&startVersionCompareType=EQUAL&startVersion=aliquip laborum laboris cillum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=aliquip laborum laboris cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "aliquip laborum laboris cillum"
														},
														{
															"key": "to",
															"value": "aliquip laborum laboris cillum"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "aliquip laborum laboris cillum"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "aliquip laborum laboris cillum"
														}
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&startVersionCompareType=EQUAL&startVersion=aliquip laborum laboris cillum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=aliquip laborum laboris cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "aliquip laborum laboris cillum"
														},
														{
															"key": "to",
															"value": "aliquip laborum laboris cillum"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "aliquip laborum laboris cillum"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "aliquip laborum laboris cillum"
														}
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"agId\": \"1056821394\",\n \"updateJobs\": [\n  {\n   \"targetVersion\": \"1.190.0.20200301-130000\",\n   \"jobId\": \"-3524498778810258605\",\n   \"jobState\": \"SUCCEED\",\n   \"updateMethod\": \"AUTOMATIC\",\n   \"updateType\": \"ACTIVE_GATE\",\n   \"cancelable\": false,\n   \"startVersion\": \"1.185.0.20200201-120000\",\n   \"timestamp\": 1582031917814,\n   \"agType\": \"ENVIRONMENT\",\n   \"environments\": [\n    \"sit cillum labore incididunt tempor\",\n    \"ex ullamco irure nulla\"\n   ],\n   \"error\": \"voluptate nulla in nostrud\",\n   \"duration\": 3608000\n  },\n  {\n   \"targetVersion\": \"1.190.0.20200301-130000\",\n   \"jobId\": \"-3524498778810258605\",\n   \"jobState\": \"SUCCEED\",\n   \"updateMethod\": \"AUTOMATIC\",\n   \"updateType\": \"ACTIVE_GATE\",\n   \"cancelable\": false,\n   \"startVersion\": \"1.185.0.20200201-120000\",\n   \"timestamp\": 1582031917814,\n   \"agType\": \"ENVIRONMENT\",\n   \"environments\": [\n    \"Lorem id minim\",\n    \"sint Lorem\"\n   ],\n   \"error\": \"labore officia eiusmod par\",\n   \"duration\": 3608000\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Creates a new update job for the specified ActiveGate | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"variable": [
												{
													"key": "agId",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
										},
										{
											"name": "Success. The update-job have been created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"targetVersion\": \"1.190.0.20200301-130000\",\n \"jobId\": \"-3524498778810258605\",\n \"jobState\": \"SUCCEED\",\n \"updateMethod\": \"AUTOMATIC\",\n \"updateType\": \"ACTIVE_GATE\",\n \"cancelable\": false,\n \"startVersion\": \"1.185.0.20200201-120000\",\n \"timestamp\": 1582031917814,\n \"agType\": \"ENVIRONMENT\",\n \"environments\": [\n  \"magna id ea sed\",\n  \"eu nostrud velit incididunt\"\n ],\n \"error\": \"anim veniam\",\n \"duration\": 3608000\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request. | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted update-job is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the details of the specified ActiveGate | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/activeGates/:agId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										":agId"
									],
									"variable": [
										{
											"key": "agId",
											"value": "aliquip laborum laboris cillum",
											"type": "string",
											"description": "(Required) The ID of the required ActiveGate."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"1056821393\",\n \"networkAddresses\": [\n  \"cillum eiusmod\",\n  \"a\"\n ],\n \"osType\": \"WINDOWS\",\n \"autoUpdateStatus\": \"OUTDATED\",\n \"offlineSince\": 1582031917814,\n \"version\": \"1.185.0.20200201-120000\",\n \"type\": \"ENVIRONMENT\",\n \"hostname\": \"exampleHostname\",\n \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n \"environments\": [\n  \"anim\",\n  \"consectetur quis \"\n ],\n \"networkZone\": \"exampleNetworkZone\",\n \"group\": \"default\"\n}"
								},
								{
									"name": "Not found. See response body for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available ActiveGates | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/activeGates?hostname=aliquip laborum laboris cillum&osType=LINUX&networkAddress=aliquip laborum laboris cillum&type=ENVIRONMENT&networkZone=aliquip laborum laboris cillum&updateStatus=OUTDATED&versionCompareType=EQUAL&version=aliquip laborum laboris cillum&group=aliquip laborum laboris cillum&online=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates"
							],
							"query": [
								{
									"key": "hostname",
									"value": "aliquip laborum laboris cillum",
									"description": "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "osType",
									"value": "LINUX",
									"description": "Filters the resulting set of ActiveGates by the OS type of the host it's running on."
								},
								{
									"key": "networkAddress",
									"value": "aliquip laborum laboris cillum",
									"description": "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "type",
									"value": "ENVIRONMENT",
									"description": "Filters the resulting set of ActiveGates by the ActiveGate type."
								},
								{
									"key": "networkZone",
									"value": "aliquip laborum laboris cillum",
									"description": "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "updateStatus",
									"value": "OUTDATED",
									"description": "Filters the resulting set of ActiveGates by the auto-update status."
								},
								{
									"key": "versionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here."
								},
								{
									"key": "version",
									"value": "aliquip laborum laboris cillum",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here."
								},
								{
									"key": "group",
									"value": "aliquip laborum laboris cillum",
									"description": "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "online",
									"value": "false",
									"description": "Filters the resulting set of ActiveGates by the communication status."
								}
							]
						},
						"description": "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours."
					},
					"response": [
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=aliquip laborum laboris cillum&osType=LINUX&networkAddress=aliquip laborum laboris cillum&type=ENVIRONMENT&networkZone=aliquip laborum laboris cillum&updateStatus=OUTDATED&versionCompareType=EQUAL&version=aliquip laborum laboris cillum&group=aliquip laborum laboris cillum&online=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "osType",
											"value": "LINUX"
										},
										{
											"key": "networkAddress",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "type",
											"value": "ENVIRONMENT"
										},
										{
											"key": "networkZone",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "updateStatus",
											"value": "OUTDATED"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "group",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "online",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=aliquip laborum laboris cillum&osType=LINUX&networkAddress=aliquip laborum laboris cillum&type=ENVIRONMENT&networkZone=aliquip laborum laboris cillum&updateStatus=OUTDATED&versionCompareType=EQUAL&version=aliquip laborum laboris cillum&group=aliquip laborum laboris cillum&online=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "osType",
											"value": "LINUX"
										},
										{
											"key": "networkAddress",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "type",
											"value": "ENVIRONMENT"
										},
										{
											"key": "networkZone",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "updateStatus",
											"value": "OUTDATED"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "group",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "online",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"activeGates\": [\n  {\n   \"id\": \"1056821393\",\n   \"networkAddresses\": [\n    \"commodo ipsum Ut labori\",\n    \"in dolore\"\n   ],\n   \"osType\": \"WINDOWS\",\n   \"autoUpdateStatus\": \"OUTDATED\",\n   \"offlineSince\": 1582031917814,\n   \"version\": \"1.185.0.20200201-120000\",\n   \"type\": \"ENVIRONMENT\",\n   \"hostname\": \"exampleHostname\",\n   \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n   \"environments\": [\n    \"irure dolor mollit nulla\",\n    \"pariatur laboris enim ea sint\"\n   ],\n   \"networkZone\": \"exampleNetworkZone\",\n   \"group\": \"default\"\n  },\n  {\n   \"id\": \"1056821393\",\n   \"networkAddresses\": [\n    \"esse aliquip id\",\n    \"officia ea fugiat nisi elit\"\n   ],\n   \"osType\": \"WINDOWS\",\n   \"autoUpdateStatus\": \"OUTDATED\",\n   \"offlineSince\": 1582031917814,\n   \"version\": \"1.185.0.20200201-120000\",\n   \"type\": \"ENVIRONMENT\",\n   \"hostname\": \"exampleHostname\",\n   \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n   \"environments\": [\n    \"ut\",\n    \"aliqua ipsum ut laboris esse\"\n   ],\n   \"networkZone\": \"exampleNetworkZone\",\n   \"group\": \"default\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List ActiveGates with update jobs | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/activeGates/updateJobs?from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&startVersionCompareType=EQUAL&startVersion=aliquip laborum laboris cillum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=aliquip laborum laboris cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates",
								"updateJobs"
							],
							"query": [
								{
									"key": "from",
									"value": "aliquip laborum laboris cillum",
									"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days."
								},
								{
									"key": "to",
									"value": "aliquip laborum laboris cillum",
									"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "startVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
								},
								{
									"key": "startVersion",
									"value": "aliquip laborum laboris cillum",
									"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "updateType",
									"value": "ACTIVE_GATE",
									"description": "Filters the resulting set of update-jobs by the update type."
								},
								{
									"key": "targetVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
								},
								{
									"key": "targetVersion",
									"value": "aliquip laborum laboris cillum",
									"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
								}
							]
						},
						"description": "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress."
					},
					"response": [
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&startVersionCompareType=EQUAL&startVersion=aliquip laborum laboris cillum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&startVersionCompareType=EQUAL&startVersion=aliquip laborum laboris cillum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"allUpdateJobs\": [\n  {\n   \"agId\": \"1056821394\",\n   \"updateJobs\": [\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"cancelable\": false,\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"timestamp\": 1582031917814,\n     \"agType\": \"ENVIRONMENT\",\n     \"environments\": [\n      \"ea nisi id occaecat\",\n      \"et do\"\n     ],\n     \"error\": \"veniam laborum nulla aliqua\",\n     \"duration\": 3608000\n    },\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"cancelable\": false,\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"timestamp\": 1582031917814,\n     \"agType\": \"ENVIRONMENT\",\n     \"environments\": [\n      \"commodo occaecat\",\n      \"veniam sed enim ut laborum\"\n     ],\n     \"error\": \"occaecat voluptate sit\",\n     \"duration\": 3608000\n    }\n   ]\n  },\n  {\n   \"agId\": \"1056821394\",\n   \"updateJobs\": [\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"cancelable\": false,\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"timestamp\": 1582031917814,\n     \"agType\": \"ENVIRONMENT\",\n     \"environments\": [\n      \"adipisicing elit magna dolor\",\n      \"dolor consequat\"\n     ],\n     \"error\": \"in nulla sed\",\n     \"duration\": 3608000\n    },\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"cancelable\": false,\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"timestamp\": 1582031917814,\n     \"agType\": \"ENVIRONMENT\",\n     \"environments\": [\n      \"laboris reprehenderit o\",\n      \"nulla dolor amet Ut Lorem\"\n     ],\n     \"error\": \"reprehenderit tempor nostrud commodo\",\n     \"duration\": 3608000\n    }\n   ]\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "entity Types",
			"item": [
				{
					"name": "Gets a list of properties for all entity types | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/entityTypes?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entityTypes"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aliquip laborum laboris cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-5651813",
									"description": "The amount of entity types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Failed. There are no more entity types to export.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "pageSize",
											"value": "-5651813"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "pageSize",
											"value": "-5651813"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -78422604,\n \"pageSize\": 48836080,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"types\": [\n  {\n   \"tags\": \"est\",\n   \"entityLimitExceeded\": false,\n   \"managementZones\": \"est nisi\",\n   \"fromRelationships\": [\n    {\n     \"toTypes\": [\n      \"elit\",\n      \"exercitation mollit aute\"\n     ],\n     \"id\": \"eiusmod id\"\n    },\n    {\n     \"toTypes\": [\n      \"occaecat in magna\",\n      \"mollit Du\"\n     ],\n     \"id\": \"velit\"\n    }\n   ],\n   \"toRelationships\": [\n    {\n     \"fromTypes\": [\n      \"quis offi\",\n      \"cillum culpa\"\n     ],\n     \"id\": \"enim cillum\"\n    },\n    {\n     \"fromTypes\": [\n      \"ut culpa\",\n      \"velit ut sit\"\n     ],\n     \"id\": \"aliqua commodo\"\n    }\n   ],\n   \"properties\": [\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\"\n    },\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\"\n    }\n   ],\n   \"type\": \"enim quis\",\n   \"displayName\": \"deserunt magna\"\n  },\n  {\n   \"tags\": \"sit voluptate consequat\",\n   \"entityLimitExceeded\": false,\n   \"managementZones\": \"veniam culpa do eiusmod\",\n   \"fromRelationships\": [\n    {\n     \"toTypes\": [\n      \"aute culpa\",\n      \"deserunt aute eu Duis\"\n     ],\n     \"id\": \"fugiat dolor\"\n    },\n    {\n     \"toTypes\": [\n      \"incididunt ut\",\n      \"commodo ad in ullamco\"\n     ],\n     \"id\": \"culpa enim dolor\"\n    }\n   ],\n   \"toRelationships\": [\n    {\n     \"fromTypes\": [\n      \"in\",\n      \"aliqua mollit adipisicing\"\n     ],\n     \"id\": \"ullamco dolore Lorem dolore\"\n    },\n    {\n     \"fromTypes\": [\n      \"dolore\",\n      \"magna Duis ex cillum\"\n     ],\n     \"id\": \"non deserunt sit ut\"\n    }\n   ],\n   \"properties\": [\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\"\n    },\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\"\n    }\n   ],\n   \"type\": \"Lorem veniam in eu\",\n   \"displayName\": \"exercitation\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Gets a list of properties for the specified entity type | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/entityTypes/:type",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entityTypes",
								":type"
							],
							"variable": [
								{
									"key": "type",
									"value": "aliquip laborum laboris cillum",
									"type": "string",
									"description": "(Required) The required entity type."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes",
										":type"
									],
									"variable": [
										{
											"key": "type"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"tags\": \"tempor veniam mollit\",\n \"entityLimitExceeded\": true,\n \"managementZones\": \"laborum non ullamco do\",\n \"fromRelationships\": [\n  {\n   \"toTypes\": [\n    \"ut in consequat culpa\",\n    \"culpa consectetur\"\n   ],\n   \"id\": \"velit\"\n  },\n  {\n   \"toTypes\": [\n    \"sed esse elit non consequat\",\n    \"ut cupidatat nostrud voluptate\"\n   ],\n   \"id\": \"consequat cillum qui sed\"\n  }\n ],\n \"toRelationships\": [\n  {\n   \"fromTypes\": [\n    \"et labore\",\n    \"dolore sed sint esse\"\n   ],\n   \"id\": \"occaecat minim\"\n  },\n  {\n   \"fromTypes\": [\n    \"in Duis\",\n    \"tempor amet nostrud\"\n   ],\n   \"id\": \"ut eu ad\"\n  }\n ],\n \"properties\": [\n  {\n   \"id\": \"cpuCores\",\n   \"type\": \"Number\"\n  },\n  {\n   \"id\": \"cpuCores\",\n   \"type\": \"Number\"\n  }\n ],\n \"type\": \"cupidatat ex velit magna\",\n \"displayName\": \"mollit cillum nostrud eiusmod\"\n}"
						},
						{
							"name": "Failed. The requested monitored entity type is not exportable or doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes",
										":type"
									],
									"variable": [
										{
											"key": "type"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "entities",
			"item": [
				{
					"name": "Gets the information about monitored entities | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/entities?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&entitySelector=aliquip laborum laboris cillum&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&fields=aliquip laborum laboris cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entities"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aliquip laborum laboris cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-5651813",
									"description": "The amount of entities. \n\nIf not set, 50 is used."
								},
								{
									"key": "entitySelector",
									"value": "aliquip laborum laboris cillum",
									"description": "Defines the scope of the query. Only entities matching the specified criteria are included into response. \n\nYou need to set one of these criteria: \n\n* Entity type: `type(\"SOME_TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nAnd you can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value` tag. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Dynatrace entity name: `entityName(\"value\")`. The `CONTAINS` operator is used and the value is **not** case-sensitive. \n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n\n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nFor more information, see the [Entity selector](https://dt-url.net/apientityselector) help page. \n\nThe length of the string is limited to 10,000 characters. \n\nThe field is **required** when you're querying the first page of results."
								},
								{
									"key": "from",
									"value": "aliquip laborum laboris cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
								},
								{
									"key": "to",
									"value": "aliquip laborum laboris cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "fields",
									"value": "aliquip laborum laboris cillum",
									"description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET /entityTypes/{type}](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
								}
							]
						},
						"description": "Lists entities observed within the specified timeframe along with their properties. \n\nYou can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entities?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&entitySelector=aliquip laborum laboris cillum&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&fields=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "pageSize",
											"value": "-5651813"
										},
										{
											"key": "entitySelector",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "fields",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -37127740,\n \"pageSize\": -6676775,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"entities\": [\n  {\n   \"tags\": [\n    {\n     \"stringRepresentation\": \"ad non quis\",\n     \"value\": \"sit cillum est\",\n     \"key\": \"in\",\n     \"context\": \"aliqua\"\n    },\n    {\n     \"stringRepresentation\": \"officia labore cupidatat tempor\",\n     \"value\": \"Lorem\",\n     \"key\": \"et voluptate dolor sint\",\n     \"context\": \"proident in aliquip ad\"\n    }\n   ],\n   \"managementZones\": [\n    {\n     \"name\": \"occaecat id amet sit anim\",\n     \"id\": \"ipsum elit ut\"\n    },\n    {\n     \"name\": \"dolor cillum\",\n     \"id\": \"ex minim dolore reprehenderit\"\n    }\n   ],\n   \"firstSeenTms\": 90421332,\n   \"fromRelationships\": {},\n   \"toRelationships\": {},\n   \"lastSeenTms\": -82105755,\n   \"entityId\": \"in dolore cillum\",\n   \"properties\": {},\n   \"displayName\": \"nulla ex Excepteur incididunt\"\n  },\n  {\n   \"tags\": [\n    {\n     \"stringRepresentation\": \"minim Excepteur consequat a\",\n     \"value\": \"aute nostrud\",\n     \"key\": \"do proident\",\n     \"context\": \"in nostrud tempor reprehenderit\"\n    },\n    {\n     \"stringRepresentation\": \"quis qui officia\",\n     \"value\": \"fugiat\",\n     \"key\": \"consequat tempor in commodo\",\n     \"context\": \"laborum veniam labore laboris\"\n    }\n   ],\n   \"managementZones\": [\n    {\n     \"name\": \"in Lorem\",\n     \"id\": \"et commodo culpa magna\"\n    },\n    {\n     \"name\": \"reprehenderit dolor est in\",\n     \"id\": \"consequat voluptate sit\"\n    }\n   ],\n   \"firstSeenTms\": 84099329,\n   \"fromRelationships\": {},\n   \"toRelationships\": {},\n   \"lastSeenTms\": -27946310,\n   \"entityId\": \"in molli\",\n   \"properties\": {},\n   \"displayName\": \"Duis proident nulla\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Creates or updates a custom device | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"tags\": [\n        \"office-linz\"\n    ],\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/entities/custom",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entities",
								"custom"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"tags\": [\n        \"office-linz\"\n    ],\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/entities/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"tags\": [\n        \"office-linz\"\n    ],\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/entities/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"tags\": [\n        \"office-linz\"\n    ],\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/entities/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"entityId\": \"elit ea veniam\",\n \"groupId\": \"Excepteur sunt\"\n}"
						}
					]
				},
				{
					"name": "Gets the properties of the specified monitored entity | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/entities/:entityId?from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&fields=aliquip laborum laboris cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entities",
								":entityId"
							],
							"query": [
								{
									"key": "from",
									"value": "aliquip laborum laboris cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
								},
								{
									"key": "to",
									"value": "aliquip laborum laboris cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "fields",
									"value": "aliquip laborum laboris cillum",
									"description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET /entityTypes/{type}](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
								}
							],
							"variable": [
								{
									"key": "entityId",
									"value": "aliquip laborum laboris cillum",
									"type": "string",
									"description": "(Required) The ID of the required entity."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entities/:entityId?from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&fields=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										":entityId"
									],
									"query": [
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "fields",
											"value": "aliquip laborum laboris cillum"
										}
									],
									"variable": [
										{
											"key": "entityId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"tags\": [\n  {\n   \"stringRepresentation\": \"repre\",\n   \"value\": \"dolore reprehenderit magna sit\",\n   \"key\": \"et consequat exercitation ullamco ipsum\",\n   \"context\": \"eiusmod in ad eu consequat\"\n  },\n  {\n   \"stringRepresentation\": \"incididunt nisi\",\n   \"value\": \"labore\",\n   \"key\": \"veniam dolor\",\n   \"context\": \"consequat dolor aute in\"\n  }\n ],\n \"managementZones\": [\n  {\n   \"name\": \"Lorem pariatur quis\",\n   \"id\": \"tempor\"\n  },\n  {\n   \"name\": \"quis ut occaecat voluptate\",\n   \"id\": \"pariatur sunt cillum Lorem\"\n  }\n ],\n \"firstSeenTms\": -98168034,\n \"fromRelationships\": {},\n \"toRelationships\": {},\n \"lastSeenTms\": 48876751,\n \"entityId\": \"magna aliqua\",\n \"properties\": {},\n \"displayName\": \"commodo in\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "metrics",
			"item": [
				{
					"name": "Lists all available metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metrics?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&metricSelector=aliquip laborum laboris cillum&text=aliquip laborum laboris cillum&fields=aliquip laborum laboris cillum&writtenSince=aliquip laborum laboris cillum&metadataSelector=aliquip laborum laboris cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aliquip laborum laboris cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-5651813",
									"description": "The amount of primary entities in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\n If a value higher than 500 is used, only 500 results per page are returned."
								},
								{
									"key": "metricSelector",
									"value": "aliquip laborum laboris cillum",
									"description": "Selects metrics for the query by their keys.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can select a full set of related metrics by using a trailing asterisk (`*`) wildcard. For example, `builtin:host.*` selects all host-based metrics and `builtin:*` selects all Dynatrace-provided metrics. \n\nYou can set additional transformation operators, separated by a colon (`:`). See the [Metrics API - selector transformations help page](https://dt-url.net/metricSelector) for additional information on available result transformations.\n\n Only `aggregation`, `merge`, `parents`, and `splitBy` transformations are supported by this endpoint.\n\n The length of the string is limited to 2,000 characters.\n\n To find metrics based on a search term, rather than metricId, use the **text** query parameter instead of this one."
								},
								{
									"key": "text",
									"value": "aliquip laborum laboris cillum",
									"description": "Metric registry search term. Only show metrics that contain the term in their key, display name, or description. Use the `metricSelector` parameter instead of this one to select a complete metric hierarchy instead of doing a text-based search."
								},
								{
									"key": "fields",
									"value": "aliquip laborum laboris cillum",
									"description": "Defines the list of metric properties included in the response. \n\n`metricId` is **always** included in the result. The following additional properties are available: \n\n* `displayName`: The name of the metric in the user interface. Enabled by default. \n* `description`: A short description of the metric. Enabled by default. \n* `unit`: The unit of the metric. Enabled by default. \n* `tags`: The tags of the metric. \n+ `dduBillable`:  An indicator whether the usage of metric consumes [Davis data units](https://dt-url.net/ddu). \n* `created`:  The timestamp (UTC milliseconds) when the metrics has been created. \n* `lastWritten`:  The timestamp (UTC milliseconds) when metric data points have been written for the last time. \n* `aggregationTypes`: The list of allowed aggregations for the metric. Note that it may be different after a [transformation](https://dt-url.net/metricSelector) is applied. \n* `defaultAggregation`: The default aggregation of the metric. It is used when no aggregation is specified or the `:auto` transformation is set. \n* `dimensionDefinitions`: The fine metric division (for example, process group and process ID for some process-related metric). \n* `transformations`: A list of [transformations](https://dt-url.net/metricSelector) that can be applied to the metric.\n* `entityType`: A list of entity types supported by the metric.\n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`. \n\nTo specify several properties, join them with a comma (for example `fields=+aggregationTypes,-description`).\n\nIf you specify just one property, the response contains the metric key and the specified property. To return metric keys only, specify `metricId` here."
								},
								{
									"key": "writtenSince",
									"value": "aliquip laborum laboris cillum",
									"description": "Filters the resulted set of metrics to those that have data points within the specified timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
								},
								{
									"key": "metadataSelector",
									"value": "aliquip laborum laboris cillum",
									"description": "The metadata scope of the query. Only metrics with specified properties are included to the response. \n\nCurrently supported filters are: \n\n* unit \n* tags \n\nSee the available criteria below; you can use them in any combination. Values are case-sensitive and the `EQUALS` operator is used. When putting more than one unit/tag in such an operator, those are concatenated with the `OR` operator. \n\n* `unit(\"unit-1\",\"unit-2\")` \n* `tags(\"tag-1\",\"tag-2\")` \n\nTo set several criteria, separate them with a comma (`,`). For example, `tags(\"feature\",\"cloud\"),unit(\"Percent\")`. Only results matching **all** criteria are included in response. \n\nExample 1: List metrics containing the tag 'feature' OR 'cloud' AND the unit 'Percent' \n\n* metadataSelector=tags(feature,cloud),unit(Percent) \n\nExample 2: List metrics tagged with 'feature' AND 'cloud' with a unit of 'Percent' OR 'MegaByte'\n\n* metadataSelector=tags(feature),unit(Percent,MegaByte),tags(cloud)"
								}
							]
						},
						"description": "You can narrow down the output by selecting metrics in the **metricSelector** field. \n\nYou can additionally limit the output by using pagination: \n\n1. Specify the number of results per page in the **pageSize** query parameter. \n\n2. Then use the cursor from the **nextPageKey** field of the response in the **nextPageKey** query parameter to obtain subsequent pages. All other query parameters must be omitted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&metricSelector=aliquip laborum laboris cillum&text=aliquip laborum laboris cillum&fields=aliquip laborum laboris cillum&writtenSince=aliquip laborum laboris cillum&metadataSelector=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "pageSize",
											"value": "-5651813"
										},
										{
											"key": "metricSelector",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "text",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "fields",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "writtenSince",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "metadataSelector",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"nextPageKey\": \"sint mollit dolor\",\n \"totalCount\": -70377485,\n \"warnings\": [\n  \"voluptate enim co\",\n  \"ex\"\n ],\n \"metrics\": [\n  {\n   \"tags\": [\n    \"est ipsum\",\n    \"Excepteur elit do est magna\"\n   ],\n   \"entityType\": [\n    \"anim exercitation consectetur ex\",\n    \"esse sunt elit commodo\"\n   ],\n   \"dduBillable\": false,\n   \"aggregationTypes\": [\n    \"auto\",\n    \"sum\"\n   ],\n   \"defaultAggregation\": {\n    \"parameter\": 14918264.759306818,\n    \"type\": \"avg\"\n   },\n   \"dimensionDefinitions\": [\n    {\n     \"index\": -93410999,\n     \"name\": \"adipisicing sunt consequat non\",\n     \"key\": \"l\",\n     \"type\": \"VOID\",\n     \"displayName\": \"exercitation voluptate commodo\"\n    },\n    {\n     \"index\": -98956940,\n     \"name\": \"aliqua Lorem in et reprehenderit\",\n     \"key\": \"magna amet consectetur consequat exercitation\",\n     \"type\": \"OTHER\",\n     \"displayName\": \"dolore e\"\n    }\n   ],\n   \"metricId\": \"culpa do esse id\",\n   \"lastWritten\": -59665616,\n   \"metricValueType\": {\n    \"type\": \"score\"\n   },\n   \"rootCauseRelevant\": true,\n   \"impactRelevant\": true,\n   \"minimumValue\": -19900835.043524534,\n   \"maximumValue\": -63881711.06813973,\n   \"warnings\": [\n    \"voluptate est culpa exercitation laboris\",\n    \"aliqua ut aliquip commodo\"\n   ],\n   \"description\": \"qui labori\",\n   \"transformations\": [\n    \"fold\",\n    \"filter\"\n   ],\n   \"unit\": \"KibiBytePerSecond\",\n   \"created\": 11941565,\n   \"displayName\": \"pariatur \"\n  },\n  {\n   \"tags\": [\n    \"co\",\n    \"officia ut\"\n   ],\n   \"entityType\": [\n    \"et\",\n    \"ut quis amet sunt\"\n   ],\n   \"dduBillable\": false,\n   \"aggregationTypes\": [\n    \"min\",\n    \"percentile\"\n   ],\n   \"defaultAggregation\": {\n    \"parameter\": -35840799.73975034,\n    \"type\": \"min\"\n   },\n   \"dimensionDefinitions\": [\n    {\n     \"index\": 67486038,\n     \"name\": \"Lorem\",\n     \"key\": \"eiusmod nostrud voluptate\",\n     \"type\": \"ENTITY\",\n     \"displayName\": \"nulla irure\"\n    },\n    {\n     \"index\": -34647472,\n     \"name\": \"adipisicing dolore nisi sed\",\n     \"key\": \"et\",\n     \"type\": \"STRING\",\n     \"displayName\": \"dolor labore\"\n    }\n   ],\n   \"metricId\": \"consectetur fugiat\",\n   \"lastWritten\": -55943550,\n   \"metricValueType\": {\n    \"type\": \"error\"\n   },\n   \"rootCauseRelevant\": true,\n   \"impactRelevant\": false,\n   \"minimumValue\": -73046413.08856991,\n   \"maximumValue\": 65478678.0055522,\n   \"warnings\": [\n    \"minim Lorem\",\n    \"anim aliquip Duis\"\n   ],\n   \"description\": \"pariatur mollit culpa\",\n   \"transformations\": [\n    \"names\",\n    \"limit\"\n   ],\n   \"unit\": \"BytePerHour\",\n   \"created\": -75767922,\n   \"displayName\": \"adipisicing minim in\"\n  }\n ]\n}"
						},
						{
							"name": "Syntax or validation error. **metricSelector** or **fields** have syntactic or semantic errors.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&metricSelector=aliquip laborum laboris cillum&text=aliquip laborum laboris cillum&fields=aliquip laborum laboris cillum&writtenSince=aliquip laborum laboris cillum&metadataSelector=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "pageSize",
											"value": "-5651813"
										},
										{
											"key": "metricSelector",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "text",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "fields",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "writtenSince",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "metadataSelector",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found. The requested resource is not found or the query is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&metricSelector=aliquip laborum laboris cillum&text=aliquip laborum laboris cillum&fields=aliquip laborum laboris cillum&writtenSince=aliquip laborum laboris cillum&metadataSelector=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "pageSize",
											"value": "-5651813"
										},
										{
											"key": "metricSelector",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "text",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "fields",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "writtenSince",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "metadataSelector",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&metricSelector=aliquip laborum laboris cillum&text=aliquip laborum laboris cillum&fields=aliquip laborum laboris cillum&writtenSince=aliquip laborum laboris cillum&metadataSelector=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "pageSize",
											"value": "-5651813"
										},
										{
											"key": "metricSelector",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "text",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "fields",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "writtenSince",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "metadataSelector",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Gets the descriptor of the specified metric",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metrics/:metricId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								":metricId"
							],
							"variable": [
								{
									"key": "metricId",
									"value": "aliquip laborum laboris cillum",
									"type": "string",
									"description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See the [Metrics API - selector transformations help page](https://dt-url.net/metricSelector) for additional information on available result transformations.\n\n The length of the string is limited to 2,000 characters."
								}
							]
						}
					},
					"response": [
						{
							"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricId"
									],
									"variable": [
										{
											"key": "metricId"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found. The requested resource is not found or the query is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricId"
									],
									"variable": [
										{
											"key": "metricId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricId"
									],
									"variable": [
										{
											"key": "metricId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"tags\": [\n  \"sint Excepteur incididunt\",\n  \"aute et veniam\"\n ],\n \"entityType\": [\n  \"nostrud\",\n  \"cillum est in id exercitation\"\n ],\n \"dduBillable\": false,\n \"aggregationTypes\": [\n  \"sum\",\n  \"value\"\n ],\n \"defaultAggregation\": {\n  \"parameter\": -15745935.90171957,\n  \"type\": \"avg\"\n },\n \"dimensionDefinitions\": [\n  {\n   \"index\": 85187082,\n   \"name\": \"et dolore laboris id nisi\",\n   \"key\": \"officia incididunt deserunt commodo\",\n   \"type\": \"OTHER\",\n   \"displayName\": \"nulla irure ad\"\n  },\n  {\n   \"index\": 12494262,\n   \"name\": \"anim proident velit sed\",\n   \"key\": \"cillum officia tempor\",\n   \"type\": \"STRING\",\n   \"displayName\": \"ad\"\n  }\n ],\n \"metricId\": \"id et esse cillum\",\n \"lastWritten\": 47949457,\n \"metricValueType\": {\n  \"type\": \"unknown\"\n },\n \"rootCauseRelevant\": false,\n \"impactRelevant\": false,\n \"minimumValue\": -42703181.731248915,\n \"maximumValue\": 71425375.45921251,\n \"warnings\": [\n  \"amet non incididunt sunt est\",\n  \"quis au\"\n ],\n \"description\": \"cupidatat enim esse nulla\",\n \"transformations\": [\n  \"filter\",\n  \"sort\"\n ],\n \"unit\": \"BitPerMinute\",\n \"created\": -51329432,\n \"displayName\": \"officia dolore ullamco ex sed\"\n}"
						}
					]
				},
				{
					"name": "Gets data points of the specified metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metrics/query?metricSelector=aliquip laborum laboris cillum&resolution=aliquip laborum laboris cillum&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&entitySelector=aliquip laborum laboris cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								"query"
							],
							"query": [
								{
									"key": "metricSelector",
									"value": "aliquip laborum laboris cillum",
									"description": "Selects metrics for the query by their keys. You can select up to 10 metrics for one query.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can set additional transformation operators, separated by a colon (`:`). See the [Metrics API - selector transformations help page](https://dt-url.net/metricSelector) for additional information on available result transformations.\n\n If the metric key contains whitespaces, they must be escaped with a tilde (`~`). \n\nFor example, to query the metric with the key of **ext:ruxitselfmonitoring.jmx.overall.Agents of Type 'APACHE'** and the dimension of **dt.entity.process_group_instance** for the PROCESS_GROUP_INSTANCE-123, you must specify this selector: \n\n`ext:ruxitselfmonitoring.jmx.overall.Agents~ of~ Type~ 'APACHE':filter(eq(dt.entity.process_group_instance,PROCESS_GROUP_INSTANCE-123))`\n\n The length of the string is limited to 2,000 characters."
								},
								{
									"key": "resolution",
									"value": "aliquip laborum laboris cillum",
									"description": "The desired resolution of data points. \n\nYou can use one of the following options: \n* One aggregated data point of each series. Set `Inf` to use this option. \n* The desired amount of data points. This is the default option. This is a reference number of points, which is not necessarily equal to the number of the returned data points. \n* The desired timespan between data points. This is a reference timespan, which is not necessarily equal to the returned timespan. To use this option, specify the unit of the timespan. \n\nValid units for the timespan are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the default is **120 data points**.\n\nFor example: \n\n* Get data points which are 10 minutes apart: `resolution=10m` \n* Get data points which are 3 weeks apart: `resolution=3w`"
								},
								{
									"key": "from",
									"value": "aliquip laborum laboris cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "aliquip laborum laboris cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "entitySelector",
									"value": "aliquip laborum laboris cillum",
									"description": "Specifies the entity scope of the query. Only data points delivered by matched entities are included in response. \n\nYou need to set one of these criteria: \n\n* Entity type: `type(\"SOME_TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nAnd you can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value` tag. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Dynatrace entity name: `entityName(\"value\")`. The `CONTAINS` operator is used and the value is **not** case-sensitive. \n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n\n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nFor more information, see the [Entity selector](https://dt-url.net/apientityselector) help page. \n\nThe length of the string is limited to 10,000 characters. \n\nUse the [`GET /metrics/{metricId}`](https://dt-url.net/6z23ifk) call to fetch the list of possible entity types for your metric. \n\nTo set a universal scope matching all entities, omit this parameter."
								}
							]
						},
						"description": "The following limits apply: \n* The amount of aggregated data points in the response is limited to 1,000 \n* The amount of series in the response is limited to 1,000 \n   * The amount of data points per series is limited to 10,080 (Minutes of one week) \n   * The overall amount of data points is limited to 100,000 \n"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=aliquip laborum laboris cillum&resolution=aliquip laborum laboris cillum&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&entitySelector=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "resolution",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "entitySelector",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"nextPageKey\": \"nostrud Lorem elit commodo\",\n \"totalCount\": 86791225,\n \"warnings\": [\n  \"nostrud\",\n  \"sunt exercitation ex\"\n ],\n \"result\": [\n  {\n   \"metricId\": \"nulla laborum\",\n   \"warnings\": [\n    \"eiusmod nisi\",\n    \"anim in in\"\n   ],\n   \"data\": [\n    {\n     \"timestamps\": [\n      99571349,\n      -40534729\n     ],\n     \"dimensionMap\": {},\n     \"dimensions\": [\n      \"consectetur culpa nisi qui fugiat\",\n      \"Lorem cillum\"\n     ],\n     \"values\": [\n      70021200.98071706,\n      -48416355.99837515\n     ]\n    },\n    {\n     \"timestamps\": [\n      6393256,\n      -69040352\n     ],\n     \"dimensionMap\": {},\n     \"dimensions\": [\n      \"sunt velit nostrud non\",\n      \"anim aute sint aliquip id\"\n     ],\n     \"values\": [\n      850750.9234213233,\n      -68097264.87128872\n     ]\n    }\n   ]\n  },\n  {\n   \"metricId\": \"officia esse\",\n   \"warnings\": [\n    \"ut Ut molli\",\n    \"tempor nulla\"\n   ],\n   \"data\": [\n    {\n     \"timestamps\": [\n      -43993746,\n      -94678166\n     ],\n     \"dimensionMap\": {},\n     \"dimensions\": [\n      \"in tempor\",\n      \"nostrud\"\n     ],\n     \"values\": [\n      79818833.25244495,\n      60336890.59223223\n     ]\n    },\n    {\n     \"timestamps\": [\n      9993612,\n      -27755335\n     ],\n     \"dimensionMap\": {},\n     \"dimensions\": [\n      \"cillum anim cupidatat ut dolore\",\n      \"minim\"\n     ],\n     \"values\": [\n      53602750.47743669,\n      50412324.89148694\n     ]\n    }\n   ]\n  }\n ]\n}"
						},
						{
							"name": "Failed. The request is valid but the response is too big to process. Split your query into several queries with limited scopes.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=aliquip laborum laboris cillum&resolution=aliquip laborum laboris cillum&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&entitySelector=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "resolution",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "entitySelector",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Syntax or validation error. From and to parameters, scope or resolution are incorrect individually or in their combined meaning.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=aliquip laborum laboris cillum&resolution=aliquip laborum laboris cillum&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&entitySelector=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "resolution",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "entitySelector",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=aliquip laborum laboris cillum&resolution=aliquip laborum laboris cillum&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&entitySelector=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "resolution",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "entitySelector",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found. The requested resource is not found or the query is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=aliquip laborum laboris cillum&resolution=aliquip laborum laboris cillum&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&entitySelector=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "resolution",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "entitySelector",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Pushes metric data points to Dynatrace",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"server.cpu.temperature,cpu.id=0 42\""
						},
						"url": {
							"raw": "{{baseUrl}}/metrics/ingest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								"ingest"
							]
						}
					},
					"response": [
						{
							"name": "The provided metric data points are accepted and will be processed in the background.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"server.cpu.temperature,cpu.id=0 42\""
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"ingest"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Some data points are invalid. Valid data points are accepted and will be processed in the background.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"server.cpu.temperature,cpu.id=0 42\""
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"ingest"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "network Zones",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters of the specified network zone | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliquip laborum laboris cillum",
											"type": "string",
											"description": "(Required) The ID of the required network zone."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"numOfConfiguredOneAgents\": -98673734,\n \"numOfOneAgentsFromOtherZones\": 11292184,\n \"alternativeZones\": [\n  \"et ullamco in\",\n  \"dolore adipisicing\"\n ],\n \"numOfOneAgentsUsing\": 37759213,\n \"numOfConfiguredActiveGates\": 11770946,\n \"description\": \"labore minim\",\n \"id\": \"eu est\"\n}"
								}
							]
						},
						{
							"name": "Updates an existing network zone or creates a new one | maturity=EARLY_ADOPTER",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alternativeZones\": [\n        \"ipsum in\",\n        \"aliquip minim ad\"\n    ],\n    \"description\": \"n\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliquip laborum laboris cillum",
											"type": "string",
											"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
										}
									]
								},
								"description": "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
							},
							"response": [
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"ipsum in\",\n        \"aliquip minim ad\"\n    ],\n    \"description\": \"n\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
								},
								{
									"name": "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"ipsum in\",\n        \"aliquip minim ad\"\n    ],\n    \"description\": \"n\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"esse nulla\",\n \"name\": \"do eu anim ullamco\",\n \"description\": \"do sunt magna sed\"\n}"
								},
								{
									"name": "Success. The network zone has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"ipsum in\",\n        \"aliquip minim ad\"\n    ],\n    \"description\": \"n\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the specified network zone | maturity=EARLY_ADOPTER",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliquip laborum laboris cillum",
											"type": "string",
											"description": "(Required) The ID of the network zone to be deleted."
										}
									]
								},
								"description": "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives."
							},
							"response": [
								{
									"name": "Failed. See error message in the response body for details.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all existing network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/networkZones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZones"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"networkZones\": [\n  {\n   \"numOfConfiguredOneAgents\": -84142544,\n   \"numOfOneAgentsFromOtherZones\": -93387225,\n   \"alternativeZones\": [\n    \"dolor consequat et\",\n    \"cupidatat\"\n   ],\n   \"numOfOneAgentsUsing\": -35909945,\n   \"numOfConfiguredActiveGates\": -9023931,\n   \"description\": \"ipsum\",\n   \"id\": \"do occaecat aliquip in\"\n  },\n  {\n   \"numOfConfiguredOneAgents\": 83535755,\n   \"numOfOneAgentsFromOtherZones\": 68495149,\n   \"alternativeZones\": [\n    \"laborum nisi tempor dolore consectetur\",\n    \"irure in\"\n   ],\n   \"numOfOneAgentsUsing\": -6858691,\n   \"numOfConfiguredActiveGates\": -69428921,\n   \"description\": \"elit eu do ut\",\n   \"id\": \"enim Lorem\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "network Zone Settings",
			"item": [
				{
					"name": "Gets the global configuration of network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/networkZoneSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZoneSettings"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZoneSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZoneSettings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"networkZonesEnabled\": false\n}"
						}
					]
				},
				{
					"name": "Updates the global configuration of network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"networkZonesEnabled\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networkZoneSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZoneSettings"
							]
						}
					},
					"response": [
						{
							"name": "Success. The global network zones configuration has been updated. Response doesn't have a body.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"networkZonesEnabled\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networkZoneSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZoneSettings"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "Gets a list of custom tags applied to the specified entities | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags?entitySelector=aliquip laborum laboris cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "entitySelector",
									"value": "aliquip laborum laboris cillum",
									"description": "(Required) Specifies the entities where you want to read tags. \n\nYou need to set one of these criteria: \n\n* Entity type: `type(\"SOME_TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nAnd you can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value` tag. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Dynatrace entity name: `entityName(\"value\")`. The `CONTAINS` operator is used and the value is **not** case-sensitive. \n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n\n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nFor more information, see the [Entity selector](https://dt-url.net/apientityselector) help page. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								}
							]
						},
						"description": "Automatically applied tags and imported tags are not included."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?entitySelector=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "entitySelector",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"tags\": {\n  \"empty\": true\n },\n \"totalCount\": 25769150\n}"
						}
					]
				},
				{
					"name": "Adds custom tags to the specified entities | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\n        {\n            \"key\": \"mainApp\"\n        },\n        {\n            \"key\": \"bookings\",\n            \"value\": \"42\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tags?entitySelector=aliquip laborum laboris cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "entitySelector",
									"value": "aliquip laborum laboris cillum",
									"description": "(Required) Specifies the entities where you want to update tags. \n\nYou need to set one of these criteria: \n\n* Entity type: `type(\"SOME_TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nAnd you can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value` tag. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Dynatrace entity name: `entityName(\"value\")`. The `CONTAINS` operator is used and the value is **not** case-sensitive. \n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n\n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nFor more information, see the [Entity selector](https://dt-url.net/apientityselector) help page. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								}
							]
						},
						"description": "All existing tags remain unaffected."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\n        {\n            \"key\": \"mainApp\"\n        },\n        {\n            \"key\": \"bookings\",\n            \"value\": \"42\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tags?entitySelector=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "entitySelector",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"matchedEntitiesCount\": -37854776,\n \"appliedTags\": {\n  \"empty\": true\n }\n}"
						}
					]
				},
				{
					"name": "Deletes the specified tag from the specified entities | maturity=EARLY_ADOPTER",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags?key=eaenim pariatur est ut&value=aliquip laborum laboris cillum&deleteAllWithKey=true&entitySelector=aliquip laborum laboris cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "key",
									"value": "eaenim pariatur est ut",
									"description": "(Required) The tag to be deleted."
								},
								{
									"key": "value",
									"value": "aliquip laborum laboris cillum",
									"description": "The tag to be deleted."
								},
								{
									"key": "deleteAllWithKey",
									"value": "true",
									"description": "The tag to be deleted."
								},
								{
									"key": "entitySelector",
									"value": "aliquip laborum laboris cillum",
									"description": "(Required) Specifies the entities where you want to delete tags. \n\nYou need to set one of these criteria: \n\n* Entity type: `type(\"SOME_TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nAnd you can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value` tag. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Dynatrace entity name: `entityName(\"value\")`. The `CONTAINS` operator is used and the value is **not** case-sensitive. \n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n\n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nFor more information, see the [Entity selector](https://dt-url.net/apientityselector) help page. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?key=eaenim pariatur est ut&value=aliquip laborum laboris cillum&deleteAllWithKey=true&entitySelector=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "key",
											"value": "eaenim pariatur est ut"
										},
										{
											"key": "value",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "deleteAllWithKey",
											"value": "true"
										},
										{
											"key": "entitySelector",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"matchedEntitiesCount\": 2\n}"
						}
					]
				}
			]
		},
		{
			"name": "auditlogs",
			"item": [
				{
					"name": "Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auditlogs?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&filter=aliquip laborum laboris cillum&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&sort=-timestamp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auditlogs"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aliquip laborum laboris cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-5651813",
									"description": "The amount of log entries in a single response payload. \n\nThe maximal allowed page size is 5000. \n\nIf not set, 1000 is used."
								},
								{
									"key": "filter",
									"value": "aliquip laborum laboris cillum",
									"description": "Filters the audit log. You can use the following criteria: \n* User: `user(\"userIdentification\")`. The `EQUALS` operator applies. \n* Event type: `eventType(\"value\")`. The `EQUALS` operator applies. \n* Category of a logged operation: `category(\"value\")`. The `EQUALS` operator applies. \n* Entity ID: `entityId(\"id\")`. The `CONTAINS` operator applies. \n\nFor each criterion, you can specify multiple alternatives with comma-separated values. In this case, the OR logic applies. For example, `eventType(\"CREATE\",\"UPDATE\")` means eventType can be \"CREATE\" or \"UPDATE\". \n\nYou can specify multiple comma-separated criteria, such as `eventType(\"CREATE\",\"UPDATE\"),category(\"CONFIG\")`. Only results matching **all** criteria are included in response. \n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes: \n* Tilde `~` \n* Quote `\"`"
								},
								{
									"key": "from",
									"value": "aliquip laborum laboris cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "aliquip laborum laboris cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "The sorting of audit log entries: \n* `timestamp`: Oldest first. \n* `-timestamp`: Newest first. \n\nIf not set, the newest first sorting is applied."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&filter=aliquip laborum laboris cillum&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&sort=-timestamp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "pageSize",
											"value": "-5651813"
										},
										{
											"key": "filter",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "sort",
											"value": "-timestamp"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -86081762,\n \"pageSize\": 54283748,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"auditLogs\": [\n  {\n   \"category\": \"DEBUG_UI\",\n   \"environmentId\": \"tempor consectetur Duis nostrud\",\n   \"eventType\": \"UPDATE\",\n   \"logId\": \"quis\",\n   \"success\": true,\n   \"timestamp\": 42615531,\n   \"user\": \"laboris in\",\n   \"userType\": \"TOKEN_HASH\",\n   \"entityId\": \"nostrud occaecat veniam e\",\n   \"userOrigin\": \"in Ut\",\n   \"message\": \"anim aliqua labore enim\",\n   \"patch\": {}\n  },\n  {\n   \"category\": \"WEB_UI\",\n   \"environmentId\": \"ex ipsum\",\n   \"eventType\": \"CREATE\",\n   \"logId\": \"est \",\n   \"success\": true,\n   \"timestamp\": 1073628,\n   \"user\": \"elit mollit laboris\",\n   \"userType\": \"SERVICE_NAME\",\n   \"entityId\": \"commodo incididunt Excepteur\",\n   \"userOrigin\": \"laboris\",\n   \"message\": \"in sint mollit nisi\",\n   \"patch\": {}\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Gets the specified entry of the audit log | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auditlogs/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auditlogs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "qui ",
									"type": "string",
									"description": "(Required) The ID of the required log entry."
								}
							]
						}
					},
					"response": [
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"category\": \"DEBUG_UI\",\n \"environmentId\": \"ex non minim dolor\",\n \"eventType\": \"LOGOUT\",\n \"logId\": \"cons\",\n \"success\": true,\n \"timestamp\": 45696904,\n \"user\": \"sint eu do\",\n \"userType\": \"REQUEST_ID\",\n \"entityId\": \"ea fugiat laborum ex reprehenderit\",\n \"userOrigin\": \"veniam occaecat\",\n \"message\": \"quis cillum commodo aliqua ut\",\n \"patch\": {}\n}"
						},
						{
							"name": "Failed. Invalid ID format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "extensions",
			"item": [
				{
					"name": "schemas",
					"item": [
						{
							"name": "{schema Version}",
							"item": [
								{
									"name": "Lists all the files available for the specified extension 2.0 schema version",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"schemas",
												":schemaVersion"
											],
											"variable": [
												{
													"key": "schemaVersion",
													"value": "0.308118",
													"type": "string",
													"description": "(Required) The version of the required schema"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion"
													],
													"variable": [
														{
															"key": "schemaVersion"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"files\": [\n  \"\",\n  \"ea aute labore eu\"\n ]\n}"
										}
									]
								},
								{
									"name": "Gets the extension 2.0 schema file in the specified version",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion/:fileName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"schemas",
												":schemaVersion",
												":fileName"
											],
											"variable": [
												{
													"key": "schemaVersion",
													"value": "0.308118",
													"type": "string",
													"description": "(Required) The version of the required schema file"
												},
												{
													"key": "fileName",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The name of the required schema file"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion/:fileName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion",
														":fileName"
													],
													"variable": [
														{
															"key": "schemaVersion"
														},
														{
															"key": "fileName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all the extension 2.0 schemas versions available in your environment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/extensions/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"versions\": [\n  {\n   \"major\": -71294859,\n   \"minor\": 34505326,\n   \"patch\": -99526015\n  },\n  {\n   \"major\": -51237205,\n   \"minor\": -64049295,\n   \"patch\": 38848008\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "{extension Name}",
					"item": [
						{
							"name": "{extension Version}",
							"item": [
								{
									"name": "Gets details of the specified version of the extension 2.0",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "0.308118",
													"type": "string",
													"description": "(Required) The version of the required extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server",
														"key": "Accept",
														"value": "aliquip laborum laboris cillum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server",
														"key": "Accept",
														"value": "aliquip laborum laboris cillum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"extensionName\": \"consequat laboris id\",\n \"version\": \"43121466404.42086\",\n \"author\": {\n  \"name\": \"ipsum commodo aliquip\"\n },\n \"dataSources\": [\n  \"elit aliquip\",\n  \"incididunt\"\n ],\n \"variables\": [\n  \"in exercitation consectetur ut\",\n  \"commodo exercitation\"\n ],\n \"featureSets\": [\n  \"voluptate qui aliquip\",\n  \"tempor laboris anim ea\"\n ],\n \"minDynatraceVersion\": \"in veniam Ut mollit enim\"\n}"
										}
									]
								},
								{
									"name": "Deletes the specified version of the extension 2.0",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "0.308118",
													"type": "string",
													"description": "(Required) The version of the required extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The extension 2.0 version has been scheduled to be deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"extensionName\": \"consequat laboris id\",\n \"version\": \"43121466404.42086\",\n \"author\": {\n  \"name\": \"ipsum commodo aliquip\"\n },\n \"dataSources\": [\n  \"elit aliquip\",\n  \"incididunt\"\n ],\n \"variables\": [\n  \"in exercitation consectetur ut\",\n  \"commodo exercitation\"\n ],\n \"featureSets\": [\n  \"voluptate qui aliquip\",\n  \"tempor laboris anim ea\"\n ],\n \"minDynatraceVersion\": \"in veniam Ut mollit enim\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "environment Configuration",
							"item": [
								{
									"name": "Gets the active environment configuration version of the specified extension 2.0",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"22.0.390238876\"\n}"
										}
									]
								},
								{
									"name": "Updates the active environment configuration version of the extension 2.0",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": \"22.0.390238876\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration scheduled to be updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"22.0.390238876\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"22.0.390238876\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"22.0.390238876\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
										}
									]
								},
								{
									"name": "Activates the environment configuration from the specified version of the extension 2.0",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": \"22.0.390238876\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"22.0.390238876\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
										},
										{
											"name": "Success. Environment configuration scheduled to be activated.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"22.0.390238876\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"22.0.390238876\"\n}"
										}
									]
								},
								{
									"name": "Deactivates the environment configuration of the specified extension 2.0",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration scheduled to be deactivated.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"22.0.390238876\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
										}
									]
								},
								{
									"name": "List of the latest extension environment configuration events",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration",
												"events"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "List of the latest extension environment configuration events",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration",
														"events"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"extensionEvents\": [\n  {\n   \"timestamp\": \"Duis in proident nostrud\",\n   \"severity\": \"adipisicing velit\",\n   \"message\": \"id do\"\n  },\n  {\n   \"timestamp\": \"Duis non Ut nostrud\",\n   \"severity\": \"enim\",\n   \"message\": \"est Duis incididunt ut dolore\"\n  }\n ]\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration",
														"events"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all versions of the extension 2.0",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/extensions/:extensionName?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										":extensionName"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum",
											"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
										},
										{
											"key": "pageSize",
											"value": "-5651813",
											"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
										}
									],
									"variable": [
										{
											"key": "extensionName",
											"value": "aliquip laborum laboris cillum",
											"type": "string",
											"description": "(Required) The name of the required extension 2.0."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "aliquip laborum laboris cillum"
												},
												{
													"key": "pageSize",
													"value": "-5651813"
												}
											],
											"variable": [
												{
													"key": "extensionName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"extensions\": [\n  {\n   \"extensionName\": \"amet dolor\",\n   \"version\": \"0\"\n  },\n  {\n   \"extensionName\": \"in in magna\",\n   \"version\": \"0.0\"\n  }\n ],\n \"totalCount\": 14613427,\n \"pageSize\": 72315404,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "aliquip laborum laboris cillum"
												},
												{
													"key": "pageSize",
													"value": "-5651813"
												}
											],
											"variable": [
												{
													"key": "extensionName"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all the extensions 2.0 available in your environment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/extensions?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&name=aliquip laborum laboris cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aliquip laborum laboris cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-5651813",
									"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
								},
								{
									"key": "name",
									"value": "aliquip laborum laboris cillum",
									"description": "Filters the resulting set of extensions 2.0 by name. You can specify a partial name. In that case, the CONTAINS operator is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&name=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "pageSize",
											"value": "-5651813"
										},
										{
											"key": "name",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"extensions\": [\n  {\n   \"extensionName\": \"id ex et esse sit\",\n   \"version\": \"94956975.87840291408\"\n  },\n  {\n   \"extensionName\": \"adip\",\n   \"version\": \"0.253228786.765368\"\n  }\n ],\n \"totalCount\": 80344721,\n \"pageSize\": 2650203,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						}
					]
				},
				{
					"name": "Uploads a new extension 2.0",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "Ut",
									"description": "Extension 2.0 package file (*.zip) to upload. Must contain only extension.zip and extension.zip.sig files.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/extensions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": [
						{
							"name": "Success. The extension 2.0 has been uploaded.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "Ut",
											"description": {
												"content": "Extension 2.0 package file (*.zip) to upload. Must contain only extension.zip and extension.zip.sig files.",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"extensionName\": \"minim non\",\n \"version\": \"0.93\",\n \"author\": {\n  \"name\": \"sunt ipsum con\"\n },\n \"dataSources\": [\n  \"et non eu\",\n  \"officia voluptate eiusmod sed ex\"\n ],\n \"variables\": [\n  \"ut esse\",\n  \"do consectetur\"\n ],\n \"featureSets\": [\n  \"mollit do consectetur\",\n  \"sed nulla magna ani\"\n ],\n \"minDynatraceVersion\": \"aliqua\"\n}"
						},
						{
							"name": "Failed. The input file is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "Ut",
											"description": {
												"content": "Extension 2.0 package file (*.zip) to upload. Must contain only extension.zip and extension.zip.sig files.",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "problems",
			"item": [
				{
					"name": "{problem Id}",
					"item": [
						{
							"name": "comments",
							"item": [
								{
									"name": "{comment Id}",
									"item": [
										{
											"name": "Gets the specified comment on a problem | maturity=EARLY_ADOPTER",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "aliquip laborum laboris cillum",
															"type": "string",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "aliquip laborum laboris cillum",
															"type": "string",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"authorName\": \"dolor\",\n \"createdAtTimestamp\": 29665630,\n \"context\": \"fugiat\",\n \"id\": \"eu Ut\",\n \"content\": \"eu velit\"\n}"
												}
											]
										},
										{
											"name": "Updates the specified comment on a problem | maturity=EARLY_ADOPTER",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message\": \"nulla aute labore\",\n    \"context\": \"anim nostrud ex\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "aliquip laborum laboris cillum",
															"type": "string",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "aliquip laborum laboris cillum",
															"type": "string",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The comment has been updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"message\": \"nulla aute labore\",\n    \"context\": \"anim nostrud ex\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes the specified comment from a problem | maturity=EARLY_ADOPTER",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "aliquip laborum laboris cillum",
															"type": "string",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "aliquip laborum laboris cillum",
															"type": "string",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The comment has been deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Gets all comments on the specified problem | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/comments?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"comments"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "aliquip laborum laboris cillum",
													"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
												},
												{
													"key": "pageSize",
													"value": "-5651813",
													"description": "The amount of comments in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 10 is used."
												}
											],
											"variable": [
												{
													"key": "problemId",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "aliquip laborum laboris cillum"
														},
														{
															"key": "pageSize",
															"value": "-5651813"
														}
													],
													"variable": [
														{
															"key": "problemId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"comments\": [\n  {\n   \"authorName\": \"do in\",\n   \"createdAtTimestamp\": 95572768,\n   \"context\": \"adipisicing commodo\",\n   \"id\": \"ut Excep\",\n   \"content\": \"mollit occaecat ull\"\n  },\n  {\n   \"authorName\": \"aliqua mollit officia aute ea\",\n   \"createdAtTimestamp\": 44323488,\n   \"context\": \"ad dolor consequat sed\",\n   \"id\": \"veniam cillum adipisicing dolor\",\n   \"content\": \"in veniam consectetur officia\"\n  }\n ],\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": -60626872,\n \"totalCount\": 49371823\n}"
										}
									]
								},
								{
									"name": "Adds a new comment on the specified problem | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"nulla aute labore\",\n    \"context\": \"anim nostrud ex\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"comments"
											],
											"variable": [
												{
													"key": "problemId",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The comment has been added.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message\": \"nulla aute labore\",\n    \"context\": \"anim nostrud ex\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments"
													],
													"variable": [
														{
															"key": "problemId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Gets the properties of the specified problem | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/problems/:problemId?fields=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"problems",
										":problemId"
									],
									"query": [
										{
											"key": "fields",
											"value": "aliquip laborum laboris cillum",
											"description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`)."
										}
									],
									"variable": [
										{
											"key": "problemId",
											"value": "aliquip laborum laboris cillum",
											"type": "string",
											"description": "(Required) The ID of the required problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId?fields=aliquip laborum laboris cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId"
											],
											"query": [
												{
													"key": "fields",
													"value": "aliquip laborum laboris cillum"
												}
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"managementZones\": [\n  {\n   \"name\": \"dolor laboris sit\",\n   \"id\": \"nulla commodo culpa laboris exercitation\"\n  },\n  {\n   \"name\": \"qui do sint elit\",\n   \"id\": \"irure id ut\"\n  }\n ],\n \"severityLevel\": \"CUSTOM_ALERT\",\n \"affectedEntities\": [\n  {\n   \"entityId\": {\n    \"id\": \"laborum magna culpa ut\",\n    \"type\": \"in\"\n   },\n   \"name\": \"magna\"\n  },\n  {\n   \"entityId\": {\n    \"id\": \"Excepteur\",\n    \"type\": \"culpa ipsum\"\n   },\n   \"name\": \"cil\"\n  }\n ],\n \"displayId\": \"nostrud ullamco dolore irure\",\n \"impactedEntities\": [\n  {\n   \"entityId\": {\n    \"id\": \"nulla dolor\",\n    \"type\": \"in quis velit\"\n   },\n   \"name\": \"dolore ut officia dolor\"\n  },\n  {\n   \"entityId\": {\n    \"id\": \"nulla officia aute ut occaecat\",\n    \"type\": \"Ut\"\n   },\n   \"name\": \"sunt eu nostrud occaecat\"\n  }\n ],\n \"rootCauseEntity\": {\n  \"entityId\": {\n   \"id\": \"ea esse in ullamco\",\n   \"type\": \"in exercitation aute cillum\"\n  },\n  \"name\": \"elit nisi pariatur\"\n },\n \"problemFilters\": [\n  {\n   \"name\": \"labore id veniam et\",\n   \"id\": \"amet qui in nostrud sin\"\n  },\n  {\n   \"name\": \"deserunt ullamco officia\",\n   \"id\": \"labore et\"\n  }\n ],\n \"evidenceDetails\": {\n  \"totalCount\": 23737892,\n  \"details\": [\n   {\n    \"evidenceType\": \"AVAILABILITY_EVIDENCE\",\n    \"displayName\": \"reprehenderit in\",\n    \"entity\": {\n     \"entityId\": {\n      \"id\": \"sed\",\n      \"type\": \"eu ut cillum nisi deserunt\"\n     },\n     \"name\": \"cupidatat laboris incididunt quis aliquip\"\n    },\n    \"groupingEntity\": {\n     \"entityId\": {\n      \"id\": \"elit in\",\n      \"type\": \"deserunt mollit Duis nulla ullamco\"\n     },\n     \"name\": \"ut aliqua\"\n    },\n    \"rootCauseRelevant\": true,\n    \"startTime\": 41410683\n   },\n   {\n    \"evidenceType\": \"METRIC\",\n    \"displayName\": \"est fugiat dolore et\",\n    \"entity\": {\n     \"entityId\": {\n      \"id\": \"Duis sit esse\",\n      \"type\": \"pariatur officia\"\n     },\n     \"name\": \"quis non aliqua sunt\"\n    },\n    \"groupingEntity\": {\n     \"entityId\": {\n      \"id\": \"non ipsum irure officia\",\n      \"type\": \"sunt occaecat adipisicing\"\n     },\n     \"name\": \"quis cillum consectetur Excepteur\"\n    },\n    \"rootCauseRelevant\": false,\n    \"startTime\": 84356831\n   }\n  ]\n },\n \"recentComments\": {\n  \"comments\": [\n   {\n    \"authorName\": \"sit adipisicing ut\",\n    \"createdAtTimestamp\": 58584969,\n    \"context\": \"culpa\",\n    \"id\": \"ut eu\",\n    \"content\": \"labore eiusmod\"\n   },\n   {\n    \"authorName\": \"reprehenderit\",\n    \"createdAtTimestamp\": 21141106,\n    \"context\": \"temp\",\n    \"id\": \"sint commodo\",\n    \"content\": \"ex dolor Lorem minim\"\n   }\n  ],\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"pageSize\": -9868699,\n  \"totalCount\": 65447679\n },\n \"impactAnalysis\": {\n  \"impacts\": [\n   {\n    \"impactType\": \"SERVICE\",\n    \"impactedEntity\": {\n     \"entityId\": {\n      \"id\": \"id in\",\n      \"type\": \"eu dolore et\"\n     },\n     \"name\": \"elit aute dolor dolore ex\"\n    },\n    \"estimatedAffectedUsers\": 91360798\n   },\n   {\n    \"impactType\": \"SERVICE\",\n    \"impactedEntity\": {\n     \"entityId\": {\n      \"id\": \"non sunt dolor\",\n      \"type\": \"consectetur velit Ut\"\n     },\n     \"name\": \"ut cillum sed Ut\"\n    },\n    \"estimatedAffectedUsers\": 88542614\n   }\n  ]\n },\n \"linkedProblemInfo\": {\n  \"displayId\": \"voluptate sunt dolore\",\n  \"problemId\": \"mollit labore ut est occaecat\"\n },\n \"entityTags\": [\n  {\n   \"stringRepresentation\": \"proident irure\",\n   \"value\": \"s\",\n   \"key\": \"cupidat\",\n   \"context\": \"exercitation dolore aliquip ea\"\n  },\n  {\n   \"stringRepresentation\": \"in eiusmod qui exercitation\",\n   \"value\": \"dolore cillum aute \",\n   \"key\": \"minim ad est\",\n   \"context\": \"aliquip\"\n  }\n ],\n \"problemId\": \"occaecat commodo consectet\",\n \"impactLevel\": \"APPLICATION\",\n \"status\": \"CLOSED\",\n \"startTime\": 95475818,\n \"endTime\": -76295773,\n \"title\": \"do sint\"\n}"
								}
							]
						},
						{
							"name": "Closes the specified problem and adds a closing comment on it | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"eu esse sit\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/problems/:problemId/close",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"problems",
										":problemId",
										"close"
									],
									"variable": [
										{
											"key": "problemId",
											"value": "aliquip laborum laboris cillum",
											"type": "string",
											"description": "(Required) The ID of the required problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "The problem is closed already the request hasn't been executed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"eu esse sit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"close"
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"eu esse sit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"close"
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"problemId\": \"occaecat dolor est cupidatat\",\n \"closeTimestamp\": 54313300,\n \"closing\": true,\n \"comment\": {\n  \"authorName\": \"laborum in\",\n  \"createdAtTimestamp\": 24922789,\n  \"context\": \"sunt ad elit reprehenderit\",\n  \"id\": \"ad sit\",\n  \"content\": \"dolor sed elit\"\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists problems observed within the specified timeframe | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/problems?fields=aliquip laborum laboris cillum&nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&problemSelector=aliquip laborum laboris cillum&entitySelector=aliquip laborum laboris cillum&sort=aliquip laborum laboris cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"problems"
							],
							"query": [
								{
									"key": "fields",
									"value": "aliquip laborum laboris cillum",
									"description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).\n\n The field is valid only for the current page of results. You must set it for each page you're requesting."
								},
								{
									"key": "nextPageKey",
									"value": "aliquip laborum laboris cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
								},
								{
									"key": "pageSize",
									"value": "-5651813",
									"description": "The amount of problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
								},
								{
									"key": "from",
									"value": "aliquip laborum laboris cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
								},
								{
									"key": "to",
									"value": "aliquip laborum laboris cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "problemSelector",
									"value": "aliquip laborum laboris cillum",
									"description": "Defines the scope of the query. Only problems matching the specified criteria are included into response. \n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies. All values must be quoted. \n* Status: `status(\"open\")` or `status(\"closed\")`. You can specify only one status. \n* Severity level: `severityLevel(\"level-1\",\"level-2\")`. Find the possible values in the description of the **severityLevel** field of the response.\n* Impact level: `impactLevel(\"level-11\",\"level-2\")` Find the possible values in the description of the **impactLevel** field of the response.\n* Root cause entity: `rootCauseEntity(\"id-1\", \"id-2\")`. \n* Management zone ID: `managementZoneIds(\"mZId-1\", \"mzId-2\")`. \n* Management zone name: `managementZones(\"value-1\",\"value-2\")`. \n* Impacted entities: `impactedEntities(\"id-1\", \"id-2\")`. \n* Affected entities: `affectedEntities(\"id-1\", \"id-2\")`. \n* Type of affected entities: `affectedEntityTypes(\"value-1\",\"value-2\")`. \n* Problem ID: `problemId(\"id-1\", \"id-2\")`. \n* Alerting profile ID: `problemFilterIds(\"id-1\", \"id-2\")`. \n* Alerting profile name: `problemFilterNames(\"value-1\",\"value-2\")`. \n* Entity tags: `entityTags(\"[context]key:value\",\"key:value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value tag`. All tag values are case-sensitive.\n* Display ID of the problem: `displayId(\"id-1\", \"id-2\")`. \n* Under maintenance: `underMaintenance(true|false)`. Shows (true) or hides (false) all problems created during maintenance mode.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response. \n\n"
								},
								{
									"key": "entitySelector",
									"value": "aliquip laborum laboris cillum",
									"description": "The entity scope of the query.You need to set one of these criteria: \n\n* Entity type: `type(\"SOME_TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nAnd you can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value` tag. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Dynatrace entity name: `entityName(\"value\")`. The `CONTAINS` operator is used and the value is **not** case-sensitive. \n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n\n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nFor more information, see the [Entity selector](https://dt-url.net/apientityselector) help page. \n\nThe length of the string is limited to 10,000 characters. \n\nThe scope is limited to 10000 entities !\n\n"
								},
								{
									"key": "sort",
									"value": "aliquip laborum laboris cillum",
									"description": "Specifies a set of comma-separated (`,`) fields for sorting in the problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n * `status`: problem status (`+` open problems first or `-` closed problems first)\n * `startTime`: problem start time (`+` new problems first or `-` old problems first) \n\nIf no prefix is set, `+` is used. \n\nYou can specify several levels of sorting. For example, `+status,-startTime` sorts problems by status, open problems first. Within the status, problems are sorted by start time, oldest first."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/problems?fields=aliquip laborum laboris cillum&nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&problemSelector=aliquip laborum laboris cillum&entitySelector=aliquip laborum laboris cillum&sort=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"problems"
									],
									"query": [
										{
											"key": "fields",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "pageSize",
											"value": "-5651813"
										},
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "problemSelector",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "entitySelector",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "sort",
											"value": "aliquip laborum laboris cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -28235497,\n \"pageSize\": -97460341,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"problems\": [\n  {\n   \"managementZones\": [\n    {\n     \"name\": \"u\",\n     \"id\": \"sint\"\n    },\n    {\n     \"name\": \"ullamco aute\",\n     \"id\": \"dolor\"\n    }\n   ],\n   \"severityLevel\": \"AVAILABILITY\",\n   \"affectedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"consequat ullamco amet\",\n      \"type\": \"laboris\"\n     },\n     \"name\": \"ut deserunt officia Dui\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"elit veniam deserunt minim\",\n      \"type\": \"amet fugiat reprehenderit\"\n     },\n     \"name\": \"aute eiusmod qui\"\n    }\n   ],\n   \"displayId\": \"adipisicing in non ipsum\",\n   \"impactedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"Lo\",\n      \"type\": \"ut nulla dolor ullamco incididunt\"\n     },\n     \"name\": \"cillum ut dolor\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"id eiusmod in deserunt\",\n      \"type\": \"incididunt sit esse Duis\"\n     },\n     \"name\": \"elit officia\"\n    }\n   ],\n   \"rootCauseEntity\": {\n    \"entityId\": {\n     \"id\": \"culpa sint\",\n     \"type\": \"sint laboris\"\n    },\n    \"name\": \"labore id cillum culpa\"\n   },\n   \"problemFilters\": [\n    {\n     \"name\": \"ex magna ea aliqua\",\n     \"id\": \"dolor sint sed sunt\"\n    },\n    {\n     \"name\": \"cillum laboris incididunt occaecat\",\n     \"id\": \"ut tempor proident Ut\"\n    }\n   ],\n   \"evidenceDetails\": {\n    \"totalCount\": 21252407,\n    \"details\": [\n     {\n      \"evidenceType\": \"METRIC\",\n      \"displayName\": \"fugiat labore\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"eu al\",\n        \"type\": \"adipisicing\"\n       },\n       \"name\": \"enim Ut\"\n      },\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"dolore nulla\",\n        \"type\": \"minim sunt et enim in\"\n       },\n       \"name\": \"Exce\"\n      },\n      \"rootCauseRelevant\": false,\n      \"startTime\": 8731118\n     },\n     {\n      \"evidenceType\": \"EVENT\",\n      \"displayName\": \"labore occaecat eiusmod\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"cillum Lorem\",\n        \"type\": \"veniam labore id\"\n       },\n       \"name\": \"ex\"\n      },\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"enim consequat Duis no\",\n        \"type\": \"voluptate non labore\"\n       },\n       \"name\": \"Ut non tempor occaecat\"\n      },\n      \"rootCauseRelevant\": false,\n      \"startTime\": -57975812\n     }\n    ]\n   },\n   \"recentComments\": {\n    \"comments\": [\n     {\n      \"authorName\": \"officia labore\",\n      \"createdAtTimestamp\": -80726398,\n      \"context\": \"venia\",\n      \"id\": \"eiusmod ullamco id Ut laboris\",\n      \"content\": \"est et voluptate enim\"\n     },\n     {\n      \"authorName\": \"officia sint quis minim\",\n      \"createdAtTimestamp\": -76480354,\n      \"context\": \"consequat fugiat\",\n      \"id\": \"dolor sint Duis est exercitation\",\n      \"content\": \"in anim exercitation\"\n     }\n    ],\n    \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n    \"pageSize\": -52698433,\n    \"totalCount\": 57255797\n   },\n   \"impactAnalysis\": {\n    \"impacts\": [\n     {\n      \"impactType\": \"MOBILE\",\n      \"impactedEntity\": {\n       \"entityId\": {\n        \"id\": \"E\",\n        \"type\": \"Duis labore\"\n       },\n       \"name\": \"officia proident mollit deserunt quis\"\n      },\n      \"estimatedAffectedUsers\": -23958571\n     },\n     {\n      \"impactType\": \"MOBILE\",\n      \"impactedEntity\": {\n       \"entityId\": {\n        \"id\": \"nisi proident aute Ut\",\n        \"type\": \"et ullamco culpa do voluptate\"\n       },\n       \"name\": \"nulla dolor aliqua\"\n      },\n      \"estimatedAffectedUsers\": -22567031\n     }\n    ]\n   },\n   \"linkedProblemInfo\": {\n    \"displayId\": \"velit ut occaecat laboris consectetur\",\n    \"problemId\": \"est minim dolor amet\"\n   },\n   \"entityTags\": [\n    {\n     \"stringRepresentation\": \"fugiat elit\",\n     \"value\": \"ad labore velit incididunt deserunt\",\n     \"key\": \"laborum do consectetur mollit\",\n     \"context\": \"nostrud cup\"\n    },\n    {\n     \"stringRepresentation\": \"proident ut dolore\",\n     \"value\": \"ea ullamco deserunt labore anim\",\n     \"key\": \"cupidatat commodo minim in\",\n     \"context\": \"tempor amet\"\n    }\n   ],\n   \"problemId\": \"incididunt consequat\",\n   \"impactLevel\": \"SERVICES\",\n   \"status\": \"OPEN\",\n   \"startTime\": -61238228,\n   \"endTime\": -38681840,\n   \"title\": \"Ut\"\n  },\n  {\n   \"managementZones\": [\n    {\n     \"name\": \"deserun\",\n     \"id\": \"id aliqua cupidatat\"\n    },\n    {\n     \"name\": \"nulla cupidatat id officia fugiat\",\n     \"id\": \"tempor\"\n    }\n   ],\n   \"severityLevel\": \"AVAILABILITY\",\n   \"affectedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"dolore\",\n      \"type\": \"velit\"\n     },\n     \"name\": \"consequat ea anim amet\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"Lorem ullamco mollit aliquip\",\n      \"type\": \"labore ut\"\n     },\n     \"name\": \"consecte\"\n    }\n   ],\n   \"displayId\": \"voluptate\",\n   \"impactedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"eu eiusmod reprehenderit in\",\n      \"type\": \"et commodo irure\"\n     },\n     \"name\": \"Duis ut\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"reprehenderit amet Duis\",\n      \"type\": \"voluptate\"\n     },\n     \"name\": \"veniam anim sit in\"\n    }\n   ],\n   \"rootCauseEntity\": {\n    \"entityId\": {\n     \"id\": \"dolore laborum voluptate nulla\",\n     \"type\": \"ullamco velit\"\n    },\n    \"name\": \"est amet deserunt quis\"\n   },\n   \"problemFilters\": [\n    {\n     \"name\": \"et ullamco amet\",\n     \"id\": \"amet dolore in\"\n    },\n    {\n     \"name\": \"esse minim in\",\n     \"id\": \"est ipsum reprehenderit tempor aliqua\"\n    }\n   ],\n   \"evidenceDetails\": {\n    \"totalCount\": -14958626,\n    \"details\": [\n     {\n      \"evidenceType\": \"METRIC\",\n      \"displayName\": \"ut cupidatat aliquip\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"aliqu\",\n        \"type\": \"minim dolore veniam laborum\"\n       },\n       \"name\": \"exercitation tempor\"\n      },\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"consectetur eu commodo\",\n        \"type\": \"dolore aliquip ut nostrud culpa\"\n       },\n       \"name\": \"eiusmod anim aliqua\"\n      },\n      \"rootCauseRelevant\": true,\n      \"startTime\": -21805052\n     },\n     {\n      \"evidenceType\": \"AVAILABILITY_EVIDENCE\",\n      \"displayName\": \"Excepteur qui deserunt\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"sit Duis enim adipisicing\",\n        \"type\": \"ad est enim\"\n       },\n       \"name\": \"magna laborum\"\n      },\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"culpa sunt anim in\",\n        \"type\": \"officia ipsum dolor\"\n       },\n       \"name\": \"ullamco eiusmod veniam ea\"\n      },\n      \"rootCauseRelevant\": true,\n      \"startTime\": 97547553\n     }\n    ]\n   },\n   \"recentComments\": {\n    \"comments\": [\n     {\n      \"authorName\": \"ut ex\",\n      \"createdAtTimestamp\": 17473658,\n      \"context\": \"nulla ma\",\n      \"id\": \"ullamco Lorem fugiat ea do\",\n      \"content\": \"ut est\"\n     },\n     {\n      \"authorName\": \"quis proident sit\",\n      \"createdAtTimestamp\": -59598658,\n      \"context\": \"adipisicing dolore cupidatat\",\n      \"id\": \"labore cillum adipisicing sed incididunt\",\n      \"content\": \"culpa reprehenderit\"\n     }\n    ],\n    \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n    \"pageSize\": -24186554,\n    \"totalCount\": 92539769\n   },\n   \"impactAnalysis\": {\n    \"impacts\": [\n     {\n      \"impactType\": \"APPLICATION\",\n      \"impactedEntity\": {\n       \"entityId\": {\n        \"id\": \"L\",\n        \"type\": \"in\"\n       },\n       \"name\": \"in ad\"\n      },\n      \"estimatedAffectedUsers\": -3354613\n     },\n     {\n      \"impactType\": \"SERVICE\",\n      \"impactedEntity\": {\n       \"entityId\": {\n        \"id\": \"nostrud\",\n        \"type\": \"ullamco sed anim elit\"\n       },\n       \"name\": \"cupidatat labore ulla\"\n      },\n      \"estimatedAffectedUsers\": -68528518\n     }\n    ]\n   },\n   \"linkedProblemInfo\": {\n    \"displayId\": \"laborum\",\n    \"problemId\": \"ex velit mollit\"\n   },\n   \"entityTags\": [\n    {\n     \"stringRepresentation\": \"dolore ut velit\",\n     \"value\": \"minim nostrud ullamco ad nisi\",\n     \"key\": \"non fugiat qui Exc\",\n     \"context\": \"ipsum Excepteur ut laborum eiusmod\"\n    },\n    {\n     \"stringRepresentation\": \"enim cillum\",\n     \"value\": \"cillum ull\",\n     \"key\": \"sint id\",\n     \"context\": \"laboris\"\n    }\n   ],\n   \"problemId\": \"eiusmod cupidatat aute deserunt mollit\",\n   \"impactLevel\": \"ENVIRONMENT\",\n   \"status\": \"OPEN\",\n   \"startTime\": 43234334,\n   \"endTime\": 86710548,\n   \"title\": \"in dolor\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "objects",
					"item": [
						{
							"name": "{object Id}",
							"item": [
								{
									"name": "Retrieve a settings object by ID | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) ID of a settings object (e.g. `Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=`)"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"schemaVersion\": \"1.0.0\",\n \"author\": \"john.doe@example.com\",\n \"modified\": -41506049,\n \"scope\": \"HOST-D3A3C5A146830A79\",\n \"schemaId\": \"builtin:anomaly.infrastructure\",\n \"summary\": \"fugiat irure\",\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"created\": 53753883,\n \"value\": {\n  \"autoMonitoring\": true\n }\n}"
										},
										{
											"name": "No object available for the given objectId",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sed mollit dolor\",\n    \"message\": \"ipsum magna et voluptate\",\n    \"path\": \"in id in aute\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"in magna cillum tempor\",\n    \"message\": \"et nostrud\",\n    \"path\": \"nisi et laborum ex\"\n   }\n  ],\n  \"code\": -79438026,\n  \"message\": \"nisi con\"\n },\n \"code\": -38709413\n}"
										}
									]
								},
								{
									"name": "Update a settings object by ID | maturity=EARLY_ADOPTER",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) ID of a settings object (e.g. `Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=`)"
												}
											]
										}
									},
									"response": [
										{
											"name": "Schema validation failed",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sed mollit dolor\",\n    \"message\": \"ipsum magna et voluptate\",\n    \"path\": \"in id in aute\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"in magna cillum tempor\",\n    \"message\": \"et nostrud\",\n    \"path\": \"nisi et laborum ex\"\n   }\n  ],\n  \"code\": -79438026,\n  \"message\": \"nisi con\"\n },\n \"code\": -38709413\n}"
										},
										{
											"name": "Conflicting resource",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sed mollit dolor\",\n    \"message\": \"ipsum magna et voluptate\",\n    \"path\": \"in id in aute\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"in magna cillum tempor\",\n    \"message\": \"et nostrud\",\n    \"path\": \"nisi et laborum ex\"\n   }\n  ],\n  \"code\": -79438026,\n  \"message\": \"nisi con\"\n },\n \"code\": -38709413\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sed mollit dolor\",\n    \"message\": \"ipsum magna et voluptate\",\n    \"path\": \"in id in aute\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"in magna cillum tempor\",\n    \"message\": \"et nostrud\",\n    \"path\": \"nisi et laborum ex\"\n   }\n  ],\n  \"code\": -79438026,\n  \"message\": \"nisi con\"\n },\n \"code\": -38709413\n}"
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 8981445\n}"
										}
									]
								},
								{
									"name": "Delete a settings object by ID | maturity=EARLY_ADOPTER",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=aliquip laborum laboris cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"query": [
												{
													"key": "updateToken",
													"value": "aliquip laborum laboris cillum",
													"description": "Generated upon retrieval and can be used to detect concurrent modification when set"
												}
											],
											"variable": [
												{
													"key": "objectId",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) ID of a settings object (e.g. `Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=`)"
												}
											]
										}
									},
									"response": [
										{
											"name": "Conflicting resource",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=aliquip laborum laboris cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "aliquip laborum laboris cillum"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sed mollit dolor\",\n    \"message\": \"ipsum magna et voluptate\",\n    \"path\": \"in id in aute\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"in magna cillum tempor\",\n    \"message\": \"et nostrud\",\n    \"path\": \"nisi et laborum ex\"\n   }\n  ],\n  \"code\": -79438026,\n  \"message\": \"nisi con\"\n },\n \"code\": -38709413\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=aliquip laborum laboris cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "aliquip laborum laboris cillum"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sed mollit dolor\",\n    \"message\": \"ipsum magna et voluptate\",\n    \"path\": \"in id in aute\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"in magna cillum tempor\",\n    \"message\": \"et nostrud\",\n    \"path\": \"nisi et laborum ex\"\n   }\n  ],\n  \"code\": -79438026,\n  \"message\": \"nisi con\"\n },\n \"code\": -38709413\n}"
										},
										{
											"name": "Success, response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=aliquip laborum laboris cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "aliquip laborum laboris cillum"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Read one or multiple settings objects | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/objects?schemaIds=aliquip laborum laboris cillum&scopes=aliquip laborum laboris cillum&fields=+objectId,+value&nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "schemaIds",
											"value": "aliquip laborum laboris cillum",
											"description": "A list of schema identifiers to search for, separated by comma (e.g. `builtin:anomaly.infrastructure,customer.application.application-settings`) \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "scopes",
											"value": "aliquip laborum laboris cillum",
											"description": "A list of scopes to filter the persisted settings objects by, separated by comma (e.g. `HOST-D3A3C5A146830A79,environment`) This will only match for settings directly persisted on the scope, i.e. `environment` will not match settings which have been saved for a host in this environment. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "fields",
											"value": "+objectId,+value",
											"description": "A list of top-level fields to include/exclude in the response, separated by comma (e.g. `+objectId,+value`). To include properties, list them with a leading plus sign (+)"
										},
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum",
											"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
										},
										{
											"key": "pageSize",
											"value": "-5651813",
											"description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
										}
									]
								}
							},
							"response": [
								{
									"name": "Schema Definition or Scope not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=aliquip laborum laboris cillum&scopes=aliquip laborum laboris cillum&fields=+objectId,+value&nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "aliquip laborum laboris cillum"
												},
												{
													"key": "scopes",
													"value": "aliquip laborum laboris cillum"
												},
												{
													"key": "fields",
													"value": "+objectId,+value"
												},
												{
													"key": "nextPageKey",
													"value": "aliquip laborum laboris cillum"
												},
												{
													"key": "pageSize",
													"value": "-5651813"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=aliquip laborum laboris cillum&scopes=aliquip laborum laboris cillum&fields=+objectId,+value&nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "aliquip laborum laboris cillum"
												},
												{
													"key": "scopes",
													"value": "aliquip laborum laboris cillum"
												},
												{
													"key": "fields",
													"value": "+objectId,+value"
												},
												{
													"key": "nextPageKey",
													"value": "aliquip laborum laboris cillum"
												},
												{
													"key": "pageSize",
													"value": "-5651813"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"schemaVersion\": \"1.0.0\",\n   \"author\": \"john.doe@example.com\",\n   \"modified\": 54282484,\n   \"scope\": \"HOST-D3A3C5A146830A79\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"summary\": \"\",\n   \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"created\": -93604451,\n   \"value\": {\n    \"autoMonitoring\": true\n   }\n  },\n  {\n   \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"schemaVersion\": \"1.0.0\",\n   \"author\": \"john.doe@example.com\",\n   \"modified\": 93308172,\n   \"scope\": \"HOST-D3A3C5A146830A79\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"summary\": \"tempor sit\",\n   \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"created\": 84270757,\n   \"value\": {\n    \"autoMonitoring\": true\n   }\n  }\n ],\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": -7556869,\n \"totalCount\": -19767\n}"
								}
							]
						},
						{
							"name": "Add or validate one or multiple settings objects | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false",
											"description": "Only run validation but do not persist the object even if validation was successful"
										}
									]
								}
							},
							"response": [
								{
									"name": "Conflicting resource",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"anim veniam labore\",\n     \"message\": \"dolore veniam irure sit anim\",\n     \"path\": \"culpa laborum sint esse\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"consequat est in\",\n     \"message\": \"ad ea magna\",\n     \"path\": \"cupidatat veniam\"\n    }\n   ],\n   \"code\": 72535581,\n   \"message\": \"consectetur aliqua\"\n  },\n  \"code\": 11970104\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"deserunt proident quis amet\",\n     \"message\": \"mollit laborum ut tempor amet\",\n     \"path\": \"irure deserunt dolore\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"pariatur Duis occaecat\",\n     \"message\": \"sunt\",\n     \"path\": \"aliqua\"\n    }\n   ],\n   \"code\": -81470593,\n   \"message\": \"labore Lorem\"\n  },\n  \"code\": -3958730\n }\n]"
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 99451986\n },\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 82951771\n }\n]"
								},
								{
									"name": "Schema validation failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"anim veniam labore\",\n     \"message\": \"dolore veniam irure sit anim\",\n     \"path\": \"culpa laborum sint esse\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"consequat est in\",\n     \"message\": \"ad ea magna\",\n     \"path\": \"cupidatat veniam\"\n    }\n   ],\n   \"code\": 72535581,\n   \"message\": \"consectetur aliqua\"\n  },\n  \"code\": 11970104\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"deserunt proident quis amet\",\n     \"message\": \"mollit laborum ut tempor amet\",\n     \"path\": \"irure deserunt dolore\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"pariatur Duis occaecat\",\n     \"message\": \"sunt\",\n     \"path\": \"aliqua\"\n    }\n   ],\n   \"code\": -81470593,\n   \"message\": \"labore Lorem\"\n  },\n  \"code\": -3958730\n }\n]"
								},
								{
									"name": "Multi-Status, if not all requests resulted in the same status",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 99451986\n },\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 82951771\n }\n]"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"anim veniam labore\",\n     \"message\": \"dolore veniam irure sit anim\",\n     \"path\": \"culpa laborum sint esse\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"consequat est in\",\n     \"message\": \"ad ea magna\",\n     \"path\": \"cupidatat veniam\"\n    }\n   ],\n   \"code\": 72535581,\n   \"message\": \"consectetur aliqua\"\n  },\n  \"code\": 11970104\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"deserunt proident quis amet\",\n     \"message\": \"mollit laborum ut tempor amet\",\n     \"path\": \"irure deserunt dolore\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"pariatur Duis occaecat\",\n     \"message\": \"sunt\",\n     \"path\": \"aliqua\"\n    }\n   ],\n   \"code\": -81470593,\n   \"message\": \"labore Lorem\"\n  },\n  \"code\": -3958730\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "schemas",
					"item": [
						{
							"name": "List available settings schema definitions | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"latestSchemaVersion\": \"1.4.2\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"displayName\": \"Anomaly Detection for Infrastructure\"\n  },\n  {\n   \"latestSchemaVersion\": \"1.4.2\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"displayName\": \"Anomaly Detection for Infrastructure\"\n  }\n ],\n \"totalCount\": 1\n}"
								}
							]
						},
						{
							"name": "Get information about an individual settings schema definition | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas/:schemaId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas",
										":schemaId"
									],
									"variable": [
										{
											"key": "schemaId",
											"value": "aliquip laborum laboris cillum",
											"type": "string",
											"description": "(Required) The identifier of the settings schema definition (e.g. `builtin:anomaly.infrastructure`)"
										}
									]
								}
							},
							"response": [
								{
									"name": "No schema definition available for the given schemaId",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"variable": [
												{
													"key": "schemaId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"variable": [
												{
													"key": "schemaId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"enums\": {},\n \"documentation\": \"dolor\",\n \"multiObject\": false,\n \"ordered\": false,\n \"maxObjects\": 10,\n \"allowedScopes\": [\n  \"environment\",\n  \"host\",\n  \"application\"\n ],\n \"dynatrace\": \"1.0\",\n \"version\": \"1.4.2\",\n \"constraints\": [\n  {\n   \"customMessage\": \"reprehenderit mollit minim\",\n   \"customValidatorId\": \"my-min-max\",\n   \"minimumPropertyCount\": 1,\n   \"maximumPropertyCount\": 2,\n   \"properties\": [\n    \"ex tempor reprehenderit do\",\n    \"veniam proident occaecat\"\n   ],\n   \"type\": \"LESS_THAN_OR_EQUAL\"\n  },\n  {\n   \"customMessage\": \"sed culpa reprehenderi\",\n   \"customValidatorId\": \"my-min-max\",\n   \"minimumPropertyCount\": 1,\n   \"maximumPropertyCount\": 2,\n   \"properties\": [\n    \"dolor cupidatat\",\n    \"sit deserunt eiusmod culpa\"\n   ],\n   \"type\": \"PROPERTY_COUNT_RANGE\"\n  }\n ],\n \"schemaId\": \"builtin:anomaly.infrastructure\",\n \"description\": \"Dynatrace automatically detects infrastructure-related performance anomalies such as high CPU saturation, memory outages, and low disk-space conditions\",\n \"metadata\": {},\n \"types\": {},\n \"properties\": {},\n \"displayName\": \"Anomaly Detection for Infrastructure\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "slo",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters and the calculated value of an SLO | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/slo/:id?from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo",
										":id"
									],
									"query": [
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum",
											"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum",
											"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "b218466d-0714-c57d-0431-fd141f94c548",
											"type": "string",
											"description": "(Required) The ID of the required SLO."
										}
									]
								},
								"description": "If **from** and **to** parameters are provided, the SLO is calculated for that timeframe; otherwise the SLO's own timeframe is used."
							},
							"response": [
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id?from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "aliquip laborum laboris cillum"
												},
												{
													"key": "to",
													"value": "aliquip laborum laboris cillum"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
								},
								{
									"name": "Success. The response contains the parameters and calculated values of the requested SLO.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id?from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "aliquip laborum laboris cillum"
												},
												{
													"key": "to",
													"value": "aliquip laborum laboris cillum"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"evaluatedPercentage\": 96.25,\n \"errorBudget\": 1.25,\n \"numeratorValue\": 80,\n \"denominatorValue\": 90,\n \"useRateMetric\": true,\n \"metricRate\": \"builtin:service.successes.server.rate\",\n \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n \"metricDenominator\": \"builtin:service.requestCount.total\",\n \"evaluationType\": \"AGGREGATE\",\n \"timeframe\": \"-1d\",\n \"filter\": \"type(\\\"HOST\\\")\",\n \"description\": \"Check the SLO for our payment service\",\n \"enabled\": true,\n \"status\": \"WARNING\",\n \"error\": \"NONE\",\n \"warning\": 97.5,\n \"name\": \"Payment service availability\",\n \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n \"target\": 95\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id?from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "aliquip laborum laboris cillum"
												},
												{
													"key": "to",
													"value": "aliquip laborum laboris cillum"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
								}
							]
						},
						{
							"name": "Updates an existing SLO | maturity=EARLY_ADOPTER",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b218466d-0714-c57d-0431-fd141f94c548",
											"type": "string",
											"description": "(Required) The ID of the required SLO."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes an SLO | maturity=EARLY_ADOPTER",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/slo/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b218466d-0714-c57d-0431-fd141f94c548",
											"type": "string",
											"description": "(Required) The ID of the required SLO."
										}
									]
								}
							},
							"response": [
								{
									"name": "Conflicting resource",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
								},
								{
									"name": "Success. The SLO has been deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available SLOs along with calculated values | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/slo?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&sloSelector=&sort=name&demo=false&timeFrame=CURRENT&evaluate=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"slo"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aliquip laborum laboris cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-5651813",
									"description": "The amount of SLOs in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 10 is used."
								},
								{
									"key": "from",
									"value": "aliquip laborum laboris cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "aliquip laborum laboris cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sloSelector",
									"value": "",
									"description": "The scope of the query. Only SLOs matching the provided criteria are included in the response. \n\nUse the [entity selector syntax](https://dt-url.net/entityselector)."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "The sorting of SLO entries: \n* `name`: Names in ascending order. \n* `-name`: Names in descending order. \n\nIf not set, the ascending order is used."
								},
								{
									"key": "demo",
									"value": "false",
									"description": "Get your SLOs (`false`) or a set of demo SLOs (`true`)."
								},
								{
									"key": "timeFrame",
									"value": "CURRENT",
									"description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
								},
								{
									"key": "evaluate",
									"value": "false",
									"description": "Get your SLOs without them being evaluated (`false`) or with evaluations (`true`)."
								}
							]
						},
						"description": "By default the values are calculated for the SLO's own timeframe. You can use a custom timeframe: \n\n1. Set the **timeFrame** parameter to `GTF`. \n2. Provide the timeframe in **from** and **to** parameters."
					},
					"response": [
						{
							"name": "Success. The response contains the parameters and calculated values of the requested SLO.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/slo?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&sloSelector=&sort=name&demo=false&timeFrame=CURRENT&evaluate=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "pageSize",
											"value": "-5651813"
										},
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "sloSelector",
											"value": ""
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "demo",
											"value": "false"
										},
										{
											"key": "timeFrame",
											"value": "CURRENT"
										},
										{
											"key": "evaluate",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"SLOs\": [\n  {\n   \"evaluatedPercentage\": 96.25,\n   \"errorBudget\": 1.25,\n   \"numeratorValue\": 80,\n   \"denominatorValue\": 90,\n   \"useRateMetric\": true,\n   \"metricRate\": \"builtin:service.successes.server.rate\",\n   \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n   \"metricDenominator\": \"builtin:service.requestCount.total\",\n   \"evaluationType\": \"AGGREGATE\",\n   \"timeframe\": \"-1d\",\n   \"filter\": \"type(\\\"HOST\\\")\",\n   \"description\": \"Check the SLO for our payment service\",\n   \"enabled\": true,\n   \"status\": \"WARNING\",\n   \"error\": \"NONE\",\n   \"warning\": 97.5,\n   \"name\": \"Payment service availability\",\n   \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n   \"target\": 95\n  },\n  {\n   \"evaluatedPercentage\": 96.25,\n   \"errorBudget\": 1.25,\n   \"numeratorValue\": 80,\n   \"denominatorValue\": 90,\n   \"useRateMetric\": true,\n   \"metricRate\": \"builtin:service.successes.server.rate\",\n   \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n   \"metricDenominator\": \"builtin:service.requestCount.total\",\n   \"evaluationType\": \"AGGREGATE\",\n   \"timeframe\": \"-1d\",\n   \"filter\": \"type(\\\"HOST\\\")\",\n   \"description\": \"Check the SLO for our payment service\",\n   \"enabled\": true,\n   \"status\": \"WARNING\",\n   \"error\": \"NONE\",\n   \"warning\": 97.5,\n   \"name\": \"Payment service availability\",\n   \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n   \"target\": 95\n  }\n ],\n \"nextPageKeys\": {},\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": 90349474,\n \"totalCount\": -45868333\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/slo?nextPageKey=aliquip laborum laboris cillum&pageSize=-5651813&from=aliquip laborum laboris cillum&to=aliquip laborum laboris cillum&sloSelector=&sort=name&demo=false&timeFrame=CURRENT&evaluate=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "pageSize",
											"value": "-5651813"
										},
										{
											"key": "from",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "to",
											"value": "aliquip laborum laboris cillum"
										},
										{
											"key": "sloSelector",
											"value": ""
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "demo",
											"value": "false"
										},
										{
											"key": "timeFrame",
											"value": "CURRENT"
										},
										{
											"key": "evaluate",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						}
					]
				},
				{
					"name": "Creates a new SLO | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/slo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"slo"
							]
						}
					},
					"response": [
						{
							"name": "Internal server error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						},
						{
							"name": "Conflicting resource",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						},
						{
							"name": "Success. The new SLO has been created. Response doesn't have a body. The **location** response header contains the ID of the new SLO.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "location",
									"value": "",
									"description": "The location of the new resource created by this request."
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "synthetic",
			"item": [
				{
					"name": "locations",
					"item": [
						{
							"name": "status",
							"item": [
								{
									"name": "Checks the status of public synthetic locations | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains the public locations status.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"publicLocationsEnabled\": true\n}"
										}
									]
								},
								{
									"name": "Changes the status of public synthetic locations | maturity=EARLY_ADOPTER",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"publicLocationsEnabled\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Success. Locations status has been updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publicLocationsEnabled\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict. Public locations couldn't be disabled because there are monitors assigned to them.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publicLocationsEnabled\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{location Id}",
							"item": [
								{
									"name": "Gets properties of the specified location | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The Dynatrace entity ID of the required location."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains parameters of the synthetic location.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"entityId\": \"ad Duis incididunt anim\",\n \"latitude\": 6450366.250007063,\n \"longitude\": 11970743.780953616,\n \"name\": \"ut fugiat consectetur\",\n \"type\": \"PUBLIC\",\n \"countryCode\": \"sint aliquip dolor aliqua incididunt\",\n \"regionCode\": \"officia nulla ut\",\n \"city\": \"ut est \",\n \"status\": \"ENABLED\"\n}"
										}
									]
								},
								{
									"name": "Updates the specified synthetic location | maturity=EARLY_ADOPTER",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"PRIVATE\",\n    \"name\": \"Linz Location\",\n    \"latitude\": 48.306351,\n    \"longitude\": 14.287399,\n    \"nodes\": [\n        \"93302281\"\n    ],\n    \"status\": \"ENABLED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
												}
											]
										},
										"description": "For public locations you can only change the location status."
									},
									"response": [
										{
											"name": "Success. The location has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"PRIVATE\",\n    \"name\": \"Linz Location\",\n    \"latitude\": 48.306351,\n    \"longitude\": 14.287399,\n    \"nodes\": [\n        \"93302281\"\n    ],\n    \"status\": \"ENABLED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes the specified private synthetic location | maturity=EARLY_ADOPTER",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "aliquip laborum laboris cillum",
													"type": "string",
													"description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The location has been deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Lists all synthetic locations (both public and private) available for your environment | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations?cloudPlatform=ALIBABA&type=PRIVATE",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									],
									"query": [
										{
											"key": "cloudPlatform",
											"value": "ALIBABA",
											"description": "Filters the resulting set of locations to those which are hosted on a specific cloud platform."
										},
										{
											"key": "type",
											"value": "PRIVATE",
											"description": "Filters the resulting set of locations to those of a specific type."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations?cloudPlatform=ALIBABA&type=PRIVATE",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											],
											"query": [
												{
													"key": "cloudPlatform",
													"value": "ALIBABA"
												},
												{
													"key": "type",
													"value": "PRIVATE"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"locations\": [\n  {\n   \"name\": \"Gdansk\",\n   \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n   \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n   \"type\": \"PUBLIC\",\n   \"cloudPlatform\": \"AMAZON_EC2\",\n   \"ips\": [\n    \"134.189.153.97\",\n    \"134.189.153.98\"\n   ],\n   \"stage\": \"GA\",\n   \"status\": \"ENABLED\",\n   \"capabilities\": [\n    \"BROWSER\",\n    \"HTTP\"\n   ]\n  },\n  {\n   \"name\": \"My private location\",\n   \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n   \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n   \"type\": \"PRIVATE\",\n   \"status\": \"ENABLED\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Creates a new private synthetic location | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entityId\": \"dolor ullamco adipisic\",\n    \"latitude\": -42594676.95352663,\n    \"longitude\": 77496932.80037269,\n    \"name\": \"do officia laboris\",\n    \"type\": \"CLUSTER\",\n    \"countryCode\": \"et adipisicing enim ullamco\",\n    \"regionCode\": \"dolor ut\",\n    \"city\": \"pariatur elit culpa amet\",\n    \"status\": \"HIDDEN\",\n    \"nodes\": [\n        \"tempor\",\n        \"do ipsum velit\"\n    ],\n    \"availabilityLocationOutage\": false,\n    \"availabilityNodeOutage\": false,\n    \"locationNodeOutageDelayInMinutes\": 1,\n    \"availabilityNotificationsEnabled\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									]
								}
							},
							"response": [
								{
									"name": "Success. The private location has been created. The response contains the ID of the new location.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entityId\": \"laborum e\",\n    \"latitude\": 40099021.27810156,\n    \"longitude\": -15690375.190215185,\n    \"name\": \"laborum\",\n    \"type\": \"PRIVATE\",\n    \"countryCode\": \"sunt minim\",\n    \"regionCode\": \"dolore quis ut\",\n    \"city\": \"enim\",\n    \"status\": \"DISABLED\",\n    \"nodes\": [\n        \"in Ut pariatur\",\n        \"adipisicing et reprehenderit\"\n    ],\n    \"availabilityLocationOutage\": false,\n    \"availabilityNodeOutage\": true,\n    \"locationNodeOutageDelayInMinutes\": 2,\n    \"availabilityNotificationsEnabled\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"entityId\": \"proident et\",\n \"geoLocationId\": \"in eiusmod\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "nodes",
					"item": [
						{
							"name": "Lists all synthetic nodes available in your environment | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"nodes\": [\n  {\n   \"activeGateVersion\": \"irure veniam dolore sunt\",\n   \"autoUpdateEnabled\": false,\n   \"browserMonitorsEnabled\": true,\n   \"entityId\": \"Duis mollit anim labore\",\n   \"healthCheckStatus\": \"est dolore\",\n   \"hostname\": \"cupidatat qui aut\",\n   \"ips\": [\n    \"non\",\n    \"nisi est dolor ex elit\"\n   ],\n   \"oneAgentRoutingEnabled \": false,\n   \"operatingSystem\": \"commodo irure dolor amet\",\n   \"playerVersion\": \"cillum non consectetur\",\n   \"status\": \"irure oc\",\n   \"version\": \"proident elit \"\n  },\n  {\n   \"activeGateVersion\": \"sunt\",\n   \"autoUpdateEnabled\": true,\n   \"browserMonitorsEnabled\": true,\n   \"entityId\": \"dolor quis\",\n   \"healthCheckStatus\": \"sunt veniam reprehenderit esse cillum\",\n   \"hostname\": \"ex pariatur in nostrud\",\n   \"ips\": [\n    \"ea aliqua\",\n    \"est adipisicing exercitation dolor\"\n   ],\n   \"oneAgentRoutingEnabled \": false,\n   \"operatingSystem\": \"enim labore\",\n   \"playerVersion\": \"ex occaecat cupidatat amet\",\n   \"status\": \"exercitation laboris pariatur fugiat\",\n   \"version\": \"ipsum Ut enim\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Lists properties of the specified synthetic node | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId",
											"value": "aliquip laborum laboris cillum",
											"type": "string",
											"description": "(Required) The ID of the required synthetic node."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"activeGateVersion\": \"adipisicing Ut\",\n \"autoUpdateEnabled\": true,\n \"browserMonitorsEnabled\": true,\n \"browserType\": \"dolor consectetur proident\",\n \"browserVersion\": \"in ea et\",\n \"entityId\": \"quis id laboris\",\n \"healthCheckStatus\": \"ut in\",\n \"hostname\": \"nisi quis in ut dolore\",\n \"ips\": [\n  \"sed aliquip in dolor\",\n  \"nisi\"\n ],\n \"oneAgentRoutingEnabled \": false,\n \"operatingSystem\": \"est irure\",\n \"playerVersion\": \"ullamco et\",\n \"status\": \"incididunt et dolore ullamco\",\n \"version\": \"cupi\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "tenant Token Rotation",
			"item": [
				{
					"name": "Starts tenant token rotation | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tenantTokenRotation/start",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenantTokenRotation",
								"start"
							]
						},
						"description": "To learn how to rotate tokens, see the [Token rotation](https://dt-url.net/1543sf6) help page."
					},
					"response": [
						{
							"name": "Success. The new tenant token is created and will replace the old one. The **active** field of the response contains the new tenant token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"start"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"old\": {\n  \"value\": \"ullamco et\"\n },\n \"active\": {\n  \"value\": \"cupidatat ullamco sunt\"\n }\n}"
						},
						{
							"name": "Failed. Another rotation process is already in progress.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"start"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						}
					]
				},
				{
					"name": "Cancels tenant token rotation | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tenantTokenRotation/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenantTokenRotation",
								"cancel"
							]
						},
						"description": "To learn how to rotate tokens, see the [Token rotation](https://dt-url.net/1543sf6) help page."
					},
					"response": [
						{
							"name": "Success. Rotation process has been cancelled. The current tenant token remains valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"cancel"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"old\": {\n  \"value\": \"ullamco et\"\n },\n \"active\": {\n  \"value\": \"cupidatat ullamco sunt\"\n }\n}"
						},
						{
							"name": "Failed. There is no ongoing rotation process.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"cancel"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						}
					]
				},
				{
					"name": "Finishes tenant token rotation | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tenantTokenRotation/finish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenantTokenRotation",
								"finish"
							]
						},
						"description": "To learn how to rotate tokens, see the [Token rotation](https://dt-url.net/1543sf6) help page."
					},
					"response": [
						{
							"name": "No ongoing rotation process.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/finish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"finish"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"anim ad\",\n    \"message\": \"ea quis consectetur\",\n    \"path\": \"commodo sit consectetur velit\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"sunt voluptate\",\n    \"message\": \"mollit commodo irure deserunt\",\n    \"path\": \"in irure e\"\n   }\n  ],\n  \"code\": 63717672,\n  \"message\": \"irure consequat\"\n }\n}"
						},
						{
							"name": "Success. The rotation process is completed. The **active** field of the response contains the new tenant token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/finish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"finish"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"old\": {\n  \"value\": \"ullamco et\"\n },\n \"active\": {\n  \"value\": \"cupidatat ullamco sunt\"\n }\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "Api-Token {{DT_TOKEN}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://{{DT_HOST}}/api/v2"
		}
	]
}