{
	"info": {
		"_postman_id": "a8721388-62f8-462e-8801-374536afbdb6",
		"name": "Dynatrace Environment API v2",
		"description": "\nDocumentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress. \n\nIf you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "active Gates",
			"item": [
				{
					"name": "{ag Id}",
					"item": [
						{
							"name": "auto Update",
							"item": [
								{
									"name": "Gets the configuration of auto-update for the specified ActiveGate",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate"
											],
											"variable": [
												{
													"key": "agId",
													"value": "aute sit cillum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"setting\": \"INHERITED\",\n \"effectiveSetting\": \"ENABLED\"\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								},
								{
									"name": "Updates the configuration of auto-update for the specified ActiveGate",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"setting\": \"INHERITED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate"
											],
											"variable": [
												{
													"key": "agId",
													"value": "aute sit cillum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The auto-update configuration have been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"setting\": \"INHERITED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "aute sit cillum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted auto-update configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "update Jobs",
							"item": [
								{
									"name": "{job Id}",
									"item": [
										{
											"name": "Gets the parameters of the specified update job",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "aute sit cillum",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"targetVersion\": \"1.190.0.20200301-130000\",\n \"updateMethod\": \"AUTOMATIC\",\n \"updateType\": \"ACTIVE_GATE\",\n \"agType\": \"ENVIRONMENT\",\n \"startVersion\": \"1.185.0.20200201-120000\",\n \"environments\": [\n  \"adipisicing ut\",\n  \"eu elit\"\n ],\n \"cancelable\": false,\n \"jobId\": \"-3524498778810258605\",\n \"jobState\": \"SUCCEED\",\n \"timestamp\": 1582031917814,\n \"duration\": 3608000,\n \"error\": \"esse eu\"\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified update job",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "aute sit cillum",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The update-job have been deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists update jobs for the specified ActiveGate",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=aute sit cillum&to=aute sit cillum&startVersionCompareType=EQUAL&startVersion=aute sit cillum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=aute sit cillum&lastUpdates=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"query": [
												{
													"key": "from",
													"value": "aute sit cillum",
													"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days."
												},
												{
													"key": "to",
													"value": "aute sit cillum",
													"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
												},
												{
													"key": "startVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
												},
												{
													"key": "startVersion",
													"value": "aute sit cillum",
													"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "updateType",
													"value": "ACTIVE_GATE",
													"description": "Filters the resulting set of update-jobs by the update type."
												},
												{
													"key": "targetVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
												},
												{
													"key": "targetVersion",
													"value": "aute sit cillum",
													"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "lastUpdates",
													"value": "false",
													"description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
												}
											],
											"variable": [
												{
													"key": "agId",
													"value": "aute sit cillum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										},
										"description": "The job can update the ActiveGate to the specified version or the latest available one."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=aute sit cillum&to=aute sit cillum&startVersionCompareType=EQUAL&startVersion=aute sit cillum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=aute sit cillum&lastUpdates=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "aute sit cillum"
														},
														{
															"key": "to",
															"value": "aute sit cillum"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "aute sit cillum"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "aute sit cillum"
														},
														{
															"key": "lastUpdates",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"agId\": \"0x3efdd092\",\n \"updateJobs\": [\n  {\n   \"targetVersion\": \"1.190.0.20200301-130000\",\n   \"updateMethod\": \"AUTOMATIC\",\n   \"updateType\": \"ACTIVE_GATE\",\n   \"agType\": \"ENVIRONMENT\",\n   \"startVersion\": \"1.185.0.20200201-120000\",\n   \"environments\": [\n    \"elit eu culpa\",\n    \"anim velit exercitation\"\n   ],\n   \"cancelable\": false,\n   \"jobId\": \"-3524498778810258605\",\n   \"jobState\": \"SUCCEED\",\n   \"timestamp\": 1582031917814,\n   \"duration\": 3608000,\n   \"error\": \"labore ut cillum veniam\"\n  },\n  {\n   \"targetVersion\": \"1.190.0.20200301-130000\",\n   \"updateMethod\": \"AUTOMATIC\",\n   \"updateType\": \"ACTIVE_GATE\",\n   \"agType\": \"ENVIRONMENT\",\n   \"startVersion\": \"1.185.0.20200201-120000\",\n   \"environments\": [\n    \"in officia\",\n    \"nostrud enim esse\"\n   ],\n   \"cancelable\": false,\n   \"jobId\": \"-3524498778810258605\",\n   \"jobState\": \"SUCCEED\",\n   \"timestamp\": 1582031917814,\n   \"duration\": 3608000,\n   \"error\": \"cillum ullamco Lorem\"\n  }\n ]\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=aute sit cillum&to=aute sit cillum&startVersionCompareType=EQUAL&startVersion=aute sit cillum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=aute sit cillum&lastUpdates=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "aute sit cillum"
														},
														{
															"key": "to",
															"value": "aute sit cillum"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "aute sit cillum"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "aute sit cillum"
														},
														{
															"key": "lastUpdates",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								},
								{
									"name": "Creates a new update job for the specified ActiveGate",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"variable": [
												{
													"key": "agId",
													"value": "aute sit cillum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The update-job have been created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"targetVersion\": \"1.190.0.20200301-130000\",\n \"updateMethod\": \"AUTOMATIC\",\n \"updateType\": \"ACTIVE_GATE\",\n \"agType\": \"ENVIRONMENT\",\n \"startVersion\": \"1.185.0.20200201-120000\",\n \"environments\": [\n  \"adipisicing ut\",\n  \"eu elit\"\n ],\n \"cancelable\": false,\n \"jobId\": \"-3524498778810258605\",\n \"jobState\": \"SUCCEED\",\n \"timestamp\": 1582031917814,\n \"duration\": 3608000,\n \"error\": \"esse eu\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "aute sit cillum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted update-job is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the details of the specified ActiveGate",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/activeGates/:agId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										":agId"
									],
									"variable": [
										{
											"key": "agId",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the required ActiveGate."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"0x3efdd091\",\n \"networkAddresses\": [\n  \"aute Duis\",\n  \"eiusmod nostrud sit consequat ea\"\n ],\n \"loadBalancerAddresses\": [\n  \"dolor dolor ipsum ut officia\",\n  \"exercitation aute\"\n ],\n \"osType\": \"WINDOWS\",\n \"autoUpdateStatus\": \"OUTDATED\",\n \"offlineSince\": 1582031917814,\n \"version\": \"1.185.0.20200201-120000\",\n \"type\": \"ENVIRONMENT\",\n \"hostname\": \"exampleHostname\",\n \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n \"environments\": [\n  \"cupidatat nulla cillum\",\n  \"eius\"\n ],\n \"autoUpdateSettings\": {\n  \"setting\": \"INHERITED\",\n  \"effectiveSetting\": \"ENABLED\"\n },\n \"networkZone\": \"exampleNetworkZone\",\n \"group\": \"default\",\n \"modules\": [\n  {\n   \"misconfigured\": true,\n   \"type\": \"KUBERNETES\",\n   \"attributes\": {},\n   \"version\": \"aute\",\n   \"enabled\": true\n  },\n  {\n   \"misconfigured\": true,\n   \"type\": \"KUBERNETES\",\n   \"attributes\": {},\n   \"version\": \"eiusmod non cupidatat tempor ut\",\n   \"enabled\": true\n  }\n ],\n \"containerized\": true\n}"
								},
								{
									"name": "Not found. See response body for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "auto Update",
					"item": [
						{
							"name": "Gets the global auto-update configuration of environment ActiveGates.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"globalSetting\": \"ENABLED\",\n \"metadata\": {\n  \"configurationVersions\": [\n   4,\n   2\n  ],\n  \"currentConfigurationVersions\": [\n   \"1.0.4\",\n   \"1.23\"\n  ],\n  \"clusterVersion\": \"1.192.1\"\n }\n}"
								}
							]
						},
						{
							"name": "Puts the global auto-update configuration of environment ActiveGates.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate"
									]
								}
							},
							"response": [
								{
									"name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available ActiveGates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/activeGates?hostname=aute sit cillum&osType=WINDOWS&networkAddress=aute sit cillum&loadBalancerAddress=aute sit cillum&type=ENVIRONMENT&networkZone=aute sit cillum&updateStatus=OUTDATED&versionCompareType=EQUAL&version=aute sit cillum&autoUpdate=DISABLED&group=aute sit cillum&online=false&enabledModule=KUBERNETES&enabledModule=EXTENSIONS_V2&disabledModule=KUBERNETES&disabledModule=EXTENSIONS_V2&containerized=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates"
							],
							"query": [
								{
									"key": "hostname",
									"value": "aute sit cillum",
									"description": "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "osType",
									"value": "WINDOWS",
									"description": "Filters the resulting set of ActiveGates by the OS type of the host it's running on."
								},
								{
									"key": "networkAddress",
									"value": "aute sit cillum",
									"description": "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "loadBalancerAddress",
									"value": "aute sit cillum",
									"description": "Filters the resulting set of ActiveGates by the Load Balancer address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "type",
									"value": "ENVIRONMENT",
									"description": "Filters the resulting set of ActiveGates by the ActiveGate type."
								},
								{
									"key": "networkZone",
									"value": "aute sit cillum",
									"description": "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "updateStatus",
									"value": "OUTDATED",
									"description": "Filters the resulting set of ActiveGates by the auto-update status."
								},
								{
									"key": "versionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here."
								},
								{
									"key": "version",
									"value": "aute sit cillum",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here."
								},
								{
									"key": "autoUpdate",
									"value": "DISABLED",
									"description": "Filters the resulting set of ActiveGates by the actual state of auto-update."
								},
								{
									"key": "group",
									"value": "aute sit cillum",
									"description": "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "online",
									"value": "false",
									"description": "Filters the resulting set of ActiveGates by the communication status."
								},
								{
									"key": "enabledModule",
									"value": "KUBERNETES",
									"description": "Filters the resulting set of ActiveGates by the enabled modules."
								},
								{
									"key": "enabledModule",
									"value": "EXTENSIONS_V2",
									"description": "Filters the resulting set of ActiveGates by the enabled modules."
								},
								{
									"key": "disabledModule",
									"value": "KUBERNETES",
									"description": "Filters the resulting set of ActiveGates by the disabled modules."
								},
								{
									"key": "disabledModule",
									"value": "EXTENSIONS_V2",
									"description": "Filters the resulting set of ActiveGates by the disabled modules."
								},
								{
									"key": "containerized",
									"value": "false",
									"description": "Filters the resulting set of ActiveGates to those which are running in container (`true`) or not (`false`)."
								}
							]
						},
						"description": "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=aute sit cillum&osType=WINDOWS&networkAddress=aute sit cillum&loadBalancerAddress=aute sit cillum&type=ENVIRONMENT&networkZone=aute sit cillum&updateStatus=OUTDATED&versionCompareType=EQUAL&version=aute sit cillum&autoUpdate=DISABLED&group=aute sit cillum&online=false&enabledModule=VMWARE&enabledModule=ONE_AGENT_ROUTING&disabledModule=VMWARE&disabledModule=ONE_AGENT_ROUTING&containerized=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "aute sit cillum"
										},
										{
											"key": "osType",
											"value": "WINDOWS"
										},
										{
											"key": "networkAddress",
											"value": "aute sit cillum"
										},
										{
											"key": "loadBalancerAddress",
											"value": "aute sit cillum"
										},
										{
											"key": "type",
											"value": "ENVIRONMENT"
										},
										{
											"key": "networkZone",
											"value": "aute sit cillum"
										},
										{
											"key": "updateStatus",
											"value": "OUTDATED"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "aute sit cillum"
										},
										{
											"key": "autoUpdate",
											"value": "DISABLED"
										},
										{
											"key": "group",
											"value": "aute sit cillum"
										},
										{
											"key": "online",
											"value": "false"
										},
										{
											"key": "enabledModule",
											"value": "VMWARE"
										},
										{
											"key": "enabledModule",
											"value": "ONE_AGENT_ROUTING"
										},
										{
											"key": "disabledModule",
											"value": "VMWARE"
										},
										{
											"key": "disabledModule",
											"value": "ONE_AGENT_ROUTING"
										},
										{
											"key": "containerized",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"activeGates\": [\n  {\n   \"id\": \"0x3efdd091\",\n   \"networkAddresses\": [\n    \"culpa mollit\",\n    \"voluptate\"\n   ],\n   \"loadBalancerAddresses\": [\n    \"sint aute\",\n    \"Lorem ipsum\"\n   ],\n   \"osType\": \"WINDOWS\",\n   \"autoUpdateStatus\": \"OUTDATED\",\n   \"offlineSince\": 1582031917814,\n   \"version\": \"1.185.0.20200201-120000\",\n   \"type\": \"ENVIRONMENT\",\n   \"hostname\": \"exampleHostname\",\n   \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n   \"environments\": [\n    \"in cillum elit et proident\",\n    \"sint enim fugiat\"\n   ],\n   \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n   },\n   \"networkZone\": \"exampleNetworkZone\",\n   \"group\": \"default\",\n   \"modules\": [\n    {\n     \"misconfigured\": false,\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {},\n     \"version\": \"oc\",\n     \"enabled\": true\n    },\n    {\n     \"misconfigured\": true,\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {},\n     \"version\": \"dolore ut\",\n     \"enabled\": true\n    }\n   ],\n   \"containerized\": true\n  },\n  {\n   \"id\": \"0x3efdd091\",\n   \"networkAddresses\": [\n    \"et u\",\n    \"incididunt cillum\"\n   ],\n   \"loadBalancerAddresses\": [\n    \"sint Duis\",\n    \"incididunt Ut dolore\"\n   ],\n   \"osType\": \"WINDOWS\",\n   \"autoUpdateStatus\": \"OUTDATED\",\n   \"offlineSince\": 1582031917814,\n   \"version\": \"1.185.0.20200201-120000\",\n   \"type\": \"ENVIRONMENT\",\n   \"hostname\": \"exampleHostname\",\n   \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n   \"environments\": [\n    \"velit Ut ex dolore\",\n    \"qui dolore laboris\"\n   ],\n   \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n   },\n   \"networkZone\": \"exampleNetworkZone\",\n   \"group\": \"default\",\n   \"modules\": [\n    {\n     \"misconfigured\": true,\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {},\n     \"version\": \"pariatur magna ut\",\n     \"enabled\": true\n    },\n    {\n     \"misconfigured\": false,\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {},\n     \"version\": \"aute ipsum occaecat commodo\",\n     \"enabled\": true\n    }\n   ],\n   \"containerized\": true\n  }\n ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=aute sit cillum&osType=WINDOWS&networkAddress=aute sit cillum&loadBalancerAddress=aute sit cillum&type=ENVIRONMENT&networkZone=aute sit cillum&updateStatus=OUTDATED&versionCompareType=EQUAL&version=aute sit cillum&autoUpdate=DISABLED&group=aute sit cillum&online=true&enabledModule=VMWARE&enabledModule=ONE_AGENT_ROUTING&disabledModule=VMWARE&disabledModule=ONE_AGENT_ROUTING&containerized=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "aute sit cillum"
										},
										{
											"key": "osType",
											"value": "WINDOWS"
										},
										{
											"key": "networkAddress",
											"value": "aute sit cillum"
										},
										{
											"key": "loadBalancerAddress",
											"value": "aute sit cillum"
										},
										{
											"key": "type",
											"value": "ENVIRONMENT"
										},
										{
											"key": "networkZone",
											"value": "aute sit cillum"
										},
										{
											"key": "updateStatus",
											"value": "OUTDATED"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "aute sit cillum"
										},
										{
											"key": "autoUpdate",
											"value": "DISABLED"
										},
										{
											"key": "group",
											"value": "aute sit cillum"
										},
										{
											"key": "online",
											"value": "true"
										},
										{
											"key": "enabledModule",
											"value": "VMWARE"
										},
										{
											"key": "enabledModule",
											"value": "ONE_AGENT_ROUTING"
										},
										{
											"key": "disabledModule",
											"value": "VMWARE"
										},
										{
											"key": "disabledModule",
											"value": "ONE_AGENT_ROUTING"
										},
										{
											"key": "containerized",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				},
				{
					"name": "List ActiveGates with update jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/activeGates/updateJobs?from=aute sit cillum&to=aute sit cillum&startVersionCompareType=EQUAL&startVersion=aute sit cillum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=aute sit cillum&lastUpdates=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates",
								"updateJobs"
							],
							"query": [
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "startVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
								},
								{
									"key": "startVersion",
									"value": "aute sit cillum",
									"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "updateType",
									"value": "ACTIVE_GATE",
									"description": "Filters the resulting set of update-jobs by the update type."
								},
								{
									"key": "targetVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
								},
								{
									"key": "targetVersion",
									"value": "aute sit cillum",
									"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "lastUpdates",
									"value": "false",
									"description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
								}
							]
						},
						"description": "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=aute sit cillum&to=aute sit cillum&startVersionCompareType=EQUAL&startVersion=aute sit cillum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=aute sit cillum&lastUpdates=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "aute sit cillum"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "aute sit cillum"
										},
										{
											"key": "lastUpdates",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"allUpdateJobs\": [\n  {\n   \"agId\": \"0x3efdd092\",\n   \"updateJobs\": [\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"agType\": \"ENVIRONMENT\",\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"environments\": [\n      \"nulla consequat exercitation velit sit\",\n      \"consequat u\"\n     ],\n     \"cancelable\": false,\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"timestamp\": 1582031917814,\n     \"duration\": 3608000,\n     \"error\": \"cu\"\n    },\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"agType\": \"ENVIRONMENT\",\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"environments\": [\n      \"dolor \",\n      \"ut tempor\"\n     ],\n     \"cancelable\": false,\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"timestamp\": 1582031917814,\n     \"duration\": 3608000,\n     \"error\": \"dolore et\"\n    }\n   ]\n  },\n  {\n   \"agId\": \"0x3efdd092\",\n   \"updateJobs\": [\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"agType\": \"ENVIRONMENT\",\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"environments\": [\n      \"Duis exercitation officia\",\n      \"et veniam culpa laborum\"\n     ],\n     \"cancelable\": false,\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"timestamp\": 1582031917814,\n     \"duration\": 3608000,\n     \"error\": \"eu Lorem et anim Excep\"\n    },\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"agType\": \"ENVIRONMENT\",\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"environments\": [\n      \"magna adipisicing\",\n      \"esse est Ut\"\n     ],\n     \"cancelable\": false,\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"timestamp\": 1582031917814,\n     \"duration\": 3608000,\n     \"error\": \"in mollit incididunt et\"\n    }\n   ]\n  }\n ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=aute sit cillum&to=aute sit cillum&startVersionCompareType=EQUAL&startVersion=aute sit cillum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=aute sit cillum&lastUpdates=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "aute sit cillum"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "aute sit cillum"
										},
										{
											"key": "lastUpdates",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "entity Types",
			"item": [
				{
					"name": "Gets a list of properties for all entity types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/entityTypes?nextPageKey=aute sit cillum&pageSize=7748372",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entityTypes"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aute sit cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "7748372",
									"description": "The amount of entity types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes?nextPageKey=aute sit cillum&pageSize=7748372",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": 60505737,\n \"pageSize\": 6457668,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"types\": [\n  {\n   \"entityLimitExceeded\": false,\n   \"managementZones\": \"minim irure ut\",\n   \"dimensionKey\": \"anim quis ut labore\",\n   \"fromRelationships\": [\n    {\n     \"toTypes\": [\n      \"dolore\",\n      \"anim sed\"\n     ],\n     \"id\": \"deserunt sint dolor do sunt\"\n    },\n    {\n     \"toTypes\": [\n      \"Duis r\",\n      \"laborum in magna qui\"\n     ],\n     \"id\": \"eiusmod ad eu ex\"\n    }\n   ],\n   \"toRelationships\": [\n    {\n     \"fromTypes\": [\n      \"culpa deserunt ut ipsum\",\n      \"nostrud ea officia do\"\n     ],\n     \"id\": \"cillum elit\"\n    },\n    {\n     \"fromTypes\": [\n      \"consequat magna Duis cillum\",\n      \"aute laboris et consectetur in\"\n     ],\n     \"id\": \"magna ex do tempor\"\n    }\n   ],\n   \"properties\": [\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\",\n     \"displayName\": \"cpu cores\"\n    },\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\",\n     \"displayName\": \"cpu cores\"\n    }\n   ],\n   \"type\": \"rep\",\n   \"displayName\": \"cupidatat fugiat labore elit\",\n   \"tags\": \"in irure a\"\n  },\n  {\n   \"entityLimitExceeded\": false,\n   \"managementZones\": \"proident ex\",\n   \"dimensionKey\": \"aliqua Lorem\",\n   \"fromRelationships\": [\n    {\n     \"toTypes\": [\n      \"magna\",\n      \"Ut velit qui\"\n     ],\n     \"id\": \"aliquip elit ea p\"\n    },\n    {\n     \"toTypes\": [\n      \"ut in dolor\",\n      \"ut dolore officia\"\n     ],\n     \"id\": \"Lorem in\"\n    }\n   ],\n   \"toRelationships\": [\n    {\n     \"fromTypes\": [\n      \"aliquip d\",\n      \"sed magna Ut dolor ut\"\n     ],\n     \"id\": \"deserunt in\"\n    },\n    {\n     \"fromTypes\": [\n      \"exercitation et commodo pariatur\",\n      \"ut ad\"\n     ],\n     \"id\": \"sit aliqua Excepteur amet\"\n    }\n   ],\n   \"properties\": [\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\",\n     \"displayName\": \"cpu cores\"\n    },\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\",\n     \"displayName\": \"cpu cores\"\n    }\n   ],\n   \"type\": \"culpa cillum\",\n   \"displayName\": \"Ut voluptate Lorem\",\n   \"tags\": \"ipsum ullamco Duis ex dolor\"\n  }\n ]\n}"
						},
						{
							"name": "Failed. There are no more entity types to export.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes?nextPageKey=aute sit cillum&pageSize=7748372",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Gets a list of properties for the specified entity type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/entityTypes/:type",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entityTypes",
								":type"
							],
							"variable": [
								{
									"key": "type",
									"value": "aute sit cillum",
									"description": "(Required) The required entity type."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes",
										":type"
									],
									"variable": [
										{
											"key": "type"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"entityLimitExceeded\": true,\n \"managementZones\": \"esse occaecat officia\",\n \"dimensionKey\": \"commod\",\n \"fromRelationships\": [\n  {\n   \"toTypes\": [\n    \"ut\",\n    \"cupidatat aliquip et dolore\"\n   ],\n   \"id\": \"nulla proident tempor\"\n  },\n  {\n   \"toTypes\": [\n    \"ullamco\",\n    \"adi\"\n   ],\n   \"id\": \"consequat ad incididunt\"\n  }\n ],\n \"toRelationships\": [\n  {\n   \"fromTypes\": [\n    \"ex mollit incididunt sit ea\",\n    \"in dolore laborum nostrud\"\n   ],\n   \"id\": \"Ut adipisi\"\n  },\n  {\n   \"fromTypes\": [\n    \"cillum elit Lorem\",\n    \"magna ullamco do voluptate\"\n   ],\n   \"id\": \"veniam\"\n  }\n ],\n \"properties\": [\n  {\n   \"id\": \"cpuCores\",\n   \"type\": \"Number\",\n   \"displayName\": \"cpu cores\"\n  },\n  {\n   \"id\": \"cpuCores\",\n   \"type\": \"Number\",\n   \"displayName\": \"cpu cores\"\n  }\n ],\n \"type\": \"mollit ut sed eiusmod\",\n \"displayName\": \"sed dolore sit\",\n \"tags\": \"laborum reprehenderit\"\n}"
						},
						{
							"name": "Failed. The requested monitored entity type is not exportable or doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes",
										":type"
									],
									"variable": [
										{
											"key": "type"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "entities",
			"item": [
				{
					"name": "Gets the information about monitored entities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/entities?nextPageKey=aute sit cillum&pageSize=7748372&entitySelector=aute sit cillum&from=aute sit cillum&to=aute sit cillum&fields=aute sit cillum&sort=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entities"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aute sit cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "7748372",
									"description": "The amount of entities. \n\nIf not set, 50 is used."
								},
								{
									"key": "entitySelector",
									"value": "aute sit cillum",
									"description": "Defines the scope of the query. Only entities matching the specified criteria are included into response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\nThe field is **required** when you're querying the first page of results."
								},
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "fields",
									"value": "aute sit cillum",
									"description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
								},
								{
									"key": "sort",
									"value": "aute sit cillum",
									"description": "Defines the ordering of the entities returned. \n\nThis field is **optional**, each field has a sign prefix (+/-), which corresponds to sorting order ( + for ascending and - for descending). If no sign prefix is set, then default ascending sorting order will be applied. \n\nCurrently ordering is only available for the display name (for example `sort=name or sort =+name for ascending, sort=-name for descending`)"
								}
							]
						},
						"description": "Lists entities observed within the specified timeframe along with their properties. \n\nWhen you query entities of the `SERVICE_METHOD` type, only the following requests are returned: \n\n* [Key requests](https://dt-url.net/a903u9s) \n* Top X requests that are used for [baselining](https://dt-url.net/0j23uqb) \n* Requests that have caused a [problem](https://dt-url.net/pf43uqg) \n\nYou can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entities?nextPageKey=aute sit cillum&pageSize=7748372&entitySelector=aute sit cillum&from=aute sit cillum&to=aute sit cillum&fields=aute sit cillum&sort=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										},
										{
											"key": "entitySelector",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "fields",
											"value": "aute sit cillum"
										},
										{
											"key": "sort",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -17987899,\n \"pageSize\": -28556568,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"entities\": [\n  {\n   \"lastSeenTms\": 22344315,\n   \"firstSeenTms\": 58865228,\n   \"managementZones\": [\n    {\n     \"name\": \"veniam in ex velit\",\n     \"id\": \"laboris nisi ut sit culpa\"\n    },\n    {\n     \"name\": \"ipsum non\",\n     \"id\": \"aliquip\"\n    }\n   ],\n   \"entityId\": \"laborum aliqua nisi labore voluptate\",\n   \"fromRelationships\": {},\n   \"toRelationships\": {},\n   \"icon\": {\n    \"primaryIconType\": \"amet aliquip in eiusmod\",\n    \"secondaryIconType\": \"laborum ut nisi aliqua\",\n    \"customIconPath\": \"Ut sint occaecat\"\n   },\n   \"properties\": {},\n   \"displayName\": \"amet sunt consequat\",\n   \"tags\": [\n    {\n     \"stringRepresentation\": \"cillum in\",\n     \"value\": \"cillum\",\n     \"key\": \"do enim nisi cupidat\",\n     \"context\": \"enim occaecat sed aliquip\"\n    },\n    {\n     \"stringRepresentation\": \"cupidatat magna\",\n     \"value\": \"dolor Duis esse incididunt\",\n     \"key\": \"aliqua nostrud reprehenderit sunt\",\n     \"context\": \"veniam ullamco ex adipisicing proident\"\n    }\n   ]\n  },\n  {\n   \"lastSeenTms\": -58725028,\n   \"firstSeenTms\": -75495334,\n   \"managementZones\": [\n    {\n     \"name\": \"veniam voluptate occaecat\",\n     \"id\": \"fugiat sint voluptate dolor\"\n    },\n    {\n     \"name\": \"adipisicing cillum culpa\",\n     \"id\": \"enim eiusmod\"\n    }\n   ],\n   \"entityId\": \"veniam sunt in exercitation\",\n   \"fromRelationships\": {},\n   \"toRelationships\": {},\n   \"icon\": {\n    \"primaryIconType\": \"aliquip exercitation officia commodo dolor\",\n    \"secondaryIconType\": \"mollit in irure\",\n    \"customIconPath\": \"laboris mollit dolor\"\n   },\n   \"properties\": {},\n   \"displayName\": \"sit\",\n   \"tags\": [\n    {\n     \"stringRepresentation\": \"laboris non\",\n     \"value\": \"do cillum irure dolor\",\n     \"key\": \"irure eu consequat\",\n     \"context\": \"sed elit qui laborum\"\n    },\n    {\n     \"stringRepresentation\": \"sunt aute o\",\n     \"value\": \"of\",\n     \"key\": \"culpa do\",\n     \"context\": \"laboris cillum sunt occaecat\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Creates or updates a custom device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/entities/custom",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entities",
								"custom"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/entities/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"entityId\": \"officia do\",\n \"groupId\": \"non cupi\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/entities/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/entities/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Gets the properties of the specified monitored entity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/entities/:entityId?from=aute sit cillum&to=aute sit cillum&fields=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entities",
								":entityId"
							],
							"query": [
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "fields",
									"value": "aute sit cillum",
									"description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
								}
							],
							"variable": [
								{
									"key": "entityId",
									"value": "aute sit cillum",
									"description": "(Required) The ID of the required entity."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entities/:entityId?from=aute sit cillum&to=aute sit cillum&fields=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										":entityId"
									],
									"query": [
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "fields",
											"value": "aute sit cillum"
										}
									],
									"variable": [
										{
											"key": "entityId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"lastSeenTms\": 25901930,\n \"firstSeenTms\": -59845923,\n \"managementZones\": [\n  {\n   \"name\": \"consequat nulla\",\n   \"id\": \"aliquip s\"\n  },\n  {\n   \"name\": \"mollit veniam aute exercitation\",\n   \"id\": \"adipisicing ex\"\n  }\n ],\n \"entityId\": \"labore eu dolore adipisicing\",\n \"fromRelationships\": {},\n \"toRelationships\": {},\n \"icon\": {\n  \"primaryIconType\": \"Excepteur\",\n  \"secondaryIconType\": \"reprehenderit laboris tempor dolore\",\n  \"customIconPath\": \"adipisicing aliquip consectetur\"\n },\n \"properties\": {},\n \"displayName\": \"aute magna cupidatat est\",\n \"tags\": [\n  {\n   \"stringRepresentation\": \"sit adipisicing ipsum\",\n   \"value\": \"irure officia aliqu\",\n   \"key\": \"reprehenderit\",\n   \"context\": \"enim\"\n  },\n  {\n   \"stringRepresentation\": \"occaecat cillum voluptate\",\n   \"value\": \"Excepteur ut id nostrud\",\n   \"key\": \"nisi deserunt enim ut\",\n   \"context\": \"u\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "event Types",
			"item": [
				{
					"name": "Lists all event types | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/eventTypes?nextPageKey=aute sit cillum&pageSize=7748372",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"eventTypes"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aute sit cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "7748372",
									"description": "The amount of event types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventTypes?nextPageKey=aute sit cillum&pageSize=7748372",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventTypes"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": 63662718,\n \"eventTypeInfos\": [\n  {\n   \"severityLevel\": \"PERFORMANCE\",\n   \"type\": \"OSI_HIGH_CPU\",\n   \"displayName\": \"High CPU\",\n   \"description\": \"ut in voluptate commodo\"\n  },\n  {\n   \"severityLevel\": \"PERFORMANCE\",\n   \"type\": \"OSI_HIGH_CPU\",\n   \"displayName\": \"High CPU\",\n   \"description\": \"irure sint et eiusmod in\"\n  }\n ],\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": 65897477\n}"
						}
					]
				},
				{
					"name": "Gets the properties of an event type | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/eventTypes/:eventType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"eventTypes",
								":eventType"
							],
							"variable": [
								{
									"key": "eventType",
									"value": "aute sit cillum",
									"description": "(Required) The event type you're inquiring."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventTypes/:eventType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventTypes",
										":eventType"
									],
									"variable": [
										{
											"key": "eventType"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"severityLevel\": \"PERFORMANCE\",\n \"type\": \"OSI_HIGH_CPU\",\n \"displayName\": \"High CPU\",\n \"description\": \"dolor dolor proident\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "events",
			"item": [
				{
					"name": "Lists events within the specified timeframe | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/events?nextPageKey=aute sit cillum&pageSize=7748372&from=aute sit cillum&to=aute sit cillum&eventSelector=aute sit cillum&entitySelector=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aute sit cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "7748372",
									"description": "The amount of events in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
								},
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "eventSelector",
									"value": "aute sit cillum",
									"description": "Defines the scope of the query. Only events matching the specified criteria are included in the response.\n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies.\n* Event ID: `eventId(\"id-1\", \"id-2\")`.\n* ID of related entity: `entityId(\"id-1\", \"id-2\")`.\n* Event status: `status(\"OPEN\")` or `status(\"CLOSED\")`. You can specify only one status.\n* Management zone ID: `managementZoneId(123, 321)`.\n* Event type: `eventType(\"event-type\")`. You can specify only one event type. You can fetch the list of possible event types with the [GET event types](https://dt-url.net/qc03u6w) call. \n* Correlation ID: `correlationId(\"id-1\", \"id-2\")`.\n* Happened during maintenance (true, false): `underMaintenance(true)`. \n* Notifications are suppressed (true, false): `suppressAlert(true)`. \n* Problem creation is suppressed (true, false): `suppressProblem(true)`. \n* Frequent event (true, false): `frequentEvent(true)`. \n* Event property: `property.<key>(\"value-1\", \"value-2\")`.\n\nTo set several criteria, separate them with commas (`,`). Only results matching **all** criteria are included in the response. \n\nDuplicated criteria is interpreted as single criterion with multiple values. For example, `eventId(\"eventId1\"),eventId(\"eventId2\")` is equal to `eventId(\"eventId1\",\"eventId2\")`. For correlation ID and event properties duplicates, the **AND** logic applies."
								},
								{
									"key": "entitySelector",
									"value": "aute sit cillum",
									"description": "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\nThe number of entities that can be selected is limited to 10000."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. The response contains the list of events.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events?nextPageKey=aute sit cillum&pageSize=7748372&from=aute sit cillum&to=aute sit cillum&eventSelector=aute sit cillum&entitySelector=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "eventSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "entitySelector",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -82116681,\n \"warnings\": [\n  \"in labore ut\",\n  \"eiusmod dolor dolore Duis incididunt\"\n ],\n \"events\": [\n  {\n   \"suppressAlert\": true,\n   \"underMaintenance\": false,\n   \"suppressProblem\": true,\n   \"frequentEvent\": true,\n   \"managementZones\": [\n    {\n     \"name\": \"nulla cillum\",\n     \"id\": \"labore\"\n    },\n    {\n     \"name\": \"ad\",\n     \"id\": \"mollit ex pariatur id\"\n    }\n   ],\n   \"entityId\": {\n    \"entityId\": {\n     \"id\": \"labore ut\",\n     \"type\": \"dolore sed id pariatur\"\n    },\n    \"name\": \"dolore et veniam consectetur quis\"\n   },\n   \"eventId\": \"4293884258445543163_1564039524182\",\n   \"entityTags\": [\n    {\n     \"stringRepresentation\": \"labore anim\",\n     \"value\": \"proident sunt\",\n     \"key\": \"sunt voluptate\",\n     \"context\": \"do nisi dolor dolore Excepteur\"\n    },\n    {\n     \"stringRepresentation\": \"veniam ut consequat\",\n     \"value\": \"anim sed eiusmod elit\",\n     \"key\": \"magna ullamco\",\n     \"context\": \"pariatur\"\n    }\n   ],\n   \"eventType\": \"LOW_DISK_SPACE\",\n   \"properties\": [\n    {\n     \"value\": \"proident sint\",\n     \"key\": \"irure aliqua proident consequat\"\n    },\n    {\n     \"value\": \"nisi ullamco dolor exercitation\",\n     \"key\": \"non magna eu Lorem cillum\"\n    }\n   ],\n   \"status\": \"OPEN\",\n   \"startTime\": 1564039524182,\n   \"endTime\": 1564039524182,\n   \"title\": \"High CPU load on host X\",\n   \"correlationId\": \"933613657e1c8fcf\"\n  },\n  {\n   \"suppressAlert\": true,\n   \"underMaintenance\": false,\n   \"suppressProblem\": true,\n   \"frequentEvent\": false,\n   \"managementZones\": [\n    {\n     \"name\": \"Ut et\",\n     \"id\": \"cillum Excepteur\"\n    },\n    {\n     \"name\": \"irure aliqu\",\n     \"id\": \"ea laboris sunt\"\n    }\n   ],\n   \"entityId\": {\n    \"entityId\": {\n     \"id\": \"in cupidatat sint mollit s\",\n     \"type\": \"Ut veniam ipsum qui\"\n    },\n    \"name\": \"eu\"\n   },\n   \"eventId\": \"4293884258445543163_1564039524182\",\n   \"entityTags\": [\n    {\n     \"stringRepresentation\": \"officia aute anim\",\n     \"value\": \"ea officia ullamco veniam Duis\",\n     \"key\": \"pariatur veniam velit reprehenderit Duis\",\n     \"context\": \"proident sed voluptate consequat\"\n    },\n    {\n     \"stringRepresentation\": \"nisi anim ex\",\n     \"value\": \"veniam Ut quis\",\n     \"key\": \"est Lorem nisi sunt\",\n     \"context\": \"Excepteur\"\n    }\n   ],\n   \"eventType\": \"LOW_DISK_SPACE\",\n   \"properties\": [\n    {\n     \"value\": \"deserunt ipsum minim\",\n     \"key\": \"sit\"\n    },\n    {\n     \"value\": \"sunt amet qui\",\n     \"key\": \"magna in enim\"\n    }\n   ],\n   \"status\": \"OPEN\",\n   \"startTime\": 1564039524182,\n   \"endTime\": 1564039524182,\n   \"title\": \"High CPU load on host X\",\n   \"correlationId\": \"933613657e1c8fcf\"\n  }\n ],\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": -73625903\n}"
						}
					]
				},
				{
					"name": "Gets the properties of an event | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/events/:eventId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"events",
								":eventId"
							],
							"variable": [
								{
									"key": "eventId",
									"value": "aute sit cillum",
									"description": "(Required) The ID of the required event."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. The response contains the configuration of the event.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events/:eventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "eventId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"suppressAlert\": false,\n \"underMaintenance\": false,\n \"suppressProblem\": true,\n \"frequentEvent\": true,\n \"managementZones\": [\n  {\n   \"name\": \"nulla officia\",\n   \"id\": \"id minim commodo\"\n  },\n  {\n   \"name\": \"qui non veniam\",\n   \"id\": \"Excepteur\"\n  }\n ],\n \"entityId\": {\n  \"entityId\": {\n   \"id\": \"laboris do\",\n   \"type\": \"amet dolor magna id\"\n  },\n  \"name\": \"nostrud\"\n },\n \"eventId\": \"4293884258445543163_1564039524182\",\n \"entityTags\": [\n  {\n   \"stringRepresentation\": \"reprehenderit esse fugiat\",\n   \"value\": \"et adipisicing\",\n   \"key\": \"officia\",\n   \"context\": \"ea amet esse sit sed\"\n  },\n  {\n   \"stringRepresentation\": \"dolore sit veni\",\n   \"value\": \"Lorem quis\",\n   \"key\": \"ullamco dolor aliqua aliquip\",\n   \"context\": \"minim magna Duis\"\n  }\n ],\n \"eventType\": \"LOW_DISK_SPACE\",\n \"properties\": [\n  {\n   \"value\": \"consectetur laborum enim\",\n   \"key\": \"in dolor et magna\"\n  },\n  {\n   \"value\": \"culpa exercitation veniam minim ex\",\n   \"key\": \"et culpa officia ullamco exercitation\"\n  }\n ],\n \"status\": \"OPEN\",\n \"startTime\": 1564039524182,\n \"endTime\": 1564039524182,\n \"title\": \"High CPU load on host X\",\n \"correlationId\": \"933613657e1c8fcf\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "metrics",
			"item": [
				{
					"name": "{metric Key}",
					"item": [
						{
							"name": "Gets the descriptor of the specified metric",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricKey"
									],
									"variable": [
										{
											"key": "metricKey",
											"value": "aute sit cillum",
											"description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"metricId\": \"nostrud ea voluptate\",\n \"defaultAggregation\": {\n  \"type\": \"sum\",\n  \"parameter\": -50739830.91646523\n },\n \"latency\": 52817516,\n \"metricSelector\": \"amet esse deserunt nostrud\",\n \"lastWritten\": -77462141,\n \"impactRelevant\": false,\n \"maximumValue\": 61873803.5609324,\n \"minimumValue\": 96742611.64696425,\n \"dduBillable\": true,\n \"dimensionDefinitions\": [\n  {\n   \"displayName\": \"enim adipisicing\",\n   \"index\": 75668262,\n   \"key\": \"consequat sint in\",\n   \"name\": \"dolore aliqua aliquip\",\n   \"type\": \"ENTITY\"\n  },\n  {\n   \"displayName\": \"do ut magna Duis velit\",\n   \"index\": 91293063,\n   \"key\": \"nulla\",\n   \"name\": \"dolore est\",\n   \"type\": \"NUMBER\"\n  }\n ],\n \"rootCauseRelevant\": false,\n \"entityType\": [\n  \"labore exercitation quis esse\",\n  \"ullamco occaecat Ut\"\n ],\n \"aggregationTypes\": [\n  \"count\",\n  \"avg\"\n ],\n \"scalar\": true,\n \"metricValueType\": {\n  \"type\": \"error\"\n },\n \"created\": -97782565,\n \"displayName\": \"id nisi Lorem\",\n \"description\": \"incididunt mollit ut\",\n \"warnings\": [\n  \"ut do\",\n  \"enim\"\n ],\n \"transformations\": [\n  \"default\",\n  \"rate\"\n ],\n \"unit\": \"MegaBytePerHour\",\n \"tags\": [\n  \"esse in ad eiusmod velit\",\n  \"voluptate irure ea consectetur\"\n ]\n}"
								},
								{
									"name": "Not found. The requested resource is not found or the query is incorrect.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey"
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the specified metric",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricKey"
									],
									"variable": [
										{
											"key": "metricKey",
											"value": "aute sit cillum",
											"description": "(Required) The key of the required metric. \n\n"
										}
									]
								},
								"description": "Deletion cannot be undone! You can't delete a metric if it has data points ingested within the last two hours."
							},
							"response": [
								{
									"name": "Success. The deletion of the metric has been triggered.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The metric has been written within the last two hours.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The metric cannot be found or the key cannot be parsed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The deletion of metric dimensions failed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all available metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metrics?nextPageKey=aute sit cillum&pageSize=7748372&metricSelector=aute sit cillum&text=aute sit cillum&fields=aute sit cillum&writtenSince=aute sit cillum&metadataSelector=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aute sit cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "7748372",
									"description": "The amount of primary entities in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\n If a value higher than 500 is used, only 500 results per page are returned."
								},
								{
									"key": "metricSelector",
									"value": "aute sit cillum",
									"description": "Selects metrics for the query by their keys.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can select a full set of related metrics by using a trailing asterisk (`*`) wildcard. For example, `builtin:host.*` selects all host-based metrics and `builtin:*` selects all Dynatrace-provided metrics. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations.\n\n Only `aggregation`, `merge`, `parents`, and `splitBy` transformations are supported by this endpoint.\n\n To find metrics based on a search term, rather than metricId, use the **text** query parameter instead of this one."
								},
								{
									"key": "text",
									"value": "aute sit cillum",
									"description": "Metric registry search term. Only show metrics that contain the term in their key, display name, or description. Use the `metricSelector` parameter instead of this one to select a complete metric hierarchy instead of doing a text-based search."
								},
								{
									"key": "fields",
									"value": "aute sit cillum",
									"description": "Defines the list of metric properties included in the response. \n\n`metricId` is **always** included in the result. The following additional properties are available: \n\n* `displayName`: The name of the metric in the user interface. Enabled by default. \n* `description`: A short description of the metric. Enabled by default. \n* `unit`: The unit of the metric. Enabled by default. \n* `tags`: The tags of the metric. \n+ `dduBillable`:  An indicator whether the usage of metric consumes [Davis data units](https://dt-url.net/ddu). \n* `created`:  The timestamp (UTC milliseconds) when the metrics has been created. \n* `lastWritten`:  The timestamp (UTC milliseconds) when metric data points have been written for the last time. \n* `aggregationTypes`: The list of allowed aggregations for the metric. Note that it may be different after a [transformation](https://dt-url.net/metricSelector) is applied. \n* `defaultAggregation`: The default aggregation of the metric. It is used when no aggregation is specified or the `:auto` transformation is set. \n* `dimensionDefinitions`: The fine metric division (for example, process group and process ID for some process-related metric). \n* `transformations`: A list of [transformations](https://dt-url.net/metricSelector) that can be applied to the metric.\n* `entityType`: A list of entity types supported by the metric.\n* `minimumValue`: The minimum allowed value of the metric.\n* `maximumValue`: The maximum allowed value of the metric.\n* `rootCauseRelevant`: Whether (true or false) the metric is related to a root cause of a problem. A root-cause relevant metric represents a strong indicator for a faulty component.\n* `impactRelevant`: Whether (true or false) the metric is relevant to a problem's impact. An impact-relevant metric is highly dependent on other metrics and changes because an underlying root-cause metric has changed.\n* `metricValueType`: The type of the metric's value. You have these options:\n\t * `score`: A score metric is a metric where high values indicate a good situation, while low values indicate trouble. An example of such a metric is a success rate.\n\t * `error`: An error metric is a metric where high values indicate trouble, while low values indicate a good situation. An example of such a metric is an error count.\n* `latency`: The latency of the metric, in minutes. The latency is the expected reporting delay (for example, caused by constraints of cloud vendors or other third-party data sources) between the observation of a metric data point and its availability in Dynatrace. The allowed value range is from `1` to `60` minutes.\n* `metricSelector`: The underlying metric selector used by a func: metric.\n* `scalar`: Indicates whether the metric expression resolves to a scalar (`true`) or to a series (`false`). \nA scalar result always contains one data point. The amount of data points in a series result depends on the resolution you're using. \n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`.\n\nTo specify several properties, join them with a comma (for example `fields=+aggregationTypes,-description`).\n\nIf you specify just one property, the response contains the metric key and the specified property. To return metric keys only, specify `metricId` here."
								},
								{
									"key": "writtenSince",
									"value": "aute sit cillum",
									"description": "Filters the resulted set of metrics to those that have data points within the specified timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
								},
								{
									"key": "metadataSelector",
									"value": "aute sit cillum",
									"description": "The metadata scope of the query. Only metrics with specified properties are included to the response. \n\nYou can set one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used. If several values are specified, the **OR** logic applies. \n\n* `unit(\"unit-1\",\"unit-2\")` \n* `tags(\"tag-1\",\"tag-2\")` \n\nTo set several criteria, separate them with a comma (`,`). For example, `tags(\"feature\",\"cloud\"),unit(\"Percent\")`. Only results matching **all** criteria are included in response. \n\nFor example, to list metrics that have the tags **feature** AND **cloud** with a unit of **Percent** OR **MegaByte**, use this **metadataSelector**: `tags(\"feature\"),unit(\"Percent\",\"MegaByte\"),tags(\"cloud\")`."
								}
							]
						},
						"description": "You can narrow down the output by selecting metrics in the **metricSelector** field. \n\nYou can additionally limit the output by using pagination: \n\n1. Specify the number of results per page in the **pageSize** query parameter. \n\n2. Then use the cursor from the **nextPageKey** field of the response in the **nextPageKey** query parameter to obtain subsequent pages. All other query parameters must be omitted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=aute sit cillum&pageSize=7748372&metricSelector=aute sit cillum&text=aute sit cillum&fields=aute sit cillum&writtenSince=aute sit cillum&metadataSelector=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										},
										{
											"key": "metricSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "text",
											"value": "aute sit cillum"
										},
										{
											"key": "fields",
											"value": "aute sit cillum"
										},
										{
											"key": "writtenSince",
											"value": "aute sit cillum"
										},
										{
											"key": "metadataSelector",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"nextPageKey\": \"amet\",\n \"totalCount\": 93988951,\n \"metrics\": [\n  {\n   \"metricId\": \"ea enim deserunt\",\n   \"defaultAggregation\": {\n    \"type\": \"auto\",\n    \"parameter\": 31688550.529195726\n   },\n   \"latency\": 41248969,\n   \"metricSelector\": \"eu dolore ex amet\",\n   \"lastWritten\": -87434964,\n   \"impactRelevant\": false,\n   \"maximumValue\": -69842809.64671403,\n   \"minimumValue\": 97548293.36822021,\n   \"dduBillable\": false,\n   \"dimensionDefinitions\": [\n    {\n     \"displayName\": \"dolor qui\",\n     \"index\": -58889558,\n     \"key\": \"ea commodo amet ut\",\n     \"name\": \"aliquip quis incididunt\",\n     \"type\": \"STRING\"\n    },\n    {\n     \"displayName\": \"culpa\",\n     \"index\": -22671883,\n     \"key\": \"id in incididunt\",\n     \"name\": \"Excepteur ullamc\",\n     \"type\": \"STRING\"\n    }\n   ],\n   \"rootCauseRelevant\": false,\n   \"entityType\": [\n    \"id aute in\",\n    \"tempor deserunt aliquip dolor sint\"\n   ],\n   \"aggregationTypes\": [\n    \"sum\",\n    \"auto\"\n   ],\n   \"scalar\": true,\n   \"metricValueType\": {\n    \"type\": \"score\"\n   },\n   \"created\": -49738160,\n   \"displayName\": \"elit consectetur nostrud commodo adipisicing\",\n   \"description\": \"sit enim quis cillum\",\n   \"warnings\": [\n    \"mollit aliqua\",\n    \"ea deserunt eiusmod ut fugiat\"\n   ],\n   \"transformations\": [\n    \"splitBy\",\n    \"fold\"\n   ],\n   \"unit\": \"NanoSecond\",\n   \"tags\": [\n    \"aute proident sunt\",\n    \"qui dolore\"\n   ]\n  },\n  {\n   \"metricId\": \"aliquip irure anim cupidatat\",\n   \"defaultAggregation\": {\n    \"type\": \"percentile\",\n    \"parameter\": 27735012.683303937\n   },\n   \"latency\": 8619089,\n   \"metricSelector\": \"eu id ex\",\n   \"lastWritten\": -10248277,\n   \"impactRelevant\": true,\n   \"maximumValue\": -2432452.6942798346,\n   \"minimumValue\": 47586930.7815378,\n   \"dduBillable\": true,\n   \"dimensionDefinitions\": [\n    {\n     \"displayName\": \"in id\",\n     \"index\": 69685944,\n     \"key\": \"dolore Duis qui\",\n     \"name\": \"Lorem magna dolore\",\n     \"type\": \"OTHER\"\n    },\n    {\n     \"displayName\": \"cillum dolore sit velit\",\n     \"index\": -39514818,\n     \"key\": \"eu\",\n     \"name\": \"occaecat\",\n     \"type\": \"ENTITY\"\n    }\n   ],\n   \"rootCauseRelevant\": false,\n   \"entityType\": [\n    \"dolor dolo\",\n    \"ullamco sunt\"\n   ],\n   \"aggregationTypes\": [\n    \"max\",\n    \"auto\"\n   ],\n   \"scalar\": true,\n   \"metricValueType\": {\n    \"type\": \"score\"\n   },\n   \"created\": -71383720,\n   \"displayName\": \"aliquip magna\",\n   \"description\": \"Excepteur minim adipisicing id voluptate\",\n   \"warnings\": [\n    \"occaecat proident sunt\",\n    \"dolore nisi mollit\"\n   ],\n   \"transformations\": [\n    \"default\",\n    \"limit\"\n   ],\n   \"unit\": \"BytePerHour\",\n   \"tags\": [\n    \"ullamco in pariatur exercitation\",\n    \"sint\"\n   ]\n  }\n ],\n \"warnings\": [\n  \"Lorem voluptate officia\",\n  \"cillum sit\"\n ]\n}"
						},
						{
							"name": "Syntax or validation error. **metricSelector** or **fields** have syntactic or semantic errors.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=aute sit cillum&pageSize=7748372&metricSelector=aute sit cillum&text=aute sit cillum&fields=aute sit cillum&writtenSince=aute sit cillum&metadataSelector=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										},
										{
											"key": "metricSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "text",
											"value": "aute sit cillum"
										},
										{
											"key": "fields",
											"value": "aute sit cillum"
										},
										{
											"key": "writtenSince",
											"value": "aute sit cillum"
										},
										{
											"key": "metadataSelector",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found. The requested resource is not found or the query is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=aute sit cillum&pageSize=7748372&metricSelector=aute sit cillum&text=aute sit cillum&fields=aute sit cillum&writtenSince=aute sit cillum&metadataSelector=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										},
										{
											"key": "metricSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "text",
											"value": "aute sit cillum"
										},
										{
											"key": "fields",
											"value": "aute sit cillum"
										},
										{
											"key": "writtenSince",
											"value": "aute sit cillum"
										},
										{
											"key": "metadataSelector",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=aute sit cillum&pageSize=7748372&metricSelector=aute sit cillum&text=aute sit cillum&fields=aute sit cillum&writtenSince=aute sit cillum&metadataSelector=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										},
										{
											"key": "metricSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "text",
											"value": "aute sit cillum"
										},
										{
											"key": "fields",
											"value": "aute sit cillum"
										},
										{
											"key": "writtenSince",
											"value": "aute sit cillum"
										},
										{
											"key": "metadataSelector",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Gets data points of the specified metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metrics/query?metricSelector=aute sit cillum&resolution=aute sit cillum&from=aute sit cillum&to=aute sit cillum&entitySelector=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								"query"
							],
							"query": [
								{
									"key": "metricSelector",
									"value": "aute sit cillum",
									"description": "Selects metrics for the query by their keys. You can select up to 10 metrics for one query.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations.\n\n If the metric key contains whitespaces, they must be escaped with a tilde (`~`). For example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents of Type 'APACHE'** you must specify this selector: \n\n`ext:selfmonitoring.jmx.Agents~ of~ Type~ 'APACHE'`"
								},
								{
									"key": "resolution",
									"value": "aute sit cillum",
									"description": "The desired resolution of data points. \n\nYou can use one of the following options: \n* One aggregated data point of each series. Set `Inf` to use this option. \n* The desired amount of data points. This is the default option. This is a reference number of points, which is not necessarily equal to the number of the returned data points. \n* The desired timespan between data points. This is a reference timespan, which is not necessarily equal to the returned timespan. To use this option, specify the unit of the timespan. \n\nValid units for the timespan are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the default is **120 data points**.\n\nFor example: \n\n* Get data points which are 10 minutes apart: `resolution=10m` \n* Get data points which are 3 weeks apart: `resolution=3w`"
								},
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "entitySelector",
									"value": "aute sit cillum",
									"description": "Specifies the entity scope of the query. Only data points delivered by matched entities are included in response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\nUse the [`GET /metrics/{metricId}`](https://dt-url.net/6z23ifk) call to fetch the list of possible entity types for your metric. \n\nTo set a universal scope matching all entities, omit this parameter."
								}
							]
						},
						"description": "The following limits apply: \n* The amount of aggregated data points in the response is limited to 1,000 \n* The amount of series in the response is limited to 1,000 \n   * The amount of data points per series is limited to 10,080 (minutes of one week) \n   * The overall amount of data points is limited to 100,000 \n"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=aute sit cillum&resolution=aute sit cillum&from=aute sit cillum&to=aute sit cillum&entitySelector=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "resolution",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "entitySelector",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": 41030932,\n \"nextPageKey\": \"sunt amet magna\",\n \"result\": [\n  {\n   \"metricId\": \"quis ut minim irure exercitation\",\n   \"data\": [\n    {\n     \"dimensionMap\": {},\n     \"timestamps\": [\n      -11573881,\n      -31584760\n     ],\n     \"dimensions\": [\n      \"nulla ea veniam Lorem\",\n      \"sunt\"\n     ],\n     \"values\": [\n      77283760.77261189,\n      1118520.1799304187\n     ]\n    },\n    {\n     \"dimensionMap\": {},\n     \"timestamps\": [\n      34154933,\n      59042268\n     ],\n     \"dimensions\": [\n      \"magna do\",\n      \"veniam est\"\n     ],\n     \"values\": [\n      -8912126.805003822,\n      4425666.403417721\n     ]\n    }\n   ],\n   \"warnings\": [\n    \"mollit sed eiusmod in\",\n    \"in magna consectetur nisi tempor\"\n   ]\n  },\n  {\n   \"metricId\": \"ex eu\",\n   \"data\": [\n    {\n     \"dimensionMap\": {},\n     \"timestamps\": [\n      49062236,\n      66144091\n     ],\n     \"dimensions\": [\n      \"deserunt incididunt amet Ut\",\n      \"est veniam aliquip\"\n     ],\n     \"values\": [\n      36083797.965706855,\n      44176996.843230665\n     ]\n    },\n    {\n     \"dimensionMap\": {},\n     \"timestamps\": [\n      8107773,\n      29587280\n     ],\n     \"dimensions\": [\n      \"pariatur est\",\n      \"sit consectetur Excepteur\"\n     ],\n     \"values\": [\n      -37047926.698893495,\n      1525503.5756684989\n     ]\n    }\n   ],\n   \"warnings\": [\n    \"pariatur enim\",\n    \"adipisicing eiusmod nisi sit\"\n   ]\n  }\n ],\n \"warnings\": [\n  \"ea ipsum sunt\",\n  \"consequat dolore ut\"\n ]\n}"
						},
						{
							"name": "Syntax or validation error. From and to parameters, scope or resolution are incorrect individually or in their combined meaning.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=aute sit cillum&resolution=aute sit cillum&from=aute sit cillum&to=aute sit cillum&entitySelector=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "resolution",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "entitySelector",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The request is valid but the response is too big to process. Split your query into several queries with limited scopes.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=aute sit cillum&resolution=aute sit cillum&from=aute sit cillum&to=aute sit cillum&entitySelector=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "resolution",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "entitySelector",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found. The requested resource is not found or the query is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=aute sit cillum&resolution=aute sit cillum&from=aute sit cillum&to=aute sit cillum&entitySelector=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "resolution",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "entitySelector",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=aute sit cillum&resolution=aute sit cillum&from=aute sit cillum&to=aute sit cillum&entitySelector=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "resolution",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "entitySelector",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Pushes metric data points to Dynatrace",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"server.cpu.temperature,cpu.id=0 42\""
						},
						"url": {
							"raw": "{{baseUrl}}/metrics/ingest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								"ingest"
							]
						}
					},
					"response": [
						{
							"name": "The provided metric data points are accepted and will be processed in the background.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"server.cpu.temperature,cpu.id=0 42\""
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"ingest"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Some data points are invalid. Valid data points are accepted and will be processed in the background.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"server.cpu.temperature,cpu.id=0 42\""
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"ingest"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "network Zones",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters of the specified network zone | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the required network zone."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"alternativeZones\": [\n  \"dolore\",\n  \"do dolore\"\n ],\n \"numOfOneAgentsUsing\": -20859320,\n \"numOfConfiguredOneAgents\": -58132777,\n \"numOfOneAgentsFromOtherZones\": -50964983,\n \"numOfConfiguredActiveGates\": 7832555,\n \"id\": \"non nisi\",\n \"description\": \"tempor laborum occaecat aliquip\"\n}"
								}
							]
						},
						{
							"name": "Updates an existing network zone or creates a new one | maturity=EARLY_ADOPTER",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alternativeZones\": [\n        \"ut Duis\",\n        \"dolore proident\"\n    ],\n    \"description\": \"magna dolor dolore\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
										}
									]
								},
								"description": "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
							},
							"response": [
								{
									"name": "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"ut Duis\",\n        \"dolore proident\"\n    ],\n    \"description\": \"magna dolor dolore\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"consectetur laborum do anim\",\n \"name\": \"cillum eiusmod minim\",\n \"description\": \"elit ex\"\n}"
								},
								{
									"name": "Success. The network zone has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"ut Duis\",\n        \"dolore proident\"\n    ],\n    \"description\": \"magna dolor dolore\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"ut Duis\",\n        \"dolore proident\"\n    ],\n    \"description\": \"magna dolor dolore\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified network zone | maturity=EARLY_ADOPTER",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the network zone to be deleted."
										}
									]
								},
								"description": "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives."
							},
							"response": [
								{
									"name": "Deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. See error message in the response body for details.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all existing network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/networkZones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZones"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"networkZones\": [\n  {\n   \"alternativeZones\": [\n    \"nisi do \",\n    \"velit et irure\"\n   ],\n   \"numOfOneAgentsUsing\": 18018137,\n   \"numOfConfiguredOneAgents\": 66626681,\n   \"numOfOneAgentsFromOtherZones\": 55597129,\n   \"numOfConfiguredActiveGates\": -76495685,\n   \"id\": \"non dolor\",\n   \"description\": \"veniam sint do\"\n  },\n  {\n   \"alternativeZones\": [\n    \"veniam deserunt\",\n    \"labore et tempor sed\"\n   ],\n   \"numOfOneAgentsUsing\": 23110595,\n   \"numOfConfiguredOneAgents\": -20054467,\n   \"numOfOneAgentsFromOtherZones\": -92276718,\n   \"numOfConfiguredActiveGates\": -70487457,\n   \"id\": \"incididunt quis elit in\",\n   \"description\": \"labore\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "network Zone Settings",
			"item": [
				{
					"name": "Gets the global configuration of network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/networkZoneSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZoneSettings"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZoneSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZoneSettings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"networkZonesEnabled\": true\n}"
						}
					]
				},
				{
					"name": "Updates the global configuration of network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"networkZonesEnabled\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networkZoneSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZoneSettings"
							]
						}
					},
					"response": [
						{
							"name": "Success. The global network zones configuration has been updated. Response doesn't have a body.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"networkZonesEnabled\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networkZoneSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZoneSettings"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "Gets a list of custom tags applied to the specified entities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags?entitySelector=aute sit cillum&from=aute sit cillum&to=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "entitySelector",
									"value": "aute sit cillum",
									"description": "(Required) Specifies the entities where you want to read tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								},
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								}
							]
						},
						"description": "Automatically applied tags and imported tags are not included."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?entitySelector=aute sit cillum&from=aute sit cillum&to=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "entitySelector",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"tags\": {\n  \"empty\": true\n },\n \"totalCount\": 31896336\n}"
						}
					]
				},
				{
					"name": "Adds custom tags to the specified entities",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\n        {\n            \"key\": \"mainApp\"\n        },\n        {\n            \"key\": \"bookings\",\n            \"value\": \"42\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tags?entitySelector=aute sit cillum&from=aute sit cillum&to=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "entitySelector",
									"value": "aute sit cillum",
									"description": "(Required) Specifies the entities where you want to update tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								},
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								}
							]
						},
						"description": "All existing tags remain unaffected."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\n        {\n            \"key\": \"mainApp\"\n        },\n        {\n            \"key\": \"bookings\",\n            \"value\": \"42\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tags?entitySelector=aute sit cillum&from=aute sit cillum&to=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "entitySelector",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"matchedEntitiesCount\": -7302958,\n \"appliedTags\": {\n  \"empty\": false\n }\n}"
						}
					]
				},
				{
					"name": "Deletes the specified tag from the specified entities",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags?key=nulla dolor dolor&value=aute sit cillum&deleteAllWithKey=true&entitySelector=aute sit cillum&from=aute sit cillum&to=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "key",
									"value": "nulla dolor dolor",
									"description": "(Required) The tag to be deleted."
								},
								{
									"key": "value",
									"value": "aute sit cillum",
									"description": "The tag to be deleted."
								},
								{
									"key": "deleteAllWithKey",
									"value": "true",
									"description": "The tag to be deleted."
								},
								{
									"key": "entitySelector",
									"value": "aute sit cillum",
									"description": "(Required) Specifies the entities where you want to delete tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								},
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?key=nulla dolor dolor&value=aute sit cillum&deleteAllWithKey=true&entitySelector=aute sit cillum&from=aute sit cillum&to=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "key",
											"value": "nulla dolor dolor"
										},
										{
											"key": "value",
											"value": "aute sit cillum"
										},
										{
											"key": "deleteAllWithKey",
											"value": "true"
										},
										{
											"key": "entitySelector",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"matchedEntitiesCount\": 2\n}"
						}
					]
				}
			]
		},
		{
			"name": "api Tokens",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets API token metadata by token ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apiTokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the token."
										}
									]
								},
								"description": "The token secret is **not** exposed."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n \"lastUsedIpAddress\": \"34.197.2.44\",\n \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n \"personalAccessToken\": true,\n \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n \"name\": \"myToken\",\n \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n \"owner\": \"john.smith\",\n \"enabled\": true,\n \"scopes\": [\n  \"metrics.read\",\n  \"metrics.read\"\n ]\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates an API token",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"myToken\",\n    \"enabled\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"myToken\",\n    \"enabled\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"myToken\",\n    \"enabled\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								}
							]
						},
						{
							"name": "Deletes an API token",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apiTokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. You can't delete the token you're using for authentication of the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all available API tokens",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/apiTokens?nextPageKey=aute sit cillum&pageSize=-61830501&apiTokenSelector=aute sit cillum&fields=aute sit cillum&from=aute sit cillum&to=aute sit cillum&sort=-creationDate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apiTokens"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aute sit cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-61830501",
									"description": "The amount of API tokens in a single response payload. \n\nThe maximal allowed page size is 10000 and the minimal allowed page size is 100. \n\nIf not set, 200 is used."
								},
								{
									"key": "apiTokenSelector",
									"value": "aute sit cillum",
									"description": "Filters the resulting sets of tokens. Only tokens matching the specified criteria are included into response. \n\nYou can set one or more of the following criteria: \n\n* Owner: `owner(\"value\")`. The user that owns the token. Case-sensitive.\n* Personal access token: `personalAccessToken(false)`. Set to `true` to include only personal access tokens or to `false` to include only API tokens.\n* Token scope: `scope(\"scope1\",\"scope2\")`. If several values are specified, the **OR** logic applies. \n\nTo set multiple criteria, separate them with commas (`,`). Only results matching **all** criteria are included into response."
								},
								{
									"key": "fields",
									"value": "aute sit cillum",
									"description": "Specifies the fields to be included in the response.\n\nThe following fields are included by default: \n\n* `id` \n* `name` \n* `enabled` \n* `owner` \n* `creationDate` \n\nTo remove fields from the response, specify them with the minus (`-`) operator as a comma-separated list (for example, `-creationDate,-owner`). \n\nYou can include additional fields: \n\n* `personalAccessToken` \n* `expirationDate` \n* `lastUsedDate` \n* `lastUsedIpAddress` \n* `scopes` \n\nTo add fields to the response, specify them with the plus (`+`) operator as a comma-separated list (for example, `+expirationDate,+scopes`). You can combine adding and removing of fields (for example, `+scopes,-creationDate`). \n\nAlternatively, you can define the desired set of fields in the response. Specify the required fields as a comma-separated list, without operators (for example, `creationDate,expirationDate,owner`). The ID is always included in the response. \n\nThe **fields** string must be URL-encoded."
								},
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "Filters tokens based on the last usage time. \nThe start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "Filters tokens based on the last usage time. \nThe end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sort",
									"value": "-creationDate",
									"description": "The sort order of the token list. \n\nYou can sort by the following properties with a sign prefix for the sort order: \n\n * `name`: token name (`+` a...z or `-` z...a) \n * `lastUsedDate` last used (`+` never used tokens first `-` most recently used tokens first) \n * `creationDate` (`+` oldest tokens first `-` newest tokens first) \n * `expirationDate` (`+` tokens that expire soon first `-` unlimited tokens first) \n\nIf no prefix is set, + is used. \n\nIf not set, tokens are sorted by creation date with newest first."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apiTokens?nextPageKey=aute sit cillum&pageSize=-61830501&apiTokenSelector=aute sit cillum&fields=aute sit cillum&from=aute sit cillum&to=aute sit cillum&sort=-creationDate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "-61830501"
										},
										{
											"key": "apiTokenSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "fields",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "sort",
											"value": "-creationDate"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": 88600144,\n \"apiTokens\": [\n  {\n   \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n   \"lastUsedIpAddress\": \"34.197.2.44\",\n   \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n   \"personalAccessToken\": true,\n   \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n   \"name\": \"myToken\",\n   \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n   \"owner\": \"john.smith\",\n   \"enabled\": true,\n   \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n   ]\n  },\n  {\n   \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n   \"lastUsedIpAddress\": \"34.197.2.44\",\n   \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n   \"personalAccessToken\": true,\n   \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n   \"name\": \"myToken\",\n   \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n   \"owner\": \"john.smith\",\n   \"enabled\": true,\n   \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n   ]\n  }\n ],\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": -48855025\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apiTokens?nextPageKey=aute sit cillum&pageSize=-61830501&apiTokenSelector=aute sit cillum&fields=aute sit cillum&from=aute sit cillum&to=aute sit cillum&sort=-creationDate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "-61830501"
										},
										{
											"key": "apiTokenSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "fields",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "sort",
											"value": "-creationDate"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				},
				{
					"name": "Creates a new API token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"tokenName\",\n    \"scopes\": [\n        \"metrics.read\"\n    ],\n    \"personalAccessToken\": false,\n    \"expirationDate\": \"now+14d\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/apiTokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apiTokens"
							]
						},
						"description": "The newly created token will be owned by the same user who owns the token used for authentication of the call."
					},
					"response": [
						{
							"name": "Success. The token has been created. The body of the response contains the token secret.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"tokenName\",\n    \"scopes\": [\n        \"metrics.read\"\n    ],\n    \"personalAccessToken\": false,\n    \"expirationDate\": \"now+14d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\",\n \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"tokenName\",\n    \"scopes\": [\n        \"metrics.read\"\n    ],\n    \"personalAccessToken\": false,\n    \"expirationDate\": \"now+14d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				},
				{
					"name": "Gets API token metadata by token secret",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/apiTokens/lookup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apiTokens",
								"lookup"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens/lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										"lookup"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n \"lastUsedIpAddress\": \"34.197.2.44\",\n \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n \"personalAccessToken\": true,\n \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n \"name\": \"myToken\",\n \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n \"owner\": \"john.smith\",\n \"enabled\": true,\n \"scopes\": [\n  \"metrics.read\",\n  \"metrics.read\"\n ]\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens/lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										"lookup"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "auditlogs",
			"item": [
				{
					"name": "Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auditlogs?nextPageKey=aute sit cillum&pageSize=7748372&filter=aute sit cillum&from=aute sit cillum&to=aute sit cillum&sort=-timestamp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auditlogs"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aute sit cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "7748372",
									"description": "The amount of log entries in a single response payload. \n\nThe maximal allowed page size is 5000. \n\nIf not set, 1000 is used."
								},
								{
									"key": "filter",
									"value": "aute sit cillum",
									"description": "Filters the audit log. You can use the following criteria: \n* User: `user(\"userIdentification\")`. The `EQUALS` operator applies. \n* Event type: `eventType(\"value\")`. The `EQUALS` operator applies. \n* Category of a logged operation: `category(\"value\")`. The `EQUALS` operator applies. \n* Entity ID: `entityId(\"id\")`. The `CONTAINS` operator applies. \n\nFor each criterion, you can specify multiple alternatives with comma-separated values. In this case, the OR logic applies. For example, `eventType(\"CREATE\",\"UPDATE\")` means eventType can be \"CREATE\" or \"UPDATE\". \n\nYou can specify multiple comma-separated criteria, such as `eventType(\"CREATE\",\"UPDATE\"),category(\"CONFIG\")`. Only results matching **all** criteria are included in response. \n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes: \n* Tilde `~` \n* Quote `\"`"
								},
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "The sorting of audit log entries: \n* `timestamp`: Oldest first. \n* `-timestamp`: Newest first. \n\nIf not set, the newest first sorting is applied."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs?nextPageKey=aute sit cillum&pageSize=7748372&filter=aute sit cillum&from=aute sit cillum&to=aute sit cillum&sort=-timestamp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										},
										{
											"key": "filter",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "sort",
											"value": "-timestamp"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": 22894240,\n \"pageSize\": 1154725,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"auditLogs\": [\n  {\n   \"category\": \"TOKEN\",\n   \"environmentId\": \"anim eiusmod\",\n   \"eventType\": \"CREATE\",\n   \"logId\": \"incididunt\",\n   \"success\": false,\n   \"timestamp\": 47856912,\n   \"user\": \"sed pariatur ex fugiat\",\n   \"userType\": \"TOKEN_HASH\",\n   \"entityId\": \"commodo\",\n   \"userOrigin\": \"par\",\n   \"message\": \"cupidatat est proident occaecat nisi\",\n   \"patch\": {}\n  },\n  {\n   \"category\": \"WEB_UI\",\n   \"environmentId\": \"Lorem \",\n   \"eventType\": \"PUT\",\n   \"logId\": \"labo\",\n   \"success\": true,\n   \"timestamp\": -4410525,\n   \"user\": \"et Duis occaecat minim\",\n   \"userType\": \"PUBLIC_TOKEN_IDENTIFIER\",\n   \"entityId\": \"proident\",\n   \"userOrigin\": \"c\",\n   \"message\": \"dolor laborum\",\n   \"patch\": {}\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Gets the specified entry of the audit log | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auditlogs/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auditlogs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "cillum sint",
									"description": "(Required) The ID of the required log entry."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"category\": \"WEB_UI\",\n \"environmentId\": \"labor\",\n \"eventType\": \"LOGOUT\",\n \"logId\": \"proident do repr\",\n \"success\": true,\n \"timestamp\": 69931587,\n \"user\": \"incididunt ipsum proident\",\n \"userType\": \"REQUEST_ID\",\n \"entityId\": \"proident sint in\",\n \"userOrigin\": \"commodo et ad enim\",\n \"message\": \"nostrud irure\",\n \"patch\": {}\n}"
						},
						{
							"name": "Failed. Invalid ID format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "security Problems",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the specified security problem | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/securityProblems/:id?fields=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"securityProblems",
										":id"
									],
									"query": [
										{
											"key": "fields",
											"value": "aute sit cillum",
											"description": "Defines the list of problem properties to be added to the response.\n\n`securityProblemId`, `displayId`, `status`, `muted`, `externalVulnerabilityId`, `vulnerabilityType`, `title`, `packageName`, `url`, `technology`, `firstSeenTimestamp`, `lastUpdateTimestamp`, `cveIds` are **always** included in the result. To add more properties, list them with a leading plus `+`. Available fields are listed below. You can specify several properties, separated by a comma (for example `+riskAssessment,+managementZones`). \n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n* `description`: The description of the vulnerability.\n* `events`: A list of events of the security problem.\n* `vulnerableComponents`: A list of vulnerable components of the security problem. \n* `affectedEntities`: A list of affected entities of the security problem. \n* `exposedEntities`: A list of exposed entities of the security problem. \n* `reachableDataAssets`: A list of data assets reachable by affected entities of the security problem. \n* `relatedEntities`: A list of related entities of the security problem. \n* `relatedContainerImages`: A list of related container images of the security problem. \n"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the required security problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id?fields=aute sit cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id"
											],
											"query": [
												{
													"key": "fields",
													"value": "aute sit cillum"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"securityProblemId\": \"mollit labore eu\",\n \"displayId\": \"irure sunt quis pariatur\",\n \"status\": \"OPEN\",\n \"muted\": true,\n \"externalVulnerabilityId\": \"et velit sed fugiat\",\n \"vulnerabilityType\": \"THIRD_PARTY\",\n \"title\": \"eu irure ut sunt\",\n \"packageName\": \"ut occaecat\",\n \"url\": \"cillum nulla\",\n \"description\": \"adipisicing esse laboris\",\n \"technology\": \"PHP\",\n \"firstSeenTimestamp\": -32794101,\n \"lastUpdatedTimestamp\": 57278815,\n \"riskAssessment\": {\n  \"riskLevel\": \"MEDIUM\",\n  \"riskScore\": 73766522.84194925,\n  \"riskVector\": \"ut eu Excepteur nisi\",\n  \"baseRiskLevel\": \"CRITICAL\",\n  \"baseRiskScore\": 98059486.215238,\n  \"baseRiskVector\": \"enim dolore\",\n  \"exposure\": \"NOT_AVAILABLE\",\n  \"dataAssets\": \"NOT_DETECTED\",\n  \"publicExploit\": \"NOT_AVAILABLE\"\n },\n \"managementZones\": [\n  {\n   \"name\": \"nisi\",\n   \"id\": \"culpa sint id\"\n  },\n  {\n   \"name\": \"eu laborum in dolore\",\n   \"id\": \"eiusmod sit\"\n  }\n ],\n \"cveIds\": [\n  \"quis \",\n  \"anim ut reprehenderit\"\n ],\n \"events\": [\n  {\n   \"timestamp\": 47441703,\n   \"reason\": \"SECURITY_PROBLEM_UNMUTED\",\n   \"riskAssessmentSnapshot\": {\n    \"numberOfAffectedEntities\": -23738259,\n    \"numberOfReachableDataAssets\": 50372866,\n    \"publicExploit\": \"NOT_AVAILABLE\",\n    \"exposure\": \"NOT_AVAILABLE\"\n   },\n   \"muteState\": {\n    \"user\": \"velit id proident consectetur in\",\n    \"reason\": \"CONFIGURATION_NOT_AFFECTED\",\n    \"comment\": \"in Excepteur incididunt\"\n   }\n  },\n  {\n   \"timestamp\": 59210436,\n   \"reason\": \"SECURITY_PROBLEM_RESOLVED\",\n   \"riskAssessmentSnapshot\": {\n    \"numberOfAffectedEntities\": -66284438,\n    \"numberOfReachableDataAssets\": -67008625,\n    \"publicExploit\": \"AVAILABLE\",\n    \"exposure\": \"NOT_DETECTED\"\n   },\n   \"muteState\": {\n    \"user\": \"velit fugiat\",\n    \"reason\": \"OTHER\",\n    \"comment\": \"ut laborum anim aliqua\"\n   }\n  }\n ],\n \"vulnerableComponents\": [\n  {\n   \"id\": \"consectetur\",\n   \"displayName\": \"Ut\",\n   \"fileName\": \"ex consectetur Ut enim adipisicing\",\n   \"numberOfAffectedEntities\": 27733712,\n   \"affectedEntities\": [\n    \"in\",\n    \"nisi proident Ut dolor\"\n   ]\n  },\n  {\n   \"id\": \"magna nostrud\",\n   \"displayName\": \"consectetur nostrud in\",\n   \"fileName\": \"aliqua sunt\",\n   \"numberOfAffectedEntities\": -80159961,\n   \"affectedEntities\": [\n    \"dolor Excepteur\",\n    \"ut do elit\"\n   ]\n  }\n ],\n \"affectedEntities\": [\n  \"cillum sint aliquip enim\",\n  \"cillum veniam tempor non\"\n ],\n \"exposedEntities\": [\n  \"cillum\",\n  \"nostrud incididunt tempor\"\n ],\n \"reachableDataAssets\": [\n  \"sunt fugiat magna\",\n  \"ut adipisicing commodo\"\n ],\n \"relatedEntities\": {\n  \"applications\": [\n   {\n    \"id\": \"elit\",\n    \"numberOfAffectedEntities\": 80305411,\n    \"affectedEntities\": [\n     \"dolore Excepteu\",\n     \"nostrud\"\n    ]\n   },\n   {\n    \"id\": \"sunt cupidatat sit reprehenderit\",\n    \"numberOfAffectedEntities\": -83942508,\n    \"affectedEntities\": [\n     \"esse Ut do consectetur\",\n     \"cillum ea exercitation\"\n    ]\n   }\n  ],\n  \"services\": [\n   {\n    \"id\": \"fugiat cillum in et tempor\",\n    \"numberOfAffectedEntities\": 8510552,\n    \"affectedEntities\": [\n     \"reprehenderit velit\",\n     \"in exercitation sunt\"\n    ],\n    \"exposure\": \"NOT_AVAILABLE\"\n   },\n   {\n    \"id\": \"proident ea exercitation in\",\n    \"numberOfAffectedEntities\": 76225278,\n    \"affectedEntities\": [\n     \"occaecat non anim\",\n     \"nostrud\"\n    ],\n    \"exposure\": \"NOT_DETECTED\"\n   }\n  ],\n  \"hosts\": [\n   {\n    \"id\": \"esse voluptate ex sit dolore\",\n    \"numberOfAffectedEntities\": -58540094,\n    \"affectedEntities\": [\n     \"ut\",\n     \"do fugiat aliquip in\"\n    ]\n   },\n   {\n    \"id\": \"nulla\",\n    \"numberOfAffectedEntities\": 43587223,\n    \"affectedEntities\": [\n     \"anim reprehenderit elit cupidatat\",\n     \"mini\"\n    ]\n   }\n  ],\n  \"databases\": [\n   \"anim amet\",\n   \"ex elit Duis dolor ullamco\"\n  ],\n  \"kubernetesWorkloads\": [\n   {\n    \"id\": \"aliqua non\",\n    \"numberOfAffectedEntities\": -67376443,\n    \"affectedEntities\": [\n     \"eu sit elit deserunt\",\n     \"dolor\"\n    ]\n   },\n   {\n    \"id\": \"ad minim Ut ipsu\",\n    \"numberOfAffectedEntities\": -99233914,\n    \"affectedEntities\": [\n     \"quis est\",\n     \"officia voluptate ad deserunt\"\n    ]\n   }\n  ],\n  \"kubernetesClusters\": [\n   {\n    \"id\": \"ex\",\n    \"numberOfAffectedEntities\": -50740944,\n    \"affectedEntities\": [\n     \"officia\",\n     \"veniam ullamco\"\n    ]\n   },\n   {\n    \"id\": \"mollit incididunt ut volu\",\n    \"numberOfAffectedEntities\": -58844879,\n    \"affectedEntities\": [\n     \"nostrud sunt\",\n     \"esse commodo in fugiat dolore\"\n    ]\n   }\n  ]\n },\n \"relatedContainerImages\": [\n  {\n   \"containerImages\": [\n    {\n     \"imageId\": \"elit consequat occaecat sint\",\n     \"imageName\": \"veniam elit consectetur\",\n     \"numberOfAffectedEntities\": 50902869,\n     \"affectedEntities\": [\n      \"est\",\n      \"enim ullamco do\"\n     ]\n    },\n    {\n     \"imageId\": \"veniam in\",\n     \"imageName\": \"voluptate adipisicing reprehenderit Duis\",\n     \"numberOfAffectedEntities\": -28475029,\n     \"affectedEntities\": [\n      \"ipsum enim do nisi\",\n      \"Ut aliqua laborum elit non\"\n     ]\n    }\n   ]\n  },\n  {\n   \"containerImages\": [\n    {\n     \"imageId\": \"cillum\",\n     \"imageName\": \"aute sit anim\",\n     \"numberOfAffectedEntities\": -88803028,\n     \"affectedEntities\": [\n      \"pariatur incididunt\",\n      \"in tempor mollit\"\n     ]\n    },\n    {\n     \"imageId\": \"cupidatat quis sed esse do\",\n     \"imageName\": \"aute enim\",\n     \"numberOfAffectedEntities\": -11935499,\n     \"affectedEntities\": [\n      \"elit quis anim\",\n      \"dolor ex in\"\n     ]\n    }\n   ]\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Mutes the specified security problem. | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"tempor voluptate\",\n    \"reason\": \"FALSE_POSITIVE\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/securityProblems/:id/mute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"securityProblems",
										":id",
										"mute"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the required security problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The security problem has been muted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"tempor voluptate\",\n    \"reason\": \"FALSE_POSITIVE\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/mute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"mute"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not executed. The security problem is already muted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"tempor voluptate\",\n    \"reason\": \"FALSE_POSITIVE\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/mute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"mute"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Un-mutes the specified security problem. | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"irure\",\n    \"reason\": \"AFFECTED\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/securityProblems/:id/unmute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"securityProblems",
										":id",
										"unmute"
									],
									"variable": [
										{
											"key": "id",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the required security problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The security problem has been un-muted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"irure\",\n    \"reason\": \"AFFECTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/unmute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"unmute"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not executed. The security problem is already un-muted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"irure\",\n    \"reason\": \"AFFECTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/unmute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"unmute"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all security problems | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/securityProblems?nextPageKey=aute sit cillum&pageSize=7748372&securityProblemSelector=aute sit cillum&sort=aute sit cillum&fields=aute sit cillum&from=aute sit cillum&to=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"securityProblems"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aute sit cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "7748372",
									"description": "The amount of security problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
								},
								{
									"key": "securityProblemSelector",
									"value": "aute sit cillum",
									"description": "Defines the scope of the query. Only security problems matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Status: `status(\"value\")`. Find the possible values in the description of the **status** field of the response. If not set, all security problems are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Risk level: `riskLevel(\"value\")`. The Davis Risk Level. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum risk score: `minRiskScore(\"5.5\")`. The Davis minimum Risk Score. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum risk score: `maxRiskScore(\"5.5\")`. The Davis maximum Risk Score. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* Base risk level: `baseRiskLevel(\"value\")`. The Base Risk Level from the CVSS. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum base risk score: `minBaseRiskScore(\"5.5\")`. The Base minimum Risk Score from the CVSS. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum base risk score: `maxBaseRiskScore(\"5.5\")`. The Base maximum Risk Score from the CVSS. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* External vulnerability ID contains: `externalVulnerabilityIdContains(\"id-1\")`. The `CONTAINS` operator is used.\n* External vulnerability ID: `externalVulnerabilityId(\"id-1\",\"id-2\")`. Case insensitive `EQUALS` operator is used.\n* CVE ID: `cveId(\"id\")`.\n* Risk assessment `riskAssessment(\"value-1\",\"value-2\")` Possible values are `EXPOSED`, `SENSITIVE`, and `EXPLOIT`.\n* Related host ID: `relatedHostIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related host name: `relatedHostNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related host name contains: `relatedHostNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes cluster ID: `relatedKubernetesClusterIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes cluster name: `relatedKubernetesClusterNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes cluster name contains: `relatedKubernetesClusterNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes workload ID: `relatedKubernetesWorkloadIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes workload name: `relatedKubernetesWorkloadNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes workload name contains: `relatedKubernetesWorkloadNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Management zone ID: `managementZoneIds(\"mzId-1\",\"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\",\"name-2\")`. Values are case-sensitive.\n* Affected process group ID: `affectedPgIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Affected process group name: `affectedPgNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Affected process group name contains: `affectedPgNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Vulnerable component ID: `vulnerableComponentIds(\"componentId-1\", \"componentId-2\")`. Specify component IDs here.\n* Vulnerable component name: `vulnerableComponentNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Vulnerable component name contains: `vulnerableComponentNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Host tags: `hostTags(\"hostTag-1\")`. The `CONTAINS` operator is used.\n* Process group tags: `pgTags(\"pgTag-1\")`. The `CONTAINS` operator is used.\n* Process group instance tags: `pgiTags(\"pgiTag-1\")`. The `CONTAINS` operator is used.\n* Tags: `tags(\"tag-1\")`. The `CONTAINS` operator is used. This selector picks hosts, process groups, and process group instances at the same time.\n* Display ID: `displayIds(\"S-1234\",\"S-5678\")`. The `EQUALS` operator is used.\n* Technology: `technology(\"technology-1\",\"technology-2\")`. Find the possible values in the description of the **technology** field of the response. The `EQUALS` operator is used.\n\nRisk score and risk category are mutually exclusive (cannot be used at the same time).\n\nTo set several criteria, separate them with a comma (`,`). Only results matching (**all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
								},
								{
									"key": "sort",
									"value": "aute sit cillum",
									"description": "Specifies a field for sorting the security problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n* `status`: The security problem status (`+` open first or `-` resolved first) \n* `muted`: The security problem mute state (`+` unmuted first or `-` muted first) \n* `technology`: The security problem technology \n* `firstSeenTimestamp`: The timestamp of the first occurrence of the security problem (`+` new problems first or `-` old problems first) \n* `securityProblemId`: The auto-generated ID of the security problem (`+` lower number first or `-` higher number first) \n* `externalVulnerabilityId`: The ID of the external vulnerability (`+` lower number first or `-` higher number first) \n* `displayId`: The display ID (`+` lower number first or `-` higher number first) \n* `riskAssessment.riskScore`: The Davis security score (`+` lower score first or `-` higher score first) \n* `riskAssessment.riskLevel`: The Davis security level (`+` lower level first or `-` higher level first) \n* `riskAssessment.exposure`: Whether the problem is exposed to the internet \n* `riskAssessment.dataAssets`: Whether data assets are affected \n\nIf no prefix is set, `+` is used."
								},
								{
									"key": "fields",
									"value": "aute sit cillum",
									"description": "Defines the list of problem properties to be added to the response.\n\n`securityProblemId`, `displayId`, `status`, `muted`, `externalVulnerabilityId`, `vulnerabilityType`, `title`, `packageName`, `url`, `technology`, `firstSeenTimestamp`, `lastUpdateTimestamp`, `cveIds` are **always** included in the result. To add more properties, list them with a leading plus `+`. Available fields are listed below. You can specify several properties, separated by a comma (for example `+riskAssessment,+managementZones`). \n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n"
								},
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/securityProblems?nextPageKey=aute sit cillum&pageSize=7748372&securityProblemSelector=aute sit cillum&sort=aute sit cillum&fields=aute sit cillum&from=aute sit cillum&to=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"securityProblems"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										},
										{
											"key": "securityProblemSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "sort",
											"value": "aute sit cillum"
										},
										{
											"key": "fields",
											"value": "aute sit cillum"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -61310344,\n \"pageSize\": 27048716,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"securityProblems\": [\n  {\n   \"securityProblemId\": \"reprehenderit sunt sed sint eu\",\n   \"displayId\": \"ad tempor\",\n   \"status\": \"RESOLVED\",\n   \"muted\": true,\n   \"externalVulnerabilityId\": \"laboris dolor est\",\n   \"vulnerabilityType\": \"THIRD_PARTY\",\n   \"title\": \"aliqua\",\n   \"packageName\": \"nisi reprehenderit consectetur\",\n   \"url\": \"Excepteur in laborum\",\n   \"technology\": \"KUBERNETES\",\n   \"firstSeenTimestamp\": 98487746,\n   \"lastUpdatedTimestamp\": -14501097,\n   \"riskAssessment\": {\n    \"riskLevel\": \"NONE\",\n    \"riskScore\": -50306157.72870362,\n    \"riskVector\": \"incididunt ut in anim\",\n    \"baseRiskLevel\": \"NONE\",\n    \"baseRiskScore\": 46267264.36697498,\n    \"baseRiskVector\": \"ut adipisicing\",\n    \"exposure\": \"NOT_DETECTED\",\n    \"dataAssets\": \"REACHABLE\",\n    \"publicExploit\": \"NOT_AVAILABLE\"\n   },\n   \"managementZones\": [\n    {\n     \"name\": \"Lorem minim dolor\",\n     \"id\": \"consectetur sed Lorem fugiat\"\n    },\n    {\n     \"name\": \"dolor Lorem ut\",\n     \"id\": \"in pariatur ullamco\"\n    }\n   ],\n   \"cveIds\": [\n    \"exercitation\",\n    \"exercitation deserunt\"\n   ]\n  },\n  {\n   \"securityProblemId\": \"tempor qui dolore\",\n   \"displayId\": \"qui\",\n   \"status\": \"RESOLVED\",\n   \"muted\": true,\n   \"externalVulnerabilityId\": \"fugiat velit\",\n   \"vulnerabilityType\": \"RUNTIME\",\n   \"title\": \"labo\",\n   \"packageName\": \"laborum ipsum esse\",\n   \"url\": \"esse id\",\n   \"technology\": \"PHP\",\n   \"firstSeenTimestamp\": -29851775,\n   \"lastUpdatedTimestamp\": -93811016,\n   \"riskAssessment\": {\n    \"riskLevel\": \"NONE\",\n    \"riskScore\": -50452127.13403408,\n    \"riskVector\": \"laborum ex\",\n    \"baseRiskLevel\": \"MEDIUM\",\n    \"baseRiskScore\": 32605051.607725203,\n    \"baseRiskVector\": \"sint cillum velit\",\n    \"exposure\": \"NOT_AVAILABLE\",\n    \"dataAssets\": \"NOT_DETECTED\",\n    \"publicExploit\": \"AVAILABLE\"\n   },\n   \"managementZones\": [\n    {\n     \"name\": \"ipsum id enim mollit laboris\",\n     \"id\": \"aute nostrud aliqua in sint\"\n    },\n    {\n     \"name\": \"aliqua dolor ad fugiat laboris\",\n     \"id\": \"fugiat dolore anim labore\"\n    }\n   ],\n   \"cveIds\": [\n    \"a\",\n    \"esse enim dolor\"\n   ]\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "extensions",
			"item": [
				{
					"name": "schemas",
					"item": [
						{
							"name": "{schema Version}",
							"item": [
								{
									"name": "Lists all the files available for the specified extension 2.0 schema version",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"schemas",
												":schemaVersion"
											],
											"variable": [
												{
													"key": "schemaVersion",
													"value": "6605679037.0",
													"description": "(Required) The version of the schema."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion"
													],
													"variable": [
														{
															"key": "schemaVersion"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"files\": [\n  \"ut ex quis in sed\",\n  \"adipisicing Lorem\"\n ]\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion"
													],
													"variable": [
														{
															"key": "schemaVersion"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								},
								{
									"name": "Gets the extension 2.0 schema file in the specified version",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion/:fileName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"schemas",
												":schemaVersion",
												":fileName"
											],
											"variable": [
												{
													"key": "schemaVersion",
													"value": "6605679037.0",
													"description": "(Required) The version of the schema."
												},
												{
													"key": "fileName",
													"value": "aute sit cillum",
													"description": "(Required) The name of the schema file."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion/:fileName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion",
														":fileName"
													],
													"variable": [
														{
															"key": "schemaVersion"
														},
														{
															"key": "fileName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion/:fileName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion",
														":fileName"
													],
													"variable": [
														{
															"key": "schemaVersion"
														},
														{
															"key": "fileName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all the extension 2.0 schemas versions available in your environment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/extensions/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"versions\": [\n  \"1.2.3\",\n  \"1.2.3\"\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "{extension Name}",
					"item": [
						{
							"name": "{extension Version}",
							"item": [
								{
									"name": "Gets details of the specified version of the extension 2.0",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aute sit cillum",
													"description": "(Required) The name of the requested extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "6605679037.0",
													"description": "(Required) The version of the requested extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
														"key": "Accept",
														"value": "aute sit cillum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"extensionName\": \"laboris\",\n \"version\": \"1.2.3\",\n \"author\": {\n  \"name\": \"deserunt minim aliqua occaecat\"\n },\n \"dataSources\": [\n  \"sit\",\n  \"proident commodo nostrud ea\"\n ],\n \"variables\": [\n  \"laborum nisi\",\n  \"reprehenderit\"\n ],\n \"featureSets\": [\n  \"irure\",\n  \"tempor minim\"\n ],\n \"featureSetsDetails\": {},\n \"minDynatraceVersion\": \"laboris dolor\",\n \"fileHash\": \"Lorem\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
														"key": "Accept",
														"value": "aute sit cillum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										},
										{
											"name": "Not acceptable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
														"key": "Accept",
														"value": "aute sit cillum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified version of the extension 2.0",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aute sit cillum",
													"description": "(Required) The name of the requested extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "6605679037.0",
													"description": "(Required) The version of the requested extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The extension 2.0 version has been deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"extensionName\": \"laboris\",\n \"version\": \"1.2.3\",\n \"author\": {\n  \"name\": \"deserunt minim aliqua occaecat\"\n },\n \"dataSources\": [\n  \"sit\",\n  \"proident commodo nostrud ea\"\n ],\n \"variables\": [\n  \"laborum nisi\",\n  \"reprehenderit\"\n ],\n \"featureSets\": [\n  \"irure\",\n  \"tempor minim\"\n ],\n \"featureSetsDetails\": {},\n \"minDynatraceVersion\": \"laboris dolor\",\n \"fileHash\": \"Lorem\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								},
								{
									"name": "Gets the configuration schema of the specified version of the extension 2.0",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion",
												"schema"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aute sit cillum",
													"description": "(Required) The name of the requested extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "6605679037.0",
													"description": "(Required) The version of the requested extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion",
														"schema"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"dynatrace\": \"1\",\n \"schemaId\": \"builtin:anomaly.infrastructure\",\n \"displayName\": \"Anomaly detection for infrastructure\",\n \"description\": \"Dynatrace automatically detects infrastructure-related performance anomalies such as high CPU saturation, memory outages, and low disk-space conditions\",\n \"documentation\": \"eiusmod Excepteur\",\n \"schemaGroups\": [\n  \"group:some.1\",\n  \"group:some.2\"\n ],\n \"version\": \"1.4.2\",\n \"multiObject\": true,\n \"ordered\": true,\n \"maxObjects\": 10,\n \"allowedScopes\": [\n  \"host\",\n  \"application\"\n ],\n \"enums\": {},\n \"types\": {},\n \"properties\": {},\n \"constraints\": [\n  {\n   \"customValidatorId\": \"my-min-max\",\n   \"minimumPropertyCount\": 1,\n   \"maximumPropertyCount\": 2,\n   \"customMessage\": \"anim nostrud mollit esse\",\n   \"properties\": [\n    \"Duis laborum\",\n    \"ullamco\"\n   ],\n   \"type\": \"PROPERTY_COUNT_RANGE\"\n  },\n  {\n   \"customValidatorId\": \"my-min-max\",\n   \"minimumPropertyCount\": 1,\n   \"maximumPropertyCount\": 2,\n   \"customMessage\": \"magna commodo sunt quis in\",\n   \"properties\": [\n    \"occaecat velit\",\n    \"elit ea\"\n   ],\n   \"type\": \"CUSTOM_VALIDATOR_REF\"\n  }\n ],\n \"metadata\": {}\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion",
														"schema"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "environment Configuration",
							"item": [
								{
									"name": "Gets the active environment configuration version of the specified extension 2.0",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aute sit cillum",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"1.2.3\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								},
								{
									"name": "Updates the active environment configuration version of the extension 2.0",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": \"1.2.3\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aute sit cillum",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"1.2.3\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"1.2.3\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"1.2.3\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"1.2.3\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								},
								{
									"name": "Activates the environment configuration from the specified version of the extension 2.0",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": \"1.2.3\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aute sit cillum",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"1.2.3\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"1.2.3\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"1.2.3\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"1.2.3\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								},
								{
									"name": "Deactivates the environment configuration of the specified extension 2.0",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aute sit cillum",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration deactivated.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"1.2.3\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								},
								{
									"name": "List of the latest extension environment configuration events",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration",
												"events"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aute sit cillum",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "List of the latest extension environment configuration events",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration",
														"events"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"extensionEvents\": [\n  {\n   \"timestamp\": \"ut ullamco consectetur eu\",\n   \"severity\": \"occaecat elit ex\",\n   \"content\": \"proident ipsum deserunt labore Excepteur\"\n  },\n  {\n   \"timestamp\": \"ea commod\",\n   \"severity\": \"occaecat sint\",\n   \"content\": \"consectetur voluptate qui laboris esse\"\n  }\n ]\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration",
														"events"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "monitoring Configurations",
							"item": [
								{
									"name": "{configuration Id}",
									"item": [
										{
											"name": "Gets the details of the specified monitoring configuration",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "aute sit cillum",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"objectId\": \"laboris in proident\",\n \"scope\": \"in consectetur dolore deserunt\",\n \"value\": \"minim\"\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
												}
											]
										},
										{
											"name": "Updates the specified monitoring configuration",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "aute sit cillum",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"value\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": -99984950\n}"
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"value\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"value\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified monitoring configuration",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "aute sit cillum",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
												}
											]
										},
										{
											"name": "Gets the list of the events linked to specific monitoring configuration",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId",
														"events"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "aute sit cillum",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/events",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId",
																"events"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"extensionEvents\": [\n  {\n   \"timestamp\": \"dolore dolore \",\n   \"severity\": \"laboris in reprehenderit Lorem\",\n   \"content\": \"do ad voluptate\"\n  },\n  {\n   \"timestamp\": \"ex ullamco dolore sed cupidatat\",\n   \"severity\": \"minim sit velit sint\",\n   \"content\": \"eu\"\n  }\n ]\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/events",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId",
																"events"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
												}
											]
										},
										{
											"name": "Gets the most recent status of the execution of given monitoring configuration",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId",
														"status"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "aute sit cillum",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId",
																"status"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"timestamp\": -10802246,\n \"status\": \"quis deserunt ut\"\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId",
																"status"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all the monitoring configurations of the specified extension 2.0",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations?nextPageKey=aute sit cillum&pageSize=7748372&version=aute sit cillum&active=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"monitoringConfigurations"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "aute sit cillum",
													"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
												},
												{
													"key": "pageSize",
													"value": "7748372",
													"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
												},
												{
													"key": "version",
													"value": "aute sit cillum",
													"description": "Filters the resulting set of configurations by extension 2.0 version."
												},
												{
													"key": "active",
													"value": "true",
													"description": "Filters the resulting set of configurations by the active state."
												}
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aute sit cillum",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations?nextPageKey=aute sit cillum&pageSize=7748372&version=aute sit cillum&active=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "aute sit cillum"
														},
														{
															"key": "pageSize",
															"value": "7748372"
														},
														{
															"key": "version",
															"value": "aute sit cillum"
														},
														{
															"key": "active",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"totalCount\": -69251290,\n \"items\": [\n  {\n   \"objectId\": \"et id velit tempor\",\n   \"scope\": \"dolor mollit\",\n   \"value\": \"laboris non\"\n  },\n  {\n   \"objectId\": \"incididunt\",\n   \"scope\": \"veniam deserunt\",\n   \"value\": \"ex non \"\n  }\n ],\n \"pageSize\": -22723108,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations?nextPageKey=aute sit cillum&pageSize=7748372&version=aute sit cillum&active=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "aute sit cillum"
														},
														{
															"key": "pageSize",
															"value": "7748372"
														},
														{
															"key": "version",
															"value": "aute sit cillum"
														},
														{
															"key": "active",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations?nextPageKey=aute sit cillum&pageSize=7748372&version=aute sit cillum&active=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "aute sit cillum"
														},
														{
															"key": "pageSize",
															"value": "7748372"
														},
														{
															"key": "version",
															"value": "aute sit cillum"
														},
														{
															"key": "active",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								},
								{
									"name": "Creates new monitoring configuration for the specified extension 2.0",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    },\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"monitoringConfigurations"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "aute sit cillum",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    },\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 3081950\n },\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 32656063\n }\n]"
										},
										{
											"name": "Multi-Status, if not all requests resulted in the same status",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    },\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 3081950\n },\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 32656063\n }\n]"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    },\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all versions of the extension 2.0",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/extensions/:extensionName?nextPageKey=aute sit cillum&pageSize=7748372",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										":extensionName"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum",
											"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
										},
										{
											"key": "pageSize",
											"value": "7748372",
											"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
										}
									],
									"variable": [
										{
											"key": "extensionName",
											"value": "aute sit cillum",
											"description": "(Required) The name of the requested extension 2.0."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName?nextPageKey=aute sit cillum&pageSize=7748372",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "aute sit cillum"
												},
												{
													"key": "pageSize",
													"value": "7748372"
												}
											],
											"variable": [
												{
													"key": "extensionName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"totalCount\": -38253160,\n \"extensions\": [\n  {\n   \"extensionName\": \"dolore amet consectetur velit mollit\",\n   \"version\": \"1.2.3\"\n  },\n  {\n   \"extensionName\": \"nisi tempor\",\n   \"version\": \"1.2.3\"\n  }\n ],\n \"pageSize\": -99786354,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName?nextPageKey=aute sit cillum&pageSize=7748372",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "aute sit cillum"
												},
												{
													"key": "pageSize",
													"value": "7748372"
												}
											],
											"variable": [
												{
													"key": "extensionName"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all the extensions 2.0 available in your environment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/extensions?nextPageKey=aute sit cillum&pageSize=7748372&name=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aute sit cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "7748372",
									"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
								},
								{
									"key": "name",
									"value": "aute sit cillum",
									"description": "Filters the resulting set of extensions 2.0 by name. You can specify a partial name. In that case, the CONTAINS operator is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions?nextPageKey=aute sit cillum&pageSize=7748372&name=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										},
										{
											"key": "name",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -7343413,\n \"extensions\": [\n  {\n   \"extensionName\": \"Excepteur eu\",\n   \"version\": \"1.2.3\"\n  },\n  {\n   \"extensionName\": \"ea non velit incididunt\",\n   \"version\": \"1.2.3\"\n  }\n ],\n \"pageSize\": -5036220,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						}
					]
				},
				{
					"name": "Uploads or verifies a new extension 2.0",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "do consequat aute",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/extensions?validateOnly=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions"
							],
							"query": [
								{
									"key": "validateOnly",
									"value": "false",
									"description": "Only run validation but do not persist the extension even if validation was successful."
								}
							]
						}
					},
					"response": [
						{
							"name": "The extension is valid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "do consequat aute",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"extensionName\": \"exercitation reprehenderit\",\n \"version\": \"1.2.3\",\n \"author\": {\n  \"name\": \"deserunt dolore\"\n },\n \"dataSources\": [\n  \"ad sunt\",\n  \"consectetur ut ad in amet\"\n ],\n \"variables\": [\n  \"dolore exercitation velit ipsum\",\n  \"Excepteur eu dolor\"\n ],\n \"featureSets\": [\n  \"amet officia nostrud cillum proident\",\n  \"nostrud occaecat sunt dolore ea\"\n ],\n \"featureSetsDetails\": {},\n \"minDynatraceVersion\": \"magna ad officia cillum enim\",\n \"fileHash\": \"officia nulla quis ut in\"\n}"
						},
						{
							"name": "Success. The extension 2.0 has been uploaded.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "do consequat aute",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"extensionName\": \"laboris\",\n \"version\": \"1.2.3\",\n \"author\": {\n  \"name\": \"deserunt minim aliqua occaecat\"\n },\n \"dataSources\": [\n  \"sit\",\n  \"proident commodo nostrud ea\"\n ],\n \"variables\": [\n  \"laborum nisi\",\n  \"reprehenderit\"\n ],\n \"featureSets\": [\n  \"irure\",\n  \"tempor minim\"\n ],\n \"featureSetsDetails\": {},\n \"minDynatraceVersion\": \"laboris dolor\",\n \"fileHash\": \"Lorem\"\n}"
						},
						{
							"name": "Failed. The input file is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "do consequat aute",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						},
						{
							"name": "Upload not possible yet, please try again in a few seconds.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "do consequat aute",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "problems",
			"item": [
				{
					"name": "{problem Id}",
					"item": [
						{
							"name": "comments",
							"item": [
								{
									"name": "{comment Id}",
									"item": [
										{
											"name": "Gets the specified comment on a problem",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"createdAtTimestamp\": 17457120,\n \"authorName\": \"in ip\",\n \"context\": \"labore\",\n \"id\": \"al\",\n \"content\": \"fugiat incididunt\"\n}"
												}
											]
										},
										{
											"name": "Updates the specified comment on a problem",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message\": \"in esse Ut\",\n    \"context\": \"Ut ipsum Lorem mollit do\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The comment has been updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"message\": \"in esse Ut\",\n    \"context\": \"Ut ipsum Lorem mollit do\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes the specified comment from a problem",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "aute sit cillum",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The comment has been deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Gets all comments on the specified problem",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/comments?nextPageKey=aute sit cillum&pageSize=7748372",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"comments"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "aute sit cillum",
													"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
												},
												{
													"key": "pageSize",
													"value": "7748372",
													"description": "The amount of comments in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 10 is used."
												}
											],
											"variable": [
												{
													"key": "problemId",
													"value": "aute sit cillum",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments?nextPageKey=aute sit cillum&pageSize=7748372",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "aute sit cillum"
														},
														{
															"key": "pageSize",
															"value": "7748372"
														}
													],
													"variable": [
														{
															"key": "problemId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"totalCount\": -72490751,\n \"comments\": [\n  {\n   \"createdAtTimestamp\": -58193227,\n   \"authorName\": \"dolore amet in\",\n   \"context\": \"id ut\",\n   \"id\": \"sed adipisicing in dolor aliquip\",\n   \"content\": \"minim adipisicing\"\n  },\n  {\n   \"createdAtTimestamp\": -50706224,\n   \"authorName\": \"reprehenderit qui dolore ad ipsum\",\n   \"context\": \"Excepteur in laborum\",\n   \"id\": \"d\",\n   \"content\": \"in occaeca\"\n  }\n ],\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": -91071148\n}"
										}
									]
								},
								{
									"name": "Adds a new comment on the specified problem",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"in esse Ut\",\n    \"context\": \"Ut ipsum Lorem mollit do\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"comments"
											],
											"variable": [
												{
													"key": "problemId",
													"value": "aute sit cillum",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The comment has been added.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message\": \"in esse Ut\",\n    \"context\": \"Ut ipsum Lorem mollit do\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments"
													],
													"variable": [
														{
															"key": "problemId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Gets the properties of the specified problem",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/problems/:problemId?fields=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"problems",
										":problemId"
									],
									"query": [
										{
											"key": "fields",
											"value": "aute sit cillum",
											"description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`)."
										}
									],
									"variable": [
										{
											"key": "problemId",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the required problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId?fields=aute sit cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId"
											],
											"query": [
												{
													"key": "fields",
													"value": "aute sit cillum"
												}
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"displayId\": \"in labore ullamco eiusmod anim\",\n \"endTime\": 47926905,\n \"impactLevel\": \"INFRASTRUCTURE\",\n \"problemId\": \"cillum voluptate ut dolor\",\n \"severityLevel\": \"MONITORING_UNAVAILABLE\",\n \"startTime\": 56161132,\n \"status\": \"CLOSED\",\n \"title\": \"aliqua non\",\n \"affectedEntities\": [\n  {\n   \"entityId\": {\n    \"id\": \"proident\",\n    \"type\": \"tempor\"\n   },\n   \"name\": \"cillum dolore ad\"\n  },\n  {\n   \"entityId\": {\n    \"id\": \"deserunt ess\",\n    \"type\": \"velit anim\"\n   },\n   \"name\": \"aliquip\"\n  }\n ],\n \"recentComments\": {\n  \"totalCount\": -63139974,\n  \"comments\": [\n   {\n    \"createdAtTimestamp\": 73060684,\n    \"authorName\": \"ex\",\n    \"context\": \"Excepteur nis\",\n    \"id\": \"consequat do proident\",\n    \"content\": \"dolore occaecat proident qui mollit\"\n   },\n   {\n    \"createdAtTimestamp\": -31507674,\n    \"authorName\": \"nostrud Excepteur o\",\n    \"context\": \"aliquip ea\",\n    \"id\": \"veniam voluptate\",\n    \"content\": \"ex sed deserunt consequat\"\n   }\n  ],\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"pageSize\": -26412035\n },\n \"rootCauseEntity\": {\n  \"entityId\": {\n   \"id\": \"id dolore\",\n   \"type\": \"mollit fugiat enim exercitation Ut\"\n  },\n  \"name\": \"ut amet esse culpa\"\n },\n \"problemFilters\": [\n  {\n   \"id\": \"pariatur deserunt ullamco ut\",\n   \"name\": \"dolor tempor eiusmod ad\"\n  },\n  {\n   \"id\": \"labore dolore aute incididunt\",\n   \"name\": \"et mollit non sunt\"\n  }\n ],\n \"evidenceDetails\": {\n  \"totalCount\": -76965725,\n  \"details\": [\n   {\n    \"displayName\": \"amet sit reprehen\",\n    \"entity\": {\n     \"entityId\": {\n      \"id\": \"enim molli\",\n      \"type\": \"Ut dolor\"\n     },\n     \"name\": \"laboris consectet\"\n    },\n    \"evidenceType\": \"METRIC\",\n    \"rootCauseRelevant\": false,\n    \"startTime\": -70953664,\n    \"groupingEntity\": {\n     \"entityId\": {\n      \"id\": \"in sed laboris reprehenderit\",\n      \"type\": \"ut\"\n     },\n     \"name\": \"anim sit elit veniam occaecat\"\n    }\n   },\n   {\n    \"displayName\": \"proident moll\",\n    \"entity\": {\n     \"entityId\": {\n      \"id\": \"nostrud sit\",\n      \"type\": \"voluptate qui exercitation sed\"\n     },\n     \"name\": \"ad ullamco consectetur nulla occaecat\"\n    },\n    \"evidenceType\": \"EVENT\",\n    \"rootCauseRelevant\": false,\n    \"startTime\": -95994194,\n    \"groupingEntity\": {\n     \"entityId\": {\n      \"id\": \"esse aliquip sint\",\n      \"type\": \"esse adipisicing ullamco\"\n     },\n     \"name\": \"al\"\n    }\n   }\n  ]\n },\n \"impactAnalysis\": {\n  \"impacts\": [\n   {\n    \"estimatedAffectedUsers\": -79957470,\n    \"impactType\": \"SERVICE\",\n    \"impactedEntity\": {\n     \"entityId\": {\n      \"id\": \"voluptate esse in officia sunt\",\n      \"type\": \"est minim culpa consectetur\"\n     },\n     \"name\": \"sit et minim\"\n    }\n   },\n   {\n    \"estimatedAffectedUsers\": -58872030,\n    \"impactType\": \"MOBILE\",\n    \"impactedEntity\": {\n     \"entityId\": {\n      \"id\": \"in dolore ipsum\",\n      \"type\": \"quis aliqua pariatur eu\"\n     },\n     \"name\": \"ut tempor in nisi\"\n    }\n   }\n  ]\n },\n \"linkedProblemInfo\": {\n  \"displayId\": \"mollit consequat incididunt\",\n  \"problemId\": \"pariatur nulla ut consectetur elit\"\n },\n \"managementZones\": [\n  {\n   \"name\": \"nulla ipsum qui\",\n   \"id\": \"nu\"\n  },\n  {\n   \"name\": \"in exercitation labori\",\n   \"id\": \"ut tempor incididunt laboris\"\n  }\n ],\n \"entityTags\": [\n  {\n   \"stringRepresentation\": \"anim qui consequat sit mollit\",\n   \"value\": \"elit tempor ad\",\n   \"key\": \"dolor magna\",\n   \"context\": \"eu enim Lorem nostrud\"\n  },\n  {\n   \"stringRepresentation\": \"nulla ex\",\n   \"value\": \"id consequat veniam eu\",\n   \"key\": \"incididunt exercitation commodo laborum\",\n   \"context\": \"consectetur aute minim sunt\"\n  }\n ],\n \"impactedEntities\": [\n  {\n   \"entityId\": {\n    \"id\": \"culpa in quis\",\n    \"type\": \"aliq\"\n   },\n   \"name\": \"nulla dolor dolore aliquip Ut\"\n  },\n  {\n   \"entityId\": {\n    \"id\": \"non\",\n    \"type\": \"non Ut\"\n   },\n   \"name\": \"dolor proident\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Closes the specified problem and adds a closing comment on it",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"Lorem sit\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/problems/:problemId/close",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"problems",
										":problemId",
										"close"
									],
									"variable": [
										{
											"key": "problemId",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the required problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"Lorem sit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"close"
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"closeTimestamp\": 71576348,\n \"closing\": true,\n \"problemId\": \"Lorem est\",\n \"comment\": {\n  \"createdAtTimestamp\": -88654371,\n  \"authorName\": \"in ullamco est voluptate\",\n  \"context\": \"amet\",\n  \"id\": \"do amet\",\n  \"content\": \"id reprehenderit est enim eu\"\n }\n}"
								},
								{
									"name": "The problem is closed already the request hasn't been executed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"Lorem sit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"close"
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists problems observed within the specified timeframe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/problems?fields=aute sit cillum&nextPageKey=aute sit cillum&pageSize=7748372&from=aute sit cillum&to=aute sit cillum&problemSelector=aute sit cillum&entitySelector=aute sit cillum&sort=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"problems"
							],
							"query": [
								{
									"key": "fields",
									"value": "aute sit cillum",
									"description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).\n\n The field is valid only for the current page of results. You must set it for each page you're requesting."
								},
								{
									"key": "nextPageKey",
									"value": "aute sit cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
								},
								{
									"key": "pageSize",
									"value": "7748372",
									"description": "The amount of problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
								},
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "problemSelector",
									"value": "aute sit cillum",
									"description": "Defines the scope of the query. Only problems matching the specified criteria are included into response. \n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies. All values must be quoted. \n* Status: `status(\"open\")` or `status(\"closed\")`. You can specify only one status. \n* Severity level: `severityLevel(\"level-1\",\"level-2\")`. Find the possible values in the description of the **severityLevel** field of the response.\n* Impact level: `impactLevel(\"level-11\",\"level-2\")` Find the possible values in the description of the **impactLevel** field of the response.\n* Root cause entity: `rootCauseEntity(\"id-1\", \"id-2\")`. \n* Management zone ID: `managementZoneIds(\"mZId-1\", \"mzId-2\")`. \n* Management zone name: `managementZones(\"value-1\",\"value-2\")`. \n* Impacted entities: `impactedEntities(\"id-1\", \"id-2\")`. \n* Affected entities: `affectedEntities(\"id-1\", \"id-2\")`. \n* Type of affected entities: `affectedEntityTypes(\"value-1\",\"value-2\")`. \n* Problem ID: `problemId(\"id-1\", \"id-2\")`. \n* Alerting profile ID: `problemFilterIds(\"id-1\", \"id-2\")`. \n* Alerting profile name: `problemFilterNames(\"value-1\",\"value-2\")`. \n* Entity tags: `entityTags(\"[context]key:value\",\"key:value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value tag`. All tag values are case-sensitive.\n* Display ID of the problem: `displayId(\"id-1\", \"id-2\")`. \n* Under maintenance: `underMaintenance(true|false)`. Shows (true) or hides (false) all problems created during maintenance mode.\n* Text search: `text(\"value\")`. Text search on the following fields: problem title, event titles, displayId and the id of affected and impacted entities. The text search is case insensitive, partial matching and based on a relevance score. Therefore the `relevance` sort option should be used to get the most relevant problems first. The special characters `~` and `\"` need to be escaped using a `~` (e.g. double quote search `text(\"~\"\")`). \n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response. \n\n"
								},
								{
									"key": "entitySelector",
									"value": "aute sit cillum",
									"description": "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\nThe maximum number of entities that may be selected is limited to 10000.\n\n"
								},
								{
									"key": "sort",
									"value": "aute sit cillum",
									"description": "Specifies a set of comma-separated (`,`) fields for sorting in the problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n * `status`: problem status (`+` open problems first or `-` closed problems first)\n * `startTime`: problem start time (`+` old problems first or `-` new problems first) \n * `relevance`: problem relevance (`+` least relevant problems first or `-` most relevant problems first) - can be used only in combination with text search \n\nIf no prefix is set, `+` is used. \n\nYou can specify several levels of sorting. For example, `+status,-startTime` sorts problems by status, open problems first. Within the status, problems are sorted by start time, oldest first."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/problems?fields=aute sit cillum&nextPageKey=aute sit cillum&pageSize=7748372&from=aute sit cillum&to=aute sit cillum&problemSelector=aute sit cillum&entitySelector=aute sit cillum&sort=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"problems"
									],
									"query": [
										{
											"key": "fields",
											"value": "aute sit cillum"
										},
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "problemSelector",
											"value": "aute sit cillum"
										},
										{
											"key": "entitySelector",
											"value": "aute sit cillum"
										},
										{
											"key": "sort",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -43180027,\n \"pageSize\": 76307017,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"problems\": [\n  {\n   \"displayId\": \"sunt dolor\",\n   \"endTime\": -53566215,\n   \"impactLevel\": \"SERVICES\",\n   \"problemId\": \"eiusmod do dolore laboris\",\n   \"severityLevel\": \"PERFORMANCE\",\n   \"startTime\": 14928530,\n   \"status\": \"CLOSED\",\n   \"title\": \"pariatur nulla cupidatat minim\",\n   \"affectedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"Excepteur\",\n      \"type\": \"fugiat labore eu\"\n     },\n     \"name\": \"officia\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"velit ad\",\n      \"type\": \"tempor ex irure\"\n     },\n     \"name\": \"ad do\"\n    }\n   ],\n   \"recentComments\": {\n    \"totalCount\": -70913148,\n    \"comments\": [\n     {\n      \"createdAtTimestamp\": -87096019,\n      \"authorName\": \"occaecat enim\",\n      \"context\": \"ullamco anim mollit\",\n      \"id\": \"ut anim Lorem laboris velit\",\n      \"content\": \"id adip\"\n     },\n     {\n      \"createdAtTimestamp\": -37289833,\n      \"authorName\": \"Ut ullamco\",\n      \"context\": \"ex pariat\",\n      \"id\": \"d\",\n      \"content\": \"dolore id do ad\"\n     }\n    ],\n    \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n    \"pageSize\": -52754735\n   },\n   \"rootCauseEntity\": {\n    \"entityId\": {\n     \"id\": \"t\",\n     \"type\": \"consectetur sed ex mollit\"\n    },\n    \"name\": \"et amet\"\n   },\n   \"problemFilters\": [\n    {\n     \"id\": \"veniam ea\",\n     \"name\": \"culpa\"\n    },\n    {\n     \"id\": \"sit cillum\",\n     \"name\": \"labore exercitation ut sint\"\n    }\n   ],\n   \"evidenceDetails\": {\n    \"totalCount\": -83681234,\n    \"details\": [\n     {\n      \"displayName\": \"ut est\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"veniam voluptate cillum\",\n        \"type\": \"et\"\n       },\n       \"name\": \"cupidata\"\n      },\n      \"evidenceType\": \"METRIC\",\n      \"rootCauseRelevant\": false,\n      \"startTime\": -36222412,\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"id nulla aliqua aliquip\",\n        \"type\": \"qui ad irure aute\"\n       },\n       \"name\": \"ad\"\n      }\n     },\n     {\n      \"displayName\": \"tempor consectetur dolore\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"Excepteur\",\n        \"type\": \"non fugiat\"\n       },\n       \"name\": \"in Ut aliquip sed\"\n      },\n      \"evidenceType\": \"TRANSACTIONAL\",\n      \"rootCauseRelevant\": true,\n      \"startTime\": -27422055,\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"elit exercitation nulla ut sed\",\n        \"type\": \"pariatur labore adipisicing sint\"\n       },\n       \"name\": \"officia veniam\"\n      }\n     }\n    ]\n   },\n   \"impactAnalysis\": {\n    \"impacts\": [\n     {\n      \"estimatedAffectedUsers\": 31794479,\n      \"impactType\": \"MOBILE\",\n      \"impactedEntity\": {\n       \"entityId\": {\n        \"id\": \"ad adipisicing esse\",\n        \"type\": \"ad laboris dolor amet\"\n       },\n       \"name\": \"cillum laboris deserunt\"\n      }\n     },\n     {\n      \"estimatedAffectedUsers\": 21437683,\n      \"impactType\": \"MOBILE\",\n      \"impactedEntity\": {\n       \"entityId\": {\n        \"id\": \"amet ad\",\n        \"type\": \"Ut velit tempor nostrud\"\n       },\n       \"name\": \"irure Lorem sint non\"\n      }\n     }\n    ]\n   },\n   \"linkedProblemInfo\": {\n    \"displayId\": \"enim ad\",\n    \"problemId\": \"culpa irure amet proident\"\n   },\n   \"managementZones\": [\n    {\n     \"name\": \"cupidatat dolore ut\",\n     \"id\": \"occaecat ut esse eu\"\n    },\n    {\n     \"name\": \"velit labori\",\n     \"id\": \"officia culpa aute qui aliqua\"\n    }\n   ],\n   \"entityTags\": [\n    {\n     \"stringRepresentation\": \"cillum est ipsum ad labore\",\n     \"value\": \"non magna Duis Excepteur\",\n     \"key\": \"incididunt in\",\n     \"context\": \"consectetur aliquip officia\"\n    },\n    {\n     \"stringRepresentation\": \"reprehenderit tempor nisi\",\n     \"value\": \"laborum id\",\n     \"key\": \"culpa exercitation deserunt\",\n     \"context\": \"non\"\n    }\n   ],\n   \"impactedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"laborum sed\",\n      \"type\": \"ex pariatur anim dolor dolore\"\n     },\n     \"name\": \"culpa\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"consectetur voluptate adipisicing culpa quis\",\n      \"type\": \"Lorem mollit in\"\n     },\n     \"name\": \"elit ullamco\"\n    }\n   ]\n  },\n  {\n   \"displayId\": \"ut proident dolore cupidatat occaecat\",\n   \"endTime\": -64472375,\n   \"impactLevel\": \"INFRASTRUCTURE\",\n   \"problemId\": \"dolore deserunt quis\",\n   \"severityLevel\": \"INFO\",\n   \"startTime\": -15248549,\n   \"status\": \"CLOSED\",\n   \"title\": \"sed veniam dolore\",\n   \"affectedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"irure incididunt\",\n      \"type\": \"aliqui\"\n     },\n     \"name\": \"ipsum pariatur minim adipisicing eiusmod\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"ullamco pariatur minim magna eu\",\n      \"type\": \"nulla officia eu\"\n     },\n     \"name\": \"id in in\"\n    }\n   ],\n   \"recentComments\": {\n    \"totalCount\": 63634283,\n    \"comments\": [\n     {\n      \"createdAtTimestamp\": 58795825,\n      \"authorName\": \"ad nostrud\",\n      \"context\": \"velit aute dolore\",\n      \"id\": \"tempo\",\n      \"content\": \"in dolore eu consectetur\"\n     },\n     {\n      \"createdAtTimestamp\": 14872214,\n      \"authorName\": \"Lorem amet fugiat elit\",\n      \"context\": \"qui laboris\",\n      \"id\": \"sed cillum labore\",\n      \"content\": \"eu proident anim laboris\"\n     }\n    ],\n    \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n    \"pageSize\": 54187111\n   },\n   \"rootCauseEntity\": {\n    \"entityId\": {\n     \"id\": \"nisi laboris e\",\n     \"type\": \"mollit labore\"\n    },\n    \"name\": \"magna pariatur\"\n   },\n   \"problemFilters\": [\n    {\n     \"id\": \"incididunt sunt exercitation consectetur\",\n     \"name\": \"ut in esse velit cillum\"\n    },\n    {\n     \"id\": \"ipsum fugiat pariatur nisi commodo\",\n     \"name\": \"eiusmod am\"\n    }\n   ],\n   \"evidenceDetails\": {\n    \"totalCount\": 54268552,\n    \"details\": [\n     {\n      \"displayName\": \"officia ad Duis labore n\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"eiusmod aliquip cupidatat labore\",\n        \"type\": \"culpa est consequat dolore\"\n       },\n       \"name\": \"Lorem aliquip Ut\"\n      },\n      \"evidenceType\": \"MAINTENANCE_WINDOW\",\n      \"rootCauseRelevant\": false,\n      \"startTime\": 75476033,\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"enim ut\",\n        \"type\": \"laborum sunt aliquip\"\n       },\n       \"name\": \"aliquip dolor pariatu\"\n      }\n     },\n     {\n      \"displayName\": \"nulla est anim\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"est fugiat laborum commodo\",\n        \"type\": \"esse dolore commodo pariatur\"\n       },\n       \"name\": \"nulla ullamco dolore\"\n      },\n      \"evidenceType\": \"AVAILABILITY_EVIDENCE\",\n      \"rootCauseRelevant\": false,\n      \"startTime\": 43543821,\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"in anim magna ut ipsum\",\n        \"type\": \"id\"\n       },\n       \"name\": \"ut cillum in\"\n      }\n     }\n    ]\n   },\n   \"impactAnalysis\": {\n    \"impacts\": [\n     {\n      \"estimatedAffectedUsers\": -74853072,\n      \"impactType\": \"SERVICE\",\n      \"impactedEntity\": {\n       \"entityId\": {\n        \"id\": \"do dolor ipsum\",\n        \"type\": \"ut labore voluptate Ut\"\n       },\n       \"name\": \"aute id nisi\"\n      }\n     },\n     {\n      \"estimatedAffectedUsers\": 11194510,\n      \"impactType\": \"APPLICATION\",\n      \"impactedEntity\": {\n       \"entityId\": {\n        \"id\": \"pariatur dolore ullamco elit in\",\n        \"type\": \"nulla reprehenderit\"\n       },\n       \"name\": \"id ea cillum in\"\n      }\n     }\n    ]\n   },\n   \"linkedProblemInfo\": {\n    \"displayId\": \"dolore c\",\n    \"problemId\": \"esse qui\"\n   },\n   \"managementZones\": [\n    {\n     \"name\": \"consequat id\",\n     \"id\": \"ex sed enim laborum\"\n    },\n    {\n     \"name\": \"culpa Ut\",\n     \"id\": \"exerci\"\n    }\n   ],\n   \"entityTags\": [\n    {\n     \"stringRepresentation\": \"fugiat officia\",\n     \"value\": \"dolor Ut ut ea\",\n     \"key\": \"sit\",\n     \"context\": \"consequat eu ipsum\"\n    },\n    {\n     \"stringRepresentation\": \"magna dolore aliquip consequat\",\n     \"value\": \"velit veniam dolore ipsum\",\n     \"key\": \"exercitation commodo dolor\",\n     \"context\": \"cillum consequat tempor\"\n    }\n   ],\n   \"impactedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"minim elit\",\n      \"type\": \"pariatur ea\"\n     },\n     \"name\": \"commodo\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"dolor\",\n      \"type\": \"proident anim ullamco irure\"\n     },\n     \"name\": \"Excepteur aliqua\"\n    }\n   ]\n  }\n ],\n \"warnings\": [\n  \"\",\n  \"ullam\"\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "logs",
			"item": [
				{
					"name": "Pushes log records to Dynatrace | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"content\": \"example log content 1\",\n        \"log.source\": \"/var/log/syslog\"\n    },\n    {\n        \"content\": \"example log content 2\"\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/logs/ingest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logs",
								"ingest"
							]
						},
						"description": "Ingested logs are stored in the indexed log storage. \n\nThis endpoint requires an Environment or Cluster ActiveGate with the **Log Analytics Collector** module enabled."
					},
					"response": [
						{
							"name": "Success. Some log events were limited.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"content\": \"example log content 1\",\n        \"log.source\": \"/var/log/syslog\"\n    },\n    {\n        \"content\": \"example log content 2\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"details\": {\n  \"message\": \"culpa\",\n  \"code\": 49775699\n }\n}"
						},
						{
							"name": "Success. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"content\": \"example log content 1\",\n        \"log.source\": \"/var/log/syslog\"\n    },\n    {\n        \"content\": \"example log content 2\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"content\": \"example log content 1\",\n        \"log.source\": \"/var/log/syslog\"\n    },\n    {\n        \"content\": \"example log content 2\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						},
						{
							"name": "Failed. You can't add more logs to the storage, because you are out of [Davis Data Units](https://dt-url.net/dduLog) (DDU). Purchase additional DDUs.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"content\": \"example log content 1\",\n        \"log.source\": \"/var/log/syslog\"\n    },\n    {\n        \"content\": \"example log content 2\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist. This may happen when no Environment or Cluster ActiveGate is available with Log Analytics Collector module enabled.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"content\": \"example log content 1\",\n        \"log.source\": \"/var/log/syslog\"\n    },\n    {\n        \"content\": \"example log content 2\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				},
				{
					"name": "Gets aggregated log records | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/logs/aggregate?from=aute sit cillum&to=aute sit cillum&query=&timeBuckets=1&maxGroupValues=10&groupBy=non commodo&groupBy=aliquip",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logs",
								"aggregate"
							],
							"query": [
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "query",
									"value": "",
									"description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f). \n\nThe query has a limit of 20 relations (logical operators between simple expressions (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`) in simple expressions)."
								},
								{
									"key": "timeBuckets",
									"value": "1",
									"description": "The number of time slots in the result. \n\nThe query timeframe is divided equally into the specified number of slots. \n\nThe minimum length of a slot is 1 ms. \n\nIf not set, 1 is used."
								},
								{
									"key": "maxGroupValues",
									"value": "10",
									"description": "The maximum number of values in each group. \n\nYou can get up to 100 values per group. \n\nIf not set, 10 is used."
								},
								{
									"key": "groupBy",
									"value": "non commodo",
									"description": "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values."
								},
								{
									"key": "groupBy",
									"value": "aliquip",
									"description": "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values."
								}
							]
						},
						"description": "Returns the aggregated number of occurrences of log values divided into time slots. \n\nIt is possible that the timeframe covered by results exceeds the specified timeframe. In that case the request returns fewer time slots than specified in the **timeBuckets** query parameter."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs/aggregate?from=aute sit cillum&to=aute sit cillum&query=&timeBuckets=1&maxGroupValues=10&groupBy=officia sint velit&groupBy=est tempor pariatur velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"aggregate"
									],
									"query": [
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "timeBuckets",
											"value": "1"
										},
										{
											"key": "maxGroupValues",
											"value": "10"
										},
										{
											"key": "groupBy",
											"value": "officia sint velit"
										},
										{
											"key": "groupBy",
											"value": "est tempor pariatur velit"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"aggregationResult\": {}\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs/aggregate?from=aute sit cillum&to=aute sit cillum&query=&timeBuckets=1&maxGroupValues=10&groupBy=officia sint velit&groupBy=est tempor pariatur velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"aggregate"
									],
									"query": [
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "timeBuckets",
											"value": "1"
										},
										{
											"key": "maxGroupValues",
											"value": "10"
										},
										{
											"key": "groupBy",
											"value": "officia sint velit"
										},
										{
											"key": "groupBy",
											"value": "est tempor pariatur velit"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				},
				{
					"name": "Reads log records | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/logs/search?from=aute sit cillum&to=aute sit cillum&limit=1000&query=&sort=-timestamp&nextSliceKey=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logs",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "limit",
									"value": "1000",
									"description": "The desired amount of log records. \n\nThe maximal allowed limit is 1000. \n\nIf not set, 1000 is used."
								},
								{
									"key": "query",
									"value": "",
									"description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f). \n\nThe query has a limit of 20 relations (logical operators between simple expressions (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`) in simple expressions)."
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first)."
								},
								{
									"key": "nextSliceKey",
									"value": "aute sit cillum",
									"description": "The cursor for the next slice of results. You can find it in the **nextSliceKey** field of the previous response. \n\nThe first slice is always returned if you don't specify this parameter. \n\nIf this parameter is set, all other query parameters are ignored."
								}
							]
						},
						"description": "Returns the first *X* records (specified in the **limit** query parameter). Log records are sorted by the criteria specified in the **sort** query parameter. \n\nIf the query is too large to be processed in a single request, it is divided into slices. In that case the first response contains the **nextSliceKey** cursor for the second slice. Use it in the **nextSliceKey** query parameter to obtain the second slice, which contains **nextSliceKey** cursor for the third slice, and so on. \n\nResults can be distributed unevenly between slices and some slices might be empty."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs/search?from=aute sit cillum&to=aute sit cillum&limit=1000&query=&sort=-timestamp&nextSliceKey=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"search"
									],
									"query": [
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "limit",
											"value": "1000"
										},
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "sort",
											"value": "-timestamp"
										},
										{
											"key": "nextSliceKey",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"nextSliceKey\": \"ea elit\",\n \"sliceSize\": -75443090,\n \"results\": [\n  {\n   \"additionalColumns\": {},\n   \"eventType\": \"SFM\",\n   \"timestamp\": \"1965-08-04T22:45:43.545Z\",\n   \"content\": \"sit cillum consequat proident non\",\n   \"status\": \"ERROR\"\n  },\n  {\n   \"additionalColumns\": {},\n   \"eventType\": \"LOG\",\n   \"timestamp\": \"1968-10-02T03:23:18.918Z\",\n   \"content\": \"velit mollit\",\n   \"status\": \"NONE\"\n  }\n ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs/search?from=aute sit cillum&to=aute sit cillum&limit=1000&query=&sort=-timestamp&nextSliceKey=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"search"
									],
									"query": [
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "limit",
											"value": "1000"
										},
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "sort",
											"value": "-timestamp"
										},
										{
											"key": "nextSliceKey",
											"value": "aute sit cillum"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "objects",
					"item": [
						{
							"name": "{object Id}",
							"item": [
								{
									"name": "Gets the specified settings object | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "aute sit cillum",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"author\": \"john.doe@example.com\",\n \"modified\": -22357354,\n \"schemaVersion\": \"1.0.0\",\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"created\": -39486757,\n \"schemaId\": \"builtin:anomaly.infrastructure\",\n \"scope\": \"HOST-D3A3C5A146830A79\",\n \"value\": {\n  \"autoMonitoring\": true\n },\n \"summary\": \"anim sit dolor quis eiusmod\"\n}"
										},
										{
											"name": "No object available for the given objectId",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 38698576,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"cupidatat Lorem c\",\n    \"message\": \"in labore amet do\",\n    \"path\": \"consequat occaecat exercitation anim\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"cillum veniam laboris\",\n    \"message\": \"proident sunt dolor\",\n    \"path\": \"cillum anim veniam Excepteur\"\n   }\n  ],\n  \"message\": \"cillum \",\n  \"code\": -10508609\n }\n}"
										}
									]
								},
								{
									"name": "Updates an existing settings object | maturity=EARLY_ADOPTER",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "aute sit cillum",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 38698576,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"cupidatat Lorem c\",\n    \"message\": \"in labore amet do\",\n    \"path\": \"consequat occaecat exercitation anim\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"cillum veniam laboris\",\n    \"message\": \"proident sunt dolor\",\n    \"path\": \"cillum anim veniam Excepteur\"\n   }\n  ],\n  \"message\": \"cillum \",\n  \"code\": -10508609\n }\n}"
										},
										{
											"name": "Failed. Schema validation failed.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 38698576,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"cupidatat Lorem c\",\n    \"message\": \"in labore amet do\",\n    \"path\": \"consequat occaecat exercitation anim\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"cillum veniam laboris\",\n    \"message\": \"proident sunt dolor\",\n    \"path\": \"cillum anim veniam Excepteur\"\n   }\n  ],\n  \"message\": \"cillum \",\n  \"code\": -10508609\n }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 38698576,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"cupidatat Lorem c\",\n    \"message\": \"in labore amet do\",\n    \"path\": \"consequat occaecat exercitation anim\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"cillum veniam laboris\",\n    \"message\": \"proident sunt dolor\",\n    \"path\": \"cillum anim veniam Excepteur\"\n   }\n  ],\n  \"message\": \"cillum \",\n  \"code\": -10508609\n }\n}"
										},
										{
											"name": "Failed. Conflicting resource.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 38698576,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"cupidatat Lorem c\",\n    \"message\": \"in labore amet do\",\n    \"path\": \"consequat occaecat exercitation anim\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"cillum veniam laboris\",\n    \"message\": \"proident sunt dolor\",\n    \"path\": \"cillum anim veniam Excepteur\"\n   }\n  ],\n  \"message\": \"cillum \",\n  \"code\": -10508609\n }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified settings object | maturity=EARLY_ADOPTER",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=aute sit cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"query": [
												{
													"key": "updateToken",
													"value": "aute sit cillum",
													"description": "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks."
												}
											],
											"variable": [
												{
													"key": "objectId",
													"value": "aute sit cillum",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=aute sit cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "aute sit cillum"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=aute sit cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "aute sit cillum"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 38698576,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"cupidatat Lorem c\",\n    \"message\": \"in labore amet do\",\n    \"path\": \"consequat occaecat exercitation anim\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"cillum veniam laboris\",\n    \"message\": \"proident sunt dolor\",\n    \"path\": \"cillum anim veniam Excepteur\"\n   }\n  ],\n  \"message\": \"cillum \",\n  \"code\": -10508609\n }\n}"
										},
										{
											"name": "Failed. Conflicting resource.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=aute sit cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "aute sit cillum"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 38698576,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"cupidatat Lorem c\",\n    \"message\": \"in labore amet do\",\n    \"path\": \"consequat occaecat exercitation anim\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"cillum veniam laboris\",\n    \"message\": \"proident sunt dolor\",\n    \"path\": \"cillum anim veniam Excepteur\"\n   }\n  ],\n  \"message\": \"cillum \",\n  \"code\": -10508609\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists available settings objects | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/objects?schemaIds=aute sit cillum&scopes=aute sit cillum&fields=objectId,value&nextPageKey=aute sit cillum&pageSize=7748372",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "schemaIds",
											"value": "aute sit cillum",
											"description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "scopes",
											"value": "aute sit cillum",
											"description": "A list of comma-separated scopes, that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scopes. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "fields",
											"value": "objectId,value",
											"description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `objectId,value`)."
										},
										{
											"key": "nextPageKey",
											"value": "aute sit cillum",
											"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
										},
										{
											"key": "pageSize",
											"value": "7748372",
											"description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=aute sit cillum&scopes=aute sit cillum&fields=objectId,value&nextPageKey=aute sit cillum&pageSize=7748372",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "aute sit cillum"
												},
												{
													"key": "scopes",
													"value": "aute sit cillum"
												},
												{
													"key": "fields",
													"value": "objectId,value"
												},
												{
													"key": "nextPageKey",
													"value": "aute sit cillum"
												},
												{
													"key": "pageSize",
													"value": "7748372"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"totalCount\": 63976914,\n \"items\": [\n  {\n   \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"author\": \"john.doe@example.com\",\n   \"modified\": 15222593,\n   \"schemaVersion\": \"1.0.0\",\n   \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"created\": 14033339,\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"scope\": \"HOST-D3A3C5A146830A79\",\n   \"value\": {\n    \"autoMonitoring\": true\n   },\n   \"summary\": \"Duis magna pariatur proident\"\n  },\n  {\n   \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"author\": \"john.doe@example.com\",\n   \"modified\": -80770495,\n   \"schemaVersion\": \"1.0.0\",\n   \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"created\": -23520469,\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"scope\": \"HOST-D3A3C5A146830A79\",\n   \"value\": {\n    \"autoMonitoring\": true\n   },\n   \"summary\": \"dolore Lorem in\"\n  }\n ],\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": 45980522\n}"
								},
								{
									"name": "Failed. The specified schema or scope is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=aute sit cillum&scopes=aute sit cillum&fields=objectId,value&nextPageKey=aute sit cillum&pageSize=7748372",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "aute sit cillum"
												},
												{
													"key": "scopes",
													"value": "aute sit cillum"
												},
												{
													"key": "fields",
													"value": "objectId,value"
												},
												{
													"key": "nextPageKey",
													"value": "aute sit cillum"
												},
												{
													"key": "pageSize",
													"value": "7748372"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								}
							]
						},
						{
							"name": "Creates a new settings object | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false",
											"description": "If `true`, the request runs only validation of the submitted settings objects, without saving them."
										}
									]
								},
								"description": "You can upload several objects at once. In that case each object returns its own response code. Check the response body for details."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 8348458,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"nulla anim dolore\",\n     \"message\": \"velit\",\n     \"path\": \"ipsum fugiat incididunt s\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"deserunt incididunt Excepteur in\",\n     \"message\": \"in labore dolor ut enim\",\n     \"path\": \"eiusmod do reprehenderit\"\n    }\n   ],\n   \"message\": \"ex Duis\",\n   \"code\": -99671034\n  }\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 63358441,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"nostrud incididunt ipsum enim\",\n     \"message\": \"fugiat magna\",\n     \"path\": \"officia esse\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"quis dolore\",\n     \"message\": \"amet vel\",\n     \"path\": \"dolore consequat tempor deserunt nisi\"\n    }\n   ],\n   \"message\": \"deserunt id\",\n   \"code\": 25136291\n  }\n }\n]"
								},
								{
									"name": "Multi-status: different objects in the payload resulted in different statuses.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 8348458,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"nulla anim dolore\",\n     \"message\": \"velit\",\n     \"path\": \"ipsum fugiat incididunt s\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"deserunt incididunt Excepteur in\",\n     \"message\": \"in labore dolor ut enim\",\n     \"path\": \"eiusmod do reprehenderit\"\n    }\n   ],\n   \"message\": \"ex Duis\",\n   \"code\": -99671034\n  }\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 63358441,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"nostrud incididunt ipsum enim\",\n     \"message\": \"fugiat magna\",\n     \"path\": \"officia esse\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"quis dolore\",\n     \"message\": \"amet vel\",\n     \"path\": \"dolore consequat tempor deserunt nisi\"\n    }\n   ],\n   \"message\": \"deserunt id\",\n   \"code\": 25136291\n  }\n }\n]"
								},
								{
									"name": "Failed. Schema validation failed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 8348458,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"nulla anim dolore\",\n     \"message\": \"velit\",\n     \"path\": \"ipsum fugiat incididunt s\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"deserunt incididunt Excepteur in\",\n     \"message\": \"in labore dolor ut enim\",\n     \"path\": \"eiusmod do reprehenderit\"\n    }\n   ],\n   \"message\": \"ex Duis\",\n   \"code\": -99671034\n  }\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 63358441,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"nostrud incididunt ipsum enim\",\n     \"message\": \"fugiat magna\",\n     \"path\": \"officia esse\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"quis dolore\",\n     \"message\": \"amet vel\",\n     \"path\": \"dolore consequat tempor deserunt nisi\"\n    }\n   ],\n   \"message\": \"deserunt id\",\n   \"code\": 25136291\n  }\n }\n]"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 8348458,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"nulla anim dolore\",\n     \"message\": \"velit\",\n     \"path\": \"ipsum fugiat incididunt s\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"deserunt incididunt Excepteur in\",\n     \"message\": \"in labore dolor ut enim\",\n     \"path\": \"eiusmod do reprehenderit\"\n    }\n   ],\n   \"message\": \"ex Duis\",\n   \"code\": -99671034\n  }\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 63358441,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"nostrud incididunt ipsum enim\",\n     \"message\": \"fugiat magna\",\n     \"path\": \"officia esse\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"quis dolore\",\n     \"message\": \"amet vel\",\n     \"path\": \"dolore consequat tempor deserunt nisi\"\n    }\n   ],\n   \"message\": \"deserunt id\",\n   \"code\": 25136291\n  }\n }\n]"
								},
								{
									"name": "Failed. Conflicting resource.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 8348458,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"nulla anim dolore\",\n     \"message\": \"velit\",\n     \"path\": \"ipsum fugiat incididunt s\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"deserunt incididunt Excepteur in\",\n     \"message\": \"in labore dolor ut enim\",\n     \"path\": \"eiusmod do reprehenderit\"\n    }\n   ],\n   \"message\": \"ex Duis\",\n   \"code\": -99671034\n  }\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 63358441,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"nostrud incididunt ipsum enim\",\n     \"message\": \"fugiat magna\",\n     \"path\": \"officia esse\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"quis dolore\",\n     \"message\": \"amet vel\",\n     \"path\": \"dolore consequat tempor deserunt nisi\"\n    }\n   ],\n   \"message\": \"deserunt id\",\n   \"code\": 25136291\n  }\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "schemas",
					"item": [
						{
							"name": "Lists available settings schemas | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"latestSchemaVersion\": \"1.4.2\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"displayName\": \"Anomaly Detection for Infrastructure\"\n  },\n  {\n   \"latestSchemaVersion\": \"1.4.2\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"displayName\": \"Anomaly Detection for Infrastructure\"\n  }\n ],\n \"totalCount\": 1\n}"
								}
							]
						},
						{
							"name": "Gets parameters of the specified settings schema | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas",
										":schemaId"
									],
									"query": [
										{
											"key": "schemaVersion",
											"value": "aute sit cillum",
											"description": "The version of the required schema. \n\n If not set, the most recent version is returned."
										}
									],
									"variable": [
										{
											"key": "schemaId",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the required schema."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=aute sit cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"query": [
												{
													"key": "schemaVersion",
													"value": "aute sit cillum"
												}
											],
											"variable": [
												{
													"key": "schemaId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"dynatrace\": \"1\",\n \"schemaId\": \"builtin:anomaly.infrastructure\",\n \"displayName\": \"Anomaly detection for infrastructure\",\n \"description\": \"Dynatrace automatically detects infrastructure-related performance anomalies such as high CPU saturation, memory outages, and low disk-space conditions\",\n \"documentation\": \"dolor qui\",\n \"schemaGroups\": [\n  \"group:some.1\",\n  \"group:some.2\"\n ],\n \"version\": \"1.4.2\",\n \"multiObject\": false,\n \"ordered\": false,\n \"maxObjects\": 10,\n \"allowedScopes\": [\n  \"host\",\n  \"application\"\n ],\n \"enums\": {},\n \"types\": {},\n \"properties\": {},\n \"constraints\": [\n  {\n   \"customValidatorId\": \"my-min-max\",\n   \"minimumPropertyCount\": 1,\n   \"maximumPropertyCount\": 2,\n   \"customMessage\": \"nisi incididunt\",\n   \"properties\": [\n    \"officia do ut minim\",\n    \"quis ut\"\n   ],\n   \"type\": \"PROPERTY_COUNT_RANGE\"\n  },\n  {\n   \"customValidatorId\": \"my-min-max\",\n   \"minimumPropertyCount\": 1,\n   \"maximumPropertyCount\": 2,\n   \"customMessage\": \"nulla pariatur Ut sunt\",\n   \"properties\": [\n    \"sit enim\",\n    \"elit id aute Excepteur velit\"\n   ],\n   \"type\": \"LESS_THAN\"\n  }\n ],\n \"metadata\": {}\n}"
								},
								{
									"name": "Failed. The specified schema doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=aute sit cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"query": [
												{
													"key": "schemaVersion",
													"value": "aute sit cillum"
												}
											],
											"variable": [
												{
													"key": "schemaId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "slo",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters and the calculated value of an SLO",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/slo/:id?from=aute sit cillum&to=aute sit cillum&timeFrame=CURRENT",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo",
										":id"
									],
									"query": [
										{
											"key": "from",
											"value": "aute sit cillum",
											"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
										},
										{
											"key": "to",
											"value": "aute sit cillum",
											"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
										},
										{
											"key": "timeFrame",
											"value": "CURRENT",
											"description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "d366bcc7-6b85-1ff1-2f84-03c04175afe5",
											"description": "(Required) The ID of the required SLO."
										}
									]
								},
								"description": "If **from** and **to** parameters are provided, the SLO is calculated for that timeframe; otherwise the SLO's own timeframe is used."
							},
							"response": [
								{
									"name": "Success. The response contains the parameters and calculated values of the requested SLO.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id?from=aute sit cillum&to=aute sit cillum&timeFrame=CURRENT",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "aute sit cillum"
												},
												{
													"key": "to",
													"value": "aute sit cillum"
												},
												{
													"key": "timeFrame",
													"value": "CURRENT"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"errorBudget\": 1.25,\n \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n \"useRateMetric\": true,\n \"metricRate\": \"builtin:service.successes.server.rate\",\n \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n \"metricDenominator\": \"builtin:service.requestCount.total\",\n \"evaluationType\": \"AGGREGATE\",\n \"numeratorValue\": 80,\n \"denominatorValue\": 90,\n \"relatedOpenProblems\": -16816554,\n \"relatedTotalProblems\": 75223138,\n \"evaluatedPercentage\": 96.25,\n \"timeframe\": \"-1d\",\n \"name\": \"Payment service availability\",\n \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n \"target\": 95,\n \"filter\": \"type(\\\"HOST\\\")\",\n \"description\": \"Check the SLO for our payment service\",\n \"enabled\": true,\n \"status\": \"WARNING\",\n \"error\": \"NONE\",\n \"warning\": 97.5\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id?from=aute sit cillum&to=aute sit cillum&timeFrame=CURRENT",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "aute sit cillum"
												},
												{
													"key": "to",
													"value": "aute sit cillum"
												},
												{
													"key": "timeFrame",
													"value": "CURRENT"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id?from=aute sit cillum&to=aute sit cillum&timeFrame=CURRENT",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "aute sit cillum"
												},
												{
													"key": "to",
													"value": "aute sit cillum"
												},
												{
													"key": "timeFrame",
													"value": "CURRENT"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								}
							]
						},
						{
							"name": "Updates an existing SLO",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "d366bcc7-6b85-1ff1-2f84-03c04175afe5",
											"description": "(Required) The ID of the required SLO."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								}
							]
						},
						{
							"name": "Deletes an SLO",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/slo/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "d366bcc7-6b85-1ff1-2f84-03c04175afe5",
											"description": "(Required) The ID of the required SLO."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The SLO has been deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								},
								{
									"name": "Failed. Conflicting resource.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available SLOs along with calculated values",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/slo?nextPageKey=aute sit cillum&pageSize=7748372&from=aute sit cillum&to=aute sit cillum&sloSelector=&sort=name&timeFrame=CURRENT&pageIdx=1&demo=false&evaluate=false&enabledSlos=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"slo"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "aute sit cillum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "7748372",
									"description": "The amount of SLOs in a single response payload. \n\nThe maximal allowed page size is 10000. \n\nIf not set, 10 is used."
								},
								{
									"key": "from",
									"value": "aute sit cillum",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "aute sit cillum",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sloSelector",
									"value": "",
									"description": "The scope of the query. Only SLOs matching the provided criteria are included in the response. \n\nYou can add one or several of the criteria listed below.\n* ID: id(\"id\"). Filters for an SLO with the given ID.\n* Name: name(\"name\"). Filters for an SLO with the given name. The filter is case-sensitive.\n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Text: text(\"value\"). Filters for all SLOs that contain the given value in their name or description. The filter is case-insensitive.\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/slo?sloSelector=name(\"Service Availability\"), .../api/v2/slo?sloSelector=id(\"id\"), .../api/v2/slo?sloSelector=text(\"Description\"),healthState(\"HEALTHY\")."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "The sorting of SLO entries: \n* `name`: Names in ascending order. \n* `-name`: Names in descending order. \n\nIf not set, the ascending order is used."
								},
								{
									"key": "timeFrame",
									"value": "CURRENT",
									"description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
								},
								{
									"key": "pageIdx",
									"value": "1",
									"description": "Only SLOs on the given page are included in the response. The first page has the index '1'."
								},
								{
									"key": "demo",
									"value": "false",
									"description": "Get your SLOs (`false`) or a set of demo SLOs (`true`)."
								},
								{
									"key": "evaluate",
									"value": "false",
									"description": "Get your SLOs without them being evaluated (`false`) or with evaluations (`true`) with maximum `pageSize` of 25."
								},
								{
									"key": "enabledSlos",
									"value": "true",
									"description": "Get your enabled SLOs (`true`) or disabled ones (`false`)"
								}
							]
						},
						"description": "By default the values are calculated for the SLO's own timeframe. You can use a custom timeframe: \n\n1. Set the **timeFrame** parameter to `GTF`. \n2. Provide the timeframe in **from** and **to** parameters."
					},
					"response": [
						{
							"name": "Success. The response contains the parameters and calculated values of the requested SLO.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/slo?nextPageKey=aute sit cillum&pageSize=7748372&from=aute sit cillum&to=aute sit cillum&sloSelector=&sort=name&timeFrame=CURRENT&pageIdx=1&demo=false&evaluate=false&enabledSlos=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "sloSelector",
											"value": ""
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "timeFrame",
											"value": "CURRENT"
										},
										{
											"key": "pageIdx",
											"value": "1"
										},
										{
											"key": "demo",
											"value": "false"
										},
										{
											"key": "evaluate",
											"value": "false"
										},
										{
											"key": "enabledSlos",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": 80160142,\n \"slo\": [\n  {\n   \"errorBudget\": 1.25,\n   \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n   \"useRateMetric\": true,\n   \"metricRate\": \"builtin:service.successes.server.rate\",\n   \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n   \"metricDenominator\": \"builtin:service.requestCount.total\",\n   \"evaluationType\": \"AGGREGATE\",\n   \"numeratorValue\": 80,\n   \"denominatorValue\": 90,\n   \"relatedOpenProblems\": -63997142,\n   \"relatedTotalProblems\": -33828445,\n   \"evaluatedPercentage\": 96.25,\n   \"timeframe\": \"-1d\",\n   \"name\": \"Payment service availability\",\n   \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n   \"target\": 95,\n   \"filter\": \"type(\\\"HOST\\\")\",\n   \"description\": \"Check the SLO for our payment service\",\n   \"enabled\": true,\n   \"status\": \"WARNING\",\n   \"error\": \"NONE\",\n   \"warning\": 97.5\n  },\n  {\n   \"errorBudget\": 1.25,\n   \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n   \"useRateMetric\": true,\n   \"metricRate\": \"builtin:service.successes.server.rate\",\n   \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n   \"metricDenominator\": \"builtin:service.requestCount.total\",\n   \"evaluationType\": \"AGGREGATE\",\n   \"numeratorValue\": 80,\n   \"denominatorValue\": 90,\n   \"relatedOpenProblems\": -24571530,\n   \"relatedTotalProblems\": 11711547,\n   \"evaluatedPercentage\": 96.25,\n   \"timeframe\": \"-1d\",\n   \"name\": \"Payment service availability\",\n   \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n   \"target\": 95,\n   \"filter\": \"type(\\\"HOST\\\")\",\n   \"description\": \"Check the SLO for our payment service\",\n   \"enabled\": true,\n   \"status\": \"WARNING\",\n   \"error\": \"NONE\",\n   \"warning\": 97.5\n  }\n ],\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": -46536650\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/slo?nextPageKey=aute sit cillum&pageSize=7748372&from=aute sit cillum&to=aute sit cillum&sloSelector=&sort=name&timeFrame=CURRENT&pageIdx=1&demo=false&evaluate=false&enabledSlos=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "aute sit cillum"
										},
										{
											"key": "pageSize",
											"value": "7748372"
										},
										{
											"key": "from",
											"value": "aute sit cillum"
										},
										{
											"key": "to",
											"value": "aute sit cillum"
										},
										{
											"key": "sloSelector",
											"value": ""
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "timeFrame",
											"value": "CURRENT"
										},
										{
											"key": "pageIdx",
											"value": "1"
										},
										{
											"key": "demo",
											"value": "false"
										},
										{
											"key": "evaluate",
											"value": "false"
										},
										{
											"key": "enabledSlos",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				},
				{
					"name": "Creates a new SLO",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/slo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"slo"
							]
						}
					},
					"response": [
						{
							"name": "Success. The new SLO has been created. Response doesn't have a body. The **location** response header contains the ID of the new SLO.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "location",
									"value": "",
									"description": "The location of the new resource created by this request."
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						},
						{
							"name": "Failed. Conflicting resource.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						},
						{
							"name": "Internal server error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount)/(builtin:service.errors.server.totalCount)\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "synthetic",
			"item": [
				{
					"name": "locations",
					"item": [
						{
							"name": "{location Id}",
							"item": [
								{
									"name": "Gets properties of the specified location",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "aute sit cillum",
													"description": "(Required) The Dynatrace entity ID of the required location."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains parameters of the synthetic location.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"entityId\": \"commodo veniam ut deserunt sed\",\n \"latitude\": -21918145.172294825,\n \"longitude\": 78953777.88551304,\n \"name\": \"voluptate sint\",\n \"type\": \"PUBLIC\",\n \"countryCode\": \"ipsum irure adipisicing\",\n \"regionCode\": \"sint qui\",\n \"city\": \"ut dolor\",\n \"status\": \"ENABLED\",\n \"geoLocationId\": \"incididunt quis sed\"\n}"
										}
									]
								},
								{
									"name": "Updates the specified synthetic location",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"PRIVATE\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "aute sit cillum",
													"description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
												}
											]
										},
										"description": "For public locations you can only change the location status."
									},
									"response": [
										{
											"name": "Success. The location has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"PRIVATE\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes the specified private synthetic location",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "aute sit cillum",
													"description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The location has been deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "status",
							"item": [
								{
									"name": "Checks the status of public synthetic locations",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains the public locations status.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"publicLocationsEnabled\": false\n}"
										}
									]
								},
								{
									"name": "Changes the status of public synthetic locations",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"publicLocationsEnabled\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Success. Locations status has been updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publicLocationsEnabled\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict. Public locations couldn't be disabled because there are monitors assigned to them.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publicLocationsEnabled\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Lists all synthetic locations (both public and private) available for your environment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations?cloudPlatform=AWS&type=PUBLIC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									],
									"query": [
										{
											"key": "cloudPlatform",
											"value": "AWS",
											"description": "Filters the resulting set of locations to those which are hosted on a specific cloud platform."
										},
										{
											"key": "type",
											"value": "PUBLIC",
											"description": "Filters the resulting set of locations to those of a specific type."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations?cloudPlatform=AWS&type=PUBLIC",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											],
											"query": [
												{
													"key": "cloudPlatform",
													"value": "AWS"
												},
												{
													"key": "type",
													"value": "PUBLIC"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"locations\": [\n  {\n   \"name\": \"Gdansk\",\n   \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n   \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n   \"type\": \"PUBLIC\",\n   \"cloudPlatform\": \"AMAZON_EC2\",\n   \"ips\": [\n    \"134.189.153.97\",\n    \"134.189.153.98\"\n   ],\n   \"stage\": \"GA\",\n   \"status\": \"ENABLED\",\n   \"capabilities\": [\n    \"BROWSER\",\n    \"HTTP\"\n   ]\n  },\n  {\n   \"name\": \"My private location\",\n   \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n   \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n   \"type\": \"PRIVATE\",\n   \"status\": \"ENABLED\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Creates a new private synthetic location",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entityId\": \"mollit tem\",\n    \"latitude\": -97673150.36301678,\n    \"longitude\": -3932427.0059072524,\n    \"name\": \"cillum sunt non\",\n    \"type\": \"PRIVATE\",\n    \"countryCode\": \"aliquip aute ut dolor\",\n    \"regionCode\": \"cupidatat ipsum\",\n    \"city\": \"Duis\",\n    \"status\": \"ENABLED\",\n    \"geoLocationId\": \"fugiat Lorem irure\",\n    \"nodes\": [\n        \"cupidatat enim eu Lorem\",\n        \"ex mollit eu esse\"\n    ],\n    \"availabilityLocationOutage\": true,\n    \"availabilityNodeOutage\": false,\n    \"locationNodeOutageDelayInMinutes\": 1,\n    \"availabilityNotificationsEnabled\": false,\n    \"autoUpdateChromium\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									]
								}
							},
							"response": [
								{
									"name": "Success. The private location has been created. The response contains the ID of the new location.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entityId\": \"officia do minim\",\n    \"latitude\": -98686903.41061774,\n    \"longitude\": 85458494.36387277,\n    \"name\": \"dolor qui sunt Ut exercitation\",\n    \"type\": \"PUBLIC\",\n    \"countryCode\": \"deserunt\",\n    \"regionCode\": \"anim et ex\",\n    \"city\": \"ad fugiat aute ipsum\",\n    \"status\": \"DISABLED\",\n    \"geoLocationId\": \"e\",\n    \"nodes\": [\n        \"tempor\",\n        \"cupida\"\n    ],\n    \"availabilityLocationOutage\": false,\n    \"availabilityNodeOutage\": true,\n    \"locationNodeOutageDelayInMinutes\": 2,\n    \"availabilityNotificationsEnabled\": false,\n    \"autoUpdateChromium\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"entityId\": \"ex enim eu ea irure\",\n \"geoLocationId\": \"proident quis nulla eiusmod\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "nodes",
					"item": [
						{
							"name": "Lists all synthetic nodes available in your environment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"nodes\": [\n  {\n   \"activeGateVersion\": \"mollit do proident\",\n   \"autoUpdateEnabled\": false,\n   \"browserMonitorsEnabled\": false,\n   \"entityId\": \"mollit dolor esse\",\n   \"healthCheckStatus\": \"Lorem laborum dolor\",\n   \"hostname\": \"minim in veniam elit\",\n   \"ips\": [\n    \"Excepteur Lorem ullamco\",\n    \"culpa\"\n   ],\n   \"oneAgentRoutingEnabled \": false,\n   \"operatingSystem\": \"Ut incididunt sed\",\n   \"playerVersion\": \"enim incididunt\",\n   \"status\": \"eu non proident ut\",\n   \"version\": \"labore Duis consequat quis\"\n  },\n  {\n   \"activeGateVersion\": \"culpa magna\",\n   \"autoUpdateEnabled\": false,\n   \"browserMonitorsEnabled\": false,\n   \"entityId\": \"laboris nostrud\",\n   \"healthCheckStatus\": \"in nisi fugiat\",\n   \"hostname\": \"adipisicing qui\",\n   \"ips\": [\n    \"esse tempor consectetur elit\",\n    \"officia irure\"\n   ],\n   \"oneAgentRoutingEnabled \": true,\n   \"operatingSystem\": \"dolore commodo Duis\",\n   \"playerVersion\": \"dolor voluptate consequat\",\n   \"status\": \"sed elit cillum ad adipisicing\",\n   \"version\": \"nostrud ipsum\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Lists properties of the specified synthetic node",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId",
											"value": "aute sit cillum",
											"description": "(Required) The ID of the required synthetic node."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"activeGateVersion\": \"exercitation Ut do\",\n \"autoUpdateEnabled\": true,\n \"browserMonitorsEnabled\": true,\n \"browserType\": \"qui dolore ea in\",\n \"browserVersion\": \"exercitation consequat sunt eu\",\n \"entityId\": \"pariatur\",\n \"healthCheckStatus\": \"ipsum fugiat in culpa\",\n \"hostname\": \"exercitation quis elit\",\n \"ips\": [\n  \"dolore aute sit\",\n  \"tempor nulla Duis esse\"\n ],\n \"oneAgentRoutingEnabled \": false,\n \"operatingSystem\": \"ut\",\n \"playerVersion\": \"pariatur aliqua\",\n \"status\": \"aliquip culpa quis\",\n \"version\": \"in labore id\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns detailed information about last HTTP monitor execution. | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/synthetic/execution/:monitorId/:resultType?locationId=aute sit cillum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synthetic",
								"execution",
								":monitorId",
								":resultType"
							],
							"query": [
								{
									"key": "locationId",
									"value": "aute sit cillum",
									"description": "Filters the results to those executed by specified Synthetic location. Specify the ID of the location."
								}
							],
							"variable": [
								{
									"key": "monitorId",
									"value": "aute sit cillum",
									"description": "(Required) Identifier of the HTTP monitor for which last execution result is returned."
								},
								{
									"key": "resultType",
									"value": "SUCCESS",
									"description": "(Required) Defines the result type of the last HTTP monitor's execution."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. The response contains detailed data.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/synthetic/execution/:monitorId/:resultType?locationId=aute sit cillum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"execution",
										":monitorId",
										":resultType"
									],
									"query": [
										{
											"key": "locationId",
											"value": "aute sit cillum"
										}
									],
									"variable": [
										{
											"key": "monitorId"
										},
										{
											"key": "resultType"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"monitorId\": \"amet tempor esse\",\n \"locationsExecutionResults\": [\n  {\n   \"locationId\": \"ex Lorem ut\",\n   \"executionId\": \"aute Ut qui\",\n   \"requestResults\": [\n    {\n     \"requestId\": \"do anim Excepteur labore reprehenderit\",\n     \"requestName\": \"deserunt culpa dolor cons\",\n     \"sequenceNumber\": -64804616,\n     \"startTimestamp\": -12389519,\n     \"engineId\": 93052977,\n     \"publicLocation\": false,\n     \"url\": \"fugiat\",\n     \"method\": \"deserunt commodo\",\n     \"requestBody\": \"culpa\",\n     \"requestHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"responseStatusCode\": 76960671,\n     \"responseBody\": \"et vo\",\n     \"responseSize\": -19636843,\n     \"responseBodySizeLimitExceeded\": true,\n     \"responseHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"resolvedIps\": [\n      \"magna\",\n      \"in esse consectetur commodo\"\n     ],\n     \"healthStatusCode\": -73996751,\n     \"healthStatus\": \"cupidatat amet non\",\n     \"responseMessage\": \"Ut\",\n     \"peerCertificateExpiryDate\": 55967518,\n     \"peerCertificateDetails\": \"aute\",\n     \"totalTime\": -3634477,\n     \"hostNameResolutionTime\": 7335392,\n     \"tcpConnectTime\": 95421866,\n     \"tlsHandshakeTime\": -75886098,\n     \"timeToFirstByte\": -76870037,\n     \"redirectionTime\": -14952102,\n     \"waitingTime\": 44090875,\n     \"redirectsCount\": 72918156,\n     \"failureMessage\": \"laborum adipisicing\"\n    },\n    {\n     \"requestId\": \"consectetur deserunt\",\n     \"requestName\": \"reprehenderit\",\n     \"sequenceNumber\": 86308570,\n     \"startTimestamp\": 33771460,\n     \"engineId\": -99661025,\n     \"publicLocation\": true,\n     \"url\": \"enim occaecat\",\n     \"method\": \"do sunt sint reprehenderit\",\n     \"requestBody\": \"deserunt\",\n     \"requestHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"responseStatusCode\": -17295300,\n     \"responseBody\": \"proident Duis nostrud\",\n     \"responseSize\": -42813018,\n     \"responseBodySizeLimitExceeded\": false,\n     \"responseHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"resolvedIps\": [\n      \"nostrud non anim eu\",\n      \"anim mollit ea quis do\"\n     ],\n     \"healthStatusCode\": 1207401,\n     \"healthStatus\": \"in\",\n     \"responseMessage\": \"in sit\",\n     \"peerCertificateExpiryDate\": -5955109,\n     \"peerCertificateDetails\": \"Lorem\",\n     \"totalTime\": -72122985,\n     \"hostNameResolutionTime\": 77910804,\n     \"tcpConnectTime\": 36502006,\n     \"tlsHandshakeTime\": 21233501,\n     \"timeToFirstByte\": -82052100,\n     \"redirectionTime\": -92766382,\n     \"waitingTime\": 72471299,\n     \"redirectsCount\": -24841246,\n     \"failureMessage\": \"laboris veniam\"\n    }\n   ]\n  },\n  {\n   \"locationId\": \"dolore in ut\",\n   \"executionId\": \"est nisi exercitation deserunt\",\n   \"requestResults\": [\n    {\n     \"requestId\": \"Lorem labore non\",\n     \"requestName\": \"commodo Excepteur dolore officia minim\",\n     \"sequenceNumber\": 87002932,\n     \"startTimestamp\": 95889969,\n     \"engineId\": 69388469,\n     \"publicLocation\": true,\n     \"url\": \"anim laboris\",\n     \"method\": \"ea mollit do\",\n     \"requestBody\": \"nostrud sunt non \",\n     \"requestHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"responseStatusCode\": 65513901,\n     \"responseBody\": \"consequat nisi eiusmod exercitation\",\n     \"responseSize\": 47146191,\n     \"responseBodySizeLimitExceeded\": false,\n     \"responseHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"resolvedIps\": [\n      \"occaecat id aliquip officia\",\n      \"qui\"\n     ],\n     \"healthStatusCode\": -63840821,\n     \"healthStatus\": \"quis est sed\",\n     \"responseMessage\": \"amet ex\",\n     \"peerCertificateExpiryDate\": 28892127,\n     \"peerCertificateDetails\": \"dolor aute eu in minim\",\n     \"totalTime\": -32302672,\n     \"hostNameResolutionTime\": -3192244,\n     \"tcpConnectTime\": -36781826,\n     \"tlsHandshakeTime\": -69358071,\n     \"timeToFirstByte\": 41721480,\n     \"redirectionTime\": -997120,\n     \"waitingTime\": -49639979,\n     \"redirectsCount\": 90739539,\n     \"failureMessage\": \"adipisicing magna sed in\"\n    },\n    {\n     \"requestId\": \"dolore ad culpa\",\n     \"requestName\": \"labore amet\",\n     \"sequenceNumber\": -44682798,\n     \"startTimestamp\": 30962350,\n     \"engineId\": -50658606,\n     \"publicLocation\": true,\n     \"url\": \"velit\",\n     \"method\": \"ipsum\",\n     \"requestBody\": \"sed velit aliqua\",\n     \"requestHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"responseStatusCode\": 76203937,\n     \"responseBody\": \"sunt\",\n     \"responseSize\": -85124414,\n     \"responseBodySizeLimitExceeded\": true,\n     \"responseHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"resolvedIps\": [\n      \"aliqua sed\",\n      \"dolor dolore veniam\"\n     ],\n     \"healthStatusCode\": -26402529,\n     \"healthStatus\": \"quis\",\n     \"responseMessage\": \"quis do veniam ex\",\n     \"peerCertificateExpiryDate\": 80953360,\n     \"peerCertificateDetails\": \"proident aute\",\n     \"totalTime\": -28273784,\n     \"hostNameResolutionTime\": 17438363,\n     \"tcpConnectTime\": 92453535,\n     \"tlsHandshakeTime\": 49857294,\n     \"timeToFirstByte\": 74716280,\n     \"redirectionTime\": 71626583,\n     \"waitingTime\": -31841291,\n     \"redirectsCount\": 66654349,\n     \"failureMessage\": \"Ut et\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "tenant Token Rotation",
			"item": [
				{
					"name": "Starts tenant token rotation",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tenantTokenRotation/start",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenantTokenRotation",
								"start"
							]
						},
						"description": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation."
					},
					"response": [
						{
							"name": "Success. The new tenant token is created and will replace the old one. The **active** field of the response contains the new tenant token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"start"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"value\": \"Ut enim\"\n },\n \"old\": {\n  \"value\": \"nostrud laboris aliqua\"\n }\n}"
						},
						{
							"name": "Failed. Another rotation process is already in progress.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"start"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				},
				{
					"name": "Cancels tenant token rotation",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tenantTokenRotation/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenantTokenRotation",
								"cancel"
							]
						},
						"description": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation."
					},
					"response": [
						{
							"name": "Success. Rotation process has been cancelled. The current tenant token remains valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"cancel"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"value\": \"Ut enim\"\n },\n \"old\": {\n  \"value\": \"nostrud laboris aliqua\"\n }\n}"
						},
						{
							"name": "Failed. There is no ongoing rotation process.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"cancel"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				},
				{
					"name": "Finishes tenant token rotation",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tenantTokenRotation/finish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenantTokenRotation",
								"finish"
							]
						},
						"description": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation."
					},
					"response": [
						{
							"name": "Success. The rotation process is completed. The **active** field of the response contains the new tenant token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/finish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"finish"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": {\n  \"value\": \"Ut enim\"\n },\n \"old\": {\n  \"value\": \"nostrud laboris aliqua\"\n }\n}"
						},
						{
							"name": "No ongoing rotation process.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/finish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"finish"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"dolor amet tempor\",\n    \"message\": \"id ea\",\n    \"path\": \"consequat dolor\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut in\",\n    \"message\": \"reprehenderit minim labore commodo\",\n    \"path\": \"eu ex sed\"\n   }\n  ],\n  \"message\": \"cupidatat adipisicing\",\n  \"code\": 75070884\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Provides advice for security problems. | maturity=EARLY_ADOPTER",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/davis/securityAdvices?managementZoneFilter=aute sit cillum&nextPageKey=aute sit cillum&pageSize=7748372",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"davis",
						"securityAdvices"
					],
					"query": [
						{
							"key": "managementZoneFilter",
							"value": "aute sit cillum",
							"description": "To specify management zones, use one of the options listed below. For each option you can specify multiple comma-separated values. If several values are specified, the **OR** logic applies. All values are case-sensitive and must be quoted. \n\n* Management zone ID: ids(\"mzId-1\", \"mzId-2\"). \n* Management zone names: names(\"mz-1\", \"mz-2\"). \n\nYou can specify several comma-separated criteria (for example, `names(\"myMz\"),ids(\"9130632296508575249\")`)."
						},
						{
							"key": "nextPageKey",
							"value": "aute sit cillum",
							"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
						},
						{
							"key": "pageSize",
							"value": "7748372",
							"description": "The amount of security advices in a single response payload. \n\nThe maximal allowed page size is 50. \n\nIf not set, 5 is used."
						}
					]
				},
				"description": "You can narrow down the output by providing the management zone and pagination. If you specify a management zone, only problems originating from that zone are included to the request."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/davis/securityAdvices?managementZoneFilter=aute sit cillum&nextPageKey=aute sit cillum&pageSize=7748372",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"davis",
								"securityAdvices"
							],
							"query": [
								{
									"key": "managementZoneFilter",
									"value": "aute sit cillum"
								},
								{
									"key": "nextPageKey",
									"value": "aute sit cillum"
								},
								{
									"key": "pageSize",
									"value": "7748372"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						}
					],
					"cookie": [],
					"body": "{\n \"totalCount\": -96359256,\n \"pageSize\": 93638654,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"advices\": [\n  {\n   \"name\": \"quis fugiat ipsum\",\n   \"vulnerableComponent\": \"officia Ut deserunt veniam\",\n   \"technology\": \"NODE_JS\",\n   \"adviceType\": \"UPGRADE\",\n   \"critical\": [\n    \"cillum pariatur\",\n    \"ullamco nisi sunt sed\"\n   ],\n   \"high\": [\n    \"ullamco culpa laborum occaecat\",\n    \"cillum voluptate dolore ullamco\"\n   ],\n   \"medium\": [\n    \"elit sit\",\n    \"Ut id\"\n   ],\n   \"low\": [\n    \"non proident est\",\n    \"in dolore irure pariatur\"\n   ],\n   \"none\": [\n    \"et Excepteur aute\",\n    \"veniam elit qui\"\n   ]\n  },\n  {\n   \"name\": \"amet aliqua velit adipisicing est\",\n   \"vulnerableComponent\": \"ut minim\",\n   \"technology\": \"DOTNET\",\n   \"adviceType\": \"UPGRADE\",\n   \"critical\": [\n    \"exercitation consequat elit\",\n    \"eiusmod dolore et aute\"\n   ],\n   \"high\": [\n    \"Ut cupidatat irure commodo\",\n    \"nostrud ut labore\"\n   ],\n   \"medium\": [\n    \"et anim Excepteur in ut\",\n    \"Lorem quis\"\n   ],\n   \"low\": [\n    \"elit culpa\",\n    \"aliqua nostrud\"\n   ],\n   \"none\": [\n    \"amet exercitation voluptate ad\",\n    \"labore anim\"\n   ]\n  }\n ]\n}"
				}
			]
		},
		{
			"name": "Returns all releases | maturity=EARLY_ADOPTER",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/releases?from=aute sit cillum&to=aute sit cillum&nextPageKey=aute sit cillum&pageSize=7748372&demo=false&releasesSelector=&sort=name",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"releases"
					],
					"query": [
						{
							"key": "from",
							"value": "aute sit cillum",
							"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
						},
						{
							"key": "to",
							"value": "aute sit cillum",
							"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
						},
						{
							"key": "nextPageKey",
							"value": "aute sit cillum",
							"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
						},
						{
							"key": "pageSize",
							"value": "7748372",
							"description": "The amount of Releases in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
						},
						{
							"key": "demo",
							"value": "false",
							"description": "Get your Releases (`false`) or a set of demo Releases (`true`)."
						},
						{
							"key": "releasesSelector",
							"value": "",
							"description": "Defines the scope of the query. Only Releases matching the provided criteria are included in the response.\n\nYou can add one or several of the criteria listed below.\n* Monitoring state: monitoringState(\"Active\") or monitoringState(\"Inactive\"). You can specify only one monitoring state. \n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Name: entityName(\"name\"). Filters for all releases that contain the given value in their name. The filter is case-insensitive.\n* Entity ID: entityId(\"id\").\n* Product: releasesProduct(\"product\"). Filters for all releases that contain the given value in their product. The filter is case-insensitive.\n* Stage: releasesStage(\"stage\"). Filters for all releases that contain the given value in their stage. The filter is case-insensitive.\n* Version: releasesVersion(\"version\"). Filters for all releases that contain the given value in their version. The filter is case-insensitive.\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/releases?releasesSelector=name(\"Server\"),monitoringState(\"Active\"),healthState(\"HEALTHY\"),releasesVersion(\"1.0.7\")."
						},
						{
							"key": "sort",
							"value": "name",
							"description": "Specifies the field that is used for sorting the releases list.\nThe field has a sign prefix (+/-) which corresponds to the sorting order ('+' for ascending and '-' for descending). If no sign prefix is set, then the default ascending sorting order will be applied. You can sort by the following properties:\n* 'product': Product name\n* 'name': Release name\n* 'stage': Stage name\n* 'version': Version\n* 'instances': Instances\n* 'traffic': Traffic\n\nIf not set, the ascending order sorting for name is applied."
						}
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/releases?from=aute sit cillum&to=aute sit cillum&nextPageKey=aute sit cillum&pageSize=7748372&demo=false&releasesSelector=&sort=name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"releases"
							],
							"query": [
								{
									"key": "from",
									"value": "aute sit cillum"
								},
								{
									"key": "to",
									"value": "aute sit cillum"
								},
								{
									"key": "nextPageKey",
									"value": "aute sit cillum"
								},
								{
									"key": "pageSize",
									"value": "7748372"
								},
								{
									"key": "demo",
									"value": "false"
								},
								{
									"key": "releasesSelector",
									"value": ""
								},
								{
									"key": "sort",
									"value": "name"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						}
					],
					"cookie": [],
					"body": "{\n \"totalCount\": -87222476,\n \"releasesWithProblems\": 45314929,\n \"releases\": [\n  {\n   \"softwareTechs\": [\n    {\n     \"technology\": \"JAVA\",\n     \"edition\": \"OpenJDK\",\n     \"version\": \"1.8.0_242\",\n     \"verbatimType\": \"Java\"\n    }\n   ],\n   \"product\": \"Sockshop\",\n   \"releaseEntityId\": \"PROCESS_GROUP-DFDBAC9CBF104253\",\n   \"securityVulnerabilitiesCount\": 4,\n   \"affectedByProblems\": true,\n   \"securityVulnerabilitiesEnabled\": true,\n   \"throughput\": 923234,\n   \"affectedBySecurityVulnerabilities\": true,\n   \"instances\": [\n    {\n     \"securityVulnerabilities\": [\n      \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n     ],\n     \"buildVersion\": \"223005\",\n     \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n     \"problems\": [\n      \"573177299181554914_1616573184015V2\"\n     ]\n    },\n    {\n     \"securityVulnerabilities\": [\n      \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n     ],\n     \"buildVersion\": \"223005\",\n     \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n     \"problems\": [\n      \"573177299181554914_1616573184015V2\"\n     ]\n    }\n   ],\n   \"running\": true,\n   \"name\": \"cluster\",\n   \"version\": \"1.195.34.12341232423-012342\",\n   \"problemCount\": 4,\n   \"stage\": \"staging\"\n  },\n  {\n   \"softwareTechs\": [\n    {\n     \"technology\": \"JAVA\",\n     \"edition\": \"OpenJDK\",\n     \"version\": \"1.8.0_242\",\n     \"verbatimType\": \"Java\"\n    }\n   ],\n   \"product\": \"Sockshop\",\n   \"releaseEntityId\": \"PROCESS_GROUP-DFDBAC9CBF104253\",\n   \"securityVulnerabilitiesCount\": 4,\n   \"affectedByProblems\": true,\n   \"securityVulnerabilitiesEnabled\": true,\n   \"throughput\": 923234,\n   \"affectedBySecurityVulnerabilities\": true,\n   \"instances\": [\n    {\n     \"securityVulnerabilities\": [\n      \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n     ],\n     \"buildVersion\": \"223005\",\n     \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n     \"problems\": [\n      \"573177299181554914_1616573184015V2\"\n     ]\n    },\n    {\n     \"securityVulnerabilities\": [\n      \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n     ],\n     \"buildVersion\": \"223005\",\n     \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n     \"problems\": [\n      \"573177299181554914_1616573184015V2\"\n     ]\n    }\n   ],\n   \"running\": true,\n   \"name\": \"cluster\",\n   \"version\": \"1.195.34.12341232423-012342\",\n   \"problemCount\": 4,\n   \"stage\": \"staging\"\n  }\n ],\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": -93369876\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "Api-Token {{DT_TOKEN}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://{{DT_HOST}}/api/v2"
		}
	]
}