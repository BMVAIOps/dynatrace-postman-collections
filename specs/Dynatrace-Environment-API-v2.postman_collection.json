{
	"info": {
		"_postman_id": "dda8cda5-8af9-49f3-9b8f-6322f578ad96",
		"name": "Dynatrace Environment API v2",
		"description": "\nDocumentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress. \n\nIf you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, refer to the [help page](https://dt-url.net/2u23k1k) .\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "active Gates",
			"item": [
				{
					"name": "{ag Id}",
					"item": [
						{
							"name": "update Jobs",
							"item": [
								{
									"name": "{job Id}",
									"item": [
										{
											"name": "Gets the parameters of the specified update job | maturity=EARLY_ADOPTER",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"https://{{DT_HOST}}/api/v2"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
												},
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"https://{{DT_HOST}}/api/v2"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"targetVersion\": \"1.190.0.20200301-130000\",\n \"jobId\": \"-3524498778810258605\",\n \"jobState\": \"SUCCEED\",\n \"updateMethod\": \"AUTOMATIC\",\n \"updateType\": \"ACTIVE_GATE\",\n \"cancelable\": false,\n \"startVersion\": \"1.185.0.20200201-120000\",\n \"timestamp\": 1582031917814,\n \"agType\": \"ENVIRONMENT\",\n \"environments\": [\n  \"minim\",\n  \"et non in esse Excepteur\"\n ],\n \"error\": \"elit id\",\n \"duration\": 3608000\n}"
												}
											]
										},
										{
											"name": "Deletes the specified update job | maturity=EARLY_ADOPTER",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"https://{{DT_HOST}}/api/v2"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
												},
												{
													"name": "Success. The update-job have been deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"https://{{DT_HOST}}/api/v2"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"https://{{DT_HOST}}/api/v2"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists update jobs for the specified ActiveGate | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs?from=<string>&to=<string>&startVersionCompareType=EQUAL&startVersion=<string>&updateType=<string>&targetVersionCompareType=EQUAL&targetVersion=<string>",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"query": [
												{
													"key": "from",
													"value": "<string>",
													"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days."
												},
												{
													"key": "to",
													"value": "<string>",
													"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the current timestamp is used."
												},
												{
													"key": "startVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
												},
												{
													"key": "startVersion",
													"value": "<string>",
													"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "updateType",
													"value": "<string>",
													"description": "Filters the resulting set of update-jobs by the update type."
												},
												{
													"key": "targetVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
												},
												{
													"key": "targetVersion",
													"value": "<string>",
													"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
												}
											],
											"variable": [
												{
													"key": "agId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										},
										"description": "The job can update the ActiveGate to the specified version or the latest available one."
									},
									"response": [
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs?from=<string>&to=<string>&startVersionCompareType=EQUAL&startVersion=<string>&updateType=<string>&targetVersionCompareType=EQUAL&targetVersion=<string>",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "<string>"
														},
														{
															"key": "to",
															"value": "<string>"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "<string>"
														},
														{
															"key": "updateType",
															"value": "<string>"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs?from=<string>&to=<string>&startVersionCompareType=EQUAL&startVersion=<string>&updateType=<string>&targetVersionCompareType=EQUAL&targetVersion=<string>",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "<string>"
														},
														{
															"key": "to",
															"value": "<string>"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "<string>"
														},
														{
															"key": "updateType",
															"value": "<string>"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"agId\": \"1056821394\",\n \"updateJobs\": [\n  {\n   \"targetVersion\": \"1.190.0.20200301-130000\",\n   \"jobId\": \"-3524498778810258605\",\n   \"jobState\": \"SUCCEED\",\n   \"updateMethod\": \"AUTOMATIC\",\n   \"updateType\": \"ACTIVE_GATE\",\n   \"cancelable\": false,\n   \"startVersion\": \"1.185.0.20200201-120000\",\n   \"timestamp\": 1582031917814,\n   \"agType\": \"ENVIRONMENT\",\n   \"environments\": [\n    \"dolor anim\",\n    \"qui pariatur Lorem\"\n   ],\n   \"error\": \"non in\",\n   \"duration\": 3608000\n  },\n  {\n   \"targetVersion\": \"1.190.0.20200301-130000\",\n   \"jobId\": \"-3524498778810258605\",\n   \"jobState\": \"SUCCEED\",\n   \"updateMethod\": \"AUTOMATIC\",\n   \"updateType\": \"ACTIVE_GATE\",\n   \"cancelable\": false,\n   \"startVersion\": \"1.185.0.20200201-120000\",\n   \"timestamp\": 1582031917814,\n   \"agType\": \"ENVIRONMENT\",\n   \"environments\": [\n    \"aute consectetur\",\n    \"velit dolore magna aliqua\"\n   ],\n   \"error\": \"nulla \",\n   \"duration\": 3608000\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Creates a new update job for the specified ActiveGate | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetVersion\": \"<string>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"variable": [
												{
													"key": "agId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
										},
										{
											"name": "Success. The update-job have been created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"targetVersion\": \"1.190.0.20200301-130000\",\n \"jobId\": \"-3524498778810258605\",\n \"jobState\": \"SUCCEED\",\n \"updateMethod\": \"AUTOMATIC\",\n \"updateType\": \"ACTIVE_GATE\",\n \"cancelable\": false,\n \"startVersion\": \"1.185.0.20200201-120000\",\n \"timestamp\": 1582031917814,\n \"agType\": \"ENVIRONMENT\",\n \"environments\": [\n  \"minim\",\n  \"et non in esse Excepteur\"\n ],\n \"error\": \"elit id\",\n \"duration\": 3608000\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request. | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetVersion\": \"<string>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs/validator",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted update-job is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs/validator",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId/updateJobs/validator",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the details of the specified ActiveGate | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"activeGates",
										":agId"
									],
									"variable": [
										{
											"key": "agId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the required ActiveGate."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"1056821393\",\n \"networkAddresses\": [\n  \"aute amet\",\n  \"do mollit\"\n ],\n \"osType\": \"WINDOWS\",\n \"autoUpdateStatus\": \"OUTDATED\",\n \"offlineSince\": 1582031917814,\n \"version\": \"1.185.0.20200201-120000\",\n \"type\": \"ENVIRONMENT\",\n \"hostname\": \"exampleHostname\",\n \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n \"environments\": [\n  \"ut voluptate officia anim\",\n  \"est proident officia pariatur\"\n ],\n \"networkZone\": \"exampleNetworkZone\",\n \"group\": \"default\"\n}"
								},
								{
									"name": "Not found. See response body for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/activeGates/:agId",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available ActiveGates | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/activeGates?hostname=<string>&osType=<string>&networkAddress=<string>&type=<string>&networkZone=<string>&updateStatus=<string>&versionCompareType=EQUAL&version=<string>&group=<string>&online=<boolean>",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"activeGates"
							],
							"query": [
								{
									"key": "hostname",
									"value": "<string>",
									"description": "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "osType",
									"value": "<string>",
									"description": "Filters the resulting set of ActiveGates by the OS type of the host it's running on."
								},
								{
									"key": "networkAddress",
									"value": "<string>",
									"description": "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "Filters the resulting set of ActiveGates by the ActiveGate type."
								},
								{
									"key": "networkZone",
									"value": "<string>",
									"description": "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "updateStatus",
									"value": "<string>",
									"description": "Filters the resulting set of ActiveGates by the auto-update status."
								},
								{
									"key": "versionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here."
								},
								{
									"key": "version",
									"value": "<string>",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here."
								},
								{
									"key": "group",
									"value": "<string>",
									"description": "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "online",
									"value": "<boolean>",
									"description": "Filters the resulting set of ActiveGates by the communication status."
								}
							]
						},
						"description": "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/activeGates?hostname=<string>&osType=<string>&networkAddress=<string>&type=<string>&networkZone=<string>&updateStatus=<string>&versionCompareType=EQUAL&version=<string>&group=<string>&online=<boolean>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "<string>"
										},
										{
											"key": "osType",
											"value": "<string>"
										},
										{
											"key": "networkAddress",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "networkZone",
											"value": "<string>"
										},
										{
											"key": "updateStatus",
											"value": "<string>"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "<string>"
										},
										{
											"key": "group",
											"value": "<string>"
										},
										{
											"key": "online",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"activeGates\": [\n  {\n   \"id\": \"1056821393\",\n   \"networkAddresses\": [\n    \"ullamco commodo reprehen\",\n    \"nisi amet\"\n   ],\n   \"osType\": \"WINDOWS\",\n   \"autoUpdateStatus\": \"OUTDATED\",\n   \"offlineSince\": 1582031917814,\n   \"version\": \"1.185.0.20200201-120000\",\n   \"type\": \"ENVIRONMENT\",\n   \"hostname\": \"exampleHostname\",\n   \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n   \"environments\": [\n    \"sed quis ad reprehenderit\",\n    \"in eu veniam in\"\n   ],\n   \"networkZone\": \"exampleNetworkZone\",\n   \"group\": \"default\"\n  },\n  {\n   \"id\": \"1056821393\",\n   \"networkAddresses\": [\n    \"minim exercitation elit in\",\n    \"culpa ullamco\"\n   ],\n   \"osType\": \"WINDOWS\",\n   \"autoUpdateStatus\": \"OUTDATED\",\n   \"offlineSince\": 1582031917814,\n   \"version\": \"1.185.0.20200201-120000\",\n   \"type\": \"ENVIRONMENT\",\n   \"hostname\": \"exampleHostname\",\n   \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n   \"environments\": [\n    \"aliquip sint\",\n    \"Lorem\"\n   ],\n   \"networkZone\": \"exampleNetworkZone\",\n   \"group\": \"default\"\n  }\n ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/activeGates?hostname=<string>&osType=<string>&networkAddress=<string>&type=<string>&networkZone=<string>&updateStatus=<string>&versionCompareType=EQUAL&version=<string>&group=<string>&online=<boolean>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "<string>"
										},
										{
											"key": "osType",
											"value": "<string>"
										},
										{
											"key": "networkAddress",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "networkZone",
											"value": "<string>"
										},
										{
											"key": "updateStatus",
											"value": "<string>"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "<string>"
										},
										{
											"key": "group",
											"value": "<string>"
										},
										{
											"key": "online",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
						}
					]
				},
				{
					"name": "List ActiveGates with update jobs | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/activeGates/updateJobs?from=<string>&to=<string>&startVersionCompareType=EQUAL&startVersion=<string>&updateType=<string>&targetVersionCompareType=EQUAL&targetVersion=<string>",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"activeGates",
								"updateJobs"
							],
							"query": [
								{
									"key": "from",
									"value": "<string>",
									"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days."
								},
								{
									"key": "to",
									"value": "<string>",
									"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "startVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
								},
								{
									"key": "startVersion",
									"value": "<string>",
									"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "updateType",
									"value": "<string>",
									"description": "Filters the resulting set of update-jobs by the update type."
								},
								{
									"key": "targetVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
								},
								{
									"key": "targetVersion",
									"value": "<string>",
									"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
								}
							]
						},
						"description": "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress."
					},
					"response": [
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/activeGates/updateJobs?from=<string>&to=<string>&startVersionCompareType=EQUAL&startVersion=<string>&updateType=<string>&targetVersionCompareType=EQUAL&targetVersion=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "<string>"
										},
										{
											"key": "updateType",
											"value": "<string>"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/activeGates/updateJobs?from=<string>&to=<string>&startVersionCompareType=EQUAL&startVersion=<string>&updateType=<string>&targetVersionCompareType=EQUAL&targetVersion=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "<string>"
										},
										{
											"key": "updateType",
											"value": "<string>"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"allUpdateJobs\": [\n  {\n   \"agId\": \"1056821394\",\n   \"updateJobs\": [\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"cancelable\": false,\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"timestamp\": 1582031917814,\n     \"agType\": \"ENVIRONMENT\",\n     \"environments\": [\n      \"pariatur laborum sint laboris cupidatat\",\n      \"esse\"\n     ],\n     \"error\": \"in consectetur minim dolor\",\n     \"duration\": 3608000\n    },\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"cancelable\": false,\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"timestamp\": 1582031917814,\n     \"agType\": \"ENVIRONMENT\",\n     \"environments\": [\n      \"ea labore elit\",\n      \"enim reprehenderit fugiat ad\"\n     ],\n     \"error\": \"si\",\n     \"duration\": 3608000\n    }\n   ]\n  },\n  {\n   \"agId\": \"1056821394\",\n   \"updateJobs\": [\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"cancelable\": false,\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"timestamp\": 1582031917814,\n     \"agType\": \"ENVIRONMENT\",\n     \"environments\": [\n      \"elit ut\",\n      \"nisi reprehenderit\"\n     ],\n     \"error\": \"proident commodo Duis si\",\n     \"duration\": 3608000\n    },\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"cancelable\": false,\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"timestamp\": 1582031917814,\n     \"agType\": \"ENVIRONMENT\",\n     \"environments\": [\n      \"irure sed\",\n      \"Duis Excepteur tempor exercitat\"\n     ],\n     \"error\": \"in commodo\",\n     \"duration\": 3608000\n    }\n   ]\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "entity Types",
			"item": [
				{
					"name": "Gets a list of properties for all entity types | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/entityTypes?nextPageKey=<string>&pageSize=<long>",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"entityTypes"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "<string>",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "<long>",
									"description": "The amount of entity types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/entityTypes?nextPageKey=<string>&pageSize=<long>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"entityTypes"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": 95705707,\n \"pageSize\": -57624077,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"types\": [\n  {\n   \"tags\": \"dolor labore\",\n   \"entityLimitExceeded\": true,\n   \"toRelationships\": [\n    {\n     \"fromTypes\": [\n      \"commodo culpa pariatur\",\n      \"ut aute ut pariatur\"\n     ],\n     \"id\": \"eiusmod\"\n    },\n    {\n     \"fromTypes\": [\n      \"fugiat tempor\",\n      \"Lorem elit in\"\n     ],\n     \"id\": \"veniam non reprehender\"\n    }\n   ],\n   \"fromRelationships\": [\n    {\n     \"toTypes\": [\n      \"deserunt adipisicin\",\n      \"consequat\"\n     ],\n     \"id\": \"culpa\"\n    },\n    {\n     \"toTypes\": [\n      \"nisi sint enim adipisicin\",\n      \"ipsum Ut occaecat\"\n     ],\n     \"id\": \"exercitation\"\n    }\n   ],\n   \"managementZones\": \"culpa voluptate esse non\",\n   \"properties\": [\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\"\n    },\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\"\n    }\n   ],\n   \"type\": \"in consectetur sed veniam Excepteur\"\n  },\n  {\n   \"tags\": \"anim irure ad\",\n   \"entityLimitExceeded\": true,\n   \"toRelationships\": [\n    {\n     \"fromTypes\": [\n      \"fugiat quis amet deserunt\",\n      \"esse aliqua qui quis eu\"\n     ],\n     \"id\": \"cillum anim enim eu\"\n    },\n    {\n     \"fromTypes\": [\n      \"qui ad\",\n      \"do non esse\"\n     ],\n     \"id\": \"labore magna\"\n    }\n   ],\n   \"fromRelationships\": [\n    {\n     \"toTypes\": [\n      \"fugiat dolor in\",\n      \"in commodo velit irure\"\n     ],\n     \"id\": \"commodo deserunt\"\n    },\n    {\n     \"toTypes\": [\n      \"in consectetur amet aliqua\",\n      \"Ut\"\n     ],\n     \"id\": \"sit veniam\"\n    }\n   ],\n   \"managementZones\": \"dolore\",\n   \"properties\": [\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\"\n    },\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\"\n    }\n   ],\n   \"type\": \"deserunt sed velit\"\n  }\n ]\n}"
						},
						{
							"name": "Failed. There are no more entity types to export.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/entityTypes?nextPageKey=<string>&pageSize=<long>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"entityTypes"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Gets a list of properties for the specified entity type | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/entityTypes/:type",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"entityTypes",
								":type"
							],
							"variable": [
								{
									"key": "type",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The required entity type."
								}
							]
						}
					},
					"response": [
						{
							"name": "Failed. The requested monitored entity type is not exportable or doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/entityTypes/:type",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"entityTypes",
										":type"
									],
									"variable": [
										{
											"key": "type"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/entityTypes/:type",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"entityTypes",
										":type"
									],
									"variable": [
										{
											"key": "type"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"tags\": \"ess\",\n \"entityLimitExceeded\": false,\n \"toRelationships\": [\n  {\n   \"fromTypes\": [\n    \"tempor in ad voluptate\",\n    \"deserunt non et in occaecat\"\n   ],\n   \"id\": \"ex qui laborum Excepteur\"\n  },\n  {\n   \"fromTypes\": [\n    \"mollit adipisicing proident eu in\",\n    \"in cupidatat Excepteur\"\n   ],\n   \"id\": \"cupidatat\"\n  }\n ],\n \"fromRelationships\": [\n  {\n   \"toTypes\": [\n    \"fugiat elit\",\n    \"voluptate\"\n   ],\n   \"id\": \"in pariatur labo\"\n  },\n  {\n   \"toTypes\": [\n    \"cillum adipisicing\",\n    \"in reprehenderit\"\n   ],\n   \"id\": \"aliquip reprehenderit minim Excepteur anim\"\n  }\n ],\n \"managementZones\": \"eu in\",\n \"properties\": [\n  {\n   \"id\": \"cpuCores\",\n   \"type\": \"Number\"\n  },\n  {\n   \"id\": \"cpuCores\",\n   \"type\": \"Number\"\n  }\n ],\n \"type\": \"Duis\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "entities",
			"item": [
				{
					"name": "Gets the information about monitored entities | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/entities?nextPageKey=<string>&pageSize=<long>&entitySelector=<string>&from=<string>&to=<string>&fields=<string>",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"entities"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "<string>",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "<long>",
									"description": "The amount of entities. \n\nIf not set, 50 is used."
								},
								{
									"key": "entitySelector",
									"value": "<string>",
									"description": "Defines the scope of the query. Only entities matching the specified criteria are included into response. \n\nYou need to set one of these criteria: \n\n* Entity type: `type(\"value\")`. \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nAnd you can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value` tag. All tag values are case-sensitive. \n* Management zone ID: `mzId(\"ID\")` \n* Management zone name: `mzName(\"value\")`.\n* Dynatrace entity name: `entityName(\"value\")`. The `CONTAINS` operator is used and the value is NOT case-sensitive. \n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n\n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nFor more information, see the [Entity selector](https://dt-url.net/apientityselector) help page. \n\nThe length of the string is limited to 10,000 characters. \n\nThe field is **required** when you're querying the first page of results."
								},
								{
									"key": "from",
									"value": "<string>",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
								},
								{
									"key": "to",
									"value": "<string>",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET /entityTypes/{type}](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
								}
							]
						},
						"description": "Lists entities observed within the specified timeframe along with their properties. \n\nYou can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/entities?nextPageKey=<string>&pageSize=<long>&entitySelector=<string>&from=<string>&to=<string>&fields=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"entities"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "entitySelector",
											"value": "<string>"
										},
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": 70420363,\n \"pageSize\": -30536263,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"entities\": [\n  {\n   \"tags\": [\n    {\n     \"stringRepresentation\": \"aliquip occaecat proident ut\",\n     \"value\": \"Ut ut nisi Lorem\",\n     \"key\": \"nostrud\",\n     \"context\": \"eiusmod aliquip consectetur tempor cupidatat\"\n    },\n    {\n     \"stringRepresentation\": \"id ipsum magna\",\n     \"value\": \"Lorem aliquip\",\n     \"key\": \"ex velit sed\",\n     \"context\": \"voluptate\"\n    }\n   ],\n   \"entityId\": \"et labore laboris\",\n   \"toRelationships\": {},\n   \"fromRelationships\": {},\n   \"firstSeenTms\": 62291498,\n   \"lastSeenTms\": 20226760,\n   \"managementZones\": [\n    {\n     \"name\": \"aliquip reprehenderit in Duis labore\",\n     \"id\": \"culpa consequat aute ea proident\"\n    },\n    {\n     \"name\": \"consectetur ad ea\",\n     \"id\": \"ut ipsum cupidatat sed\"\n    }\n   ],\n   \"properties\": {},\n   \"displayName\": \"aliqua Lorem non ea quis\"\n  },\n  {\n   \"tags\": [\n    {\n     \"stringRepresentation\": \"Duis id enim\",\n     \"value\": \"non ullamco\",\n     \"key\": \"id\",\n     \"context\": \"occaecat\"\n    },\n    {\n     \"stringRepresentation\": \"proident pariatur ad\",\n     \"value\": \"deserunt consectetur\",\n     \"key\": \"labore dolore laborum dolore\",\n     \"context\": \"Lorem adipisicing ipsum id\"\n    }\n   ],\n   \"entityId\": \"e\",\n   \"toRelationships\": {},\n   \"fromRelationships\": {},\n   \"firstSeenTms\": 58710110,\n   \"lastSeenTms\": 34120696,\n   \"managementZones\": [\n    {\n     \"name\": \"reprehenderit\",\n     \"id\": \"cillum culpa eiusmod enim ut\"\n    },\n    {\n     \"name\": \"velit mollit aute nisi\",\n     \"id\": \"Duis in do\"\n    }\n   ],\n   \"properties\": {},\n   \"displayName\": \"cupidatat culpa\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Creates or updates a custom device | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customDeviceId\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"group\": \"<string>\",\n    \"ipAddresses\": [\n        \"<string>\"\n    ],\n    \"listenPorts\": [\n        \"<integer>\"\n    ],\n    \"type\": \"<string>\",\n    \"faviconUrl\": \"<string>\",\n    \"configUrl\": \"<string>\",\n    \"properties\": \"<object>\",\n    \"dnsNames\": [\n        \"<string>\"\n    ],\n    \"messageType\": \"<string>\"\n}"
						},
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/entities/custom",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"entities",
								"custom"
							]
						}
					},
					"response": [
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"tags\": [\n        \"office-linz\"\n    ],\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/entities/custom",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"tags\": [\n        \"office-linz\"\n    ],\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/entities/custom",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"tags\": [\n        \"office-linz\"\n    ],\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/entities/custom",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"entityId\": \"exercitation dolor\",\n \"groupId\": \"cupidatat irure ex dolore\"\n}"
						}
					]
				},
				{
					"name": "Gets the properties of the specified monitored entity | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/entities/:entityId?from=<string>&to=<string>&fields=<string>",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"entities",
								":entityId"
							],
							"query": [
								{
									"key": "from",
									"value": "<string>",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
								},
								{
									"key": "to",
									"value": "<string>",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET /entityTypes/{type}](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
								}
							],
							"variable": [
								{
									"key": "entityId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the required entity."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/entities/:entityId?from=<string>&to=<string>&fields=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"entities",
										":entityId"
									],
									"query": [
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "entityId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"tags\": [\n  {\n   \"stringRepresentation\": \"cupidatat id ipsum\",\n   \"value\": \"aute\",\n   \"key\": \"id et magna ea\",\n   \"context\": \"labore consequat consectetur nulla qui\"\n  },\n  {\n   \"stringRepresentation\": \"proident voluptate\",\n   \"value\": \"in\",\n   \"key\": \"fugiat \",\n   \"context\": \"officia qui ullam\"\n  }\n ],\n \"entityId\": \"ex anim\",\n \"toRelationships\": {},\n \"fromRelationships\": {},\n \"firstSeenTms\": 14248470,\n \"lastSeenTms\": 82605329,\n \"managementZones\": [\n  {\n   \"name\": \"adipisicing dolor\",\n   \"id\": \"ipsum esse\"\n  },\n  {\n   \"name\": \"sed lab\",\n   \"id\": \"in in\"\n  }\n ],\n \"properties\": {},\n \"displayName\": \"dolore deserunt exercitation\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "metrics",
			"item": [
				{
					"name": "Lists all available metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/metrics?nextPageKey=<string>&pageSize=<long>&metricSelector=<string>&text=<string>&fields=<string>&writtenSince=<string>&metadataSelector=<string>",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"metrics"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "<string>",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "<long>",
									"description": "The amount of primary entities in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\n If a value higher than 500 is used, only 500 results per page are returned."
								},
								{
									"key": "metricSelector",
									"value": "<string>",
									"description": "Selects metrics for the query by their keys.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can select a full set of related metrics by using a trailing asterisk (`*`) wildcard. For example, `builtin:host.*` selects all host-based metrics and `builtin:*` selects all Dynatrace-provided metrics. \n\nYou can set additional transformation operators, separated by a colon (`:`). See the [Metrics API - selector transformations help page](hhttps://dt-url.net/metricSelector) for additional information on available result transformations.\n\n The length of the string is limited to 1,000 characters.\n\n To find metrics based on a search term, rather than metricID, use the **text** query parameter instead of this one."
								},
								{
									"key": "text",
									"value": "<string>",
									"description": "Metric registry search term. Only show metrics that contain the term in their ID, display name, or description. Use the `metricSelector` parameter instead of this one to select a complete metric hierarchy instead of doing a text-based search."
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "Defines the list of metric properties included in the response. \n\n`metricId` is **always** included in the result. The following additional properties are available: \n\n* `displayName`: The name of the metric in the user interface. Enabled by default. \n* `description`: A short description of the metric. Enabled by default. \n* `unit`: The unit of the metric. Enabled by default. \n+ `dduBillable`:  An indicator whether the usage of metric consumes [Davis data units](https://dt-url.net/ddu). \n* `created`:  The timestamp (UTC milliseconds) when the metrics has been created. \n* `lastWritten`:  The timestamp (UTC milliseconds) when metric data points have been written for the last time. \n* `aggregationTypes`: The list of allowed aggregations for the metric. Note that it may be different after a [transformation](https://dt-url.net/metricSelector) is applied. \n* `defaultAggregation`: The default aggregation of the metric. It is used when no aggregation is specified or the `:auto` transformation is set. \n* `dimensionDefinitions`: The fine metric division (for example, process group and process ID for some process-related metric). \n* `transformations`: A list of [transformations](https://dt-url.net/metricSelector) that can be applied to the metric.\n* `entityType`: A list of entity types supported by the metric.\n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`. \n\nTo specify several properties, join them with a comma (for example `fields=+aggregationTypes,-description`).\n\nIf you specify just one property, the response contains the metric key and the specified property.To return metric keys only, specify `metricId` here."
								},
								{
									"key": "writtenSince",
									"value": "<string>",
									"description": "Filters the resulted set of metrics to those that have data points within the specified timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\n"
								},
								{
									"key": "metadataSelector",
									"value": "<string>",
									"description": "The metadata scope of the query. Only metrics with specified properties are included to the response. \n\nSee the available criteria below; you can use them in any combination. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag `tags(\"tag-1\",\"tag-2\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. All tag values are case-sensitive. \n* Unit `unit(\"unit-1\",\"unit-2\")`. \n\nTo set several criteria, separate them with a comma (`,`). For example, `tags(\"feature\",\"cloud\"),unit(\"Percent\")`. Only results matching **all** criteria are included in response. \n\nCurrently supported filters are: \n\n* unit \n* tags \n\nExample 1: list metrics containing the tag 'feature' OR 'cloud' AND the unit 'Percent' \n\n1. metadataSelector=tags(feature,cloud),unit(Percent) \n\nExample 2: list metrics tagged with 'feature' AND 'cloud' with a unit of 'Percent' OR 'MegaByte'\n\n2. metadataSelector=tags(feature),unit(Percent,MegaByte),tags(cloud)"
								}
							]
						},
						"description": "You can narrow down the output by selecting metrics in the **metricSelector** field. \n\nYou can additionally limit the output by using pagination: \n\n1. Specify the number of results per page in the **pageSize** query parameter. \n\n2. Then use the cursor from the **nextPageKey** field of the response in the **nextPageKey** query parameter to obtain subsequent pages. All other query parameters must be omitted."
					},
					"response": [
						{
							"name": "Syntax or validation error. **metricSelector** or **fields** have syntactic or semantic errors.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics?nextPageKey=<string>&pageSize=<long>&metricSelector=<string>&text=<string>&fields=<string>&writtenSince=<string>&metadataSelector=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "metricSelector",
											"value": "<string>"
										},
										{
											"key": "text",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "writtenSince",
											"value": "<string>"
										},
										{
											"key": "metadataSelector",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics?nextPageKey=<string>&pageSize=<long>&metricSelector=<string>&text=<string>&fields=<string>&writtenSince=<string>&metadataSelector=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "metricSelector",
											"value": "<string>"
										},
										{
											"key": "text",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "writtenSince",
											"value": "<string>"
										},
										{
											"key": "metadataSelector",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found. The requested resource is not found or the query is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics?nextPageKey=<string>&pageSize=<long>&metricSelector=<string>&text=<string>&fields=<string>&writtenSince=<string>&metadataSelector=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "metricSelector",
											"value": "<string>"
										},
										{
											"key": "text",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "writtenSince",
											"value": "<string>"
										},
										{
											"key": "metadataSelector",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics?nextPageKey=<string>&pageSize=<long>&metricSelector=<string>&text=<string>&fields=<string>&writtenSince=<string>&metadataSelector=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "metricSelector",
											"value": "<string>"
										},
										{
											"key": "text",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "writtenSince",
											"value": "<string>"
										},
										{
											"key": "metadataSelector",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"nextPageKey\": \"et\",\n \"totalCount\": 80046908,\n \"metrics\": [\n  {\n   \"tags\": [\n    \"eiusmod ad mollit consectetur\",\n    \"anim\"\n   ],\n   \"metricId\": \"sunt\",\n   \"entityType\": [\n    \"tempor\",\n    \"non in aute fugiat Lorem\"\n   ],\n   \"aggregationTypes\": [\n    \"auto\",\n    \"count\"\n   ],\n   \"metricValueType\": {\n    \"type\": \"error\"\n   },\n   \"minimumValue\": -4270572.355378866,\n   \"lastWritten\": -14715023,\n   \"rootCauseRelevant\": true,\n   \"impactRelevant\": true,\n   \"dduBillable\": false,\n   \"resultState\": \"Ut Duis fugiat ea sed\",\n   \"defaultAggregation\": {\n    \"parameter\": -97060193.7494783,\n    \"type\": \"median\"\n   },\n   \"dimensionDefinitions\": [\n    {\n     \"name\": \"id proident fugiat\",\n     \"key\": \"Duis\",\n     \"type\": \"VOID\",\n     \"displayName\": \"exercitation v\",\n     \"index\": -19187371\n    },\n    {\n     \"name\": \"culpa id\",\n     \"key\": \"ullamco aliqua\",\n     \"type\": \"OTHER\",\n     \"displayName\": \"adipisicing consectetur nulla\",\n     \"index\": -26976969\n    }\n   ],\n   \"maximumValue\": -37966128.18312952,\n   \"displayName\": \"voluptate in laborum\",\n   \"description\": \"laboris mollit officia\",\n   \"unit\": \"DecibelMilliWatt\",\n   \"transformations\": [\n    \"timeshift\",\n    \"fold\"\n   ],\n   \"created\": 1946735\n  },\n  {\n   \"tags\": [\n    \"nostrud fugiat Excepteur\",\n    \"commod\"\n   ],\n   \"metricId\": \"ulla\",\n   \"entityType\": [\n    \"fugiat laboris ipsum aute\",\n    \"irure\"\n   ],\n   \"aggregationTypes\": [\n    \"sum\",\n    \"min\"\n   ],\n   \"metricValueType\": {\n    \"type\": \"unknown\"\n   },\n   \"minimumValue\": 71076010.88848093,\n   \"lastWritten\": -39350324,\n   \"rootCauseRelevant\": false,\n   \"impactRelevant\": false,\n   \"dduBillable\": false,\n   \"resultState\": \"dolor dolor Lorem et\",\n   \"defaultAggregation\": {\n    \"parameter\": 63646255.304900855,\n    \"type\": \"sum\"\n   },\n   \"dimensionDefinitions\": [\n    {\n     \"name\": \"reprehenderit enim et do commodo\",\n     \"key\": \"nulla id\",\n     \"type\": \"VOID\",\n     \"displayName\": \"pariatur deserunt\",\n     \"index\": -63209929\n    },\n    {\n     \"name\": \"commodo ad\",\n     \"key\": \"Exc\",\n     \"type\": \"ENTITY\",\n     \"displayName\": \"occaecat veniam Duis\",\n     \"index\": 44675794\n    }\n   ],\n   \"maximumValue\": -58809902.273625925,\n   \"displayName\": \"ea do commodo\",\n   \"description\": \"pariatur ex\",\n   \"unit\": \"NotApplicable\",\n   \"transformations\": [\n    \"rate\",\n    \"sort\"\n   ],\n   \"created\": -63746114\n  }\n ],\n \"warnings\": [\n  \"officia enim pariatur id\",\n  \"culpa ex aute dolore\"\n ]\n}"
						}
					]
				},
				{
					"name": "Gets data points of the specified metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/metrics/query?nextPageKey=<string>&pageSize=<long>&metricSelector=<string>&resolution=<string>&from=<string>&to=<string>&entitySelector=<string>",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"metrics",
								"query"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "<string>",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "<long>",
									"description": "The amount of primary entities in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\n If a value higher than 500 is used, only 500 results per page are returned."
								},
								{
									"key": "metricSelector",
									"value": "<string>",
									"description": "Selects metrics for the query by their keys. You can select up to 10 metrics for one query.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can set additional transformation operators, separated by a colon (`:`). See the [Metrics API - selector transformations help page](hhttps://dt-url.net/metricSelector) for additional information on available result transformations.\n\n If the metric key contains the following characters, they must be escaped with a tilde (`~`): \n\n* Comma (`,`) \n* Opening and closing brackets (`()`) \n* Tilde (`~`) \n\nFor example, to query the metric with the key of **ext:Apache, nginx (Web Servers)** and the dimension of **Index (incl., max ~8)** for the value of `8`, you must specify this selector: `ext:Apache~, nginx ~(Web Servers~):filter(Index ~(incl.~,max ~~8~),8)`\n\n The length of the string is limited to 1,000 characters."
								},
								{
									"key": "resolution",
									"value": "<string>",
									"description": "The desired resolution of data points. \n\nYou can use one of the following options: \n* One aggregated data point of each series. Set `Inf` to use this option. \n* The desired amount of data points. This is the default option. This is a reference number of points, which is not necessarily equal to the number of the returned data points. \n* The desired timespan between data points. This is a reference timespan, which is not necessarily equal to the returned timespan. To use this option, specify the unit of the timespan. \n\nValid units for the timespan are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the default is 120 **data points**."
								},
								{
									"key": "from",
									"value": "<string>",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "<string>",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "entitySelector",
									"value": "<string>",
									"description": "Specifies the entity scope of the query. Only data points delivered by matched entities are included in response. \n\nYou need to set one of these criteria: \n\n* Entity type: `type(\"value\")`. \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nAnd you can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value` tag. All tag values are case-sensitive. \n* Management zone ID: `mzId(\"ID\")` \n* Management zone name: `mzName(\"value\")`.\n* Dynatrace entity name: `entityName(\"value\")`. The `CONTAINS` operator is used and the value is NOT case-sensitive. \n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n\n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nFor more information, see the [Entity selector](https://dt-url.net/apientityselector) help page. \n\nThe length of the string is limited to 10,000 characters. \n\nUse the [`GET /metrics/{metricId}`](https://dt-url.net/6z23ifk) call to fetch the list of possible entity types for your metric. \n\nTo set a universal scope matching all entities, omit this parameter."
								}
							]
						},
						"description": "The following limits apply: \n* The amount of aggregated data points in the response is limited to 1,000 \n* The amount of series in the response is limited to 1,000 \n   * The amount of data points per series is limited to 10,080 \n   * The overall amount of data points is limited to 100,000 \n"
					},
					"response": [
						{
							"name": "Not found. The requested resource is not found or the query is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics/query?nextPageKey=<string>&pageSize=<long>&metricSelector=<string>&resolution=<string>&from=<string>&to=<string>&entitySelector=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "metricSelector",
											"value": "<string>"
										},
										{
											"key": "resolution",
											"value": "<string>"
										},
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "entitySelector",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics/query?nextPageKey=<string>&pageSize=<long>&metricSelector=<string>&resolution=<string>&from=<string>&to=<string>&entitySelector=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "metricSelector",
											"value": "<string>"
										},
										{
											"key": "resolution",
											"value": "<string>"
										},
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "entitySelector",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Syntax or validation error. From and to parameters, scope or resolution are incorrect individually or in their combined meaning.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics/query?nextPageKey=<string>&pageSize=<long>&metricSelector=<string>&resolution=<string>&from=<string>&to=<string>&entitySelector=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "metricSelector",
											"value": "<string>"
										},
										{
											"key": "resolution",
											"value": "<string>"
										},
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "entitySelector",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The request is valid but the response is too big to process. Split your query into several queries with limited scopes.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics/query?nextPageKey=<string>&pageSize=<long>&metricSelector=<string>&resolution=<string>&from=<string>&to=<string>&entitySelector=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "metricSelector",
											"value": "<string>"
										},
										{
											"key": "resolution",
											"value": "<string>"
										},
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "entitySelector",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics/query?nextPageKey=<string>&pageSize=<long>&metricSelector=<string>&resolution=<string>&from=<string>&to=<string>&entitySelector=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "metricSelector",
											"value": "<string>"
										},
										{
											"key": "resolution",
											"value": "<string>"
										},
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "entitySelector",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"nextPageKey\": \"ut veniam\",\n \"totalCount\": 32437131,\n \"result\": [\n  {\n   \"metricId\": \"\",\n   \"resultState\": \"ex eu qui sint a\",\n   \"data\": [\n    {\n     \"timestamps\": [\n      91577493,\n      -33032332\n     ],\n     \"dimensions\": [\n      \"sint amet sed ea des\",\n      \"eu adipisicing qui nulla exercitation\"\n     ],\n     \"values\": [\n      19865771.30168046,\n      -34755811.445962384\n     ]\n    },\n    {\n     \"timestamps\": [\n      -81464211,\n      -64985713\n     ],\n     \"dimensions\": [\n      \"elit velit\",\n      \"velit cupidatat in\"\n     ],\n     \"values\": [\n      97440510.16217652,\n      10837573.158349216\n     ]\n    }\n   ]\n  },\n  {\n   \"metricId\": \"ame\",\n   \"resultState\": \"velit et\",\n   \"data\": [\n    {\n     \"timestamps\": [\n      -99405774,\n      -50947162\n     ],\n     \"dimensions\": [\n      \"Duis culpa enim do elit\",\n      \"minim cillum occaecat ut elit\"\n     ],\n     \"values\": [\n      89481488.29179919,\n      30555797.00541778\n     ]\n    },\n    {\n     \"timestamps\": [\n      -8005011,\n      -76237469\n     ],\n     \"dimensions\": [\n      \"consequat est eu veniam sit\",\n      \"est culpa ipsum\"\n     ],\n     \"values\": [\n      -29967448.428783298,\n      -88723695.12304302\n     ]\n    }\n   ]\n  }\n ],\n \"warnings\": [\n  \"minim sunt\",\n  \"voluptate sunt\"\n ]\n}"
						}
					]
				},
				{
					"name": "Gets the descriptor of the specified metric",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/metrics/:metricId",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"metrics",
								":metricId"
							],
							"variable": [
								{
									"key": "metricId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See the [Metrics API - selector transformations help page](hhttps://dt-url.net/metricSelector) for additional information on available result transformations.\n\n The length of the string is limited to 1,000 characters."
								}
							]
						}
					},
					"response": [
						{
							"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics/:metricId",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics",
										":metricId"
									],
									"variable": [
										{
											"key": "metricId"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics/:metricId",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics",
										":metricId"
									],
									"variable": [
										{
											"key": "metricId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"tags\": [\n  \"consequat eiusmod\",\n  \"qui anim\"\n ],\n \"metricId\": \"occaecat nostrud\",\n \"entityType\": [\n  \"nisi deserunt et\",\n  \"magna eiusmod dolor consequat\"\n ],\n \"aggregationTypes\": [\n  \"auto\",\n  \"percentile\"\n ],\n \"metricValueType\": {\n  \"type\": \"error\"\n },\n \"minimumValue\": -88659873.08817957,\n \"lastWritten\": -99522190,\n \"rootCauseRelevant\": true,\n \"impactRelevant\": false,\n \"dduBillable\": true,\n \"resultState\": \"anim aute labore\",\n \"defaultAggregation\": {\n  \"parameter\": -71599383.2094442,\n  \"type\": \"count\"\n },\n \"dimensionDefinitions\": [\n  {\n   \"name\": \"labore irure Lorem amet occaecat\",\n   \"key\": \"aute laboris anim mollit esse\",\n   \"type\": \"OTHER\",\n   \"displayName\": \"cupidatat proident sed ipsum\",\n   \"index\": -34797655\n  },\n  {\n   \"name\": \"in fugiat\",\n   \"key\": \"ex pariatur deserunt Ut labore\",\n   \"type\": \"VOID\",\n   \"displayName\": \"adipisicing magna esse eu ut\",\n   \"index\": 12804227\n  }\n ],\n \"maximumValue\": 51817056.7301743,\n \"displayName\": \"in ipsum sit\",\n \"description\": \"veniam aliquip velit officia\",\n \"unit\": \"Giga\",\n \"transformations\": [\n  \"merge\",\n  \"names\"\n ],\n \"created\": 58975674\n}"
						},
						{
							"name": "Not found. The requested resource is not found or the query is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics/:metricId",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics",
										":metricId"
									],
									"variable": [
										{
											"key": "metricId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Pushes metric data points to Dynatrace | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"<string>\""
						},
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/metrics/ingest",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"metrics",
								"ingest"
							]
						}
					},
					"response": [
						{
							"name": "The provided metric data points are accepted and will be processed in background.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"server.cpu.temperature,cpu.id=0 42\""
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics/ingest",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics",
										"ingest"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Some data points are invalid. Valid data points are accepted and will be processed in background.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"server.cpu.temperature,cpu.id=0 42\""
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/metrics/ingest",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"metrics",
										"ingest"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "network Zones",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters of the specified network zone | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/networkZones/:id",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the required network zone."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/networkZones/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"alternativeZones\": [\n  \"Ut nulla ex in sunt\",\n  \"consequat\"\n ],\n \"numOfOneAgentsUsing\": -10683454,\n \"numOfConfiguredOneAgents\": 91038471,\n \"numOfOneAgentsFromOtherZones\": 61764172,\n \"numOfConfiguredActiveGates\": -27226383,\n \"id\": \"consectetur tempor\",\n \"description\": \"sunt\"\n}"
								}
							]
						},
						{
							"name": "Updates an existing network zone or creates a new one | maturity=EARLY_ADOPTER",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alternativeZones\": [\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/networkZones/:id",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
										}
									]
								},
								"description": "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
							},
							"response": [
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/networkZones/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
								},
								{
									"name": "Success. The network zone has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/networkZones/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"<string>\"\n    ],\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/networkZones/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"cillum labore eiusmod consectetur\",\n \"name\": \"cillum in et\",\n \"description\": \"quis cillum\"\n}"
								}
							]
						},
						{
							"name": "Deletes the specified network zone | maturity=EARLY_ADOPTER",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/networkZones/:id",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the network zone to be deleted."
										}
									]
								},
								"description": "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives."
							},
							"response": [
								{
									"name": "Failed. See error message in the response body for details.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/networkZones/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/networkZones/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all existing network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/networkZones",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"networkZones"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/networkZones",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"networkZones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"networkZones\": [\n  {\n   \"alternativeZones\": [\n    \"in ut consectetur nisi ut\",\n    \"sint et dolore laborum amet\"\n   ],\n   \"numOfOneAgentsUsing\": 83003581,\n   \"numOfConfiguredOneAgents\": -64189552,\n   \"numOfOneAgentsFromOtherZones\": 9939939,\n   \"numOfConfiguredActiveGates\": 89389961,\n   \"id\": \"cupidatat dolore irure velit quis\",\n   \"description\": \"consequat exercitation\"\n  },\n  {\n   \"alternativeZones\": [\n    \"et\",\n    \"cupidatat occaecat aliquip\"\n   ],\n   \"numOfOneAgentsUsing\": 14325854,\n   \"numOfConfiguredOneAgents\": 35144641,\n   \"numOfOneAgentsFromOtherZones\": 43401429,\n   \"numOfConfiguredActiveGates\": 68962707,\n   \"id\": \"deserunt dolore\",\n   \"description\": \"occaecat dolore\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "network Zone Settings",
			"item": [
				{
					"name": "Gets the global configuration of network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/networkZoneSettings",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"networkZoneSettings"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/networkZoneSettings",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"networkZoneSettings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"networkZonesEnabled\": false\n}"
						}
					]
				},
				{
					"name": "Updates the global configuration of network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"networkZonesEnabled\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/networkZoneSettings",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"networkZoneSettings"
							]
						}
					},
					"response": [
						{
							"name": "Success. The global network zones configuration has been updated. Response doesn't have a body.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"networkZonesEnabled\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/networkZoneSettings",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"networkZoneSettings"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "Gets a list of custom tags applied to the specified entities | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/tags?entitySelector=<string>",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "entitySelector",
									"value": "<string>",
									"description": "(Required) Specifies the entities where you want to read tags. \n\nYou need to set one of these criteria: \n\n* Entity type: `type(\"value\")`. \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nAnd you can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value` tag. All tag values are case-sensitive. \n* Management zone ID: `mzId(\"ID\")` \n* Management zone name: `mzName(\"value\")`.\n* Dynatrace entity name: `entityName(\"value\")`. The `CONTAINS` operator is used and the value is NOT case-sensitive. \n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n\n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nFor more information, see the [Entity selector](https://dt-url.net/apientityselector) help page. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								}
							]
						},
						"description": "Automatically applied tags and imported tags are not included."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/tags?entitySelector=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "entitySelector",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"tags\": {\n  \"empty\": false\n },\n \"totalCount\": -83482272\n}"
						}
					]
				},
				{
					"name": "Adds custom tags to the specified entities | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/tags?entitySelector=<string>",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "entitySelector",
									"value": "<string>",
									"description": "(Required) Specifies the entities where you want to update tags. \n\nYou need to set one of these criteria: \n\n* Entity type: `type(\"value\")`. \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nAnd you can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value` tag. All tag values are case-sensitive. \n* Management zone ID: `mzId(\"ID\")` \n* Management zone name: `mzName(\"value\")`.\n* Dynatrace entity name: `entityName(\"value\")`. The `CONTAINS` operator is used and the value is NOT case-sensitive. \n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n\n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nFor more information, see the [Entity selector](https://dt-url.net/apientityselector) help page. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								}
							]
						},
						"description": "All existing tags remain unaffected."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\n        {\n            \"key\": \"mainApp\"\n        },\n        {\n            \"key\": \"bookings\",\n            \"value\": \"42\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/tags?entitySelector=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "entitySelector",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"matchedEntitiesCount\": 40036841,\n \"appliedTags\": {\n  \"empty\": false\n }\n}"
						}
					]
				},
				{
					"name": "Deletes the specified tag from the specified entities | maturity=EARLY_ADOPTER",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/tags?key=<string>&value=<string>&deleteAllWithKey=<boolean>&entitySelector=<string>",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "key",
									"value": "<string>",
									"description": "(Required) The tag to be deleted."
								},
								{
									"key": "value",
									"value": "<string>",
									"description": "The tag to be deleted."
								},
								{
									"key": "deleteAllWithKey",
									"value": "<boolean>",
									"description": "The tag to be deleted."
								},
								{
									"key": "entitySelector",
									"value": "<string>",
									"description": "(Required) Specifies the entities where you want to delete tags. \n\nYou need to set one of these criteria: \n\n* Entity type: `type(\"value\")`. \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nAnd you can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value` tag. All tag values are case-sensitive. \n* Management zone ID: `mzId(\"ID\")` \n* Management zone name: `mzName(\"value\")`.\n* Dynatrace entity name: `entityName(\"value\")`. The `CONTAINS` operator is used and the value is NOT case-sensitive. \n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n\n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nFor more information, see the [Entity selector](https://dt-url.net/apientityselector) help page. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/tags?key=<string>&value=<string>&deleteAllWithKey=<boolean>&entitySelector=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										},
										{
											"key": "value",
											"value": "<string>"
										},
										{
											"key": "deleteAllWithKey",
											"value": "<boolean>"
										},
										{
											"key": "entitySelector",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"matchedEntitiesCount\": 2\n}"
						}
					]
				}
			]
		},
		{
			"name": "auditlogs",
			"item": [
				{
					"name": "Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/auditlogs?nextPageKey=<string>&pageSize=<long>&filter=<string>&from=<string>&to=<string>&sort=-timestamp",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"auditlogs"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "<string>",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "<long>",
									"description": "The amount of log entries in a single response payload. \n\nThe maximal allowed page size is 5000. \n\nIf not set, 1000 is used."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filters the audit log. You can use the following criteria: \n* User: `user(\"userIdentification\")`. The `EQUALS` operator applies. \n* Event type: `eventType(\"value\")`. The `EQUALS` operator applies. \n* Category of a logged operation: `category(\"value\")`. The `EQUALS` operator applies. \n* Entity ID: `entityId(\"id\")`. The `CONTAINS` operator applies. \n\nFor each criterion, you can specify multiple alternatives with comma-separated values. In this case, the OR logic applies. For example, `eventType(\"CREATE\",\"UPDATE\")` means eventType can be \"CREATE\" or \"UPDATE\". \n\nYou can specify multiple comma-separated criteria, such as `eventType(\"CREATE\",\"UPDATE\"),category(\"CONFIG\")`. Only results matching **all** criteria are included in response. \n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes: \n* Tilde `~` \n* Quote `\"`"
								},
								{
									"key": "from",
									"value": "<string>",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "<string>",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "The sorting of audit log entries: \n* `timestamp`: Oldest first. \n* `-timestamp`: Newest first. \n\nIf not set, the newest first sorting is applied."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/auditlogs?nextPageKey=<string>&pageSize=<long>&filter=<string>&from=<string>&to=<string>&sort=-timestamp",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"auditlogs"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "-timestamp"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -11771738,\n \"pageSize\": -77715325,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"auditLogs\": [\n  {\n   \"category\": \"CONFIG\",\n   \"environmentId\": \"eiusmod adipisicing aliquip\",\n   \"eventType\": \"READ\",\n   \"logId\": \"docu\",\n   \"success\": true,\n   \"timestamp\": -3026955,\n   \"user\": \"id temp\",\n   \"userType\": \"SERVICE_NAME\",\n   \"entityId\": \"ut exercitation amet nisi\",\n   \"userOrigin\": \"culpa id cillum\",\n   \"message\": \"in cupidatat adip\",\n   \"patch\": {}\n  },\n  {\n   \"category\": \"CONFIG\",\n   \"environmentId\": \"nisi proident\",\n   \"eventType\": \"UPDATE\",\n   \"logId\": \"est \",\n   \"success\": true,\n   \"timestamp\": -9604871,\n   \"user\": \"ut amet pariatur do\",\n   \"userType\": \"REQUEST_ID\",\n   \"entityId\": \"aliquip\",\n   \"userOrigin\": \"sit non\",\n   \"message\": \"incididunt esse anim offici\",\n   \"patch\": {}\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Gets the specified entry of the audit log | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/auditlogs/:id",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"auditlogs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the required log entry."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/auditlogs/:id",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"category\": \"DEBUG_UI\",\n \"environmentId\": \"ullamco elit\",\n \"eventType\": \"DELETE\",\n \"logId\": \"Ut m\",\n \"success\": true,\n \"timestamp\": 59918263,\n \"user\": \"laborum cillum\",\n \"userType\": \"SERVICE_NAME\",\n \"entityId\": \"id laborum Exc\",\n \"userOrigin\": \"aliqua in\",\n \"message\": \"eu sint anim id\",\n \"patch\": {}\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/auditlogs/:id",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
						},
						{
							"name": "Failed. Invalid ID format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/auditlogs/:id",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "extensions",
			"item": [
				{
					"name": "schemas",
					"item": [
						{
							"name": "{schema Version}",
							"item": [
								{
									"name": "Lists all the files available for the specified extension 2.0 schema version",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/extensions/schemas/:schemaVersion",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"extensions",
												"schemas",
												":schemaVersion"
											],
											"variable": [
												{
													"key": "schemaVersion",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The version of the required schema"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/schemas/:schemaVersion",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion"
													],
													"variable": [
														{
															"key": "schemaVersion"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"files\": [\n  \"elit sunt do officia\",\n  \"culpa dolore veniam laborum dolor\"\n ]\n}"
										}
									]
								},
								{
									"name": "Gets the extension 2.0 schema file in the specified version",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/extensions/schemas/:schemaVersion/:fileName",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"extensions",
												"schemas",
												":schemaVersion",
												":fileName"
											],
											"variable": [
												{
													"key": "schemaVersion",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The version of the required schema file"
												},
												{
													"key": "fileName",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The name of the required schema file"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/schemas/:schemaVersion/:fileName",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion",
														":fileName"
													],
													"variable": [
														{
															"key": "schemaVersion"
														},
														{
															"key": "fileName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"containerNode\": false,\n \"pojo\": false,\n \"missingNode\": true,\n \"valueNode\": false,\n \"object\": false,\n \"integralNumber\": false,\n \"floatingPointNumber\": false,\n \"textual\": true,\n \"boolean\": false,\n \"binary\": false,\n \"float\": true,\n \"nodeType\": \"NUMBER\",\n \"array\": true,\n \"null\": false,\n \"int\": false,\n \"double\": false,\n \"bigDecimal\": false,\n \"bigInteger\": true,\n \"long\": true,\n \"number\": false,\n \"short\": true\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all the extension 2.0 schemas versions available in your environment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/extensions/schemas",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"extensions",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/extensions/schemas",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"extensions",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"versions\": [\n  {\n   \"major\": -14543794,\n   \"minor\": -85542213,\n   \"patch\": -50340453\n  },\n  {\n   \"major\": -84925048,\n   \"minor\": 72596137,\n   \"patch\": 82103186\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "{extension Name}",
					"item": [
						{
							"name": "{extension Version}",
							"item": [
								{
									"name": "Gets details of the specified version of the extension 2.0",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server",
												"key": "Accept",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/:extensionVersion",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The version of the required extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server",
														"key": "Accept",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/:extensionVersion",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server",
														"key": "Accept",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/:extensionVersion",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"extensionName\": \"magna pariatur velit voluptate\",\n \"version\": \"428226\",\n \"author\": {\n  \"name\": \"officia incididunt labore nulla\"\n },\n \"dataSources\": [\n  \"anim enim aliqua\",\n  \"cupidatat\"\n ],\n \"variables\": [\n  \"nisi id veniam sit\",\n  \"\"\n ],\n \"featureSets\": [\n  \"pariatur ex enim reprehenderit elit\",\n  \"in\"\n ],\n \"minDynatraceVersion\": \"ullamco nulla eiusmod est mollit\"\n}"
										}
									]
								},
								{
									"name": "Deletes the specified version of the extension 2.0",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/:extensionVersion",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The version of the required extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/:extensionVersion",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/:extensionVersion",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
										},
										{
											"name": "Success. The extension 2.0 version has been scheduled to be deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/:extensionVersion",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"extensionName\": \"magna pariatur velit voluptate\",\n \"version\": \"428226\",\n \"author\": {\n  \"name\": \"officia incididunt labore nulla\"\n },\n \"dataSources\": [\n  \"anim enim aliqua\",\n  \"cupidatat\"\n ],\n \"variables\": [\n  \"nisi id veniam sit\",\n  \"\"\n ],\n \"featureSets\": [\n  \"pariatur ex enim reprehenderit elit\",\n  \"in\"\n ],\n \"minDynatraceVersion\": \"ullamco nulla eiusmod est mollit\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "environment Configuration",
							"item": [
								{
									"name": "Gets the active environment configuration version of the specified extension 2.0",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/environmentConfiguration",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/environmentConfiguration",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/environmentConfiguration",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"0.0.6110720\"\n}"
										}
									]
								},
								{
									"name": "Updates the active environment configuration version of the extension 2.0",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": \"<string>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/environmentConfiguration",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration scheduled to be updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/environmentConfiguration",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"<string>\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/environmentConfiguration",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
										}
									]
								},
								{
									"name": "Activates the environment configuration from the specified version of the extension 2.0",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": \"<string>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/environmentConfiguration",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration scheduled to be activated.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/environmentConfiguration",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"<string>\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/environmentConfiguration",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
										}
									]
								},
								{
									"name": "Deactivates the environment configuration of the specified extension 2.0",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/environmentConfiguration",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The name of the required extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration scheduled to be deactivated.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/environmentConfiguration",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"<string>\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName/environmentConfiguration",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all versions of the extension 2.0",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName?nextPageKey=<string>&pageSize=<long>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"extensions",
										":extensionName"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>",
											"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
										},
										{
											"key": "pageSize",
											"value": "<long>",
											"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
										}
									],
									"variable": [
										{
											"key": "extensionName",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The name of the required extension 2.0."
										}
									]
								}
							},
							"response": [
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName?nextPageKey=<string>&pageSize=<long>",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"extensions",
												":extensionName"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<long>"
												}
											],
											"variable": [
												{
													"key": "extensionName"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/extensions/:extensionName?nextPageKey=<string>&pageSize=<long>",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"extensions",
												":extensionName"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<long>"
												}
											],
											"variable": [
												{
													"key": "extensionName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"extensions\": [\n  {\n   \"extensionName\": \"nisi aliqua esse\",\n   \"version\": \"0.777303977.0\"\n  },\n  {\n   \"extensionName\": \"dolor eiusmod consectetur\",\n   \"version\": \"5435838.0.27648994289\"\n  }\n ],\n \"totalCount\": 95472794,\n \"pageSize\": -70454802,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all the extensions 2.0 available in your environment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/extensions?nextPageKey=<string>&pageSize=<long>&name=<string>",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"extensions"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "<string>",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "<long>",
									"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters the resulting set of extensions 2.0 by name. You can specify a partial name. In that case, the CONTAINS operator is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/extensions?nextPageKey=<string>&pageSize=<long>&name=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "name",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"extensions\": [\n  {\n   \"extensionName\": \"anim pariatur dolor est\",\n   \"version\": \"0\"\n  },\n  {\n   \"extensionName\": \"nostrud laborum dolore nisi\",\n   \"version\": \"0.0\"\n  }\n ],\n \"totalCount\": -21060975,\n \"pageSize\": -88877479,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						}
					]
				},
				{
					"name": "Uploads a new extension 2.0",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "<binary>",
									"description": "Extension 2.0 package file (*.zip) to upload. Must contain only extension.zip and extension.zip.sig files.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/extensions",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": [
						{
							"name": "Failed. The input file is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": {
												"content": "Extension 2.0 package file (*.zip) to upload. Must contain only extension.zip and extension.zip.sig files.",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/extensions",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"extensions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
						},
						{
							"name": "Success. The extension 2.0 has been uploaded.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": {
												"content": "Extension 2.0 package file (*.zip) to upload. Must contain only extension.zip and extension.zip.sig files.",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/extensions",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"extensions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"extensionName\": \"laboris consecte\",\n \"version\": \"812.644214247\",\n \"author\": {\n  \"name\": \"nulla in nisi ut\"\n },\n \"dataSources\": [\n  \"laborum laboris\",\n  \"in proident laboris enim irure\"\n ],\n \"variables\": [\n  \"culpa ex laboris cillum\",\n  \"cupidatat Duis ve\"\n ],\n \"featureSets\": [\n  \"cillum et esse sit ullamco\",\n  \"incididunt id repr\"\n ],\n \"minDynatraceVersion\": \"sunt Excepteur cillum dolore sint\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "problems",
			"item": [
				{
					"name": "{problem Id}",
					"item": [
						{
							"name": "comments",
							"item": [
								{
									"name": "{comment Id}",
									"item": [
										{
											"name": "Gets the specified comment on a problem | maturity=EARLY_ADOPTER",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/comments/:commentId",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/comments/:commentId",
															"host": [
																"https://{{DT_HOST}}/api/v2"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"authorName\": \"aliquip d\",\n \"createdAtTimestamp\": 71831253,\n \"context\": \"do ea reprehenderit\",\n \"id\": \"eiusmod Duis\",\n \"content\": \"ut Lorem\"\n}"
												}
											]
										},
										{
											"name": "Updates the specified comment on a problem | maturity=EARLY_ADOPTER",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message\": \"<string>\",\n    \"context\": \"<string>\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/comments/:commentId",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The comment has been updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"message\": \"<string>\",\n    \"context\": \"<string>\"\n}"
														},
														"url": {
															"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/comments/:commentId",
															"host": [
																"https://{{DT_HOST}}/api/v2"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes the specified comment from a problem | maturity=EARLY_ADOPTER",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/comments/:commentId",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The comment has been deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/comments/:commentId",
															"host": [
																"https://{{DT_HOST}}/api/v2"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Gets all comments on the specified problem | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/comments?nextPageKey=<string>&pageSize=<long>",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"problems",
												":problemId",
												"comments"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "<string>",
													"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
												},
												{
													"key": "pageSize",
													"value": "<long>",
													"description": "The amount of comments in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 10 is used."
												}
											],
											"variable": [
												{
													"key": "problemId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/comments?nextPageKey=<string>&pageSize=<long>",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"problems",
														":problemId",
														"comments"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "<string>"
														},
														{
															"key": "pageSize",
															"value": "<long>"
														}
													],
													"variable": [
														{
															"key": "problemId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"comments\": [\n  {\n   \"authorName\": \"ea in mollit el\",\n   \"createdAtTimestamp\": -49510227,\n   \"context\": \"culpa in\",\n   \"id\": \"occaecat cupidatat in qui\",\n   \"content\": \"pariatur quis\"\n  },\n  {\n   \"authorName\": \"velit laboris pariatur\",\n   \"createdAtTimestamp\": 61191307,\n   \"context\": \"dolor do laboris sit\",\n   \"id\": \"non Excepteur eu\",\n   \"content\": \"non aliqua velit mollit\"\n  }\n ],\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": 83512043,\n \"totalCount\": 63395622\n}"
										}
									]
								},
								{
									"name": "Adds a new comment on the specified problem | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"<string>\",\n    \"context\": \"<string>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/comments",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"problems",
												":problemId",
												"comments"
											],
											"variable": [
												{
													"key": "problemId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The comment has been added.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message\": \"<string>\",\n    \"context\": \"<string>\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/comments",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"problems",
														":problemId",
														"comments"
													],
													"variable": [
														{
															"key": "problemId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Gets the properties of the specified problem | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId?fields=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"problems",
										":problemId"
									],
									"query": [
										{
											"key": "fields",
											"value": "<string>",
											"description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`)."
										}
									],
									"variable": [
										{
											"key": "problemId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the required problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId?fields=<string>",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"problems",
												":problemId"
											],
											"query": [
												{
													"key": "fields",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"problemId\": \"ipsum\",\n \"impactLevel\": \"SERVICES\",\n \"impactedEntities\": [\n  {\n   \"entityId\": {\n    \"id\": \"enim dolor est\",\n    \"type\": \"ex dolore aliquip reprehenderit\"\n   },\n   \"name\": \"laborum in deserunt\"\n  },\n  {\n   \"entityId\": {\n    \"id\": \"proident magna occaecat consectetur\",\n    \"type\": \"consectetur\"\n   },\n   \"name\": \"dolore sed mollit ex commodo\"\n  }\n ],\n \"displayId\": \"ea sunt ei\",\n \"entityTags\": [\n  {\n   \"stringRepresentation\": \"dolore sed minim\",\n   \"value\": \"voluptate cupidatat\",\n   \"key\": \"incididunt aliqua in\",\n   \"context\": \"mag\"\n  },\n  {\n   \"stringRepresentation\": \"est\",\n   \"value\": \"Lorem minim et\",\n   \"key\": \"nisi \",\n   \"context\": \"dolore ut do sed\"\n  }\n ],\n \"evidenceDetails\": {\n  \"totalCount\": -18252278,\n  \"details\": [\n   {\n    \"evidenceType\": \"AVAILABILITY_EVIDENCE\",\n    \"displayName\": \"in dolor sed\",\n    \"entity\": {\n     \"entityId\": {\n      \"id\": \"elit\",\n      \"type\": \"anim mollit sint consequat\"\n     },\n     \"name\": \"sunt laborum id\"\n    },\n    \"groupingEntity\": {\n     \"entityId\": {\n      \"id\": \"in consequ\",\n      \"type\": \"labore mollit\"\n     },\n     \"name\": \"laborum et voluptate exercitation\"\n    },\n    \"rootCauseRelevant\": true,\n    \"startTime\": -81965776\n   },\n   {\n    \"evidenceType\": \"TRANSACTIONAL\",\n    \"displayName\": \"dolor ullamco exercitation eiusmod dolore\",\n    \"entity\": {\n     \"entityId\": {\n      \"id\": \"fugiat Excepteur nostrud Ut dolore\",\n      \"type\": \"veniam minim officia exercitation\"\n     },\n     \"name\": \"et exercitation Ut cillum\"\n    },\n    \"groupingEntity\": {\n     \"entityId\": {\n      \"id\": \"fugiat exercitation\",\n      \"type\": \"enim\"\n     },\n     \"name\": \"culpa irure ex\"\n    },\n    \"rootCauseRelevant\": true,\n    \"startTime\": -56389878\n   }\n  ]\n },\n \"recentComments\": {\n  \"comments\": [\n   {\n    \"authorName\": \"in aliquip adipisicing\",\n    \"createdAtTimestamp\": -55296171,\n    \"context\": \"occaecat velit dolore culpa\",\n    \"id\": \"in enim est\",\n    \"content\": \"cillum id velit\"\n   },\n   {\n    \"authorName\": \"consequat cupidatat reprehenderit\",\n    \"createdAtTimestamp\": 54087995,\n    \"context\": \"anim \",\n    \"id\": \"nostrud id dolor\",\n    \"content\": \"nisi ex\"\n   }\n  ],\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"pageSize\": 4591600,\n  \"totalCount\": 83467124\n },\n \"impactAnalysis\": {\n  \"impacts\": [\n   {\n    \"impactType\": \"CUSTOM_APPLICATION\",\n    \"impactedEntity\": {\n     \"entityId\": {\n      \"id\": \"minim ad\",\n      \"type\": \"tempor nisi\"\n     },\n     \"name\": \"incididunt dolor ipsum\"\n    },\n    \"estimatedAffectedUsers\": 14107315\n   },\n   {\n    \"impactType\": \"CUSTOM_APPLICATION\",\n    \"impactedEntity\": {\n     \"entityId\": {\n      \"id\": \"laborum\",\n      \"type\": \"aute nostrud\"\n     },\n     \"name\": \"labore minim pari\"\n    },\n    \"estimatedAffectedUsers\": 42056259\n   }\n  ]\n },\n \"linkedProblemInfo\": {\n  \"problemId\": \"sunt aliquip aliqua Ut laborum\",\n  \"displayId\": \"commodo in dolor\"\n },\n \"rootCauseEntity\": {\n  \"entityId\": {\n   \"id\": \"quis tempor ipsum Duis reprehenderit\",\n   \"type\": \"incididunt culpa ad\"\n  },\n  \"name\": \"sint ipsum nostrud voluptate\"\n },\n \"problemFilters\": [\n  {\n   \"name\": \"elit\",\n   \"id\": \"amet tempor eu ipsum in\"\n  },\n  {\n   \"name\": \"eu sed quis Ut\",\n   \"id\": \"anim ipsum\"\n  }\n ],\n \"affectedEntities\": [\n  {\n   \"entityId\": {\n    \"id\": \"culpa elit irure dolor Ut\",\n    \"type\": \"dolore fugiat aute\"\n   },\n   \"name\": \"cillum ea\"\n  },\n  {\n   \"entityId\": {\n    \"id\": \"do irure\",\n    \"type\": \"par\"\n   },\n   \"name\": \"sint Lorem laborum Excepteur\"\n  }\n ],\n \"managementZones\": [\n  {\n   \"name\": \"Ut laborum quis\",\n   \"id\": \"sint quis minim Lorem\"\n  },\n  {\n   \"name\": \"dolor in\",\n   \"id\": \"sed voluptate\"\n  }\n ],\n \"severityLevel\": \"RESOURCE_CONTENTION\",\n \"status\": \"OPEN\",\n \"startTime\": 84992234,\n \"endTime\": 48812357,\n \"title\": \"dolor Ut\"\n}"
								}
							]
						},
						{
							"name": "Closes the specified problem and adds a closing comment on it | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"<string>\"\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/close",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"problems",
										":problemId",
										"close"
									],
									"variable": [
										{
											"key": "problemId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the required problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "The problem is closed already the request hasn't been executed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"<string>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/close",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"problems",
												":problemId",
												"close"
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"<string>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/problems/:problemId/close",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"problems",
												":problemId",
												"close"
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"problemId\": \"sed volupt\",\n \"closing\": true,\n \"closeTimestamp\": 58764360,\n \"comment\": {\n  \"authorName\": \"adipisicing esse co\",\n  \"createdAtTimestamp\": -61281608,\n  \"context\": \"aliquip eiusmod \",\n  \"id\": \"irure laborum\",\n  \"content\": \"ullamco eu\"\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists problems observed within the specified timeframe | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/problems?fields=<string>&nextPageKey=<string>&pageSize=<long>&from=<string>&to=<string>&problemSelector=<string>&entitySelector=<string>&sort=<string>",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"problems"
							],
							"query": [
								{
									"key": "fields",
									"value": "<string>",
									"description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).\n\n The field is valid only for the current page of results. You must set it for each page you're requesting."
								},
								{
									"key": "nextPageKey",
									"value": "<string>",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
								},
								{
									"key": "pageSize",
									"value": "<long>",
									"description": "The amount of problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
								},
								{
									"key": "from",
									"value": "<string>",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
								},
								{
									"key": "to",
									"value": "<string>",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "problemSelector",
									"value": "<string>",
									"description": "Defines the scope of the query. Only problems matching the specified criteria are included into response. \n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies. All values must be quoted. \n* Status: `status(\"open\")` or `status(\"closed\")`. You can specify only one status. \n* Severity level: `severityLevel(\"level-1\",\"level-2\")`. Find the possible values in the description of the **severityLevel** field of the response.\n* Impact level: `impactLevel(\"level-11\",\"level-2\")` Find the possible values in the description of the **impactLevel** field of the response.\n* Root cause entity: `rootCauseEntity(\"id-1\", \"id-2\")`. \n* Management zone ID: `managementZoneIds(\"mZId-1\", \"mzId-2\")`. \n* Management zone name: `managementZones(\"value-1\",\"value-2\")`. \n* Impacted entities: `impactedEntities(\"id-1\", \"id-2\")`. \n* Affected entities: `affectedEntities(\"id-1\", \"id-2\")`. \n* Type of affected entities: `affectedEntityTypes(\"value-1\",\"value-2\")`. \n* Problem ID: `problemId(\"id-1\", \"id-2\")`. \n* Alerting profile ID: `problemFilterIds(\"id-1\", \"id-2\")`. \n* Alerting profile name: `problemFilterNames(\"value-1\",\"value-2\")`. \n* Entity tags: `entityTags(\"[context]key:value\",\"key:value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value tag`. All tag values are case-sensitive.\n* Display ID of the problem: `displayId(\"id-1\", \"id-2\")`. \n* Under maintenance: `underMaintenance(true|false)`. Shows (true) or hides (false) all problems created during maintenance mode.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response. \n\n"
								},
								{
									"key": "entitySelector",
									"value": "<string>",
									"description": "The entity scope of the query.You need to set one of these criteria: \n\n* Entity type: `type(\"value\")`. \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nAnd you can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value` tag. All tag values are case-sensitive. \n* Management zone ID: `mzId(\"ID\")` \n* Management zone name: `mzName(\"value\")`.\n* Dynatrace entity name: `entityName(\"value\")`. The `CONTAINS` operator is used and the value is NOT case-sensitive. \n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n\n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nFor more information, see the [Entity selector](https://dt-url.net/apientityselector) help page. \n\nThe length of the string is limited to 10,000 characters. \n\nThe scope is limited to 10000 entities !\n\n"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Specifies a set of comma-separated (`,`) fields for sorting in the problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n * `status`: problem status (`+` open problems first or `-` closed problems first)\n * `startTime`: problem start time (`+` new problems first or `-` old problems first) \n\nIf no prefix is set, `+` is used. \n\nYou can specify several levels of sorting. For example, `+status,-startTime` sorts problems by status, open problems first. Within the status, problems are sorted by start time, oldest first."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/problems?fields=<string>&nextPageKey=<string>&pageSize=<long>&from=<string>&to=<string>&problemSelector=<string>&entitySelector=<string>&sort=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"problems"
									],
									"query": [
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "problemSelector",
											"value": "<string>"
										},
										{
											"key": "entitySelector",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -68837424,\n \"pageSize\": 47886613,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"problems\": [\n  {\n   \"problemId\": \"tempor occaecat adipisicing voluptate\",\n   \"impactLevel\": \"SERVICES\",\n   \"impactedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"nisi nostrud dolor in\",\n      \"type\": \"in\"\n     },\n     \"name\": \"enim nulla commodo\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"dolore sunt non\",\n      \"type\": \"Duis esse mollit\"\n     },\n     \"name\": \"eu minim aute sed\"\n    }\n   ],\n   \"displayId\": \"nisi qui aute\",\n   \"entityTags\": [\n    {\n     \"stringRepresentation\": \"pariatur\",\n     \"value\": \"ea cillum culpa in\",\n     \"key\": \"esse\",\n     \"context\": \"esse adipisicing nostrud\"\n    },\n    {\n     \"stringRepresentation\": \"sit\",\n     \"value\": \"do\",\n     \"key\": \"officia non labore\",\n     \"context\": \"eiusmod mollit Excepteur\"\n    }\n   ],\n   \"evidenceDetails\": {\n    \"totalCount\": -3073083,\n    \"details\": [\n     {\n      \"evidenceType\": \"TRANSACTIONAL\",\n      \"displayName\": \"deserunt commodo do\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"do in sint\",\n        \"type\": \"deserunt magna nulla laboris\"\n       },\n       \"name\": \"sint quis\"\n      },\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"magna exercitation \",\n        \"type\": \"dolor quis anim\"\n       },\n       \"name\": \"pariatur esse et nulla\"\n      },\n      \"rootCauseRelevant\": false,\n      \"startTime\": -86566147\n     },\n     {\n      \"evidenceType\": \"MAINTENANCE_WINDOW\",\n      \"displayName\": \"id cillum\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"sed Excepteur laboris\",\n        \"type\": \"do voluptate\"\n       },\n       \"name\": \"amet sint\"\n      },\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"i\",\n        \"type\": \"officia enim\"\n       },\n       \"name\": \"et\"\n      },\n      \"rootCauseRelevant\": true,\n      \"startTime\": 81388724\n     }\n    ]\n   },\n   \"recentComments\": {\n    \"comments\": [\n     {\n      \"authorName\": \"occaecat\",\n      \"createdAtTimestamp\": -30897668,\n      \"context\": \"\",\n      \"id\": \"dolore\",\n      \"content\": \"pariatur labore eu dolore\"\n     },\n     {\n      \"authorName\": \"esse\",\n      \"createdAtTimestamp\": 77215331,\n      \"context\": \"irure aute \",\n      \"id\": \"ad amet nulla culpa eiusmod\",\n      \"content\": \"est anim\"\n     }\n    ],\n    \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n    \"pageSize\": -53414020,\n    \"totalCount\": -7596587\n   },\n   \"impactAnalysis\": {\n    \"impacts\": [\n     {\n      \"impactType\": \"CUSTOM_APPLICATION\",\n      \"impactedEntity\": {\n       \"entityId\": {\n        \"id\": \"Ut sit\",\n        \"type\": \"minim ullamco pariatur qui\"\n       },\n       \"name\": \"exercitation ut magna incididunt\"\n      },\n      \"estimatedAffectedUsers\": 91636541\n     },\n     {\n      \"impactType\": \"APPLICATION\",\n      \"impactedEntity\": {\n       \"entityId\": {\n        \"id\": \"minim eiusmod\",\n        \"type\": \"sunt Duis adipisicing\"\n       },\n       \"name\": \"in\"\n      },\n      \"estimatedAffectedUsers\": 52822541\n     }\n    ]\n   },\n   \"linkedProblemInfo\": {\n    \"problemId\": \"dolor nulla\",\n    \"displayId\": \"aliquip qui\"\n   },\n   \"rootCauseEntity\": {\n    \"entityId\": {\n     \"id\": \"aute nostrud ut id dolor\",\n     \"type\": \"dolor ea dolore\"\n    },\n    \"name\": \"in laborum a\"\n   },\n   \"problemFilters\": [\n    {\n     \"name\": \"officia minim pariatur a\",\n     \"id\": \"nisi exercitation deserunt tempor\"\n    },\n    {\n     \"name\": \"eiusmod \",\n     \"id\": \"ullamco reprehenderit\"\n    }\n   ],\n   \"affectedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"nostrud veniam sunt\",\n      \"type\": \"labore qui nisi\"\n     },\n     \"name\": \"irure aute esse Excepteur culpa\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"in ea nulla amet\",\n      \"type\": \"qui dolore\"\n     },\n     \"name\": \"eu enim\"\n    }\n   ],\n   \"managementZones\": [\n    {\n     \"name\": \"\",\n     \"id\": \"dolor exercitation eu\"\n    },\n    {\n     \"name\": \"consequat cillum dolor\",\n     \"id\": \"Lorem\"\n    }\n   ],\n   \"severityLevel\": \"PERFORMANCE\",\n   \"status\": \"CLOSED\",\n   \"startTime\": 68715881,\n   \"endTime\": 3445473,\n   \"title\": \"laborum dolore magna laboris\"\n  },\n  {\n   \"problemId\": \"sunt magna incididunt\",\n   \"impactLevel\": \"SERVICES\",\n   \"impactedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"quis sed aliquip\",\n      \"type\": \"laboris non in\"\n     },\n     \"name\": \"eiusmo\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"occaecat qui dolore\",\n      \"type\": \"reprehenderit ipsum mollit\"\n     },\n     \"name\": \"in\"\n    }\n   ],\n   \"displayId\": \"irure occaecat\",\n   \"entityTags\": [\n    {\n     \"stringRepresentation\": \"sunt Ut\",\n     \"value\": \"ad\",\n     \"key\": \"irure\",\n     \"context\": \"consectetur sed nisi sit\"\n    },\n    {\n     \"stringRepresentation\": \"magna\",\n     \"value\": \"reprehenderit dolor exercitation \",\n     \"key\": \"mollit esse tempor\",\n     \"context\": \"consectetur ea adipisicing aute eiusmod\"\n    }\n   ],\n   \"evidenceDetails\": {\n    \"totalCount\": 41702885,\n    \"details\": [\n     {\n      \"evidenceType\": \"MAINTENANCE_WINDOW\",\n      \"displayName\": \"esse anim culpa ad\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"ut mollit Lorem fugiat\",\n        \"type\": \"Lorem\"\n       },\n       \"name\": \"culpa ex qui ea\"\n      },\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"quis mollit\",\n        \"type\": \"amet nostrud eu minim commodo\"\n       },\n       \"name\": \"reprehenderit\"\n      },\n      \"rootCauseRelevant\": true,\n      \"startTime\": 67839913\n     },\n     {\n      \"evidenceType\": \"METRIC\",\n      \"displayName\": \"adipisicing sit\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"commodo sunt\",\n        \"type\": \"id minim Ut\"\n       },\n       \"name\": \"qu\"\n      },\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"elit\",\n        \"type\": \"amet Ut non\"\n       },\n       \"name\": \"sint in\"\n      },\n      \"rootCauseRelevant\": false,\n      \"startTime\": 20475214\n     }\n    ]\n   },\n   \"recentComments\": {\n    \"comments\": [\n     {\n      \"authorName\": \"amet\",\n      \"createdAtTimestamp\": -78129981,\n      \"context\": \"fugiat eu Duis sed pariatur\",\n      \"id\": \"aliqua enim elit\",\n      \"content\": \"est proident nostrud\"\n     },\n     {\n      \"authorName\": \"et\",\n      \"createdAtTimestamp\": 13959417,\n      \"context\": \"ut elit esse est ut\",\n      \"id\": \"proident esse\",\n      \"content\": \"aute veniam voluptate sint\"\n     }\n    ],\n    \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n    \"pageSize\": -16797137,\n    \"totalCount\": -47323997\n   },\n   \"impactAnalysis\": {\n    \"impacts\": [\n     {\n      \"impactType\": \"APPLICATION\",\n      \"impactedEntity\": {\n       \"entityId\": {\n        \"id\": \"aute ut reprehende\",\n        \"type\": \"consequat minim\"\n       },\n       \"name\": \"anim comm\"\n      },\n      \"estimatedAffectedUsers\": -8055304\n     },\n     {\n      \"impactType\": \"CUSTOM_APPLICATION\",\n      \"impactedEntity\": {\n       \"entityId\": {\n        \"id\": \"voluptate s\",\n        \"type\": \"nulla qui ea\"\n       },\n       \"name\": \"esse magna\"\n      },\n      \"estimatedAffectedUsers\": -82404337\n     }\n    ]\n   },\n   \"linkedProblemInfo\": {\n    \"problemId\": \"reprehenderit mollit in Ut cupida\",\n    \"displayId\": \"incididunt tempor\"\n   },\n   \"rootCauseEntity\": {\n    \"entityId\": {\n     \"id\": \"tempor incididunt\",\n     \"type\": \"incididunt dolor mollit\"\n    },\n    \"name\": \"dolore ea elit in\"\n   },\n   \"problemFilters\": [\n    {\n     \"name\": \"minim adipisicing dolor\",\n     \"id\": \"velit amet ut do sint\"\n    },\n    {\n     \"name\": \"tempor reprehenderit magna\",\n     \"id\": \"u\"\n    }\n   ],\n   \"affectedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"adipisicing ad est consectetur incididunt\",\n      \"type\": \"elit incididunt\"\n     },\n     \"name\": \"voluptate est sit deserunt\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"do aute elit nisi\",\n      \"type\": \"Ut laborum\"\n     },\n     \"name\": \"cupidat\"\n    }\n   ],\n   \"managementZones\": [\n    {\n     \"name\": \"quis dolor reprehenderit dolore\",\n     \"id\": \"ullamco velit laborum reprehenderit cupidatat\"\n    },\n    {\n     \"name\": \"proident Lorem dolor\",\n     \"id\": \"el\"\n    }\n   ],\n   \"severityLevel\": \"ERROR\",\n   \"status\": \"OPEN\",\n   \"startTime\": -45938810,\n   \"endTime\": -98424404,\n   \"title\": \"ex proident dolor Duis\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "slo",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters and the calculated value of an SLO | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/slo/:id?from=<string>&to=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"slo",
										":id"
									],
									"query": [
										{
											"key": "from",
											"value": "<string>",
											"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
										},
										{
											"key": "to",
											"value": "<string>",
											"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the current timestamp is used."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"type": "string",
											"description": "(Required) The ID of the required SLO."
										}
									]
								},
								"description": "If **from** and **to** parameters are provided, the SLO is calculated for that timeframe; otherwise the SLO's own timeframe is used."
							},
							"response": [
								{
									"name": "Success. The response contains the parameters and calculated values of the requested SLO.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/slo/:id?from=<string>&to=<string>",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "<string>"
												},
												{
													"key": "to",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"timeframe\": \"-1d\",\n \"useRateMetric\": true,\n \"metricRate\": \"builtin:service.successes.server.rate\",\n \"metricDenominator\": \"builtin:service.requestCount.total\",\n \"evaluationType\": \"AGGREGATE\",\n \"evaluatedPercentage\": 96.25,\n \"numeratorValue\": 80,\n \"denominatorValue\": 90,\n \"errorBudget\": 1.25,\n \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n \"enabled\": true,\n \"filter\": \"type(\\\"HOST\\\")\",\n \"name\": \"Payment service availability\",\n \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n \"target\": 95,\n \"description\": \"Check the SLO for our payment service\",\n \"status\": \"WARNING\",\n \"warning\": 97.5,\n \"error\": \"NONE\"\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/slo/:id?from=<string>&to=<string>",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "<string>"
												},
												{
													"key": "to",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/slo/:id?from=<string>&to=<string>",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "<string>"
												},
												{
													"key": "to",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
								}
							]
						},
						{
							"name": "Updates an existing SLO | maturity=EARLY_ADOPTER",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"useRateMetric\": \"<boolean>\",\n    \"metricRate\": \"<string>\",\n    \"metricNumerator\": \"<string>\",\n    \"metricDenominator\": \"<string>\",\n    \"evaluationType\": \"<string>\",\n    \"filter\": \"<string>\",\n    \"target\": \"<double>\",\n    \"warning\": \"<double>\",\n    \"timeframe\": \"<string>\"\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/slo/:id",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"slo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"type": "string",
											"description": "(Required) The ID of the required SLO."
										}
									]
								}
							},
							"response": [
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/slo/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/slo/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/slo/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes an SLO | maturity=EARLY_ADOPTER",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/slo/:id",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"slo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"type": "string",
											"description": "(Required) The ID of the required SLO."
										}
									]
								}
							},
							"response": [
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/slo/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/slo/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
								},
								{
									"name": "Conflicting resource",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/slo/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
								},
								{
									"name": "Success. The SLO has been deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/slo/:id",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all available SLOs along with calculated values | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/slo?nextPageKey=<string>&pageSize=<long>&from=<string>&to=<string>&sloSelector=&sort=name&demo=false&timeFrame=CURRENT&evaluate=false",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"slo"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "<string>",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "<long>",
									"description": "The amount of SLOs in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 10 is used."
								},
								{
									"key": "from",
									"value": "<string>",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "<string>",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2019-12-21T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sloSelector",
									"value": "",
									"description": "The scope of the query. Only SLOs matching the provided criteria are included in the response. \n\nUse the [entity selector syntax](https://dt-url.net/entityselector)."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "The sorting of SLO entries: \n* `name`: Names in ascending order. \n* `-name`: Names in descending order. \n\nIf not set, the ascending order is used."
								},
								{
									"key": "demo",
									"value": "false",
									"description": "Get your SLOs (`false`) or a set of demo SLOs (`true`)."
								},
								{
									"key": "timeFrame",
									"value": "CURRENT",
									"description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
								},
								{
									"key": "evaluate",
									"value": "false",
									"description": "Get your SLOs without them being evaluated (`false`) or with evaluations (`true`)."
								}
							]
						},
						"description": "By default the values are calculated for the SLO's own timeframe. You can use a custom timeframe: \n\n1. Set the **timeFrame** parameter to `GTF`. \n2. Provide the timeframe in **from** and **to** parameters."
					},
					"response": [
						{
							"name": "Success. The response contains the parameters and calculated values of the requested SLO.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/slo?nextPageKey=<string>&pageSize=<long>&from=<string>&to=<string>&sloSelector=&sort=name&demo=false&timeFrame=CURRENT&evaluate=false",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"slo"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "sloSelector",
											"value": ""
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "demo",
											"value": "false"
										},
										{
											"key": "timeFrame",
											"value": "CURRENT"
										},
										{
											"key": "evaluate",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"SLOs\": [\n  {\n   \"timeframe\": \"-1d\",\n   \"useRateMetric\": true,\n   \"metricRate\": \"builtin:service.successes.server.rate\",\n   \"metricDenominator\": \"builtin:service.requestCount.total\",\n   \"evaluationType\": \"AGGREGATE\",\n   \"evaluatedPercentage\": 96.25,\n   \"numeratorValue\": 80,\n   \"denominatorValue\": 90,\n   \"errorBudget\": 1.25,\n   \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n   \"enabled\": true,\n   \"filter\": \"type(\\\"HOST\\\")\",\n   \"name\": \"Payment service availability\",\n   \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n   \"target\": 95,\n   \"description\": \"Check the SLO for our payment service\",\n   \"status\": \"WARNING\",\n   \"warning\": 97.5,\n   \"error\": \"NONE\"\n  },\n  {\n   \"timeframe\": \"-1d\",\n   \"useRateMetric\": true,\n   \"metricRate\": \"builtin:service.successes.server.rate\",\n   \"metricDenominator\": \"builtin:service.requestCount.total\",\n   \"evaluationType\": \"AGGREGATE\",\n   \"evaluatedPercentage\": 96.25,\n   \"numeratorValue\": 80,\n   \"denominatorValue\": 90,\n   \"errorBudget\": 1.25,\n   \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n   \"enabled\": true,\n   \"filter\": \"type(\\\"HOST\\\")\",\n   \"name\": \"Payment service availability\",\n   \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n   \"target\": 95,\n   \"description\": \"Check the SLO for our payment service\",\n   \"status\": \"WARNING\",\n   \"warning\": 97.5,\n   \"error\": \"NONE\"\n  }\n ],\n \"nextPageKeys\": {},\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": -85342708,\n \"totalCount\": 25939847\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/slo?nextPageKey=<string>&pageSize=<long>&from=<string>&to=<string>&sloSelector=&sort=name&demo=false&timeFrame=CURRENT&evaluate=false",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"slo"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<long>"
										},
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "to",
											"value": "<string>"
										},
										{
											"key": "sloSelector",
											"value": ""
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "demo",
											"value": "false"
										},
										{
											"key": "timeFrame",
											"value": "CURRENT"
										},
										{
											"key": "evaluate",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
						}
					]
				},
				{
					"name": "Creates a new SLO | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"useRateMetric\": \"<boolean>\",\n    \"metricRate\": \"<string>\",\n    \"metricNumerator\": \"<string>\",\n    \"metricDenominator\": \"<string>\",\n    \"evaluationType\": \"<string>\",\n    \"filter\": \"<string>\",\n    \"target\": \"<double>\",\n    \"warning\": \"<double>\",\n    \"timeframe\": \"<string>\"\n}"
						},
						"url": {
							"raw": "https://{{DT_HOST}}/api/v2/slo",
							"host": [
								"https://{{DT_HOST}}/api/v2"
							],
							"path": [
								"slo"
							]
						}
					},
					"response": [
						{
							"name": "Conflicting resource",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/slo",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/slo",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
						},
						{
							"name": "Success. The new SLO has been created. Response doesn't have a body. The **location** response header contains the ID of the new SLO.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/slo",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "location",
									"value": "",
									"description": "The location of the new resource created by this request."
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/slo",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
						},
						{
							"name": "Internal server error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/slo",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"Lorem dolor in\",\n    \"message\": \"anim culp\",\n    \"path\": \"ut incididunt dolor qui\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ut dolore occaecat commodo\",\n    \"message\": \"eu occaecat ipsum dolore\",\n    \"path\": \"eu\"\n   }\n  ],\n  \"message\": \"amet ut elit dolor\",\n  \"code\": -10747937\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "synthetic",
			"item": [
				{
					"name": "locations",
					"item": [
						{
							"name": "{location Id}",
							"item": [
								{
									"name": "Gets properties of the specified location | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations/:locationId",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The Dynatrace entity ID of the required location."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains parameters of the synthetic location.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations/:locationId",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"entityId\": \"magna dolor velit sit irure\",\n \"latitude\": 7367745.105113372,\n \"longitude\": 1151635.0357243568,\n \"name\": \"eu dolor aute ex\",\n \"type\": \"CLUSTER\",\n \"city\": \"in ex eu aliquip ut\",\n \"status\": \"DISABLED\"\n}"
										}
									]
								},
								{
									"name": "Updates the specified synthetic location | maturity=EARLY_ADOPTER",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations/:locationId",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
												}
											]
										},
										"description": "For public locations you can only change the location status."
									},
									"response": [
										{
											"name": "Success. The location has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations/:locationId",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes the specified private synthetic location | maturity=EARLY_ADOPTER",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations/:locationId",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The location has been deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations/:locationId",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "status",
							"item": [
								{
									"name": "Checks the status of public synthetic locations | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations/status",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"synthetic",
												"locations",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains the public locations status.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations/status",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"publicLocationsEnabled\": false\n}"
										}
									]
								},
								{
									"name": "Changes the status of public synthetic locations | maturity=EARLY_ADOPTER",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"publicLocationsEnabled\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations/status",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"synthetic",
												"locations",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Conflict. Public locations couldn't be disabled because there are monitors assigned to them.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publicLocationsEnabled\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations/status",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success. Locations status has been updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publicLocationsEnabled\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations/status",
													"host": [
														"https://{{DT_HOST}}/api/v2"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Lists all synthetic locations (both public and private) available for your environment | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations?cloudPlatform=<string>&type=<string>",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"synthetic",
										"locations"
									],
									"query": [
										{
											"key": "cloudPlatform",
											"value": "<string>",
											"description": "Filters the resulting set of locations to those which are hosted on a specific cloud platform."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Filters the resulting set of locations to those of a specific type."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations?cloudPlatform=<string>&type=<string>",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"synthetic",
												"locations"
											],
											"query": [
												{
													"key": "cloudPlatform",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"locations\": [\n  {\n   \"name\": \"Gdansk\",\n   \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n   \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n   \"type\": \"PUBLIC\",\n   \"cloudPlatform\": \"AMAZON_EC2\",\n   \"ips\": [\n    \"134.189.153.97\",\n    \"134.189.153.98\"\n   ],\n   \"stage\": \"GA\",\n   \"status\": \"ENABLED\",\n   \"capabilities\": [\n    \"BROWSER\",\n    \"HTTP\"\n   ]\n  },\n  {\n   \"name\": \"My private location\",\n   \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n   \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n   \"type\": \"PRIVATE\",\n   \"status\": \"ENABLED\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Creates a new private synthetic location | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entityId\": \"<string>\",\n    \"geoLocationId\": \"<string>\",\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"name\": \"<string>\",\n    \"nodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"type\": \"<string>\",\n    \"city\": \"<string>\",\n    \"status\": \"<string>\",\n    \"availabilityLocationOutage\": \"<boolean>\",\n    \"availabilityNodeOutage\": \"<boolean>\",\n    \"locationNodeOutageDelayInMinutes\": \"<integer>\",\n    \"availabilityNotificationsEnabled\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"synthetic",
										"locations"
									]
								}
							},
							"response": [
								{
									"name": "Success. The private location has been created. The response contains the ID of the new location.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entityId\": \"<string>\",\n    \"geoLocationId\": \"<string>\",\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"name\": \"<string>\",\n    \"nodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"type\": \"<string>\",\n    \"city\": \"<string>\",\n    \"status\": \"<string>\",\n    \"availabilityLocationOutage\": \"<boolean>\",\n    \"availabilityNodeOutage\": \"<boolean>\",\n    \"locationNodeOutageDelayInMinutes\": \"<integer>\",\n    \"availabilityNotificationsEnabled\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/synthetic/locations",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"synthetic",
												"locations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"entityId\": \"in do culpa velit adipisicing\",\n \"geoLocationId\": \"ad\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "nodes",
					"item": [
						{
							"name": "Lists all synthetic nodes available in your environment | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/synthetic/nodes",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"synthetic",
										"nodes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/synthetic/nodes",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"synthetic",
												"nodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"nodes\": [\n  {\n   \"activeGateVersion\": \"deserunt labore incididunt cillum\",\n   \"autoUpdateEnabled\": false,\n   \"browserMonitorsEnabled\": true,\n   \"entityId\": \"anim quis voluptate\",\n   \"healthCheckStatus\": \"tempor ullamco i\",\n   \"hostname\": \"cupidatat et officia reprehenderit\",\n   \"ips\": [\n    \"irure veniam exercitation\",\n    \"veniam anim nostrud sunt dolore\"\n   ],\n   \"oneAgentRoutingEnabled \": false,\n   \"operatingSystem\": \"in esse velit\",\n   \"playerVersion\": \"est mollit\",\n   \"status\": \"occaecat tempor id eiusmod in\",\n   \"version\": \"Ut commodo ad tempor\"\n  },\n  {\n   \"activeGateVersion\": \"dolor occaecat cillum mollit\",\n   \"autoUpdateEnabled\": true,\n   \"browserMonitorsEnabled\": true,\n   \"entityId\": \"elit\",\n   \"healthCheckStatus\": \"est culpa cillum nostrud pariatur\",\n   \"hostname\": \"et\",\n   \"ips\": [\n    \"sunt esse\",\n    \"aliquip non labore\"\n   ],\n   \"oneAgentRoutingEnabled \": false,\n   \"operatingSystem\": \"sint Ut\",\n   \"playerVersion\": \"sunt est Ut\",\n   \"status\": \"ullamco ut est\",\n   \"version\": \"cupidatat in\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Lists properties of the specified synthetic node | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{DT_HOST}}/api/v2/synthetic/nodes/:nodeId",
									"host": [
										"https://{{DT_HOST}}/api/v2"
									],
									"path": [
										"synthetic",
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the required synthetic node."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "https://{{DT_HOST}}/api/v2/synthetic/nodes/:nodeId",
											"host": [
												"https://{{DT_HOST}}/api/v2"
											],
											"path": [
												"synthetic",
												"nodes",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"activeGateVersion\": \"adipisicing cupidatat in ipsum amet\",\n \"autoUpdateEnabled\": true,\n \"browserMonitorsEnabled\": false,\n \"browserType\": \"nostrud qui non quis\",\n \"browserVersion\": \"enim veniam non ut\",\n \"entityId\": \"Duis ut\",\n \"healthCheckStatus\": \"amet non\",\n \"hostname\": \"pariatur commodo consectetur\",\n \"ips\": [\n  \"eius\",\n  \"sed incididunt Lorem non\"\n ],\n \"oneAgentRoutingEnabled \": false,\n \"operatingSystem\": \"quis ut\",\n \"playerVersion\": \"minim et elit\",\n \"status\": \"fugiat quis dolore et nisi\",\n \"version\": \"anim Duis sit\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "Api-Token {{DT_TOKEN}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
	]
}